[
  odl,
  uuid(0000011A-0000-0000-C000-000000000046)
]
interface IParseDisplayName : stdole.IUnknown {

    HRESULT ParseDisplayName(
        [in] IBindCtx *pIBindCtx,
        [in] LONG pszDisplayName,
        [in, out] long *pchEaten,
        [out, retval] IMoniker **ppIMoniker);

};


[
  odl,
  uuid(0000011B-0000-0000-C000-000000000046)
]
interface IOleContainer : stdole.IUnknown {

    HRESULT ParseDisplayName(
        [in] IBindCtx *pIBindCtx,
        [in] LONG pszDisplayName,
        [in, out] long* pchEaten,
        [out, retval] IMoniker **ppIMoniker);

    HRESULT EnumObjects(
        [in] OLECONTF grfFlags,
        [in, out] IEnumUnknown **ppenum);

    HRESULT LockContainer(
        [in] BOOL fLock);

};

//by request:
[
    odl,
    uuid(00020400-0000-0000-C000-000000000046),
    helpstring("IDispatch Interface"),
    hidden
]
interface IDispatchM2000 : stdole.IUnknown{
    long _stdcall GetTypeInfoCount([out] long* pctinfo);
    long _stdcall GetTypeInfo(
                    [in] long iTInfo,
                    [in] long lcid,
                    [out] long* ppTInfo);
    long _stdcall GetIDsOfNames(
                    [in] UUID* riid,
                    [in] long* rgszNames,
                    [in] long cNames,
                    [in] long lcid,
                    [in, out] long* rgDispId);
    long _stdcall Invoke(
                    [in] long dispIdMember,
                    [in] UUID* riid,
                    [in] long lcid,
                    [in] short wFlags,
                    [in, out] DISPPARAMS* pDispParams,
                    [out] VARIANT* pVarResult,
                    [out] EXCEPINFO* pExcepInfo,
                    [out] long* puArgErr);
};