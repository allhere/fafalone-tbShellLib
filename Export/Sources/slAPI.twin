'tbShellLib - slAPI :: API Function Declarations

'Note: urlmon.dll and hlink.dll APIs are in slInternet.twin. comctl32.dll and uxtheme.dll APIs are in slAPIComCtl, along with the common control APIs from user32. 
'      Media Foundation DLLs have their APIs in slMF.twin; Webview2Loader.dll in slWebview2. A few other very small sets for specific features are in their modules.

#If TB_SHELLLIB_LITE = 0 Then
Module slAPI

#Region "shell32"
'*************************************************************************
'shell32.dll

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SHQUERYRBINFO
	cbSize As Long
	i64Size As LongLong
	i64NumItems As LongLong
End Type

Public Enum SHERB_Flags
	SHERB_NOCONFIRMATION = &H00000001
	SHERB_NOPROGRESSUI = &H00000002
	SHERB_NOSOUND = &H00000004
End Enum

Public Enum QUERY_USER_NOTIFICATION_STATE
	QUNS_NOT_PRESENT = 1 ' The user is not present.  Heuristic check for modes like: screen saver, locked machine, non-active FUS session
	QUNS_BUSY = 2 ' The user is busy.  Heuristic check for modes like: full-screen app
	QUNS_RUNNING_D3D_FULL_SCREEN = 3 ' full-screen (exlusive-mode) D3D app
	QUNS_PRESENTATION_MODE = 4 ' Windows presentation mode (laptop feature) is turned on
	QUNS_ACCEPTS_NOTIFICATIONS = 5 ' notifications can be freely sent
	' #if (NTDDI_WIN7)
	QUNS_QUIET_TIME = 6 ' We are in OOBE quiet period
	' #endif
	' #if (NTDDI_WIN8)
	QUNS_APP = 7 ' App-mode application
	' #endif
End Enum

Public Type SHCNF_PRINTJOB_DATA
	JobId As Long
	Status As Long
	TotalPages As Long
	Size As Long
	PagesPrinted As Long
End Type

Public Enum SCNRT_STATUS
	SCNRT_ENABLE = 0
	SCNRT_DISABLE = 1
End Enum

Public Enum SHGDFIL_Format
	SHGDFIL_FINDDATA = &H1 'Format used for file system objects.The pv parameter is the address of a WIN32_FIND_DATA structure.
	SHGDFIL_NETRESOURCE = &H2 'Format used for network resources.The pv parameter is the address of a NETRESOURCE structure.
	SHGDFIL_DESCRIPTIONID = &H3 'Version 4.71.Format used for network resources.The pv parameter is the address of an SHDESCRIPTIONID structure.
End Enum
Public Enum ShellDescriptionId
    SHDID_ROOT_REGITEM  = 1
    SHDID_FS_FILE  = 2
    SHDID_FS_DIRECTORY  = 3
    SHDID_FS_OTHER  = 4
    SHDID_COMPUTER_DRIVE35  = 5
    SHDID_COMPUTER_DRIVE525  = 6
    SHDID_COMPUTER_REMOVABLE  = 7
    SHDID_COMPUTER_FIXED  = 8
    SHDID_COMPUTER_NETDRIVE  = 9
    SHDID_COMPUTER_CDROM  = 10
    SHDID_COMPUTER_RAMDISK  = 11
    SHDID_COMPUTER_OTHER  = 12
    SHDID_NET_DOMAIN  = 13
    SHDID_NET_SERVER  = 14
    SHDID_NET_SHARE  = 15
    SHDID_NET_RESTOFNET  = 16
    SHDID_NET_OTHER  = 17
' #if (NTDDI_VERSION >= NTDDI_WINXP)
    SHDID_COMPUTER_IMAGING  = 18
    SHDID_COMPUTER_AUDIO  = 19
    SHDID_COMPUTER_SHAREDDOCS  = 20
' #endif
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    SHDID_MOBILE_DEVICE  = 21  ' PDA/PalmPC
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS4)
    SHDID_REMOTE_DESKTOP_DRIVE  = 22
End Enum
Public Type SHDESCRIPTIONID
    dwDescriptionId As ShellDescriptionId
    clsid As UUID
End Type

Public Enum ASSOC_FILTER
    ASSOC_FILTER_NONE = 0
    ASSOC_FILTER_RECOMMENDED = 1
End Enum

Public Enum DATAOBJ_GET_ITEM_FLAGS
    DOGIF_DEFAULT = &H0
    DOGIF_TRAVERSE_LINK = &H1
    DOGIF_NO_HDROP = &H2
    DOGIF_NO_URL = &H4
    DOGIF_ONLY_IF_ONE = &H8
End Enum

Public Enum SHGSFCS_Flags
    FCSM_VIEWID                 = &H00000001  '  / / deprecated
    FCSM_WEBVIEWTEMPLATE = &H00000002  '// deprecated
    FCSM_INFOTIP                = &H00000004
    FCSM_CLSID                  = &H00000008
    FCSM_ICONFILE               = &H00000010
    FCSM_LOGO = &H00000020
    FCSM_FLAGS = &H00000040
End Enum

Public Type SHFOLDERCUSTOMSETTINGS
	dwSize as DWORD
    dwMask As DWORD
    pvid As LongPtr
    pszWebViewTemplate as LongPtr
    cchWebViewTemplate as DWORD
    pszInfoTip as LongPtr
    cchInfoTip as DWORD
    pclsid as LongPtr
    dwFlags as SHGSFCS_Flags
    pszIconFile As LongPtr
    cchIconFile As DWORD
    iIconIndex as Long
    pszLogo as LongPtr
    cchLogo As DWORD
End Type

Public Enum FCS_RW
    FCS_READ = &H1
    FCS_FORCEWRITE = &H2
    FCS_WRITE = FCS_READ or FCS_FORCEWRITE
End Enum

Public Type BROWSEINFOA
	hwndOwner As LongPtr
	pidlRoot As LongPtr
	pszDisplayName As String ' Return display name of item selected.
	lpszTitle As String ' text to go in the banner over the tree.
	ulFlags As Long ' Flags that control the return stuff
	lpfn As LongPtr
	lParam As LongPtr ' extra info that's passed back in callbacks
	iImage As Long ' output var: where to return the Image index.
End Type
Public Type BROWSEINFOW
	hwndOwner As LongPtr
	pidlRoot As LongPtr
	pszDisplayName As LongPtr ' Return display name of item selected.
	lpszTitle As LongPtr ' text to go in the banner over the tree.
	ulFlags As Long ' Flags that control the return stuff
	lpfn As LongPtr
	lParam As LongPtr ' extra info that's passed back in callbacks
	iImage As Long ' output var: where to return the Image index.
End Type
Public Type BROWSEINFO
	hwndOwner As LongPtr
	pidlRoot As LongPtr
	pszDisplayName As LongPtr ' Return display name of item selected.
	lpszTitle As LongPtr ' text to go in the banner over the tree.
	ulFlags As Long ' Flags that control the return stuff
	lpfn As LongPtr
	lParam As LongPtr ' extra info that's passed back in callbacks
	iImage As Long ' output var: where to return the Image index.
End Type

Public Enum BFF_Flags
	BIF_RETURNONLYFSDIRS  = &H00000001  ' For finding a folder to start document searching
	BIF_DONTGOBELOWDOMAIN  = &H00000002  ' For starting the Find Computer
	BIF_STATUSTEXT  = &H00000004  ' Top of the dialog has 2 lines of text for BROWSEINFO.lpszTitle and one line if
'  this flag is set.  Passing the message BFFM_SETSTATUSTEXTA to the hwnd can set the
'  rest of the text.  This is not used with BIF_USENEWUI and BROWSEINFO.lpszTitle gets
'  all three lines of text.
	BIF_RETURNFSANCESTORS  = &H00000008
	BIF_EDITBOX  = &H00000010  ' Add an editbox to the dialog
	BIF_VALIDATE  = &H00000020  ' insist on valid result (or CANCEL)
	BIF_NEWDIALOGSTYLE  = &H00000040  ' Use the new dialog layout with the ability to resize
'  Caller needs to call OleInitialize() before using this API
	BIF_USENEWUI  = (BIF_NEWDIALOGSTYLE Or BIF_EDITBOX)
	BIF_BROWSEINCLUDEURLS  = &H00000080  ' Allow URLs to be displayed or entered. (Requires BIF_USENEWUI)
	BIF_UAHINT  = &H00000100  ' Add a UA hint to the dialog, in place of the edit box. May not be combined with BIF_EDITBOX
	BIF_NONEWFOLDERBUTTON  = &H00000200  ' Do not add the "New Folder" button to the dialog.  Only applicable with BIF_NEWDIALOGSTYLE.
	BIF_NOTRANSLATETARGETS  = &H00000400  ' don't traverse target as shortcut
	BIF_BROWSEFORCOMPUTER  = &H00001000  ' Browsing for Computers.
	BIF_BROWSEFORPRINTER  = &H00002000  ' Browsing for Printers
	BIF_BROWSEINCLUDEFILES  = &H00004000  ' Browsing for Everything
	BIF_SHAREABLE = &H00008000&  ' sharable resources displayed (remote shares, requires BIF_USENEWUI)
	BIF_BROWSEFILEJUNCTIONS  = &H00010000  ' allow folder junctions like zip files and libraries to be browsed
End Enum
' messages from browser
Public Const BFFM_INITIALIZED  = 1
Public Const BFFM_SELCHANGED  = 2
Public Const BFFM_VALIDATEFAILEDA  = 3  ' lParam:szPath ret:1(cont),0(EndDialog)
Public Const BFFM_VALIDATEFAILEDW  = 4  ' lParam:wzPath ret:1(cont),0(EndDialog)
Public Const BFFM_IUNKNOWN  = 5  ' provides IUnknown to client. lParam: IUnknown*
'  messages to browser
Public Const BFFM_SETSTATUSTEXTA  = (WM_USER + 100)
Public Const BFFM_ENABLEOK  = (WM_USER + 101)
Public Const BFFM_SETSELECTIONA  = (WM_USER + 102)
Public Const BFFM_SETSELECTIONW  = (WM_USER + 103)
Public Const BFFM_SETSTATUSTEXTW  = (WM_USER + 104)
Public Const BFFM_SETOKTEXT  = (WM_USER + 105)  ' Unicode only
Public Const BFFM_SETEXPANDED  = (WM_USER + 106)  ' Unicode only
Public Const BFFM_SETSTATUSTEXT  = BFFM_SETSTATUSTEXTW
Public Const BFFM_SETSELECTION  = BFFM_SETSELECTIONW

Public Enum ILCFP_FLAGS
	ILCFP_FLAG_NORMAL = &H0000
	ILCFP_FLAG_SKIPJUNCTIONS = &H0001
	ILCFP_FLAG_NO_MAP_ALIAS = &H0002
End Enum

Public Type SHSTOCKICONINFO
	cbSize As Long
    hIcon As Long
    iSysImageIndex As Long
    iIcon As Long
    szPath(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum StockIconInfoFlags
	SHGSI_ICONLOCATION  = 0  ' you always get the icon location
	SHGSI_ICON  = SHGFI_ICON
	SHGSI_SYSICONINDEX  = SHGFI_SYSICONINDEX
	SHGSI_LINKOVERLAY  = SHGFI_LINKOVERLAY
	SHGSI_SELECTED  = SHGFI_SELECTED
	SHGSI_LARGEICON  = SHGFI_LARGEICON
	SHGSI_SMALLICON  = SHGFI_SMALLICON
	SHGSI_SHELLICONSIZE  = SHGFI_SHELLICONSIZE
End Enum
Public Enum SHSTOCKICONID
	SIID_DOCNOASSOC=0 ' document (blank page), no associated program
	SIID_DOCASSOC=1 ' document with an associated program
	SIID_APPLICATION=2 ' generic application with no custom icon
	SIID_FOLDER=3 ' folder (closed)
	SIID_FOLDEROPEN=4 ' folder (open)
	SIID_DRIVE525=5 ' 5.25" floppy disk drive
	SIID_DRIVE35=6 ' 3.5" floppy disk drive
	SIID_DRIVEREMOVE=7 ' removable drive
	SIID_DRIVEFIXED=8 ' fixed (hard disk) drive
	SIID_DRIVENET=9 ' network drive
	SIID_DRIVENETDISABLED=10 ' disconnected network drive
	SIID_DRIVECD=11 ' CD drive
	SIID_DRIVERAM=12 ' RAM disk drive
	SIID_WORLD=13 ' entire network
	SIID_SERVER=15 ' a computer on the network
	SIID_PRINTER=16 ' printer
	SIID_MYNETWORK=17 ' My network places
	SIID_FIND=22 ' Find
	SIID_HELP=23 ' Help
	SIID_SHARE=28 ' overlay for shared items
	SIID_LINK=29 ' overlay for shortcuts to items
	SIID_SLOWFILE=30 ' overlay for slow items
	SIID_RECYCLER=31 ' empty recycle bin
	SIID_RECYCLERFULL=32 ' full recycle bin
	SIID_MEDIACDAUDIO=40 ' Audio CD Media
	SIID_LOCK=47 ' Security lock
	SIID_AUTOLIST=49 ' AutoList
	SIID_PRINTERNET=50 ' Network printer
	SIID_SERVERSHARE=51 ' Server share
	SIID_PRINTERFAX=52 ' Fax printer
	SIID_PRINTERFAXNET=53 ' Networked Fax Printer
	SIID_PRINTERFILE=54 ' Print to File
	SIID_STACK=55 ' Stack
	SIID_MEDIASVCD=56 ' SVCD Media
	SIID_STUFFEDFOLDER=57 ' Folder containing other items
	SIID_DRIVEUNKNOWN=58 ' Unknown drive
	SIID_DRIVEDVD=59 ' DVD Drive
	SIID_MEDIADVD=60 ' DVD Media
	SIID_MEDIADVDRAM=61 ' DVD-RAM Media
	SIID_MEDIADVDRW=62 ' DVD-RW Media
	SIID_MEDIADVDR=63 ' DVD-R Media
	SIID_MEDIADVDROM=64 ' DVD-ROM Media
	SIID_MEDIACDAUDIOPLUS=65 ' CD+ (Enhanced CD) Media
	SIID_MEDIACDRW=66 ' CD-RW Media
	SIID_MEDIACDR=67 ' CD-R Media
	SIID_MEDIACDBURN=68 ' Burning CD
	SIID_MEDIABLANKCD=69 ' Blank CD Media
	SIID_MEDIACDROM=70 ' CD-ROM Media
	SIID_AUDIOFILES=71 ' Audio files
	SIID_IMAGEFILES=72 ' Image files
	SIID_VIDEOFILES=73 ' Video files
	SIID_MIXEDFILES=74 ' Mixed files
	SIID_FOLDERBACK=75 ' Folder back
	SIID_FOLDERFRONT=76 ' Folder front
	SIID_SHIELD=77 ' Security shield. Use for UAC prompts only.
	SIID_WARNING=78 ' Warning
	SIID_INFO=79 ' Informational
	SIID_ERROR=80 ' Error
	SIID_KEY=81 ' Key / Secure
	SIID_SOFTWARE=82 ' Software
	SIID_RENAME=83 ' Rename
	SIID_DELETE=84 ' Delete
	SIID_MEDIAAUDIODVD=85 ' Audio DVD Media
	SIID_MEDIAMOVIEDVD=86 ' Movie DVD Media
	SIID_MEDIAENHANCEDCD=87 ' Enhanced CD Media
	SIID_MEDIAENHANCEDDVD=88 ' Enhanced DVD Media
	SIID_MEDIAHDDVD=89 ' HD-DVD Media
	SIID_MEDIABLURAY=90 ' BluRay Media
	SIID_MEDIAVCD=91 ' VCD Media
	SIID_MEDIADVDPLUSR=92 ' DVD+R Media
	SIID_MEDIADVDPLUSRW=93 ' DVD+RW Media
	SIID_DESKTOPPC=94 ' desktop computer
	SIID_MOBILEPC=95 ' mobile computer (laptop/notebook)
	SIID_USERS=96 ' users
	SIID_MEDIASMARTMEDIA=97 ' Smart Media
	SIID_MEDIACOMPACTFLASH=98 ' Compact Flash
	SIID_DEVICECELLPHONE=99 ' Cell phone
	SIID_DEVICECAMERA=100 ' Camera
	SIID_DEVICEVIDEOCAMERA=101 ' Video camera
	SIID_DEVICEAUDIOPLAYER=102 ' Audio player
	SIID_NETWORKCONNECT=103 ' Connect to network
	SIID_INTERNET=104 ' Internet
	SIID_ZIPFILE=105 ' ZIP file
	SIID_SETTINGS=106 ' Settings
	'  107-131 are internal Vista RTM icons
	'  132-159 for SP1 icons
	SIID_DRIVEHDDVD=132 ' HDDVD Drive (all types)
	SIID_DRIVEBD=133 ' BluRay Drive (all types)
	SIID_MEDIAHDDVDROM=134 ' HDDVD-ROM Media
	SIID_MEDIAHDDVDR=135 ' HDDVD-R Media
	SIID_MEDIAHDDVDRAM=136 ' HDDVD-RAM Media
	SIID_MEDIABDROM=137 ' BluRay ROM Media
	SIID_MEDIABDR=138 ' BluRay R Media
	SIID_MEDIABDRE=139 ' BluRay RE Media (Rewriable and RAM)
	SIID_CLUSTEREDDRIVE=140 ' Clustered disk
	'  160+ are for Windows 7 icons
	SIID_MAX_ICONS=181
End Enum

Public Enum SHFileOpErrors
	DE_SAMEFILE  = &H71
	DE_MANYSRC1DEST  = &H72
	DE_DIFFDIR  = &H73
	DE_ROOTDIR  = &H74
	DE_OPCANCELLED  = &H75
	DE_DESTSUBTREE  = &H76
	DE_ACCESSDENIEDSRC  = &H78
	DE_PATHTOODEEP  = &H79
	DE_MANYDEST  = &H7A
	DE_INVALIDFILES  = &H7C
	DE_DESTSAMETREE  = &H7D
	DE_FLDDESTISFILE  = &H7E
	DE_FILEDESTISFLD  = &H80
	DE_FILENAMETOOLONG  = &H81
	DE_DEST_IS_CDROM  = &H82
	DE_DEST_IS_DVD  = &H83
	DE_DEST_IS_CDRECORD  = &H84
	DE_FILE_TOO_LARGE  = &H85
	DE_SRC_IS_CDROM  = &H86
	DE_SRC_IS_DVD  = &H87
	DE_SRC_IS_CDRECORD  = &H88
    ERRORONDEST = &H10000
End Enum

Public Enum SHARD
    SHARD_PIDL = &H00000001
    SHARD_PATHA = &H00000002
    SHARD_PATHW = &H00000003
    SHARD_PATH = &H00000003
    ' #if (NTDDI_VERSION >= NTDDI_WIN7)
    SHARD_APPIDINFO = &H00000004 ' indicates the data type is a pointer to a SHARDAPPIDINFO structure
    SHARD_APPIDINFOIDLIST = &H00000005 ' indicates the data type is a pointer to a SHARDAPPIDINFOIDLIST structure
    SHARD_LINK = &H00000006 ' indicates the data type is a pointer to an IShellLink instance
    SHARD_APPIDINFOLINK = &H00000007 ' indicates the data type is a pointer to a SHARDAPPIDINFOLINK structure
    SHARD_SHELLITEM = &H00000008 ' indicates the data type is a pointer to an IShellItem instance
    ' #endif
End Enum

Public Type SHARDAPPIDINFO
    psi As IShellItem ' The namespace location of the the item that should be added to the recent docs folder.
    pszAppID As LongPtr  ' The id of the application that should be associated with this recent doc.
End Type
Public Type SHARDAPPIDINFOIDLIST
    pidl As Long ' The idlist for the shell item that should be added to the recent docs folder.
    pszAppID As LongPtr  ' The id of the application that should be associated with this recent doc.
End Type
Public Type SHARDAPPIDINFOLINK
    psl As IShellLinkW ' An IShellLink instance that when launched opens a recently used item in the specified
    ' application. This link is not added to the recent docs folder, but will be added to the
    ' specified application's destination list.
    pszAppID As LongPtr  ' The id of the application that should be associated with this recent doc.
End Type

Public Type SHChangeUpdateImageIDList
    cb As Integer
    iIconIndex As Long
    iCurIndex As Long
    uFlags As GILFlags
    dwProcessID As Long
    szName(0 To (MAX_PATH - 1)) As Integer
    cbZero As Integer
End Type

Public Enum PCS_RESULT
    PCS_FATAL  = &H80000000
    PCS_REPLACEDCHAR  = &H00000001
    PCS_REMOVEDCHAR  = &H00000002
    PCS_TRUNCATED  = &H00000004
    PCS_PATHTOOLONG  = &H00000008  ' Always combined with FATAL
End Enum



Public Const SIID_INVALID As Long = &HFFFFFFFF
[Description ("Adds an item ID list to shell list of recently used documents, or clears documents from the list") ] Public Declare PtrSafe Sub SHAddToRecentDocs Lib "shell32" (ByVal uFlags As SHARD, pv As Any)
Public DeclareWide PtrSafe Function SHGetStockIconInfo Lib "shell32" (ByVal siid As SHSTOCKICONID, ByVal uFlags As StockIconInfoFlags, psii As SHSTOCKICONINFO) As Long
[ Description ("Displays a dialog that allows selection of shell folders") ] Public Declare PtrSafe Function SHBrowseForFolderA Lib "shell32" (lpbi As BROWSEINFOA) As LongPtr
[Description ("Displays a dialog that allows selection of shell folders") ] Public DeclareWide PtrSafe Function SHBrowseForFolderW Lib "shell32" (lpbi As BROWSEINFOW) As LongPtr
[Description ("Displays a dialog that allows selection of shell folders") ] Public DeclareWide PtrSafe Function SHBrowseForFolder Lib "shell32" Alias "SHBrowseForFolderW" (lpbi As BROWSEINFO) As LongPtr
Public DeclareWide PtrSafe Function SHGetSetFolderCustomSettings Lib "shell32" (pfcs as SHFOLDERCUSTOMSETTINGS, byval pszPath As String, ByVal dwReadWrite As FCS_RW) As Long
[Description ("Retrieves extended property data from relative identifier list") ] Public DeclareWide PtrSafe Function SHGetDataFromIDListW Lib "shell32" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, ByVal nFormat As SHGDFIL_Format, ByRef pv As Any, ByVal cb As Long) As Long
[Description ("Retrieves extended property data from relative identifier list") ] Public DeclareWide PtrSafe Function SHGetDataFromIDList Lib "shell32" Alias "SHGetDataFromIDListW" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, ByVal nFormat As SHGDFIL_Format, ByRef pv As Any, ByVal cb As Long) As Long
Public Declare PtrSafe Function SHCreateItemFromParsingName Lib "shell32" (ByVal pszPath As LongPtr, ByVal pbc As IBindCtx, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateItemFromRelativeName Lib "shell32" (ByVal psiParent As IShellItem, ByVal pszName As LongPtr, pbc As IBindCtx, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromIDLists Lib "shell32" (ByVal cidl As Long, ByVal rgpidl As LongPtr, ppsiItemArray As IShellItemArray) As Long
Public Declare PtrSafe Function SHCreateItemFromIDList Lib "shell32" (ByVal pidl As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItem Lib "shell32" (ByVal pidlParent As LongPtr, ByVal psfParent As LongPtr, ByVal pidl As LongPtr, ppsi As IShellItem) As Long
Public Declare PtrSafe Function SHCreateItemInKnownFolder Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal pszItem As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetKnownFolderItem Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetKnownFolderPath Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, ppszPath As LongPtr) As Long
Public Declare PtrSafe Function SHGetKnownFolderIDList Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, ppidl As LongPtr) As Long
[ Description("Retrieves IShellFolder interface for desktop folder, which is the root of the shell's namespace") ] Public Declare PtrSafe Function SHGetDesktopFolder Lib "shell32" (ppshf As IShellFolder) As Long
[ Description ("Notifies system of event that may affect the shell") ] Public Declare PtrSafe Sub SHChangeNotify Lib "shell32" (ByVal wEventId As SHCN_Events, ByVal uFlags As SHCN_Flags, Optional ByVal dwItem1 As LongPtr, Optional ByVal dwItem2 As LongPtr)
Public Declare PtrSafe Function SHChangeNotifyRegister Lib "shell32" (ByVal hwnd As LongPtr, ByVal fSources As SHCNRF, ByVal fEvents As SHCN_Events, ByVal wMsg As Long, ByVal cEntries As Long, lpps As SHChangeNotifyEntry) As Long
Public Declare PtrSafe Function SHChangeNotifyDeregister Lib "shell32" (ByVal ulID As Long) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromDataObject Lib "shell32" (ByVal pdo As IDataObject, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromShellItem Lib "shell32" (ByVal pdo As IShellItem, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHChangeNotification_Lock Lib "shell32" (ByVal hChange As LongPtr, ByVal dwProcId As Long, pppidl As LongPtr, plEvent As Long) As LongPtr
Public Declare PtrSafe Function SHChangeNotification_Unlock Lib "shell32" (ByVal hLock As LongPtr) As Long
Public Declare PtrSafe Function SHHandleUpdateImage Lib "shell32" (ByVal pidlExtra As LongPtr) As Long
[Description ("Notifies the Shell that an image in the system image list has changed.") ] Public DeclareWide PtrSafe Sub SHUpdateImageW Lib "shell32" (ByVal pszHashItem As LongPtr, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
[Description("Notifies the Shell that an image in the system image list has changed.")] Public Declare PtrSafe Sub SHUpdateImage Lib "shell32" Alias "SHUpdateImageW" (ByVal pszHashItem As LongPtr, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
Public Declare PtrSafe Function SHGetImageList Lib "shell32" (ByVal iImageList As SHIL, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArray Lib "shell32" (ByVal pidlParent As LongPtr, ByVal psf As IShellFolder, ByVal cidl As Long, ByVal ppidl As LongPtr, ppsiItemArray As IShellItemArray) As Long
[Description("Get item ID of special folder location") ] Public Declare PtrSafe Function SHGetSpecialFolderLocation Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal nFolder As CSIDLs, ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHGetSettings Lib "Shell32" (lpsfs As Integer, ByVal dwMask As SFS_MASK) As Long
Public Declare PtrSafe Sub SHGetSetSettings Lib "shell32" (ByRef lpss As SHELLSTATE, ByVal dwMask As SFS_MASK, ByVal bSet As Long)
Public Declare PtrSafe Function Shell_NotifyIcon Lib "shell32" Alias "Shell_NotifyIconW" (ByVal dwMessage As Long, ByRef lpData As NOTIFYICONDATA) As Long
Public Declare PtrSafe Function Shell_NotifyIconW Lib "shell32" (ByVal dwMessage As Long, ByRef lpData As NOTIFYICONDATAW) As Long
Public Declare PtrSafe Function Shell_NotifyIconGetRect Lib "shell32" (ByRef identifier As NOTIFYICONIDENTIFIER, ByRef iconLocation As RECT) As Long
Public Declare PtrSafe Function Shell_GetImageLists Lib "shell32" (phiml As LongPtr, phimlsmall As LongPtr) As Long
Public Declare PtrSafe Function SHQueryUserNotificationState Lib "shell32" (ByRef pquns As QUERY_USER_NOTIFICATION_STATE) As Long
Public DeclareWide PtrSafe Function SHQueryRecycleBin Lib "shell32" Alias "SHQueryRecycleBinW" (ByVal pszRootPath As String, ByRef pSHQueryRBInfo As SHQUERYRBINFO) As Long
Public DeclareWide PtrSafe Function SHQueryRecycleBinW Lib "shell32" (ByVal pszRootPath As LongPtr, ByRef pSHQueryRBInfo As SHQUERYRBINFO) As Long
Public Declare PtrSafe Function SHEmptyRecycleBinA Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszRootPath As String, ByVal dwFlags As SHERB_Flags) As Long
Public DeclareWide PtrSafe Function SHEmptyRecycleBinW Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszRootPath As String, ByVal dwFlags As SHERB_Flags) As Long
Public DeclareWide PtrSafe Function SHEmptyRecycleBin Lib "shell32" Alias "SHEmptyRecycleBinW" (ByVal hwnd As LongPtr, ByVal pszRootPath As String, ByVal dwFlags As SHERB_Flags) As Long
Public Declare PtrSafe Function ILAppendID Lib "shell32" (ByVal pidl As LongPtr, ByVal pmkid As LongPtr, ByVal fAppend As Long) As LongPtr
Public Declare PtrSafe Function ILClone Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCloneChild Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCloneFirst Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCloneFull Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function ILCreateFromPath Lib "shell32" Alias "ILCreateFromPathW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function ILCreateFromPathW Lib "shell32" (ByVal pszPath As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCreateFromPathEx Lib "shell32" (ByVal pszPath As LongPtr, ByVal punkToSkip As IUnknown, ByVal dwFlags As ILCFP_FLAGS, ppidl As LongPtr, rfgInOut As Long) As Long
Public Declare PtrSafe Function ILCombine Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As LongPtr
Public Declare PtrSafe Function ILFindChild Lib "shell32" (ByVal pidlParent As LongPtr, ByVal pidlChild As LongPtr) As LongPtr
Public Declare PtrSafe Function ILFindLastID Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILGetNext Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILGetSize Lib "shell32" (ByVal pidl As LongPtr) As Long
Public Declare PtrSafe Function ILIsAligned Lib "shell32" (ByVal pidl As LongPtr) As Long
Public Declare PtrSafe Function ILIsChild Lib "shell32" (ByVal pidl As LongPtr) As Long
Public Declare PtrSafe Function ILIsEmpty Lib "shell32" (ByVal pidl As LongPtr) As Long
Public Declare PtrSafe Function ILIsEqual Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As Long
Public Declare PtrSafe Function ILIsParent Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As Long
Public Declare PtrSafe Function ILLoadFromStream Lib "shell32" (ByVal pstm As IStream, pidl As LongPtr) As Long
Public Declare PtrSafe Function ILLoadFromStreamEx Lib "shell32" (ByVal pstm As IStream, pidl As LongPtr) As Long
Public Declare PtrSafe Function ILNext Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILRemoveLastID Lib "shell32" (ByRef pidl As LongPtr) As Long
Public Declare PtrSafe Function ILSaveToStream Lib "shell32" (ByVal pstm As IStream, ByVal pidl As LongPtr) As Long
Public Declare PtrSafe Function ILSkip Lib "shell32" (ByVal pidl As LongPtr, ByVal cb As Long) As LongPtr
Public Declare PtrSafe Function SHAssocEnumHandlers Lib "shell32" (ByVal pszExtra As LongPtr, ByVal afFilter As ASSOC_FILTER, ByRef ppEnumHandler As IEnumAssocHandlers) As Long
Public Declare PtrSafe Function SHAssocEnumHandlersForProtocolByApplication Lib "shell32" (ByVal pszProtocol As LongPtr, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHCreateAssociationRegistration Lib "shell32" (ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHBindToFolderIDListParent Lib "shell32" (ByVal psfRoot As IShellFolder, ByVal pidl As LongPtr, ByRef riid As UUID, ByRef ppv As Any, ByRef ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHBindToFolderIDListParentEx Lib "shell32" (ByVal psfRoot As IShellFolder, ByVal pidl As LongPtr, ByVal ppBC As IBindCtx, ByRef riid As UUID, ByRef ppv As Any, ByRef ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHBindToObject Lib "shell32" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, ByVal pbc As IBindCtx, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHBindToParent Lib "shell32" (ByVal pidl As LongPtr, ByRef riid As UUID, ByRef ppv As Any, ByRef ppidlLast As LongPtr) As Long
Public Declare PtrSafe Function SHCreateDataObject Lib "shell32" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, ByVal apidl As LongPtr, ByVal pdtInner As IDataObject, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHCreateFileDataObject Lib "shell32" Alias "#740" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, ByVal apidl As LongPtr, ByVal pdtInner As IDataObject, ByRef ppDataObj As IDataObject) As Long
Public Declare PtrSafe Function SHCreateItemWithParent Lib "shell32" (ByVal pidlParent As LongPtr, ByVal psfParent As IShellFolder, ByVal pidl As LongPtr, ByRef riid As UUID, ByRef ppvItem As Any) As Long
Public Declare PtrSafe Function SHDoDragDrop Lib "shell32" (ByVal hwnd As LongPtr, ByVal pdtobj As IDataObject, ByVal pdsrc As IDropSource, ByVal dwEffect As DROPEFFECTS, ByRef pdwEffect As DROPEFFECTS) As Long
Public Declare PtrSafe Function SHGetIconOverlayIndexW Lib "shell32" (ByVal pszIconPath As LongPtr, ByVal iIconIndex As Long) As Long
Public DeclareWide PtrSafe Function SHGetIconOverlayIndex Lib "shell32" Alias "SHGetIconOverlayIndexW" (ByVal pszIconPath As String, ByVal iIconIndex As Long) As Long
Public Declare PtrSafe Function SHGetIDListFromObject Lib "shell32" (ByVal pUnk As stdole.IUnknown, ByRef ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHGetItemFromDataObject Lib "shell32" (ByVal pdtobj As IDataObject, ByVal dwFlags As DATAOBJ_GET_ITEM_FLAGS, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHGetItemFromObject Lib "shell32" (ByVal pUnk As stdole.IUnknown, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHGetNameFromIDList Lib "shell32" (ByVal pidl As LongPtr, ByVal sigdnName As SIGDN, ByRef ppszName As LongPtr) As Long
Public Declare PtrSafe Function SHGetNameFromPropertyKey Lib "shell32" (ByRef propkey As PROPERTYKEY, ByRef ppszCanonicalName As LongPtr) As Long
Public Declare PtrSafe Function SHParseDisplayName Lib "shell32" (ByVal pszName As LongPtr, ByVal pbc As IBindCtx, ByRef ppidl As LongPtr, ByVal sfgaoIn As SFGAO_Flags, ByRef psfgaoOut As SFGAO_Flags) As Long
Public DeclareWide PtrSafe Function ShellExecuteEx Lib "shell32" Alias "ShellExecuteExW" (ByRef pExecInfo As SHELLEXECUTEINFO) As BOOL
Public DeclareWide PtrSafe Function ShellExecuteExW Lib "shell32" Alias "ShellExecuteExW" (ByRef pExecInfo As SHELLEXECUTEINFO) As BOOL
Public DeclareWide PtrSafe Function ShellExecute Lib "shell32" Alias "ShellExecuteW" (ByVal hwnd As LongPtr, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As SHOWWINDOW) As LongPtr
Public DeclareWide PtrSafe Function ShellExecuteW Lib "shell32" (ByVal hwnd As LongPtr, ByVal lpOperation As LongPtr, ByVal lpFile As LongPtr, ByVal lpParameters As LongPtr, ByVal lpDirectory As LongPtr, Byval nShowCmd As SHOWWINDOW) As LongPtr
Public Declare PtrSafe Function ShellExecuteA Lib "shell32" (ByVal hwnd As LongPtr, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As SHOWWINDOW) As LongPtr
Public Declare PtrSafe Function DragQueryFileA Lib "shell32" (ByVal hDrop As LongPtr, ByVal iFile As Long, ByVal lpszFile As String, ByVal cch As Long) As Long
Public Declare PtrSafe Function DragQueryFileW Lib "shell32" (ByVal hDrop As LongPtr, ByVal iFile As Long, ByVal lpszFile As LongPtr, ByVal cch As Long) As Long
Public DeclareWide PtrSafe Function DragQueryFile Lib "shell32" Alias "DragQueryFileW" (ByVal hDrop As LongPtr, ByVal iFile As Long, ByVal lpszFile As String, ByVal cch As Long) As Long
Public DeclareWide PtrSafe Sub DragAcceptFiles Lib "shell32" (ByVal hwnd As LongPtr, ByVal fAccept As BOOL)
Public Declare PtrSafe Function DragQueryPoint Lib "shell32" (ByVal hDrop As LongPtr, ByRef lppt As POINT) As Long
Public DeclareWide PtrSafe Sub DragFinish Lib "shell32" (ByVal hDrop As LongPtr)
[Description("Returns a pointer to an IMalloc used to allocate LPITEMID")] Public Declare PtrSafe Function SHGetMalloc Lib "shell32" (ppMalloc As IMalloc) As Long
[Description ("Converts an item ID list pointer to a file system path (cMaxPath buffer expected)") ] Public DeclareWide PtrSafe Function SHGetPathFromIDList Lib "shell32" Alias "SHGetPathFromIDListW" (ByVal pidl As LongPtr, ByVal pszPath As String) As Long
[Description("Converts an item ID list pointer to a file system path (cMaxPath buffer expected)") ] Public Declare PtrSafe Function SHGetPathFromIDListA Lib "shell32" (ByVal pidl As LongPtr, ByVal pszPath As String) As Long
[Description ("Converts an item ID list pointer to a file system path (cMaxPath buffer expected)") ] Public Declare PtrSafe Function SHGetPathFromIDListW Lib "shell32" (ByVal pidl As LongPtr, ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function SHGetSpecialFolderPath Lib "shell32" Alias "SHGetSpecialFolderPathW" (ByVal hWndOwner As LongPtr, ByVal lpszPath As String, ByVal nFolder As CSIDLs, ByVal fCreate As BOOL) As Long
Public Declare PtrSafe Function SHGetSpecialFolderPathW Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal lpszPath As LongPtr, ByVal nFolder As CSIDLs, ByVal fCreate As BOOL) As Long
Public Declare PtrSafe Function SHGetSpecialFolderPathA Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal lpszPath As String, ByVal nFolder As CSIDLs, ByVal fCreate As BOOL) As Long
Public Declare PtrSafe Function SHGetInstanceExplorer Lib "shell32" (ppunk As stdole.IUnknown) As Long
Public Declare PtrSafe Sub SHSetInstanceExplorer Lib "shell32" (Optional ByVal ppunk As stdole.IUnknown)
[ Description("Retrieves information about a file system object such as a file, a folder, a directory, or a drive root") ] Public Declare PtrSafe Function SHGetFileInfoA Lib "shell32" (ByVal pszPath As Any, ByVal dwFileAttributes As Long, psfi As SHFILEINFOA, ByVal cbFileInfo As Long, ByVal uFlags As SHGFI_flags) As LongPtr
[ Description("Retrieves information about a file system object such as a file, a folder, a directory, or a drive root") ] Public Declare PtrSafe Function SHGetFileInfoW Lib "shell32" (ByVal pszPath As Any, ByVal dwFileAttributes As Long, psfi As SHFILEINFOW, ByVal cbFileInfo As Long, ByVal uFlags As SHGFI_flags) As LongPtr
[ Description("Retrieves information about a file system object such as a file, a folder, a directory, or a drive root") ] Public DeclareWide PtrSafe Function SHGetFileInfo Lib "shell32" Alias "SHGetFileInfoW" (ByVal pszPath As Any, ByVal dwFileAttributes As Long, psfi As SHFILEINFO, ByVal cbFileInfo As Long, ByVal uFlags As SHGFI_flags) As LongPtr
Public Declare PtrSafe Function SHMultiFileProperties Lib "shell32" (ByVal pdtobj As LongPtr, ByVal dwFlags As Long) As Long
[Description ("Performs a copy, move, rename, or delete operation on a file system object") ] Public DeclareWide PtrSafe Function SHFileOperationW Lib "shell32" (lpFileOp As SHFILEOPSTRUCT) As SHFileOpErrors
[ Description ("Performs a copy, move, rename, or delete operation on a file system object") ] Public DeclareWide PtrSafe Function SHFileOperation Lib "shell32" Alias "SHFileOperationW" (lpFileOp As SHFILEOPSTRUCT) As SHFileOpErrors
Public Declare PtrSafe Function SHOpenFolderAndSelectItems Lib "shell32" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, ByVal apidl As LongPtr, ByVal dwFlags As SHOFASI_Flags) As Long
Public Declare PtrSafe Function SHOpenWithDialog Lib "shell32" (ByVal hWnd As LongPtr, poainfo As OPENASINFO) As Long
Public Declare PtrSafe Function SHCreateStdEnumFmtEtc Lib "shell32" (ByVal cfmt As Long, afmt As FORMATETC, ppenumFormatEtc As IEnumFormatETC) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.") ]
Public DeclareWide PtrSafe Function SHCreateDirectory Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPath As String) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.") ]
Public DeclareWide PtrSafe Function SHCreateDirectoryExW Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPath As LongPtr, psa As SECURITY_ATTRIBUTES) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.")]
Public DeclareWide PtrSafe Function SHCreateDirectoryEx Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPath As String, psa As SECURITY_ATTRIBUTES) As Long
[Description("IShellFolder is the official type for psf, however MSDN states it must 'also' implement IItemNameLimits; IShellFolder is not validated nor used so the class may implement *only* IItemNameLimits.") ]
Public DeclareWide PtrSafe Function SHLimitInputEdit Lib "shell32" (ByVal hwndEdit As LongPtr, psf As Any) As Long
Public DeclareWide PtrSafe Function SHLimitInputEditWithFlags Lib "shell32" Alias "#754" (ByVal hwndEdit As LongPtr, pil As LIMITINPUTSTRUCT) As Long
Public Declare PtrSafe Function SHLoadNonloadedIconOverlayIdentifiers Lib "shell32" () As Long
Public DeclareWide PtrSafe Function SHGetDriveMedia Lib "shell32" (ByVal pszDrive As String, pdwMediaContent As ARCONTENT) As Long
Public DeclareWide PtrSafe Function SHGetPropertyStoreFromParsingName Lib "shell32" (ByVal pszPath As String, pbc As Any, ByVal Flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetPropertyStoreFromIDList Lib "shell32" (ByVal pidl As LongPtr, ByVal Flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function SHAddDefaultPropertiesByExt Lib "shell32" (ByVal pszExt As String, ByVal pPropStore As IPropertyStore) As Long
Public DeclareWide PtrSafe Function SHPropStgCreate Lib "shell32" (ByVal psstg As IPropertySetStorage, fmtid As UUID, pclsid As UUID, ByVal grfFlags As PROPSETFLAG, ByVal grfMode As STGM, ByVal dwDisposition As CreateFileDisposition, ppstg As IPropertyStorage) As Long
Public DeclareWide PtrSafe Function SHPropStgReadMultiple Lib "shell32" (ByVal pps As IPropertyStorage, ByVal uCodePage As Long, ByVal cpspec As Long, rgpspec As PROPSPEC, rgvar As LongPtr) As Long
Public DeclareWide PtrSafe Function SHPropStgWriteMultiple Lib "shell32" (ByVal pps As IPropertyStorage, puCodePage As Long, ByVal cpspec As Long, rgpspec As PROPSPEC, rgvar As Variant) As Long
Public DeclareWide PtrSafe Function SHGetPropertyStoreForWindow Lib "shell32" (ByVal hwnd As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHDefExtractIconW Lib "shell32" (ByVal pszIconFile As LongPtr, ByVal iIndex As Long, ByVal uFlags As Long, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIconSize As Long) As Long
Public Declare PtrSafe Function SHGetFolderLocation Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal nFolder As CSIDLs, ByVal hToken As LongPtr, ByVal dwReserved As Long, ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHRestricted Lib "shell32" (ByVal rest As RESTRICTIONS) As Long
Public DeclareWide PtrSafe Function SHILCreateFromPath Lib "shell32" (ByVal pszPath As String, ppidl As LongPtr, rfgInOut As SFGAO_Flags) As Long
Public DeclareWide PtrSafe Function IsUserAnAdmin Lib "shell32" () As BOOL
Public DeclareWide PtrSafe Function SHCreateDefaultExtractIcon Lib "shell32" (ByRef riid As UUID, ByRef ppv As Any) As Long
Public DeclareWide PtrSafe Function ExtractIconExW Lib "shell32" (ByVal lpszFile As LongPtr, ByVal nIconIndex As Long, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIcons As Long) As Long
Public DeclareWide PtrSafe Function ExtractIconEx Lib "shell32" Alias "ExtractIconExW" (ByVal lpszFile As String, ByVal nIconIndex As Long, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIcons As Long) As Long
Public DeclareWide PtrSafe Function DuplicateIcon Lib "shell32" (ByVal hInst As LongPtr, ByVal hIcon As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function ExtractAssociatedIconW Lib "shell32" (ByVal hInst As LongPtr, ByVal pszIconPath As LongPtr, piIcon As Integer) As LongPtr
Public DeclareWide PtrSafe Function ExtractAssociatedIcon Lib "shell32" Alias "ExtractAssociatedIconW" (ByVal hInst As LongPtr, ByVal pszIconPath As String, piIcon As Integer) As LongPtr
Public DeclareWide PtrSafe Function ExtractAssociatedIconExW Lib "shell32" (ByVal hInst As LongPtr, ByVal pszIconPath As LongPtr, piIconIndex As Integer, piIconId As Integer) As LongPtr
Public DeclareWide PtrSafe Function ExtractAssociatedIconEx Lib "shell32" Alias "ExtractAssociatedIconExW" (ByVal hInst As LongPtr, ByVal pszIconPath As String, piIconIndex As Integer, piIconId As Integer) As LongPtr
Public DeclareWide PtrSafe Function ShellMessageBoxW CDecl Lib "shell32" (ByVal hAppInst As LongPtr, ByVal hwnd As LongPtr, ByVal lpcText As LongPtr, ByVal lpcTitle As LongPtr, ByVal uType As MessageBoxFlags, Optional ByVal argarr1 As LongPtr, Optional ByVal argarr2 As LongPtr, Optional ByVal argarr3 As LongPtr, Optional ByVal argarr4 As LongPtr) As MessageBoxResults
Public DeclareWide PtrSafe Function ShellMessageBox CDecl Lib "shell32" Alias "ShellMessageBoxW" (ByVal hAppInst As LongPtr, ByVal hwnd As LongPtr, ByVal lpcText As String, ByVal lpcTitle As String, ByVal uType As MessageBoxFlags, Optional ByVal argarr1 As LongPtr, Optional ByVal argarr2 As LongPtr, Optional ByVal argarr3 As LongPtr, Optional ByVal argarr4 As LongPtr) As MessageBoxResults
Public DeclareWide PtrSafe Function ShellAboutW Lib "shell32" (ByVal hwnd As LongPtr, ByVal szApp As LongPtr, Optional ByVal szOtherStuff As LongPtr = 0, Optional ByVal hIcon As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function ShellAbout Lib "shell32" Alias "ShellAboutW" (ByVal hwnd As LongPtr, ByVal szApp As String, Optional ByVal szOtherStuff As String = vbNullString, Optional ByVal hIcon As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function OpenRegStream Lib "shell32" (ByVal hkey As LongPtr, ByVal pszSubkey As LongPtr, ByVal pszValue As LongPtr, ByVal grfMode As STGM) As IStream
Public DeclareWide PtrSafe Function SHObjectProperties Lib "shell32" (ByVal hwnd As LongPtr, ByVal shopObjectType As SHOBJPROP_FLAGS, ByVal pszObjectName As LongPtr, Optional ByVal pszPropertyPage As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SHFormatDrive Lib "shell32" (ByVal hwnd As LongPtr, ByVal drive As Long, ByVal fmtID As SHFMTDRV_ID, ByVal options As SHFMTDRV_OPTIONS) As SHFMTDRV_RETURN
Public DeclareWide PtrSafe Function SHCreatePropSheetExtArray Lib "shell32" (ByVal hkey As LongPtr, ByVal pszSubkey As LongPtr, ByVal max_iface As Long) As LongPtr
Public DeclareWide PtrSafe Function SHAddFromPropSheetExtArray Lib "shell32" (ByVal hpsxa As LongPtr, ByVal lpfnAddPage As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function SHReplaceFromPropSheetExtArray Lib "shell32" (ByVal hpsxa As LongPtr, ByVal uPageID As Long, ByVal lpfnReplaceWith As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Sub SHDestroyPropSheetExtArray Lib "shell32" (ByVal hpsxa As LongPtr)
Public DeclareWide PtrSafe Function SHOpenPropSheetW Lib "shell32" (ByVal pszCaption As LongPtr, ahkeys As LongPtr, ByVal cKeys As Long, pclsidDefault As UUID, ByVal pdtobj As IDataObject, Optional ByVal psb As IShellBrowser, Optional ByVal pStartPage As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SHOpenPropSheet Lib "shell32" Alias "SHOpenPropSheetW" (ByVal pszCaption As String, ahkeys As LongPtr, ByVal cKeys As Long, pclsidDefault As UUID, ByVal pdtobj As IDataObject, Optional ByVal psb As IShellBrowser, Optional ByVal pStartPage As String) As BOOL
Public DeclareWide PtrSafe Function AssocGetDetailsOfPropKey Lib "shell32" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, pkey As PROPERTYKEY, pv As Variant, pfFoundPropKey As BOOL) As Long
Public DeclareWide PtrSafe Function PathCleanupSpec Lib "shell32" (ByVal pszDir As LongPtr, ByVal pszSpec As LongPtr) As PCS_RESULT
Public DeclareWide PtrSafe Function PathIsExe Lib "shell32" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathMakeUniqueName Lib "shell32" (ByVal pszUniqueName As LongPtr, ByVal cchMax As Long, ByVal pszTemplate As LongPtr, Optional ByVal pszLongPlate As LongPtr, Optional ByVal pszDir As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathYetAnotherMakeUniqueName Lib "shell32" (ByVal pszUniqueName As LongPtr, ByVal pszPath As LongPtr, Optional ByVal pszShort As LongPtr, Optional ByVal pszFileSpec As LongPtr) As Long
Public DeclareWide PtrSafe Function PathResolve Lib "shell32" (ByVal pszPath As LongPtr, dirs As LongPtr, ByVal fFlags As PathResolveFlags) As Long
Public DeclareWide PtrSafe Sub PathGetShortPath Lib "shell32" (ByVal pszLongPath As LongPtr)
Public DeclareWide PtrSafe Function SignalFileOpen Lib "shell32" (ByVal pidl As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SHStartNetConnectionDialogW Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszRemoteName As LongPtr, ByVal dwType As NetResourceTypeValues) As Long
Public DeclareWide PtrSafe Function SHStartNetConnectionDialog Lib "shell32" Alias "SHStartNetConnectionDialogW" (ByVal hwnd As LongPtr, ByVal pszRemoteName As String, ByVal dwType As NetResourceTypeValues) As Long
Public DeclareWide PtrSafe Function RestartDialog Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPrompt As LongPtr, ByVal dwReturn As ExitWindowsExFlags) As Long
Public DeclareWide PtrSafe Function RestartDialogEx Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPrompt As LongPtr, ByVal dwReturn As ExitWindowsExFlags, ByVal dwReasonCode As SystemShutdownReasons) As Long
Public DeclareWide PtrSafe Function PickIconDlg Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszIconPath As LongPtr, ByVal cchIconPath As Long, Optional piIconIndex As Long) As Long
Public DeclareWide PtrSafe Function ReadCabinetState Lib "shell32" (pcs As CABINETSTATE, ByVal cLength As Long) As BOOL
Public DeclareWide PtrSafe Function WriteCabinetState Lib "shell32" (pcs As CABINETSTATE) As BOOL
Public DeclareWide PtrSafe Function IsNetDrive Lib "shell32" (ByVal iDrive As Long) As Long

/*
typedef struct {
WORD cLength;
WORD nVersion;
BOOL fFullPathTitle : 1;
BOOL fSaveLocalView : 1;
BOOL fNotShell : 1;
BOOL fSimpleDefault : 1;
BOOL fDontShowDescBar : 1;
BOOL fNewWindowMode : 1;
BOOL fShowCompColor : 1;
BOOL fDontPrettyNames : 1;
BOOL fAdminsCreateCommonGroups : 1;
UINT fUnusedFlags : 7;
UINT fMenuEnumFilter;
} CABINETSTATE, *LPCABINETSTATE;
*/
Public Type CABINETSTATE
	cLength As Integer
    nVersion As Integer
    Bitfield As Long
    fMenuEnumFilter As Long
End Type

Public Enum NetResourceTypeValues
    RESOURCETYPE_ANY  = &H00000000
    RESOURCETYPE_DISK  = &H00000001
    RESOURCETYPE_PRINT  = &H00000002
    RESOURCETYPE_RESERVED  = &H00000008
    RESOURCETYPE_UNKNOWN  = &HFFFFFFFF
End Enum


Public Enum PathResolveFlags
    PRF_VERIFYEXISTS  = &H0001
    PRF_TRYPROGRAMEXTENSIONS  = (&H0002  Or  PRF_VERIFYEXISTS)
    PRF_FIRSTDIRDEF  = &H0004
    PRF_DONTFINDLNK  = &H0008  ' if PRF_TRYPROGRAMEXTENSIONS is specified
' #if (NTDDI_VERSION >= NTDDI_WINXPSP2)
    PRF_REQUIREABSOLUTE  = &H0010
End Enum

Public Enum SHFMTDRV_ID
    SHFMT_ID_DEFAULT = &HFFFF&
End Enum
Public Enum SHFMTDRV_OPTIONS
    SHFMT_OPT_FULL  = &H0001
    SHFMT_OPT_SYSONLY  = &H0002
End Enum
Public Enum SHFMTDRV_RETURN
    SHFMT_ERROR  = &HFFFFFFFF  ' Error on last format, drive may be formatable
    SHFMT_CANCEL  = &HFFFFFFFE  ' Last format was canceled
    SHFMT_NOFORMAT  = &HFFFFFFFD  ' Drive is not formatable
End Enum


Public Enum SHOBJPROP_FLAGS
    SHOP_PRINTERNAME  = &H00000001  ' pszObjectName points to a printer friendly name
    SHOP_FILEPATH  = &H00000002  ' pszObjectName points to a fully qualified path+file name
    SHOP_VOLUMEGUID  = &H00000004  ' pszObjectName points to a Volume GUID
End Enum

Public Enum RESTRICTIONS
	REST_NONE = &H00000000
	REST_NORUN = &H00000001
	REST_NOCLOSE = &H00000002
	REST_NOSAVESET = &H00000004
	REST_NOFILEMENU = &H00000008
	REST_NOSETFOLDERS = &H00000010
	REST_NOSETTASKBAR = &H00000020
	REST_NODESKTOP = &H00000040
	REST_NOFIND = &H00000080
	REST_NODRIVES = &H00000100
	REST_NODRIVEAUTORUN = &H00000200
	REST_NODRIVETYPEAUTORUN = &H00000400
	REST_NONETHOOD = &H00000800
	REST_STARTBANNER = &H00001000
	REST_RESTRICTRUN = &H00002000
	REST_NOPRINTERTABS = &H00004000
	REST_NOPRINTERDELETE = &H00008000&
	REST_NOPRINTERADD = &H00010000
	REST_NOSTARTMENUSUBFOLDERS = &H00020000
	REST_MYDOCSONNET = &H00040000
	REST_NOEXITTODOS = &H00080000
	REST_ENFORCESHELLEXTSECURITY = &H00100000
	REST_LINKRESOLVEIGNORELINKINFO = &H00200000
	REST_NOCOMMONGROUPS = &H00400000
	REST_SEPARATEDESKTOPPROCESS = &H00800000
	REST_NOWEB = &H01000000
	REST_NOTRAYCONTEXTMENU = &H02000000
	REST_NOVIEWCONTEXTMENU = &H04000000
	REST_NONETCONNECTDISCONNECT = &H08000000
	REST_STARTMENULOGOFF = &H10000000
	REST_NOSETTINGSASSIST = &H20000000
	REST_NOINTERNETICON = &H40000001
	REST_NORECENTDOCSHISTORY = &H40000002
	REST_NORECENTDOCSMENU = &H40000003
	REST_NOACTIVEDESKTOP = &H40000004
	REST_NOACTIVEDESKTOPCHANGES = &H40000005
	REST_NOFAVORITESMENU = &H40000006
	REST_CLEARRECENTDOCSONEXIT = &H40000007
	REST_CLASSICSHELL = &H40000008
	REST_NOCUSTOMIZEWEBVIEW = &H40000009
	REST_NOHTMLWALLPAPER = &H40000010
	REST_NOCHANGINGWALLPAPER = &H40000011
	REST_NODESKCOMP = &H40000012
	REST_NOADDDESKCOMP = &H40000013
	REST_NODELDESKCOMP = &H40000014
	REST_NOCLOSEDESKCOMP = &H40000015
	REST_NOCLOSE_DRAGDROPBAND = &H40000016
	REST_NOMOVINGBAND = &H40000017
	REST_NOEDITDESKCOMP = &H40000018
	REST_NORESOLVESEARCH = &H40000019
	REST_NORESOLVETRACK = &H4000001A
	REST_FORCECOPYACLWITHFILE = &H4000001B
	REST_NOLOGO3CHANNELNOTIFY = &H4000001C
	REST_NOFORGETSOFTWAREUPDATE = &H4000001D
	REST_NOSETACTIVEDESKTOP = &H4000001E
	REST_NOUPDATEWINDOWS = &H4000001F
	REST_NOCHANGESTARMENU = &H40000020
	REST_NOFOLDEROPTIONS = &H40000021
	REST_HASFINDCOMPUTERS = &H40000022
	REST_INTELLIMENUS = &H40000023
	REST_RUNDLGMEMCHECKBOX = &H40000024
	REST_ARP_ShowPostSetup = &H40000025
	REST_NOCSC = &H40000026
	REST_NOCONTROLPANEL = &H40000027
	REST_ENUMWORKGROUP = &H40000028
	REST_ARP_NOARP = &H40000029
	REST_ARP_NOREMOVEPAGE = &H4000002A
	REST_ARP_NOADDPAGE = &H4000002B
	REST_ARP_NOWINSETUPPAGE = &H4000002C
	REST_GREYMSIADS = &H4000002D
	REST_NOCHANGEMAPPEDDRIVELABEL = &H4000002E
	REST_NOCHANGEMAPPEDDRIVECOMMENT = &H4000002F
	REST_MaxRecentDocs = &H40000030
	REST_NONETWORKCONNECTIONS = &H40000031
	REST_FORCESTARTMENULOGOFF = &H40000032
	REST_NOWEBVIEW = &H40000033
	REST_NOCUSTOMIZETHISFOLDER = &H40000034
	REST_NOENCRYPTION = &H40000035
	REST_DONTSHOWSUPERHIDDEN = &H40000037
	REST_NOSHELLSEARCHBUTTON = &H40000038
	REST_NOHARDWARETAB = &H40000039
	REST_NORUNASINSTALLPROMPT = &H4000003A
	REST_PROMPTRUNASINSTALLNETPATH = &H4000003B
	REST_NOMANAGEMYCOMPUTERVERB = &H4000003C
	REST_DISALLOWRUN = &H4000003E
	REST_NOWELCOMESCREEN = &H4000003F
	REST_RESTRICTCPL = &H40000040
	REST_DISALLOWCPL = &H40000041
	REST_NOSMBALLOONTIP = &H40000042
	REST_NOSMHELP = &H40000043
	REST_NOWINKEYS = &H40000044
	REST_NOENCRYPTONMOVE = &H40000045
	REST_NOLOCALMACHINERUN = &H40000046
	REST_NOCURRENTUSERRUN = &H40000047
	REST_NOLOCALMACHINERUNONCE = &H40000048
	REST_NOCURRENTUSERRUNONCE = &H40000049
	REST_FORCEACTIVEDESKTOPON = &H4000004A
	REST_NOVIEWONDRIVE = &H4000004C
	REST_NONETCRAWL = &H4000004D
	REST_NOSHAREDDOCUMENTS = &H4000004E
	REST_NOSMMYDOCS = &H4000004F
	REST_NOSMMYPICS = &H40000050
	REST_ALLOWBITBUCKDRIVES = &H40000051
	REST_NONLEGACYSHELLMODE = &H40000052
	REST_NOCONTROLPANELBARRICADE = &H40000053
	REST_NOSTARTPAGE = &H40000054
	REST_NOAUTOTRAYNOTIFY = &H40000055
	REST_NOTASKGROUPING = &H40000056
	REST_NOCDBURNING = &H40000057
	REST_MYCOMPNOPROP = &H40000058
	REST_MYDOCSNOPROP = &H40000059
	REST_NOSTARTPANEL = &H4000005A
	REST_NODISPLAYAPPEARANCEPAGE = &H4000005B
	REST_NOTHEMESTAB = &H4000005C
	REST_NOVISUALSTYLECHOICE = &H4000005D
	REST_NOSIZECHOICE = &H4000005E
	REST_NOCOLORCHOICE = &H4000005F
	REST_SETVISUALSTYLE = &H40000060
	REST_STARTRUNNOHOMEPATH = &H40000061
	REST_NOUSERNAMEINSTARTPANEL = &H40000062
	REST_NOMYCOMPUTERICON = &H40000063
	REST_NOSMNETWORKPLACES = &H40000064
	REST_NOSMPINNEDLIST = &H40000065
	REST_NOSMMYMUSIC = &H40000066
	REST_NOSMEJECTPC = &H40000067
	REST_NOSMMOREPROGRAMS = &H40000068
	REST_NOSMMFUPROGRAMS = &H40000069
	REST_NOTRAYITEMSDISPLAY = &H4000006A
	REST_NOTOOLBARSONTASKBAR = &H4000006B
	REST_NOSMCONFIGUREPROGRAMS = &H4000006F
	REST_HIDECLOCK = &H40000070
	REST_NOLOWDISKSPACECHECKS = &H40000071
	REST_NOENTIRENETWORK = &H40000072
	REST_NODESKTOPCLEANUP = &H40000073
	REST_BITBUCKNUKEONDELETE = &H40000074
	REST_BITBUCKCONFIRMDELETE = &H40000075
	REST_BITBUCKNOPROP = &H40000076
	REST_NODISPBACKGROUND = &H40000077
	REST_NODISPSCREENSAVEPG = &H40000078
	REST_NODISPSETTINGSPG = &H40000079
	REST_NODISPSCREENSAVEPREVIEW = &H4000007A
	REST_NODISPLAYCPL = &H4000007B
	REST_HIDERUNASVERB = &H4000007C
	REST_NOTHUMBNAILCACHE = &H4000007D
	REST_NOSTRCMPLOGICAL = &H4000007E
	REST_NOPUBLISHWIZARD = &H4000007F
	REST_NOONLINEPRINTSWIZARD = &H40000080
	REST_NOWEBSERVICES = &H40000081
	REST_ALLOWUNHASHEDWEBVIEW = &H40000082
	REST_ALLOWLEGACYWEBVIEW = &H40000083
	REST_REVERTWEBVIEWSECURITY = &H40000084
	REST_INHERITCONSOLEHANDLES = &H40000086
	REST_SORTMAXITEMCOUNT = &H40000087
	REST_NOREMOTERECURSIVEEVENTS = &H40000089
	REST_NOREMOTECHANGENOTIFY = &H40000091
	REST_NOSIMPLENETIDLIST = &H40000092
	REST_NOENUMENTIRENETWORK = &H40000093
	REST_NODETAILSTHUMBNAILONNETWORK = &H40000094
	REST_NOINTERNETOPENWITH = &H40000095
	REST_DONTRETRYBADNETNAME = &H4000009B
	REST_ALLOWFILECLSIDJUNCTIONS = &H4000009C
	REST_NOUPNPINSTALL = &H4000009D
	REST_ARP_DONTGROUPPATCHES = &H400000AC
	REST_ARP_NOCHOOSEPROGRAMSPAGE = &H400000AD
	REST_NODISCONNECT = &H41000001
	REST_NOSECURITY = &H41000002
	REST_NOFILEASSOCIATE = &H41000003
	REST_ALLOWCOMMENTTOGGLE = &H41000004
	REST_USEDESKTOPINICACHE = &H41000005
End Enum

'Values for LIMITINPUTSTRUCT.dwMask
Public Enum LI_Mask
    LIM_FLAGS = &H1      'dwFlags used
    LIM_FILTER = &H2     'pszFilter used
    LIM_HINST = &H8      'hinst contains valid data. Generally must be set.
    LIM_TITLE = &H10     'pszTitle used. Tooltip title.
    LIM_MESSAGE = &H20   'pszMessage used. Tooltip main message.
    LIM_ICON = &H40      'hicon used. Can use default icons e.g. IDI_HAND. Loaded from .hInst.
    LIM_NOTIFY = &H80    'hwndNotify used. NOTE: Must be set to receive notifications. Automatic finding of parent broken.
    LIM_TIMEOUT = &H100  'iTimeout used. Default timeout=10000.
    LIM_TIPWIDTH = &H200 'cxTipWidth used. Default 500px.
End Enum

'Values for LIMITINPUTSTRUCT.dwFlags
Public Enum LI_Flags
    LIF_INCLUDEFILTER = &H0     'Default: pszFilter specifies what to include.
    LIF_EXCLUDEFILTER = &H1     'pszFilter specifies what to exclude.
    LIF_CATEGORYFILTER = &H2    'pszFilter uses LICF_* categories, not a string of chars.

    LIF_WARNINGBELOW = &H0      'Default: Tooltip below.
    LIF_WARNINGABOVE = &H4      'Tooltip above.
    LIF_WARNINGCENTERED = &H8   'Tooltip centered.
    LIF_WARNINGOFF = &H10       'Disable tooltip.

    LIF_FORCEUPPERCASE = &H20   'Makes chars uppercase.
    LIF_FORCELOWERCASE = &H40   'Makes chars lowercase. (This and forceupper mutually exclusive)

    LIF_MESSAGEBEEP = &H0       'Default: System default beep played.
    LIF_SILENT = &H80           'No beep.

    LIF_NOTIFYONBADCHAR = &H100 'Send WM_NOTIFY LIN_NOTIFYBADCHAR. NOTE: Must set LIM_NOTIFY flag and .hwndNotify member.
    LIF_HIDETIPONVALID = &H200  'Timeout tooltip early if valid char entered.

    LIF_PASTESKIP = &H0         'Default: Paste any allowed characters, skip disallowed.
    LIF_PASTESTOP = &H400       'Paste until first disallowed character encountered.
    LIF_PASTECANCEL = &H800     'Cancel paste entirely if any disallowed character.

    LIF_KEEPCLIPBOARD = &H1000  'If not set, modifies clipboard to what was pasted after paste flags executed.
End Enum

'Filters support CT_TYPE1 categories:
Public Const LICF_UPPER = &H1
Public Const LICF_LOWER = &H2
Public Const LICF_DIGIT = &H4
Public Const LICF_SPACE = &H8
Public Const LICF_PUNCT = &H10  'Punctuation
Public Const LICF_CNTRL = &H20  'Control characters
Public Const LICF_BLANK = &H40
Public Const LICF_XDIGIT = &H80  'Hexadecimal values, 0-9 and A-F.
Public Const LICF_ALPHA = &H100  'Any CT_TYPE1 linguistic character. Includes non-Latin alphabets.
'Custom categories
Public Const LICF_BINARYDIGIT = &H10000
Public Const LICF_OCTALDIGIT = &H20000 'Base 8; 0-7.
Public Const LICF_ATOZUPPER = &H100000 'ASCII A to Z
Public Const LICF_ATOZLOWER = &H200000 'ASCII a to z
Public Const LICF_ATOZ = (LICF_ATOZUPPER Or LICF_ATOZLOWER)

'Notification codes
Public Const LIN_GETDISPINFO = &H1   'Need tooltip display info (pszTitle and pszMessage).
Public Const LIN_GETFILTERINFO = &H2 'Need pszFilter and dwMask if modifying it.
Public Const LIN_BADCHAR = &H3       'Bad character notification from LIF_NOTIFYONBADCHAR

Public Type LIMITINPUTSTRUCT
    cbSize As Long       'Size of structure. Must set.
    dwMask As LI_Mask    'LIM_* values.
    dwFlags As LI_Flags  'LIF_* values.
    hInst As LongPtr     'App.hInstance or loaded module hInstance.
    pszFilter As LongPtr 'String via StrPtr, LICF_* category, LPSTR_TEXTCALLBACK to set via LIN_GETDISPINFO, or resource id in .hInst.
    pszTitle As LongPtr  'Optional. String via StrPtr, LPSTR_TEXTCALLBACK to set via LIN_GETDISPINFO, or resource id in .hInst.
    pszMessage As LongPtr'Ignore if tooltip disabled. String via StrPtr, LPSTR_TEXTCALLBACK to set via LIN_GETDISPINFO, or resource id in .hInst.
    hIcon As LongPtr     'See TTM_SETTITLE. Can be TTI_* default icon, hIcon, or I_ICONCALLBACK to set via LIN_GETDISPINFO.
    hwndNotify As LongPtr'Window to send notifications to. Must specify if any callbacks used or bad character notifications enabled.
    iTimeout As Long     'Timeout in milliseconds. Defaults to 10000 if not set.
    cxTipWidth As Long   'Tooltip width. Default 500px.
End Type
       
Public Type NMLIBADCHAR
    hdr As NMHDR
    wParam As LongPtr 'WM_CHAR wParam (Char code)
    lParam As LongPtr 'WM_CHAR lParam (see MSDN for details)
End Type

Public Type NMLIDISPINFO
    hdr As NMHDR
    li As LIMITINPUTSTRUCT 'Set all values requested in dwMask.
End Type

Public Enum OPEN_AS_INFO_FLAGS
    OAIF_ALLOW_REGISTRATION = &H1 'Enable the "always use this program" checkbox. If not passed, it will be disabled.
    OAIF_REGISTER_EXT = &H2 'Do the registration after the user hits the OK button.
    OAIF_EXEC = &H4 'Execute file after registering.
    OAIF_FORCE_REGISTRATION = &H8 'Force the Always use this program checkbox to be checked. Typically, you won't use the OAIF_ALLOW_REGISTRATION flag when you pass this value.
    OAIF_HIDE_REGISTRATION = &H20 'Introduced in Windows Vista. Hide the Always use this program checkbox. If this flag is specified, the OAIF_ALLOW_REGISTRATION and OAIF_FORCE_REGISTRATION flags will be ignored.
    OAIF_URL_PROTOCOL = &H40 'Introduced in Windows Vista. The value for the extension that is passed is actually a protocol, so the Open With dialog box should show applications that are registered as capable of handling that protocol.
    OAIF_FILE_IS_URI = &H80 'Introduced in Windows 8. The location pointed to by the pcszFile parameter is given as a URI.
End Enum

Public Type OPENASINFO
    pcszFile As LongPtr
    pcszClass As LongPtr 'file type description for registering the type with 'always open', if not set uses extension, as in 'XYZ File'
    oafInFlags As OPEN_AS_INFO_FLAGS
End Type

Public Enum SHOFASI_Flags
    OFASI_EDIT = &H1 'Initiate a rename (if single file)	
    OFASI_OPENDESKTOP = &H2 'Highlights files on the desktop.
End Enum

Public Type SHFILEOPSTRUCT
   hWnd        As LongPtr
   wFunc       As FILEOP
   pFrom       As LongPtr
   pTo         As LongPtr
   fFlags      As FILEOP_FLAGS
   fAborted    As Boolean
   hNameMaps   As LongPtr
   sProgress   As LongPtr
 End Type
 
Public Type SHFILEINFOA   ' shfi
  hIcon As LongPtr
  iIcon As Long
  dwAttributes As SFGAO_Flags
  szDisplayName(MAX_PATH - 1) As Byte
  szTypeName(79) As Byte
End Type
Public Type SHFILEINFOW   ' shfi
  hIcon As LongPtr
  iIcon As Long
  dwAttributes As SFGAO_Flags
  szDisplayName(MAX_PATH - 1) As Integer
  szTypeName(79) As Integer
End Type
Public Type SHFILEINFO   ' shfi
  hIcon As LongPtr
  iIcon As Long
  dwAttributes As SFGAO_Flags
  szDisplayName(MAX_PATH - 1) As Integer
  szTypeName(79) As Integer
End Type

Public Enum SHGFI_flags
  SHGFI_LARGEICON = &H0            ' sfi.hIcon is large icon
  SHGFI_SMALLICON = &H1            ' sfi.hIcon is small icon
  SHGFI_OPENICON = &H2              ' sfi.hIcon is open icon
  SHGFI_SHELLICONSIZE = &H4      ' sfi.hIcon is shell size (not system size), rtns BOOL
  SHGFI_PIDL = &H8                        ' pszPath is pidl, rtns BOOL
  ' Indicates that the function should not attempt to access the file specified by pszPath.
  ' Rather, it should act as if the file specified by pszPath exists with the file attributes
  ' passed in dwFileAttributes. This flag cannot be combined with the SHGFI_ATTRIBUTES,
  ' SHGFI_EXETYPE, or SHGFI_PIDL flags <---- !!!
  SHGFI_USEFILEATTRIBUTES = &H10   ' pretend pszPath exists, rtns BOOL
  SHGFI_ADDOVERLAYS = &H20
  SHGFI_OVERLAYINDEX = &H40 'Return overlay index in upper 8 bits of iIcon.
  SHGFI_ICON = &H100                    ' fills sfi.hIcon, rtns BOOL, use DestroyIcon
  SHGFI_DISPLAYNAME = &H200    ' isf.szDisplayName is filled (SHGDN_NORMAL), rtns BOOL
  SHGFI_TYPENAME = &H400          ' isf.szTypeName is filled, rtns BOOL
  SHGFI_ATTRIBUTES = &H800         ' rtns IShellFolder::GetAttributesOf  SFGAO_* flags
  SHGFI_ICONLOCATION = &H1000   ' fills sfi.szDisplayName with filename
                                                        ' containing the icon, rtns BOOL
  SHGFI_EXETYPE = &H2000            ' rtns two ASCII chars of exe type
  SHGFI_SYSICONINDEX = &H4000   ' sfi.iIcon is sys il icon index, rtns hImagelist
  SHGFI_LINKOVERLAY = &H8000&    ' add shortcut overlay to sfi.hIcon
  SHGFI_SELECTED = &H10000        ' sfi.hIcon is selected icon
  SHGFI_ATTR_SPECIFIED = &H20000    ' get only attributes specified in sfi.dwAttributes
End Enum

#End Region

#Region "shlwapi"
'********************************************************************************
'shlwapi.dll        
        
Public Enum StrToIntExFlags
	STIF_DEFAULT = &H00000000
	STIF_SUPPORT_HEX = &H00000001
End Enum

Public Enum GCTFlags
	GCT_INVALID = &H0000
	GCT_LFNCHAR = &H0001
	GCT_SHORTCHAR = &H0002
	GCT_WILD = &H0004
	GCT_SEPARATOR = &H0008
End Enum

Public Enum URL_SCHEME
	URL_SCHEME_INVALID = -1
	URL_SCHEME_UNKNOWN = 0
	URL_SCHEME_FTP = 1
	URL_SCHEME_HTTP = 2
	URL_SCHEME_GOPHER = 3
	URL_SCHEME_MAILTO = 4
	URL_SCHEME_NEWS = 5
	URL_SCHEME_NNTP = 6
	URL_SCHEME_TELNET = 7
	URL_SCHEME_WAIS = 8
	URL_SCHEME_FILE = 9
	URL_SCHEME_MK = 10
	URL_SCHEME_HTTPS = 11
	URL_SCHEME_SHELL = 12
	URL_SCHEME_SNEWS = 13
	URL_SCHEME_LOCAL = 14
	URL_SCHEME_JAVASCRIPT = 15
	URL_SCHEME_VBSCRIPT = 16
	URL_SCHEME_ABOUT = 17
	URL_SCHEME_RES = 18
	URL_SCHEME_MAXVALUE = 19
End Enum

Public Enum URL_PART
    URL_PART_NONE = 0
    URL_PART_SCHEME = 1
    URL_PART_HOSTNAME
    URL_PART_USERNAME
    URL_PART_PASSshort
    URL_PART_PORT
    URL_PART_QUERY
End Enum

Public Enum URLIS
    URLIS_URL
    URLIS_OPAQUE
    URLIS_NOHISTORY
    URLIS_FILEURL
    URLIS_APPLIABLE
    URLIS_DIRECTORY
    URLIS_HASQUERY
End Enum

Public Enum URL
	URL_UNESCAPE = &H10000000
	URL_ESCAPE_UNSAFE = &H20000000
	URL_PLUGGABLE_PROTOCOL = &H40000000
	URL_WININET_COMPATIBILITY = &H80000000
	URL_DONT_ESCAPE_EXTRA_INFO = &H02000000
	URL_DONT_UNESCAPE_EXTRA_INFO = &H02000000
	URL_BROWSER_MODE = &H02000000
	URL_ESCAPE_SPACES_ONLY = &H04000000
	URL_DONT_SIMPLIFY = &H08000000
	URL_NO_META = &H08000000
	URL_UNESCAPE_INPLACE = &H00100000
	URL_CONVERT_IF_DOSPATH = &H00200000
	URL_UNESCAPE_HIGH_ANSI_ONLY = &H00400000
	URL_INTERNAL_PATH = &H00800000 ' Will escape #'s in paths
	URL_FILE_USE_PATHURL = &H00010000
	URL_ESCAPE_PERCENT = &H00001000
	URL_ESCAPE_SEGMENT_ONLY = &H00002000 ' Treat the entire URL param as one URL segment
    URL_ESCAPE_AS_UTF8 = &h00040000
    URL_ESCAPE_ASCII_URI_COMPONENT = &h00080000
End Enum

Public Enum URL_PARTFLAG
	URL_PARTFLAG_KEEPSCHEME = &H00000001
End Enum

Public Enum URL_APPLY
	URL_APPLY_DEFAULT = &H00000001
	URL_APPLY_GUESSSCHEME = &H00000002
	URL_APPLY_GUESSFILE = &H00000004
	URL_APPLY_FORCEAPPLY = &H00000008
End Enum

Public Enum SHREGDEL_FLAGS
	SHREGDEL_DEFAULT = &H00000000 ' Delete's HKCU, or HKLM if HKCU is not found.
	SHREGDEL_HKCU = &H00000001 ' Delete HKCU only
	SHREGDEL_HKLM = &H00000010 ' Delete HKLM only.
	SHREGDEL_BOTH = &H00000011 ' Delete both HKCU and HKLM.
End Enum

Public Enum SHREGENUM_FLAGS
	SHREGENUM_DEFAULT = &H00000000 ' Enumerates HKCU or HKLM if not found.
	SHREGENUM_HKCU = &H00000001 ' Enumerates HKCU only
	SHREGENUM_HKLM = &H00000010 ' Enumerates HKLM only.
	SHREGENUM_BOTH = &H00000011 ' Enumerates both HKCU and HKLM without duplicates. This option is NYI.
End Enum

Public Enum SHREGSET
	SHREGSET_HKCU = &H00000001 ' Write to HKCU if empty.
	SHREGSET_FORCE_HKCU = &H00000002 ' Write to HKCU.
	SHREGSET_HKLM = &H00000004 ' Write to HKLM if empty.
	SHREGSET_FORCE_HKLM = &H00000008 ' Write to HKLM.
	SHREGSET_DEFAULT = &H00000006 ' Default is SHREGSET_FORCE_HKCU | SHREGSET_HKLM.
End Enum

Public Enum REGSAM
	KEY_QUERY_VALUE = &H0001
	KEY_SET_VALUE = &H0002
	KEY_CREATE_SUB_KEY = &H0004
	KEY_ENUMERATE_SUB_KEYS = &H0008
	KEY_NOTIFY = &H0010
	KEY_CREATE_LINK = &H0020
    KEY_WOW64_64KEY = &H0100
    KEY_WOW64_32KEY = &H0200
	KEY_READ = &H00020019
	KEY_WRITE = &H00020006
	KEY_EXECUTE = &H00020019
	KEY_ALL_ACCESS = &H000F003F
End Enum

Public Enum REGTYPES
    REG_NONE = 0
    REG_SZ = 1
    REG_EXPAND_SZ = 2
    REG_BINARY = 3
    REG_DWORD = 4
    REG_DWORD_BIG_ENDIAN = 5
    REG_DWORD_LITTLE_ENDIAN = 4
    REG_LINK = 6
    REG_MULTI_SZ = 7
    REG_RESOURCE_LIST = 8
    REG_FULL_RESOURCE_DESCRIPTOR = 9
    REG_RESOURCE_REQUIREMENTS_LIST = &HA
    REG_QWORD = &HB
    REG_QWORD_LITTLE_ENDIAN = &HB
End Enum

Public Enum SHCT_FLAGS
	CTF_INSIST = &H00000001 ' SHCreateThread() dwFlags - call pfnThreadProc synchronously if CreateThread() fails
	CTF_THREAD_REF = &H00000002 ' hold a reference to the creating thread
	CTF_PROCESS_REF = &H00000004 ' hold a reference to the creating process
	CTF_COINIT = &H00000008 ' init COM for the created thread
	CTF_FREELIBANDEXIT = &H00000010 ' hold a ref to the DLL and call FreeLibraryAndExitThread() when done
	CTF_REF_COUNTED = &H00000020 'Set thread reference
	CTF_WAIT_ALLOWCOM = &H00000040 'The calling thread waits and pumps COM and SendMessage messages.
	CTF_UNUSED = &H00000080 'Used. Jk.
	CTF_INHERITWOW64 = &H00000100 'Inherits WoW64 disabled state (if set)
	CTF_WAIT_NO_REENTRANCY = &H00000200 'SendMessage to a window hosted on the calling thread causes the synchronous proc to deadlock.
	CTF_KEYBOARD_LOCALE = &H00000400 'Inherit keyboard locale from calling thread
	CTF_OLEINITIALIZE = &H00000800 'Initialize COM with STA model for created thread.
	CTF_COINIT_MTA = &H00001000 'Initialize COM with MTA model for created thread.
	CTF_NOADDREFLIB = &H00002000 'Opposite of CTF_FREELIBANDEXIT.
End Enum

Public Enum DLLVER
	DLLVER_PLATFORM_WINDOWS = &H00000001 ' Windows 95
	DLLVER_PLATFORM_NT = &H00000002 ' Windows NT
End Enum
Public Type DLLVERSIONINFO
    cbSize As Long
    dwMajor As Long
    dwMinor As Long
    dwBuildNumber As Long
    dwPlatformID As DLLVER
End Type
Public Type DLLVERSIONINFO2
	info1 As DLLVERSIONINFO
	dwFlags As Long ' No flags currently defined
	ullVersion As LongLong ' Encoded as:
	' Major 0xFFFF 0000 0000 0000
	' Minor 0x0000 FFFF 0000 0000
	' Build 0x0000 0000 FFFF 0000
	' QFE 0x0000 0000 0000 FFFF
End Type

Public Enum PERCEIVED
  PERCEIVED_TYPE_CUSTOM = -3
  PERCEIVED_TYPE_UNSPECIFIED = -2
  PERCEIVED_TYPE_FOLDER = -1
  PERCEIVED_TYPE_UNKNOWN = 0
  PERCEIVED_TYPE_TEXT = 1
  PERCEIVED_TYPE_IMAGE = 2
  PERCEIVED_TYPE_AUDIO = 3
  PERCEIVED_TYPE_VIDEO = 4
  PERCEIVED_TYPE_COMPRESSED = 5
  PERCEIVED_TYPE_DOCUMENT = 6
  PERCEIVED_TYPE_SYSTEM = 7
  PERCEIVED_TYPE_APPLICATION = 8
  PERCEIVED_TYPE_GAMEMEDIA = 9
  PERCEIVED_TYPE_CONTACTS = 10
End Enum
Public Enum PERCEIVEDFLAG
    PERCEIVEDFLAG_UNDEFINED = &H0 'No perceived type was found (PERCEIVED_TYPE_UNSPECIFIED.
    PERCEIVEDFLAG_SOFTCODED = &H1 'The perceived type was determined through an association in the registry.
    PERCEIVEDFLAG_HARDCODED = &H2 'The perceived type is inherently known to Windows.
    PERCEIVEDFLAG_NATIVESUPPORT = &H4 'The perceived type was determined through a codec provided with Windows.
    PERCEIVEDFLAG_GDIPLUS = &H10 'The perceived type is supported by the GDI+ library.
    PERCEIVEDFLAG_WMSDK = &H20 'The perceived type is supported by the Windows Media SDK.
    PERCEIVEDFLAG_ZIPFOLDER = &H40 'The perceived type is supported by Windows compressed folders.
End Enum
        
Public Enum PMS_Flags
    PMSF_NORMAL = &H0
    PMSF_MULTIPLE = &H1
    PMSF_DONT_STRIP_SPACES = &H10000
End Enum        
        
Public Declare PtrSafe Function AssocGetPerceivedType Lib "shlwapi.dll" (ByVal pszExt As LongPtr, ptype As PERCEIVED, pflag As PERCEIVEDFLAG, ppszType As LongPtr) As Long
Public Declare PtrSafe Function StrRetToStrW Lib "shlwapi" (pStr As STRRET, ByVal pidl As LongPtr, ppsz As LongPtr) As Long
Public Declare PtrSafe Function IUnknown_QueryService Lib "shlwapi" (ByVal pUnk As IUnknown, ByRef guidService As UUID, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function StrChrA Lib "shlwapi" (ByVal lpStart As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrChrW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrChrIA Lib "shlwapi" (ByVal lpStart As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrChrIW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrCatW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As LongPtr
Public Declare PtrSafe Function StrCmpW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As Long
Public Declare PtrSafe Function StrCmpIW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As Long
Public Declare PtrSafe Function StrCmpLogicalW Lib "shlwapi" (ByVal lpStr1 As LongPtr, ByVal lpStr2 As LongPtr) As Long
Public Declare PtrSafe Function StrCpyW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As LongPtr
Public Declare PtrSafe Function StrCpyNW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr, ByVal cchMax As Long) As LongPtr
Public Declare PtrSafe Function StrCatBuffW Lib "shlwapi" (ByVal pszDest As LongPtr, ByVal pszSrc As LongPtr, ByVal cchDestBuffSize As Long) As LongPtr
Public Declare PtrSafe Function StrCatBuffA Lib "shlwapi" (ByVal pszDest As String, ByVal pszSrc As String, ByVal cchDestBuffSize As Long) As LongPtr
Public Declare PtrSafe Function StrCmpNA Lib "shlwapi" (ByVal lpStr1 As String, ByVal lpStr2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCmpNW Lib "shlwapi" (ByVal lpStr1 As LongPtr, ByVal lpStr2 As LongPtr, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCmpNIA Lib "shlwapi" (ByVal lpStr1 As String, ByVal lpStr2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCmpNIW Lib "shlwapi" (ByVal lpStr1 As LongPtr, ByVal lpStr2 As LongPtr, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCSpnA Lib "shlwapi" (ByVal lpStr As String, ByVal lpSet As String) As Long
Public Declare PtrSafe Function StrCSpnW Lib "shlwapi" (ByVal lpStr As LongPtr, ByVal lpSet As LongPtr) As Long
Public Declare PtrSafe Function StrCSpnIA Lib "shlwapi" (ByVal lpStr As String, ByVal lpSet As String) As Long
Public Declare PtrSafe Function StrCSpnIW Lib "shlwapi" (ByVal lpStr As LongPtr, ByVal lpSet As LongPtr) As Long
Public Declare PtrSafe Function StrDupA Lib "shlwapi" (ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrDupW Lib "shlwapi" (ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrFormatByteSizeA Lib "shlwapi" (ByVal dw As Long, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatByteSize64A Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatByteSizeW Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As LongPtr, ByVal uiBufSize As Long) As LongPtr
Public DeclareWide PtrSafe Function StrFormatByteSize Lib "shlwapi" Alias "StrFormatByteSizeW" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatKBSizeW Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As LongPtr, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatKBSizeA Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public DeclareWide PtrSafe Function StrFormatKBSize Lib "shlwapi" Alias "StrFormatKBSizeW" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFromTimeIntervalA Lib "shlwapi" (ByVal pszOut As String, ByVal cchMax As Long, ByVal dwTimeMS As Long, ByVal digits As Long) As Long
Public Declare PtrSafe Function StrFromTimeIntervalW Lib "shlwapi" (pszOut As LongPtr, ByVal cchMax As Long, ByVal dwTimeMS As Long, ByVal digits As Long) As Long
Public Declare PtrSafe Function StrIsIntlEqualA Lib "shlwapi" (ByVal fCaseSens As Long, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrIsIntlEqualW Lib "shlwapi" (ByVal fCaseSens As Long, ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr, ByVal nChar As Long) As Long
Public DeclareWide PtrSafe Function StrIsIntlEqual Lib "shlwapi" Alias "StrIsIntlEqualW" (ByVal fCaseSens As Long, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrNCatA Lib "shlwapi" (ByVal psz1 As String, ByVal psz2 As String, ByVal cchMax As Long) As LongPtr
Public Declare PtrSafe Function StrNCatW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr, ByVal cchMax As Long) As LongPtr
Public Declare PtrSafe Function StrPBrkA Lib "shlwapi" (ByVal psz As String, ByVal pszSet As String) As LongPtr
Public Declare PtrSafe Function StrPBrkW Lib "shlwapi" (ByVal psz As LongPtr, ByVal pszSet As LongPtr) As LongPtr
Public Declare PtrSafe Function StrRChrA Lib "shlwapi" (ByVal lpStart As String, ByVal lpEnd As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRChrW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal lpEnd As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRChrIA Lib "shlwapi" (ByVal lpStart As String, ByVal lpEnd As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRChrIW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal lpEnd As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRStrIA Lib "shlwapi" (ByVal lpSource As String, ByVal lpLast As String, ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrRStrIW Lib "shlwapi" (ByVal lpSource As LongPtr, ByVal lpLast As LongPtr, ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrSpnA Lib "shlwapi" (ByVal psz As String, ByVal pszSet As String) As Long
Public Declare PtrSafe Function StrSpnW Lib "shlwapi" (ByVal psz As LongPtr, ByVal pszSet As LongPtr) As Long
Public Declare PtrSafe Function StrStrA Lib "shlwapi" (ByVal lpFirst As String, ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrStrW Lib "shlwapi" (ByVal lpFirst As LongPtr, ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrStrIA Lib "shlwapi" (ByVal lpFirst As String, ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrStrIW Lib "shlwapi" (ByVal lpFirst As LongPtr, ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrToIntA Lib "shlwapi" (ByVal lpSrc As String) As Long
Public Declare PtrSafe Function StrToIntW Lib "shlwapi" (ByVal lpSrc As LongPtr) As Long
Public DeclareWide PtrSafe Function StrToInt Lib "shlwapi" Alias "StrToIntW" (ByVal lpSrc As String) As Long
Public Declare PtrSafe Function StrToIntExA Lib "shlwapi" (ByVal pszString As String, ByVal dwFlags As StrToIntExFlags, ByRef piRet As Long) As Long
Public Declare PtrSafe Function StrToIntExW Lib "shlwapi" (ByVal pszString As LongPtr, ByVal dwFlags As StrToIntExFlags, ByRef piRet As Long) As Long
Public DeclareWide PtrSafe Function StrToIntEx Lib "shlwapi" Alias "StrToIntExW" (ByVal pszString As String, ByVal dwFlags As StrToIntExFlags, ByRef piRet As Long) As Long
Public Declare PtrSafe Function StrTrimA Lib "shlwapi" (ByVal psz As String, ByVal pszTrimChars As String) As Long
Public Declare PtrSafe Function StrTrimW Lib "shlwapi" (ByVal psz As LongPtr, ByVal pszTrimChars As LongPtr) As Long
Public DeclareWide PtrSafe Function StrTrim Lib "shlwapi" Alias "StrTrimW" (ByVal psz As String, ByVal pszTrimChars As String) As Long
Public Declare PtrSafe Function ChrCmpIA Lib "shlwapi" (ByVal w1 As Integer, ByVal w2 As Integer) As Long
Public Declare PtrSafe Function ChrCmpIW Lib "shlwapi" (ByVal w1 As Integer, ByVal w2 As Integer) As Long
Public Declare PtrSafe Function wvnsprintfA Lib "shlwapi" (ByVal lpOut As String, ByVal cchLimitIn As Long, ByVal lpFmt As String, ByRef arglist As Any) As Long
Public Declare PtrSafe Function wvnsprintfW Lib "shlwapi" (ByVal lpOut As LongPtr, ByVal cchLimitIn As Long, ByVal lpFmt As LongPtr, ByRef arglist As Any) As Long
Public Declare PtrSafe Function StrRetToStrA Lib "shlwapi" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function StrRetToStr Lib "shlwapi" Alias "StrRetToStrW" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Sub StrRetToBufA Lib "shlwapi" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr, ByVal pszBuf As String, ByVal cchBuf As Long)
Public Declare PtrSafe Sub StrRetToBufW Lib "shlwapi" (ByVal pStr As LongPtr, ByVal pidl As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long)
Public DeclareWide PtrSafe Sub StrRetToBuf Lib "shlwapi" Alias "StrRetToBufW" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr, ByVal pszBuf As String, ByVal cchBuf As Long)
Public Declare PtrSafe Function SHStrDupW Lib "shlwapi" Alias "SHStrDupW" (ByVal psz As LongPtr, ppwsz As LongPtr) As Long
Public Declare PtrSafe Function IntlStrEqWorkerA Lib "shlwapi" (ByVal fCaseSens As Long, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function IntlStrEqWorkerW Lib "shlwapi" (ByVal fCaseSens As Long, ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr, ByVal nChar As Long) As Long
Public DeclareWide PtrSafe Function IntlStrEqWorker Lib "shlwapi" Alias "IntlStrEqWorkerW" (ByVal fCaseSens As Long, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function PathAddBackslashA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathAddBackslashW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathAddBackslash Lib "shlwapi" Alias "PathAddBackslashW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathAddExtensionA Lib "shlwapi" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathAddExtensionW Lib "shlwapi" Alias "PathAddExtensionW" (ByVal pszPath As LongPtr, ByVal pszExt As LongPtr) As Long
Public DeclareWide PtrSafe Function PathAddExtension Lib "shlwapi" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathAppendA Lib "shlwapi" (ByVal pszPath As String, ByVal pMore As String) As Long
Public Declare PtrSafe Function PathAppendW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pMore As LongPtr) As Long
Public DeclareWide PtrSafe Function PathAppend Lib "shlwapi" Alias "PathAppendW" (ByVal pszPath As String, ByVal pMore As String) As Long
Public Declare PtrSafe Function PathBuildRootA Lib "shlwapi" (ByVal pszRoot As String, ByVal iDrive As Long) As LongPtr
Public Declare PtrSafe Function PathBuildRootW Lib "shlwapi" Alias "PathBuildRootW" (ByVal pszRoot As LongPtr, ByVal iDrive As Long) As LongPtr
Public DeclareWide PtrSafe Function PathBuildRoot Lib "shlwapi" (ByVal pszRoot As String, ByVal iDrive As Long) As LongPtr
Public Declare PtrSafe Function PathCanonicalizeA Lib "shlwapi" (ByVal pszBuf As String, ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathCanonicalizeW Lib "shlwapi" (ByVal pszBuf As LongPtr, ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathCanonicalize Lib "shlwapi" Alias "PathCanonicalizeW" (ByVal pszBuf As String, ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathCombineA Lib "shlwapi" (ByVal pszDest As String, ByVal pszDir As String, ByVal pszFile As String) As LongPtr
Public Declare PtrSafe Function PathCombineW Lib "shlwapi" (ByVal pszDest As LongPtr, ByVal pszDir As LongPtr, ByVal pszFile As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathCombine Lib "shlwapi" Alias "PathCombineW" (ByVal pszDest As String, ByVal pszDir As String, ByVal pszFile As String) As LongPtr
Public Declare PtrSafe Function PathCompactPathA Lib "shlwapi" (ByVal hDC As LongPtr, ByVal pszPath As String, ByVal dx As Long) As Long
Public Declare PtrSafe Function PathCompactPathW Lib "shlwapi" (ByVal hDC As LongPtr, ByVal pszPath As LongPtr, ByVal dx As Long) As Long
Public DeclareWide PtrSafe Function PathCompactPath Lib "shlwapi" Alias "PathCompactPathW" (ByVal hDC As LongPtr, ByVal pszPath As String, ByVal dx As Long) As Long
Public Declare PtrSafe Function PathCompactPathExA Lib "shlwapi" (ByVal pszOut As String, ByVal pszSrc As String, ByVal cchMax As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCompactPathExW Lib "shlwapi" (pszOut As LongPtr, ByVal pszSrc As LongPtr, ByVal cchMax As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function PathCompactPathEx Lib "shlwapi" Alias "PathCompactPathExW" (ByVal pszOut As String, ByVal pszSrc As String, ByVal cchMax As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCommonPrefixA Lib "shlwapi" (ByVal pszFile1 As String, ByVal pszFile2 As String, ByVal achPath As String) As Long
Public Declare PtrSafe Function PathCommonPrefixW Lib "shlwapi" (ByVal pszFile1 As LongPtr, ByVal pszFile2 As LongPtr, achPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathCommonPrefix Lib "shlwapi" Alias "PathCommonPrefixW" (ByVal pszFile1 As String, ByVal pszFile2 As String, ByVal achPath As String) As Long
Public Declare PtrSafe Function PathFileExistsA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathFileExistsW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathFileExists Lib "shlwapi" Alias "PathFileExistsW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathFindExtensionA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathFindExtension Lib "shlwapi" Alias "PathFindExtensionW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindFileNameA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindFileNameA Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathFindFileName Lib "shlwapi" Alias "PathFindFileNameW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindNextComponentA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindNextComponentW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathFindNextComponent Lib "shlwapi" Alias "PathFindNextComponentW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindOnPathA Lib "shlwapi" (ByVal pszPath As String, ByRef ppszOtherDirs As String) As Long
Public Declare PtrSafe Function PathFindOnPathW Lib "shlwapi" (ByVal pszPath As LongPtr, ByRef ppszOtherDirs As LongPtr) As Long
Public DeclareWide PtrSafe Function PathFindOnPath Lib "shlwapi" Alias "PathFindOnPathW" (ByVal pszPath As String, ByRef ppszOtherDirs As LongPtr) As Long
Public Declare PtrSafe Function PathGetArgsA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathGetArgsW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathGetArgs Lib "shlwapi" Alias "PathGetArgsW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindSuffixArrayA Lib "shlwapi" (ByVal pszPath As String, ByRef apszSuffix As String, ByVal iArraySize As Long) As LongPtr
Public Declare PtrSafe Function PathFindSuffixArrayW Lib "shlwapi" (ByVal pszPath As LongPtr, ByRef apszSuffix As LongPtr, ByVal iArraySize As Long) As LongPtr
Public DeclareWide PtrSafe Function PathFindSuffixArray Lib "shlwapi" Alias "PathFindSuffixArrayW" (ByVal pszPath As String, ByRef apszSuffix As String, ByVal iArraySize As Long) As LongPtr
Public Declare PtrSafe Function PathIsLFNFileSpecA Lib "shlwapi" (ByVal lpName As String) As Long
Public Declare PtrSafe Function PathIsLFNFileSpecW Lib "shlwapi" (ByVal lpName As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsLFNFileSpec Lib "shlwapi" Alias "PathIsLFNFileSpecW" (ByVal lpName As String) As Long
Public Declare PtrSafe Function PathGetCharTypeA Lib "shlwapi" (ByVal ch As Byte) As GCTFlags
Public Declare PtrSafe Function PathGetCharTypeW Lib "shlwapi" (ByVal ch As Integer) As GCTFlags
Public Declare PtrSafe Function PathGetCharType Lib "shlwapi" Alias "PathGetCharTypeW" (ByVal ch As Integer) As GCTFlags
Public Declare PtrSafe Function PathGetDriveNumberA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathGetDriveNumberW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathGetDriveNumber Lib "shlwapi" Alias "PathGetDriveNumberW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsDirectoryA Lib "shlwapi" Alias "(" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsDirectoryW Lib "shlwapi" Alias "(" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsDirectory Lib "shlwapi" Alias "PathIsDirectoryW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsDirectoryEmptyA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsDirectoryEmptyW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsDirectoryEmpty Lib "shlwapi" Alias "PathIsDirectoryEmptyW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsFileSpecA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsFileSpecW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsFileSpec Lib "shlwapi" Alias "PathIsFileSpecW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsPrefixA Lib "shlwapi" (ByVal pszPrefix As String, ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsPrefixW Lib "shlwapi" (ByVal pszPrefix As LongPtr, ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsPrefix Lib "shlwapi" Alias "PathIsPrefixW" (ByVal pszPrefix As String, ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsRelativeA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsRelativeW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsRelative Lib "shlwapi" Alias "PathIsRelativeW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsRootA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsRootW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsRoot Lib "shlwapi" Alias "PathIsRootW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsSameRootA Lib "shlwapi" (ByVal pszPath1 As String, ByVal pszPath2 As String) As Long
Public Declare PtrSafe Function PathIsSameRootW Lib "shlwapi" (ByVal pszPath1 As LongPtr, ByVal pszPath2 As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsSameRoot Lib "shlwapi" Alias "PathIsSameRootW" (ByVal pszPath1 As String, ByVal pszPath2 As String) As Long
Public Declare PtrSafe Function PathIsUNCA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsUNCW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsUNC Lib "shlwapi" Alias "PathIsUNCW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsNetworkPathA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsNetworkPathA Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsNetworkPath Lib "shlwapi" Alias "PathIsNetworkPathW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsUNCServerA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsUNCServerW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsUNCServer Lib "shlwapi" Alias "PathIsUNCServerW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsUNCServerShareA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsUNCServerShareW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsUNCServerShare Lib "shlwapi" Alias "PathIsUNCServerShareW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsContentTypeA Lib "shlwapi" (ByVal pszPath As String, ByVal pszContentType As String) As Long
Public Declare PtrSafe Function PathIsContentTypeW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszContentType As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsContentType Lib "shlwapi" Alias "PathIsContentTypeW" (ByVal pszPath As String, ByVal pszContentType As String) As Long
Public Declare PtrSafe Function PathIsURLA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsURLW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathIsURL Lib "shlwapi" Alias "PathIsURLW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathMakePrettyA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathMakePrettyW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathMakePretty Lib "shlwapi" Alias "PathMakePrettyW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathMatchSpecA Lib "shlwapi" (ByVal pszFile As String, ByVal pszSpec As String) As Long
Public Declare PtrSafe Function PathMatchSpecW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal pszSpec As LongPtr) As Long
Public DeclareWide PtrSafe Function PathMatchSpec Lib "shlwapi" Alias "PathMatchSpecW" (ByVal pszFile As String, ByVal pszSpec As String) As Long
Public Declare PtrSafe Function PathMatchSpecExA Lib "shlwapi" (ByVal pszFile As String, ByVal pszSpec As String, ByVal dwFlags As PMS_Flags) As Long
Public Declare PtrSafe Function PathMatchSpecExW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal pszSpec As LongPtr, ByVal dwFlags As PMS_Flags) As Long
Public DeclareWide PtrSafe Function PathMatchSpecEx Lib "shlwapi" Alias "PathMatchSpecExW" (ByVal pszFile As String, ByVal pszSpec As String, ByVal dwFlags As PMS_Flags) As Long
Public Declare PtrSafe Function PathParseIconLocationA Lib "shlwapi" (ByVal pszIconFile As String) As Long
Public Declare PtrSafe Function PathParseIconLocationW Lib "shlwapi" (ByVal pszIconFile As LongPtr) As Long
Public DeclareWide PtrSafe Function PathParseIconLocation Lib "shlwapi" Alias "PathParseIconLocationW" (ByVal pszIconFile As String) As Long
Public Declare PtrSafe Sub PathQuoteSpacesA Lib "shlwapi" (ByVal lpsz As String)
Public Declare PtrSafe Sub PathQuoteSpacesW Lib "shlwapi" (ByVal lpsz As LongPtr)
Public DeclareWide PtrSafe Sub PathQuoteSpaces Lib "shlwapi" Alias "PathQuoteSpacesW" (ByVal lpsz As String)
Public Declare PtrSafe Function PathRelativePathToA Lib "shlwapi" (ByVal pszPath As String, ByVal pszFrom As String, ByVal dwAttrFrom As Long, ByVal pszTo As String, ByVal dwAttrTo As Long) As Long
Public Declare PtrSafe Function PathRelativePathToW Lib "shlwapi" (pszPath As LongPtr, ByVal pszFrom As LongPtr, ByVal dwAttrFrom As Long, ByVal pszTo As LongPtr, ByVal dwAttrTo As Long) As Long
Public DeclareWide PtrSafe Function PathRelativePathTo Lib "shlwapi" Alias "PathRelativePathToW" (ByVal pszPath As String, ByVal pszFrom As String, ByVal dwAttrFrom As Long, ByVal pszTo As String, ByVal dwAttrTo As Long) As Long
Public Declare PtrSafe Sub PathRemoveArgsA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveArgsW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathRemoveArgs Lib "shlwapi" Alias "PathRemoveArgsW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathRemoveBackslashA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathRemoveBackslash Lib "shlwapi" Alias "PathRemoveBackslashW" (ByVal pszPath As LongPtr) As LongPtr
Public Declare PtrSafe Sub PathRemoveBlanksA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveBlanksW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathRemoveBlanks Lib "shlwapi" Alias "PathRemoveBlanksW" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveExtensionA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathRemoveExtension Lib "shlwapi" Alias "PathRemoveExtensionW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathRemoveFileSpecA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathRemoveFileSpecW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathRemoveFileSpec Lib "shlwapi" Alias "PathRemoveFileSpecW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathRenameExtensionA Lib "shlwapi" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathRenameExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszExt As LongPtr) As Long
Public DeclareWide PtrSafe Function PathRenameExtension Lib "shlwapi" Alias "PathRenameExtensionW" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathSearchAndQualifyA Lib "shlwapi" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function PathSearchAndQualifyW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function PathSearchAndQualify Lib "shlwapi" Alias "PathSearchAndQualifyW" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Sub PathSetDlgItemPathA Lib "shlwapi" (ByVal hDlg As LongPtr, ByVal id As Long, ByVal pszPath As String)
Public Declare PtrSafe Sub PathSetDlgItemPathW Lib "shlwapi" (ByVal hDlg As LongPtr, ByVal id As Long, ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathSetDlgItemPath Lib "shlwapi" Alias "PathSetDlgItemPathW" (ByVal hDlg As LongPtr, ByVal id As Long, ByVal pszPath As String)
Public Declare PtrSafe Function PathSkipRootA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathSkipRoot Lib "shlwapi" Alias "PathSkipRootW" (ByVal pszPath As LongPtr) As LongPtr
Public Declare PtrSafe Sub PathStripPathA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathStripPathW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathStripPath Lib "shlwapi" Alias "PathStripPathW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathStripToRootA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathStripToRootW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathStripToRoot Lib "shlwapi" Alias "PathStripToRootW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Sub PathUnquoteSpacesA Lib "shlwapi" (ByVal lpsz As String)
Public Declare PtrSafe Sub PathUnquoteSpacesW Lib "shlwapi" (ByVal lpsz As LongPtr)
Public DeclareWide PtrSafe Sub PathUnquoteSpaces Lib "shlwapi" Alias "PathUnquoteSpacesW" (ByVal lpsz As String)
Public Declare PtrSafe Function PathMakeSystemFolderA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathMakeSystemFolderW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathMakeSystemFolder Lib "shlwapi" Alias "PathMakeSystemFolderW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathUnmakeSystemFolderA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathUnmakeSystemFolderW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathUnmakeSystemFolder Lib "shlwapi" Alias "PathUnmakeSystemFolderW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsSystemFolderA Lib "shlwapi" (ByVal pszPath As String, ByVal dwAttrb As Long) As Long
Public Declare PtrSafe Function PathIsSystemFolderW Lib "shlwapi" (ByVal pszPath As String, ByVal dwAttrb As Long) As Long
Public DeclareWide PtrSafe Function PathIsSystemFolder Lib "shlwapi" Alias "PathIsSystemFolderW" (ByVal pszPath As LongPtr, ByVal dwAttrb As Long) As Long
Public Declare PtrSafe Sub PathUndecorateA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathUndecorateW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathUndecorate Lib "shlwapi" Alias "PathUndecorateW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathUnExpandEnvStringsA Lib "shlwapi" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function PathUnExpandEnvStringsW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function PathUnExpandEnvStrings Lib "shlwapi" Alias "PathUnExpandEnvStringsW" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function UrlCompareA Lib "shlwapi" (ByVal psz1 As String, ByVal psz2 As String, ByVal fIgnoreSlash As Long) As Long
Public Declare PtrSafe Function UrlCompareW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr, ByVal fIgnoreSlash As Long) As Long
Public DeclareWide PtrSafe Function UrlCompare Lib "shlwapi"  Alias "UrlCompareW" (ByVal psz1 As String, ByVal psz2 As String, ByVal fIgnoreSlash As Long) As Long
Public Declare PtrSafe Sub UrlCombineA Lib "shlwapi" (ByVal pszBase As String, ByVal pszRelative As String, ByVal pszCombined As String, ByRef pcchCombined As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Sub UrlCombineW Lib "shlwapi" (ByVal pszBase As LongPtr, ByVal pszRelative As LongPtr, ByVal pszCombined As LongPtr, ByRef pcchCombined As Long, ByVal dwFlags As URL)
Public DeclareWide PtrSafe Sub UrlCombine Lib "shlwapi" Alias "UrlCombineW" (ByVal pszBase As String, ByVal pszRelative As String, ByVal pszCombined As String, ByRef pcchCombined As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Sub UrlCanonicalizeA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszCanonicalized As String, ByRef pcchCanonicalized As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Sub UrlCanonicalizeW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszCanonicalized As LongPtr, ByRef pcchCanonicalized As Long, ByVal dwFlags As URL)
Public DeclareWide PtrSafe Sub UrlCanonicalize Lib "shlwapi" Alias "UrlCanonicalizeW" (ByVal pszUrl As String, ByVal pszCanonicalized As String, ByRef pcchCanonicalized As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Function UrlIsOpaqueA Lib "shlwapi" (ByVal pszUrl As String) As Long
Public Declare PtrSafe Function UrlIsOpaqueW Lib "shlwapi" (ByVal pszUrl As LongPtr) As Long
Public DeclareWide PtrSafe Function UrlIsOpaque Lib "shlwapi" Alias "UrlIsOpaqueW" (ByVal pszUrl As String) As Long
Public Declare PtrSafe Function UrlIsNoHistoryA Lib "shlwapi" (ByVal pszUrl As String) As Long
Public Declare PtrSafe Function UrlIsNoHistoryW Lib "shlwapi" (ByVal pszUrl As LongPtr) As Long
Public DeclareWide PtrSafe Function UrlIsNoHistory Lib "shlwapi" Alias "UrlIsNoHistoryW" (ByVal pszUrl As String) As Long
Public Declare PtrSafe Function UrlIsA Lib "shlwapi" (ByVal pszUrl As String, ByVal URLIS As URLIS) As Long
Public Declare PtrSafe Function UrlIsW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal URLIS As URLIS) As Long
Public DeclareWide PtrSafe Function URLIs Lib "shlwapi" Alias "UrlIsW" (ByVal pszUrl As String, ByVal URLIS As URLIS) As Long
Public Declare PtrSafe Function UrlGetLocationA Lib "shlwapi" (ByVal psz1 As String) As LongPtr
Public Declare PtrSafe Function UrlGetLocationW Lib "shlwapi" (ByVal psz1 As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function UrlGetLocation Lib "shlwapi" Alias "UrlGetLocationW" (ByVal psz1 As String) As LongPtr
Public Declare PtrSafe Function UrlUnescapeA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszUnescaped As String, ByRef pcchUnescaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlUnescapeW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszUnescaped As LongPtr, ByRef pcchUnescaped As Long, ByVal dwFlags As URL) As Long
Public DeclareWide PtrSafe Function UrlUnescape Lib "shlwapi" Alias "UrlUnescapeW" (ByVal pszUrl As String, ByVal pszUnescaped As String, ByRef pcchUnescaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlEscapeA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszEscaped As String, ByRef pcchEscaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlEscapeW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszEscaped As LongPtr, ByRef pcchEscaped As Long, ByVal dwFlags As URL) As Long
Public DeclareWide PtrSafe Function UrlEscape Lib "shlwapi" Alias "UrlEscapeW" (ByVal pszUrl As String, ByVal pszEscaped As String, ByRef pcchEscaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlCreateFromPathA Lib "shlwapi" (ByVal pszPath As String, ByVal pszUrl As String, ByRef pcchUrl As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlCreateFromPathW Lib "shlwapi" (ByVal pszPath As String, ByVal pszUrl As String, ByRef pcchUrl As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function UrlCreateFromPath Lib "shlwapi" Alias "UrlCreateFromPathW" (ByVal pszPath As String, ByVal pszUrl As String, ByRef pcchUrl As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCreateFromUrlA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszPath As String, ByRef pcchPath As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCreateFromUrlW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszPath As LongPtr, ByRef pcchPath As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function PathCreateFromUrl Lib "shlwapi" Alias "PathCreateFromUrlW" (ByVal pszUrl As String, ByVal pszPath As String, ByRef pcchPath As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlHashA Lib "shlwapi" (ByVal pszUrl As String, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public Declare PtrSafe Function UrlHashW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public DeclareWide PtrSafe Function UrlHash Lib "shlwapi" Alias "UrlHashW" (ByVal pszUrl As String, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public Declare PtrSafe Function UrlGetPartW Lib "shlwapi" (ByVal pszIn As LongPtr, pszOut As LongPtr, ByRef pcchOut As Long, ByVal dwPart As URL_PART, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlGetPartA Lib "shlwapi" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwPart As URL_PART, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function UrlGetPart Lib "shlwapi"  Alias "UrlGetPartW" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwPart As URL_PART, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlApplySchemeA Lib "shlwapi" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwFlags As URL_APPLY) As Long
Public Declare PtrSafe Function UrlApplySchemeW Lib "shlwapi" (ByVal pszIn As LongPtr, pszOut As LongPtr, ByRef pcchOut As Long, ByVal dwFlags As URL_APPLY) As Long
Public DeclareWide PtrSafe Function UrlApplyScheme Lib "shlwapi" Alias "UrlApplySchemeW" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwFlags As URL_APPLY) As Long
Public Declare PtrSafe Function HashData Lib "shlwapi" (ByRef pbData As Byte, ByVal cbData As Long, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public Declare PtrSafe Function SHDeleteEmptyKeyA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public DeclareWide PtrSafe Function SHDeleteEmptyKey Lib "shlwapi" Alias "SHDeleteEmptyKeyW" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public Declare PtrSafe Function SHDeleteKeyA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public DeclareWide PtrSafe Function SHDeleteKey Lib "shlwapi" Alias "SHDeleteKeyW" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public Declare PtrSafe Function SHRegDuplicateHKey Lib "shlwapi" (ByVal hkey As LongPtr) As LongPtr
Public Declare PtrSafe Function SHDeleteValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String) As Long
Public DeclareWide PtrSafe Function SHDeleteValue Lib "shlwapi" Alias "SHDeleteValueW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String) As Long
Public Declare PtrSafe Function SHGetValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public DeclareWide PtrSafe Function SHGetValue Lib "shlwapi" Alias "SHGetValueW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByRef pdwType As Long, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHSetValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As Long, ByRef pvData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function SHSetValue Lib "shlwapi" Alias "SHSetValueW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As Long, ByRef pvData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SHQueryValueExA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszValue As String, ByRef pdwReserved As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public DeclareWide PtrSafe Function SHQueryValueEx Lib "shlwapi" Alias "SHQueryValueExW" (ByVal hkey As LongPtr, ByVal pszValue As String, ByRef pdwReserved As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHEnumKeyExA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszName As String, ByRef pcchName As Long) As Long
Public DeclareWide PtrSafe Function SHEnumKeyEx Lib "shlwapi" Alias "SHEnumKeyExW" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszName As String, ByRef pcchName As Long) As Long
Public Declare PtrSafe Function SHEnumValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public DeclareWide PtrSafe Function SHEnumValue Lib "shlwapi" Alias "SHEnumValueW" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHQueryInfoKeyA Lib "shlwapi" (ByVal hkey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long) As Long
Public DeclareWide PtrSafe Function SHQueryInfoKey Lib "shlwapi" Alias "SHQueryInfoKeyW" (ByVal hkey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long) As Long
Public Declare PtrSafe Function SHCopyKeyA Lib "shlwapi" (ByVal hkeySrc As Long, ByVal szSrcSubKey As String, ByVal hkeyDest As LongPtr, ByVal fReserved As Long) As Long
Public DeclareWide PtrSafe Function SHCopyKey Lib "shlwapi" Alias "SHCopyKeyW" (ByVal hkeySrc As Long, ByVal wszSrcSubKey As String, ByVal hkeyDest As LongPtr, ByVal fReserved As Long) As Long
Public Declare PtrSafe Function SHRegGetPathA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pszPath As String, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function SHRegGetPath Lib "shlwapi" Alias "SHRegGetPathW" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pszPath As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function SHRegSetPathA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pcszPath As String, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function SHRegSetPath Lib "shlwapi" Alias "SHRegSetPathW" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pcszPath As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function SHRegCreateUSKeyA Lib "shlwapi" (ByVal pszPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegCreateUSKey Lib "shlwapi" Alias "SHRegCreateUSKeyW" (ByVal pwzPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegOpenUSKeyA Lib "shlwapi" (ByVal pszPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal fIgnoreHKCU As Long) As Long
Public DeclareWide PtrSafe Function SHRegOpenUSKey Lib "shlwapi" Alias "SHRegOpenUSKeyW" (ByVal pwzPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal fIgnoreHKCU As Long) As Long
Public Declare PtrSafe Function SHRegQueryUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As String, ByRef pdwType As Long, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As Long, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public DeclareWide PtrSafe Function SHRegQueryUSValue Lib "shlwapi" Alias "SHRegQueryUSValueW" (ByVal hUSKey As LongPtr, ByVal pwzValue As String, ByRef pdwType As Long, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As Long, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public Declare PtrSafe Function SHRegWriteUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegWriteUSValue Lib "shlwapi" Alias "SHRegWriteUSValueW" (ByVal hUSKey As LongPtr, ByVal pwzValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegDeleteUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegDeleteEmptyUSKey Lib "shlwapi" Alias "SHRegDeleteEmptyUSKeyW" (ByVal hUSKey As LongPtr, ByVal pwzSubKey As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public Declare PtrSafe Function SHRegDeleteEmptyUSKeyA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszSubKey As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegDeleteUSValue Lib "shlwapi" Alias "SHRegDeleteUSValueW" (ByVal hUSKey As LongPtr, ByVal pwzValue As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public Declare PtrSafe Function SHRegEnumUSKeyA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszName As String, ByRef pcchName As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegEnumUSKey Lib "shlwapi" Alias "SHRegEnumUSKeyW" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pwzName As String, ByRef pcchName As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegEnumUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegEnumUSValue Lib "shlwapi" Alias "SHRegEnumUSValueW" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As Long, ByRef pvData As Any, ByRef pcbData As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegQueryInfoUSKeyA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegQueryInfoUSKey Lib "shlwapi" Alias "SHRegQueryInfoUSKeyW" (ByVal hUSKey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegCloseUSKey Lib "shlwapi" (ByVal hUSKey As LongPtr) As Long
Public Declare PtrSafe Function SHRegGetUSValueA Lib "shlwapi" (ByVal pszSubKey As String, ByVal pszValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As Long, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public DeclareWide PtrSafe Function SHRegGetUSValue Lib "shlwapi" Alias "SHRegGetUSValueW" (ByVal pwzSubKey As String, ByVal pwzValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As Long, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public Declare PtrSafe Function SHRegSetUSValueA Lib "shlwapi" (ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegSetUSValue Lib "shlwapi" Alias "SHRegSetUSValueW" (ByVal pwzSubKey As String, ByVal pwzValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegGetInt Lib "shlwapi" Alias "SHRegGetIntW" (ByVal hk As Long, ByVal pwzKey As String, ByVal iDefault As Long) As Long
Public Declare PtrSafe Function SHRegGetBoolUSValueA Lib "shlwapi" (ByVal pszSubKey As String, ByVal pszValue As String, ByVal fIgnoreHKCU As Long, ByVal fDefault As Long) As Long
Public DeclareWide PtrSafe Function SHRegGetBoolUSValue Lib "shlwapi" Alias "SHRegGetBoolUSValueW" (ByVal pszSubKey As String, ByVal pszValue As String, ByVal fIgnoreHKCU As Long, ByVal fDefault As Long) As Long
#If Win64 Then
Public Declare PtrSafe Function AssocCreate Lib "shlwapi" (clsid As UUID, ByRef riid As UUID, ByRef ppv As Any) As Long
#Else
Public Declare PtrSafe Function AssocCreate Lib "shlwapi" (ByVal clsid_data1 As Long, ByVal clsid_data23 As Long, ByVal clsid_data4_0123 As Long, ByVal clsid_data4_4567 As Long, ByRef riid As UUID, ByRef ppv As Any) As Long
#End If
Public Declare PtrSafe Function AssocQueryStringA Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszAssoc As String, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryStringW Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszAssoc As LongPtr, ByVal pszExtra As LongPtr, ByVal pszOut As LongPtr, ByRef pcchOut As Long) As Long
Public DeclareWide PtrSafe Function AssocQueryString Lib "shlwapi" Alias "AssocQueryStringW" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszAssoc As String, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryStringByKeyA Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal hkAssoc As LongPtr, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryStringByKeyW Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal hkAssoc As LongPtr, ByVal pszExtra As LongPtr, ByVal pszOut As LongPtr, ByRef pcchOut As Long) As Long
Public DeclareWide PtrSafe Function AssocQueryStringByKey Lib "shlwapi" Alias "AssocQueryStringByKeyW" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal hkAssoc As LongPtr, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryKeyA Lib "shlwapi" (ByVal flags As ASSOCF, ByVal key As ASSOCKEY, ByVal pszAssoc As String, ByVal pszExtra As String, ByRef phkeyOut As LongPtr) As Long
Public Declare PtrSafe Function AssocQueryKeyW Lib "shlwapi" (ByVal flags As ASSOCF, ByVal key As ASSOCKEY, ByVal pszAssoc As LongPtr, ByVal pszExtra As LongPtr, ByRef phkeyOut As LongPtr) As Long
Public DeclareWide PtrSafe Function AssocQueryKey Lib "shlwapi" Alias "AssocQueryKeyW" (ByVal flags As ASSOCF, ByVal key As ASSOCKEY, ByVal pszAssoc As String, ByVal pszExtra As String, ByRef phkeyOut As LongPtr) As Long
Public Declare PtrSafe Function SHOpenRegStreamA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHOpenRegStreamW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal grfMode As STGM) As IStream
Public DeclareWide PtrSafe Function SHOpenRegStream Lib "shlwapi" Alias "SHOpenRegStreamW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHOpenRegStream2A Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHOpenRegStream2W Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal grfMode As STGM) As IStream
Public DeclareWide PtrSafe Function SHOpenRegStream2 Lib "shlwapi" Alias "SHOpenRegStream2W" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHCreateStreamOnFileA Lib "shlwapi" (ByVal pszFile As String, ByVal grfMode As STGM, ppstm As IStream) As Long
Public Declare PtrSafe Function SHCreateStreamOnFileW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal grfMode As STGM, ppstm As IStream) As Long
Public DeclareWide PtrSafe Function SHCreateStreamOnFile Lib "shlwapi" Alias "SHCreateStreamOnFileW" (ByVal pszFile As String, ByVal grfMode As STGM, ppstm As IStream) As Long
Public Declare PtrSafe Function SHCreateStreamOnFileEx Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal grfMode As STGM, ByVal dwAttributes As FILE_ATTRIBUTES, ByVal fCreate As Long, ByVal pstmTemplate As IStream, ByRef ppstm As IStream) As Long
Public DeclareWide PtrSafe Function SHCreateMemStream Lib "shlwapi" (pInit As Any, ByVal cbInit As Long) As IStream
Public Declare PtrSafe Function SHAutoComplete Lib "shlwapi" (ByVal hwndEdit As LongPtr, ByVal dwFlags As SHACF) As Long
Public Declare PtrSafe Sub SHSetThreadRef Lib "shlwapi" (ByVal pUnk As stdole.IUnknown)
Public Declare PtrSafe Function SHGetThreadRef Lib "shlwapi" (ByVal ppunk As stdole.IUnknown) As Long
Public Declare PtrSafe Function SHSkipJunction Lib "shlwapi" (ByVal pbc As IBindCtx, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function SHCreateThread Lib "shlwapi" (ByVal pfnThreadProc As LongPtr, ByRef pData As Any, ByVal dwFlags As SHCT_FLAGS, ByVal pfnCallback As LongPtr) As Long
Public Declare PtrSafe Function SHCreateShellPalette Lib "shlwapi" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Sub ColorRGBToHLS Lib "shlwapi" (ByVal clrRGB As Long, ByRef pwHue As Integer, ByRef pwLuminance As Integer, ByRef pwSaturation As Integer)
Public Declare PtrSafe Function ColorHLSToRGB Lib "shlwapi" (ByVal wHue As Integer, ByVal wLuminance As Integer, ByVal wSaturation As Integer) As Long
Public Declare PtrSafe Function ColorAdjustLuma Lib "shlwapi" (ByVal clrRGB As Long, ByVal n As Long, ByVal fScale As Long) As Long
Public Declare PtrSafe Function SHMessageBoxCheck Lib "shlwapi" (ByVal hwnd As LongPtr, ByVal pszText As LongPtr, ByVal pszCaption As LongPtr, ByVal uType As MessageBoxFlags, iDefault As Long, ByVal pszRegVal As LongPtr) As MessageBoxResults
Public Declare PtrSafe Function SHSendMessageBroadcastA Lib "shlwapi" (ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SHSendMessageBroadcastW Lib "shlwapi" (ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SHSendMessageBroadcast Lib "shlwapi" Alias "SHSendMessageBroadcastW" (ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr


#End Region

#Region "kernel32"
'********************************************************************************
'kernel32.dll
Public Type MEMORYSTATUSEX
	dwLength As Long
	dwMemoryLoad As Long
	ullTotalPhys As LongLong
	ullAvailPhys As LongLong
	ullTotalPageFile As LongLong
	ullAvailPageFile As LongLong
	ullTotalVirtual As LongLong
	ullAvailVirtual As LongLong
	ullAvailExtendedVirtual As LongLong
End Type

Public Type MEMORYSTATUS
	dwLength As Long
	dwMemoryLoad As Long
	dwTotalPhys As Long
	dwAvailPhys As Long
	dwTotalPageFile As Long
	dwAvailPageFile As Long
	dwTotalVirtual As Long
	dwAvailVirtual As Long
End Type

Public Type CRITICAL_SECTION
    DebugInfo      As LongPtr
    LockCount       As Long
    RecursionCount  As Long
    OwningThread    As LongPtr
    LockSemaphore   As LongPtr
    SpinCount       As LongPtr
End Type

Public Enum ThreadAccess
    THREAD_DIRECT_IMPERSONATION = &H200
    THREAD_GET_CONTEXT = &H8
    THREAD_IMPERSONATE = &H100
    THREAD_QUERY_INFORMATION = &H40
    THREAD_QUERY_LIMITED_INFORMATION = &H800
    THREAD_SET_CONTEXT = &H10
    THREAD_SET_INFORMATION = &H20
    THREAD_SET_LIMITED_INFORMATION = &H400
    THREAD_SET_THREAD_TOKEN = &H80
    THREAD_SUSPEND_RESUME = &H2
    THREAD_TERMINATE = &H1
End Enum

Public Enum FormatMessageFlags
    FORMAT_MESSAGE_ALLOCATE_BUFFER = &H100
    FORMAT_MESSAGE_ARGUMENT_ARRAY = &H2000
    FORMAT_MESSAGE_FROM_HMODULE = &H800
    FORMAT_MESSAGE_FROM_STRING = &H400
    FORMAT_MESSAGE_FROM_SYSTEM = &H1000
    FORMAT_MESSAGE_IGNORE_INSERTS = &H200
    FORMAT_MESSAGE_MAX_WIDTH_MASK = &HFF
    FORMAT_MESSAGE_TEXT_LEN = 160 ' from ERRORS.H C++ include file.	
End Enum

Public Enum MemProtectFlags
    PAGE_NOACCESS = &H1
    PAGE_READONLY = &H2
    PAGE_READWRITE = &H4
    PAGE_WRITECOPY = &H8
    PAGE_EXECUTE = &H10
    PAGE_EXECUTE_READ = &H20
    PAGE_EXECUTE_READWRITE = &H40
    PAGE_EXECUTE_WRITECOPY = &H80
    PAGE_GUARD = &H100
    PAGE_NOCACHE = &H200
    PAGE_WRITECOMBINE = &H400
    PAGE_TARGETS_INVALID = &H40000000
    PAGE_TARGETS_NO_UPDATE = &H40000000
End Enum

Public Enum MemAllocType
	MEM_COMMIT = &H1000
    MEM_RESERVE = &H2000
    MEM_REPLACE_PLACEHOLDER = &H4000
    MEM_RESERVE_PLACEHOLDER = &H40000
    MEM_RESET = &H80000
    MEM_TOP_DOWN = &H100000
    MEM_WRITE_WATCH = &H200000
    MEM_PHYSICAL = &H400000
    MEM_ROTATE = &H800000
    MEM_DIFFERENT_IMAGE_BASE_OK = &H800000
    MEM_RESET_UNDO = &H1000000
    MEM_LARGE_PAGES = &H20000000
    MEM_4MB_PAGES = &H80000000
    MEM_64K_PAGES = (MEM_LARGE_PAGES Or MEM_PHYSICAL)
    MEM_UNMAP_WITH_TRANSIENT_BOOST = &H00000001
    MEM_COALESCE_PLACEHOLDERS = &H00000001
    MEM_PRESERVE_PLACEHOLDER = &H00000002
    MEM_DECOMMIT = &H00004000
    MEM_RELEASE = &H00008000&
    MEM_FREE = &H00010000
	MEM_PRIVATE  = &H00020000
	MEM_MAPPED  = &H00040000
	MEM_IMAGE = &H01000000
End Enum




Public Const STACK_SIZE_PARAM_IS_A_RESERVATION   = &H00010000

Public Const THREAD_DYNAMIC_CODE_ALLOW  = 1  ' Opt-out of dynamic code generation.
Public Const THREAD_BASE_PRIORITY_LOWRT  = 15  ' value that gets a thread to LowRealtime-1
Public Const THREAD_BASE_PRIORITY_MAX  = 2  ' maximum thread base priority boost
Public Const THREAD_BASE_PRIORITY_MIN  = (-2)  ' minimum thread base priority boost
Public Const THREAD_BASE_PRIORITY_IDLE  = (-15)  ' value that gets a thread to idle

Public Enum ThreadPriorityClasses
	THREAD_PRIORITY_LOWEST = THREAD_BASE_PRIORITY_MIN
	THREAD_PRIORITY_BELOW_NORMAL  = (THREAD_PRIORITY_LOWEST+1)
	THREAD_PRIORITY_NORMAL  = 0
	THREAD_PRIORITY_HIGHEST  = THREAD_BASE_PRIORITY_MAX
	THREAD_PRIORITY_ABOVE_NORMAL  = (THREAD_PRIORITY_HIGHEST-1)
	THREAD_PRIORITY_ERROR_RETURN  = (MAXLONG)
	THREAD_PRIORITY_TIME_CRITICAL  = THREAD_BASE_PRIORITY_LOWRT
	THREAD_PRIORITY_IDLE  = THREAD_BASE_PRIORITY_IDLE
	THREAD_MODE_BACKGROUND_BEGIN  = &H00010000
	THREAD_MODE_BACKGROUND_END  = &H00020000
End Enum

Public Const INFINITE As Long = -1

Public Enum HeapFlags
    HEAP_NO_SERIALIZE = &H1
    HEAP_GENERATE_EXCEPTIONS = &H4
    HEAP_ZERO_MEMORY = &H8
    HEAP_CREATE_ENABLE_EXECUTE = &H40000
End Enum

Public Type PROCESS_HEAP_ENTRY
	lpData As LongPtr
    cbData As Long
    cbOverhead As byte
    iRegionIndex As Byte
    wFlags As Integer
    'UNION: Copy the bytes in BlockOrRegion to PROCESS_HEAP_ENTRY_BLOCK or PROCESS_HEAP_ENTRY_REGION
    #If Win64 Then
    BlockOrRegion(23) As Byte
    #Else
    BlockOrRegion(15) As Byte
    #End If
End Type
Public Type PROCESS_HEAP_ENTRY_BLOCK
	hMem As LongPtr
    dwReserved(2) As Long
End Type
Public Type PROCESS_HEAP_ENTRY_REGION
	dwCommittedSize As Long
    dwUnCommittedSize As Long
    lpFirstBlock As LongPtr
    lpLastBlock As LongPtr
End Type

Public Enum HEAP_INFORMATION_CLASS
    HeapCompatibilityInformation = 0
    HeapEnableTerminationOnCorruption = 1
    HeapOptimizeResources = 3
End Enum

 
Public Enum FINDEX_SEARCH_OPS
    FindExSearchNameMatch
    FindExSearchLimitToDirectories
    FindExSearchLimitToDevices
End Enum
 
Public Enum FINDEX_INFO_LEVELS
    FindExInfoStandard
    FindExInfoBasic
    FindExInfoMaxInfoLevel
End Enum

Public Type BY_HANDLE_FILE_INFORMATION
    dwFileAttributes As Long                             
    ftCreationTime As FILETIME                    
    ftLastAccessTime As FILETIME                  
    ftLastWriteTime As FILETIME                   
    dwVolumeSerialNumber As Long                         
    nFileSizeHigh As Long                                
    nFileSizeLow As Long                                 
    nNumberOfLinks As Long                               
    nFileIndexHigh As Long                               
    nFileIndexLow As Long                                
End Type

Public Enum FILE_INFO_BY_HANDLE_CLASS
  FileBasicInfo
  FileStandardInfo
  FileNameInfo
  FileRenameInfo
  FileDispositionInfo
  FileAllocationInfo
  FileEndOfFileInfo
  FileStreamInfo
  FileCompressionInfo
  FileAttributeTagInfo
  FileIdBothDirectoryInfo
  FileIdBothDirectoryRestartInfo
  FileIoPriorityHintInfo
  FileRemoteProtocolInfo
  FileFullDirectoryInfo
  FileFullDirectoryRestartInfo
  FileStorageInfo
  FileAlignmentInfo
  FileIdInfo
  FileIdExtdDirectoryInfo
  FileIdExtdDirectoryRestartInfo
  FileDispositionInfoEx
  FileRenameInfoEx
  FileCaseSensitiveInfo
  FileNormalizedNameInfo
  MaximumFileInfoByHandleClass
End Enum

Public Enum STREAM_INFO_LEVELS
    FindStreamInfoStandard = 0                           
    FindStreamInfoMaxInfoLevel = 1                       
End Enum

Public Type WIN32_FIND_STREAM_DATA
    StreamSize As LARGE_INTEGER                   
    cStreamName(MAX_PATH + 35) As Integer                        
End Type    
Public Type WIN32_FIND_STREAM_DATAW
    StreamSize As LARGE_INTEGER                   
    cStreamName(MAX_PATH + 35) As Integer                        
End Type                                                 
Public Type WIN32_FIND_STREAM_DATAA
    StreamSize As LARGE_INTEGER                   
    cStreamName(MAX_PATH + 35) As Byte                        
End Type    

Public Enum GET_FILEEX_INFO_LEVELS
    GetFileExInfoStandard = 0
    GetFileExMaxInfoLevel = 1                            
End Enum

Public Enum FINDEX_EXTRA_FLAGS
    FIND_FIRST_EX_CASE_SENSITIVE = 1
    FIND_FIRST_EX_LARGE_FETCH = 2
End Enum

Public Type FILE_BASIC_INFO
    CreationTime As LARGE_INTEGER                 
    LastAccessTime As LARGE_INTEGER               
    LastWriteTime As LARGE_INTEGER                
    ChangeTime As LARGE_INTEGER                   
    FileAttributes As Long                               
End Type
Public Type FILE_STANDARD_INFO
    AllocationSize As QLARGE_INTEGER
    EndOfFile As QLARGE_INTEGER
    NumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type



  
Public Enum GMEM
	GMEM_FIXED = &H0000
	GMEM_MOVEABLE = &H0002
	GMEM_NOCOMPACT = &H0010
	GMEM_NODISCARD = &H0020
	GMEM_ZEROINIT = &H0040
	GMEM_MODIFY = &H0080
	GMEM_DISCARDABLE = &H0100
	GMEM_NOT_BANKED = &H1000
	GMEM_SHARE = &H2000
	GMEM_DDESHARE = &H2000
	GMEM_NOTIFY = &H4000
	GMEM_LOWER = &H1000
	GMEM_VALID_FLAGS = &H7F72
	GMEM_INVALID_HANDLE = &H8000&
	GHND = GMEM_MOVEABLE Or GMEM_ZEROINIT
	GPTR = GMEM_FIXED Or GMEM_ZEROINIT
	GMEM_DISCARDED = &H4000
	GMEM_LOCKCOUNT = &H00FF
End Enum

Public Enum LMEM
    LMEM_FIXED = 0
    LMEM_MOVEABLE = &H2
    LHND = &H42
    LMEM_ZEROINIT = &H40
    LPTR = &H40
    NONZEROLHND = LMEM_MOVEABLE
    NONZEROLPTR = LMEM_FIXED
End Enum


Public Enum TH32CS_Flags
    TH32CS_SNAPHEAPLIST = &H1
    TH32CS_SNAPPROCESS = &H2
    TH32CS_SNAPTHREAD = &H4
    TH32CS_SNAPMODULE = &H8
    TH32CS_SNAPALL = (TH32CS_SNAPHEAPLIST Or TH32CS_SNAPPROCESS Or TH32CS_SNAPTHREAD Or TH32CS_SNAPMODULE)
    TH32CS_INHERIT = &H80000000
End Enum

Public Enum PriorityClass
    NORMAL_PRIORITY_CLASS = &H20
    IDLE_PRIORITY_CLASS = &H40
    HIGH_PRIORITY_CLASS = &H80
    REALTIME_PRIORITY_CLASS = &H100
    BELOW_NORMAL_PRIORITY_CLASS = &H4000
    ABOVE_NORMAL_PRIORITY_CLASS = &H8000&
    PROCESS_MODE_BACKGROUND_BEGIN = &H100000
    PROCESS_MODE_BACKGROUND_END = &H200000
End Enum

Public Type THREADENTRY32
    dwSize As Long
    cntUsage As Long
    th32ThreadID As Long
    th32OwnerProcessID As Long
    tpBasePri As Long
    tpDeltaPri As Long
    dwFlags As Long
End Type

Public Type PROCESSENTRY32W
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Integer
End Type

Public Type UNICODE_STRING
    uLength As Integer
    uMaximumLength As Integer
    pBuffer As LongPtr
End Type

Public Enum PROCESSINFOCLASS
    ProcessBasicInformation = &H00
    ProcessQuotaLimits = &H01
    ProcessIoCounters = &H02
    ProcessVmCounters = &H03
    ProcessTimes = &H04
    ProcessBasePriority = &H05
    ProcessRaisePriority = &H06
    ProcessDebugPort = &H07
    ProcessExceptionPort = &H08
    ProcessAccessToken = &H09
    ProcessLdtInformation = &H0A
    ProcessLdtSize = &H0B
    ProcessDefaultHardErrorMode = &H0C
    ProcessIoPortHandlers = &H0D
    ProcessPooledUsageAndLimits = &H0E
    ProcessWorkingSetWatch = &H0F
    ProcessUserModeIOPL = &H10
    ProcessEnableAlignmentFaultFixup = &H11
    ProcessPriorityClass = &H12
    ProcessWx86Information = &H13
    ProcessHandleCount = &H14
    ProcessAffinityMask = &H15
    ProcessPriorityBoost = &H16
    ProcessDeviceMap = &H17
    ProcessSessionInformation = &H18
    ProcessForegroundInformation = &H19
    ProcessWow64Information = &H1A
    ProcessImageFileName = &H1B
    ProcessLUIDDeviceMapsEnabled = &H1C
    ProcessBreakOnTermination = &H1D
    ProcessDebugObjectHandle = &H1E
    ProcessDebugFlags = &H1F
    ProcessHandleTracing = &H20
    ProcessIoPriority = &H21
    ProcessExecuteFlags = &H22
    ProcessResourceManagement = &H23
    ProcessCookie = &H24
    ProcessImageInformation = &H25
    ProcessCycleTime = &H26
    ProcessPagePriority = &H27
    ProcessInstrumentationCallback = &H28
    ProcessThreadStackAllocation = &H29
    ProcessWorkingSetWatchEx = &H2A
    ProcessImageFileNameWin32 = &H2B
    ProcessImageFileMapping = &H2C
    ProcessAffinityUpdateMode = &H2D
    ProcessMemoryAllocationMode = &H2E
    ProcessGroupInformation = &H2F
    ProcessTokenVirtualizationEnabled = &H30
    ProcessConsoleHostProcess = &H31
    ProcessWindowInformation = &H32
    ProcessHandleInformation = &H33
    ProcessMitigationPolicy = &H34
    ProcessDynamicFunctionTableInformation = &H35
    ProcessHandleCheckingMode = &H36
    ProcessKeepAliveCount = &H37
    ProcessRevokeFileHandles = &H38
    ProcessWorkingSetControl = &H39
    ProcessHandleTable = &H3A
    ProcessCheckStackExtentsMode = &H3B
    ProcessCommandLineInformation = &H3C
    ProcessProtectionInformation = &H3D
    ProcessMemoryExhaustion = &H3E
    ProcessFaultInformation = &H3F
    ProcessTelemetryIdInformation = &H40
    ProcessCommitReleaseInformation = &H41
    ProcessDefaultCpuSetsInformation = &H42
    ProcessAllowedCpuSetsInformation = &H43
    ProcessSubsystemProcess = &H44
    ProcessJobMemoryInformation = &H45
    ProcessInPublic = &H46
    ProcessRaiseUMExceptionOnInvalidHandleClose = &H47
    ProcessIumChallengeResponse = &H48
    ProcessChildProcessInformation = &H49
    ProcessHighGraphicsPriorityInformation = &H4A
    ProcessSubsystemInformation = &H4B
    ProcessEnergyValues = &H4C
    ProcessActivityThrottleState = &H4D
    ProcessActivityThrottlePolicy = &H4E
    ProcessWin32kSyscallFilterInformation = &H4F
    ProcessDisableSystemAllowedCpuSets = &H50
    ProcessWakeInformation = &H51
    ProcessEnergyTrackingState = &H52
    ProcessManageWritesToExecutableMemory = &H53
    ProcessCaptureTrustletLiveDump = &H54
    ProcessTelemetryCoverage = &H55
    ProcessEnclaveInformation = &H56
    ProcessEnableReadWriteVmLogging = &H57
    ProcessUptimeInformation = &H58
    ProcessImageSection = &H59
    ProcessDebugAuthInformation = &H5A
    ProcessSystemResourceManagement = &H5B
    ProcessSequenceNumber = &H5C
    ProcessLoaderDetour = &H5D
    ProcessSecurityDomainInformation = &H5E
    ProcessCombineSecurityDomainsInformation = &H5F
    ProcessEnableLogging = &H60
    ProcessLeapSecondInformation = &H61
    ProcessFiberShadowStackAllocation = &H62
    ProcessFreeFiberShadowStackAllocation = &H63
    MaxProcessInfoClass = &H64
End Enum
Public Type PROCESS_BASIC_INFORMATION
    ExitStatus                      As Long
    Reserved0                       As Long
    PebBaseAddress                  As LongPtr
    AffinityMask                    As LongPtr
    BasePriority                    As Long
    Reserved1                       As Long
    uUniqueProcessId                As LongPtr
    uInheritedFromUniqueProcessId   As LongPtr
End Type
Public Type RTL_DRIVE_LETTER_CURDIR
    Flags As Integer
    Length As Integer
    TimeStamp As Long
    DosPath As UNICODE_STRING
End Type
Public Type CURDIR
	DosPath As UNICODE_STRING
    Handle As LongPtr
End Type
Public Type LIST_ENTRY
    Flink As LongPtr
    Blink As LongPtr
End Type
Public Type SLIST_HEADER
	Alignment As LongLong
End Type

[Description("NtGlobalFlag flags. Flags for all versions from 3.51+ are included; it's up to you to know which are applicable for the current PEB version.")]
Public Enum NTGLB_Flags
    FLG_STOP_ON_EXCEPTION           = &H00000001
    FLG_SHOW_LDR_SNAPS              = &H00000002
    FLG_DEBUG_INITIAL_COMMAND       = &H00000004
    FLG_STOP_ON_HUNG_GUI            = &H00000008
    FLG_HEAP_ENABLE_TAIL_CHECK      = &H00000010
    FLG_HEAP_ENABLE_FREE_CHECK      = &H00000020
    FLG_HEAP_VALIDATE_PARAMETERS    = &H00000040
    FLG_HEAP_VALIDATE_ALL           = &H00000080
    FLG_POOL_ENABLE_TAIL_CHECK      = &H00000100 '3.51 to 5.0
    FLG_APPLICATION_VERIFIER        = &H00000100 '5.1+
    FLG_MONITOR_SILENT_PROCESS_EXIT = &H00000200 '6.1+ only
    FLG_POOL_ENABLE_TAGGING         = &H00000400
    FLG_HEAP_ENABLE_TAGGING         = &H00000800
    FLG_USER_STACK_TRACE_DB         = &H00001000
    FLG_KERNEL_STACK_TRACE_DB       = &H00002000
    FLG_MAINTAIN_OBJECT_TYPELIST    = &H00004000
    FLG_HEAP_ENABLE_TAG_BY_DLL      = &H00008000&
    FLG_IGNORE_DEBUG_PRIV           = &H00010000 '3.51 to 4.0
    FLG_DISABLE_STACK_EXTENSION     = &H00010000 '5.1+(5.0 is undef)
    FLG_ENABLE_CSRDEBUG             = &H00020000
    FLG_ENABLE_KDEBUG_SYMBOL_LOAD   = &H00040000
    FLG_DISABLE_PAGE_KERNEL_STACKS  = &H00080000
    FLG_HEAP_ENABLE_CALL_TRACING    = &H00100000 '3.51 to 4.0
    FLG_ENABLE_SYSTEM_CRIT_BREAKS   = &H00100000 '5.1+ (5.0 is undef)
    FLG_HEAP_DISABLE_COALESCING     = &H00200000
    FLG_ENABLE_CLOSE_EXCEPTIONS     = &H00400000 '4.0+
    FLG_ENABLE_EXCEPTION_LOGGING    = &H00800000 '4.0+
    FLG_ENABLE_HANDLE_TYPE_TAGGING  = &H01000000 '4.0+
    FLG_HEAP_PAGE_ALLOCS            = &H02000000 '4.0+
    FLG_DEBUG_INITIAL_COMMAND_EX    = &H04000000 '4.0+
    FLG_DISABLE_DBGPRINT            = &H08000000 '5.0+
    FLG_CRITSEC_EVENT_CREATION      = &H10000000 '5.0+
    FLG_LDR_TOP_DOWN                = &H20000000 '5.1-6.2
    FLG_STOP_ON_UNHANDLED_EXCEPTION = &H20000000 '6.3+
    FLG_ENABLE_HANDLE_EXCEPTIONS = &H40000000 '5.1+
    FLG_DISABLE_PROTDLLS            = &H80000000& '5.0+
End Enum

#Region "PEB/UPP"
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows XP and Server 2003 and above.") ]
Public Type RTL_USER_PROCESS_PARAMETERS_XP
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows Vista or higher") ]
Public Type RTL_USER_PROCESS_PARAMETERS
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 7+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN7
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 8+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN8
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 10+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 10 Redstone 5 1809+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_R5
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 10 19H1 1903+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_19H1
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 10 20H1 2004+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_20H1
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
    DefaultThreadpoolThreadMaximum As Long
End Type
[ Description ("RTL_USER_PROCESS_PARAMETERS for Windows 11 21H2+") ]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN11_21H2
    MaximumLength As Long
    Length As Long
    Flags As Long
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As Long
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As Long
    WindowFlags As Long
    ShowWindowFlags As Long
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
    DefaultThreadpoolThreadMaximum As Long
    HeapMemoryTypeMask As Long
End Type


Public Type PEB_XP
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    SparePtr2 As LongPtr
    EnvironmentUpdateCount As Long
    KernelCallbackTable As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    ReadOnlySharedMemoryHeap As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    #If Win64 Then
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    #End If
End Type

[Description("PEB for Windows Vista and Server 2003") ]
Public Type PEB_VISTA 'Also 2003
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr 'Invalid in SP2
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    HotpatchInformation As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr 'ActiveProcessAffinityMask in SP2
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
End Type
[Description("PEB for Windows 7 and Server 2008") ]
Public Type PEB_WIN7
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    HotpatchInformation As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pContextData As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
End Type
[Description("PEB for Windows 8, 8.1, Server 2012, and Windows 10 Threshold 1") ]
Public Type PEB_WIN8
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SparePvoid0 As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
End Type

[ Description ("PEB for Windows 10 Threshold 2 through Redstone 2") ]
Public Type PEB_WIN10_T2
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SparePvoid0 As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
End Type

[Description ("PEB for Windows Windows 10 Redstone 3/1703 Creators Update") ]
Public Type PEB_WIN10_R3
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
End Type
[Description ("PEB for Windows Windows 10 Redstone 4/1803 Spring Creators Update") ]
Public Type PEB_WIN10_R4
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
End Type
[ Description ("PEB for Windows Windows 10 Redstone 5/1809 October Update through Windows 10 21H2/2110") ]
Public Type PEB_WIN10_R5
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As Long
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
    LeapSecondData As LongPtr
    LeapSecondFlagsOrSixtySecondEnabled As Long
    NtGlobalFlag2 As Long
End Type
[ Description ("PEB for Windows Windows 11 Insider Preview through Windows 11 22H2. Not verified on versions after that.") ]
Public Type PEB_WIN11
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS, what we're primarily interested in.
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As Long
    CriticalSectionTimeout As QLARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long	
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    EcCodeBitMap As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
    LeapSecondData As LongPtr
    LeapSecondFlagsOrSixtySecondEnabled As Long
    NtGlobalFlag2 As Long
    ExtendedFeatureDisableMask As Long
End Type
#End Region

Public Enum VersionOSFlags
	VOS_UNKNOWN  = &H00000000
	VOS_DOS  = &H00010000
	VOS_OS216  = &H00020000
	VOS_OS232  = &H00030000
	VOS_NT  = &H00040000
	VOS_WINCE  = &H00050000
	VOS__BASE  = &H00000000
	VOS__WINDOWS16  = &H00000001
	VOS__PM16  = &H00000002
	VOS__PM32  = &H00000003
	VOS__WINDOWS32  = &H00000004
	VOS_DOS_WINDOWS16  = &H00010001
	VOS_DOS_WINDOWS32  = &H00010004
	VOS_OS216_PM16  = &H00020002
	VOS_OS232_PM32  = &H00030003
	VOS_NT_WINDOWS32  = &H00040004
End Enum
Public Enum VersionFileFlags
	VS_FF_DEBUG  = &H00000001
	VS_FF_PRERELEASE  = &H00000002
	VS_FF_PATCHED  = &H00000004
	VS_FF_PRIVATEBUILD  = &H00000008
	VS_FF_INFOINFERRED  = &H00000010
	VS_FF_SPECIALBUILD = &H00000020
End Enum
Public Const VS_FFI_STRUCVERSION  = &H00010000
Public Const VS_FFI_FILEFLAGSMASK  = &H0000003F
Public Enum VersionFileTypes
	VFT_UNKNOWN  = &H00000000
	VFT_APP  = &H00000001
	VFT_DLL  = &H00000002
	VFT_DRV  = &H00000003
	VFT_FONT  = &H00000004
	VFT_VXD  = &H00000005
	VFT_STATIC_LIB  = &H00000007
End Enum
Public Enum VersionFileSubTypes
/* ----- VS_VERSION.dwFileType ----- */
	VFT2_UNKNOWN = &H00000000
	VFT2_DRV_PRINTER  = &H00000001
	VFT2_DRV_KEYBOARD  = &H00000002
	VFT2_DRV_LANGUAGE  = &H00000003
	VFT2_DRV_DISPLAY  = &H00000004
	VFT2_DRV_MOUSE  = &H00000005
	VFT2_DRV_NETWORK  = &H00000006
	VFT2_DRV_SYSTEM  = &H00000007
	VFT2_DRV_INSTALLABLE  = &H00000008
	VFT2_DRV_SOUND  = &H00000009
	VFT2_DRV_COMM  = &H0000000A
	VFT2_DRV_INPUTMETHOD  = &H0000000B
	VFT2_DRV_VERSIONED_PRINTER  = &H0000000C
/* ----- VS_VERSION.dwFileSubtype for VFT_WINDOWS_DRV ----- */
	VFT2_FONT_RASTER  = &H00000001
	VFT2_FONT_VECTOR  = &H00000002
	VFT2_FONT_TRUETYPE  = &H00000003
End Enum
Public Type VS_FIXEDFILEINFO
   dwSignature As Long
   dwStrucVersionl As Integer   ' e.g. = &h0000 = 0
   dwStrucVersionh As Integer   ' e.g. = &h0042 = .42
   dwFileVersionMSl As Integer   ' e.g. = &h0003 = 3
   dwFileVersionMSh As Integer   ' e.g. = &h0075 = .75
   dwFileVersionLSl As Integer   ' e.g. = &h0000 = 0
   dwFileVersionLSh As Integer   ' e.g. = &h0031 = .31
   dwProductVersionMSl As Integer   ' e.g. = &h0003 = 3
   dwProductVersionMSh As Integer   ' e.g. = &h0010 = .1
   dwProductVersionLSl As Integer   ' e.g. = &h0000 = 0
   dwProductVersionLSh As Integer   ' e.g. = &h0031 = .31
   dwFileFlagsMask As Long   ' = &h3F for version "0.42"
   dwFileFlags As VersionFileFlags   ' e.g. VFF_DEBUG Or VFF_PRERELEASE
   dwFileOS As VersionOSFlags   ' e.g. VOS_DOS_WINDOWS16
   dwFileType As VersionFileTypes   ' e.g. VFT_DRIVER
   dwFileSubtype As VersionFileSubTypes   ' e.g. VFT2_DRV_KEYBOARD
   dwFileDateMS As Long   ' e.g. 0
   dwFileDateLS As Long   ' e.g. 0
End Type
Public Type VS_VERSIONINFO_FIXED_PORTION
    wLength As Integer
    wValueLength As Integer
    wType As Integer
    szKey(1 To 16) As Integer   'Unicode "VS_VERSION_INFO" & vbNullChar.
    Padding1(1 To 1) As Integer 'Pad next field to DWORD boundary.
    Value As VS_FIXEDFILEINFO
End Type

Public Enum COMPARE_FLAGS
    SORT_STRINGSORT = &H1000&
    SORT_DIGITSASNUMBERS = &H8          'Sort 1 2 10 instead of 1 10 2
    LINGUISTIC_IGNORECASE = &H10&
    LINGUISTIC_IGNOREDIACRITIC = &H20&
    NORM_IGNORECASE = &H1&
    NORM_IGNORENONSPACE = &H2&
    NORM_IGNORESYMBOLS = &H4&
    NORM_IGNOREKANATYPE = &H10000
    NORM_IGNOREWIDTH = &H20000
    NORM_LINGUISTIC_CASING = &H8000000
End Enum
Public Enum CSTR_RETURNS
    CSTR_FAIL = 0&
    CSTR_LESS_THAN = 1&
    CSTR_EQUAL = 2&
    CSTR_GREATER_THAN = 3&
End Enum
Public Const LOCALE_NAME_INVARIANT As String = ""
Public Const LOCALE_NAME_USER_DEFAULT As String = vbNullString
Public Const LOCALE_NAME_SYSTEM_DEFAULT As String = "!x-sys-default-locale"

Public Enum DefaultLocales
	LOCALE_CUSTOM_DEFAULT     = &H0c00
	LOCALE_CUSTOM_UI_DEFAULT  = &H1400
	LOCALE_CUSTOM_UNSPECIFIED = &H1000
	LOCALE_INVARIANT = &H007f
	LOCALE_USER_DEFAULT       = &H0400
	LOCALE_SYSTEM_DEFAULT     = &H0800
End Enum
Public Enum LCTypes
	LOCALE_NOUSEROVERRIDE  = &H80000000  ' Not Recommended - do not use user overrides
	LOCALE_USE_CP_ACP  = &H40000000  ' DEPRECATED, call Unicode APIs instead: use the system ACP
' #if(WINVER >= 0x0400)
	LOCALE_RETURN_NUMBER  = &H20000000  ' return number instead of string
' #endif /* WINVER >= 0x0400 */
' #if (WINVER >= _WIN32_WINNT_WIN7)
	LOCALE_RETURN_GENITIVE_NAMES  = &H10000000  'Flag to return the Genitive forms of month names
	LOCALE_ALLOW_NEUTRAL_NAMES  = &H08000000  'Flag to allow returning neutral names/lcids for name conversion
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
'   The following LCTypes are mutually exclusive in that they may NOT
'   be used in combination with each other.
'  These are the various forms of the name of the locale:
	LOCALE_SLOCALIZEDDISPLAYNAME  = &H00000002  ' localized name of locale, eg "German (Germany)" in UI language
' #if (WINVER >= _WIN32_WINNT_WIN7)
	LOCALE_SENGLISHDISPLAYNAME  = &H00000072  ' Display name (language + country/region usually) in English, eg "German (Germany)"
	LOCALE_SNATIVEDISPLAYNAME  = &H00000073  ' Display name in native locale language, eg "Deutsch (Deutschland)
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_VISTA)
	LOCALE_SLOCALIZEDLANGUAGENAME  = &H0000006f  ' Language Display Name for a language, eg "German" in UI language
' #endif //(WINVER >= _WIN32_WINNT_VISTA)
	LOCALE_SENGLISHLANGUAGENAME  = &H00001001  ' English name of language, eg "German"
	LOCALE_SNATIVELANGUAGENAME  = &H00000004  ' native name of language, eg "Deutsch"
	LOCALE_SLOCALIZEDCOUNTRYNAME  = &H00000006  ' localized name of country/region, eg "Germany" in UI language
	LOCALE_SENGLISHCOUNTRYNAME  = &H00001002  ' English name of country/region, eg "Germany"
	LOCALE_SNATIVECOUNTRYNAME  = &H00000008  ' native name of country/region, eg "Deutschland"
'  Additional LCTypes
	LOCALE_IDIALINGCODE  = &H00000005  ' country/region dialing code, example: en-US and en-CA return 1.
	LOCALE_SLIST  = &H0000000C  ' list item separator, eg "," for "1,2,3,4"
	LOCALE_IMEASURE  = &H0000000D  ' 0 = metric, 1 = US measurement system
	LOCALE_SDECIMAL  = &H0000000E  ' decimal separator, eg "." for 1,234.00
	LOCALE_STHOUSAND  = &H0000000F  ' thousand separator, eg "," for 1,234.00
	LOCALE_SGROUPING  = &H00000010  ' digit grouping, eg "3;0" for 1,000,000
	LOCALE_IDIGITS  = &H00000011  ' number of fractional digits eg 2 for 1.00
	LOCALE_ILZERO  = &H00000012  ' leading zeros for decimal, 0 for .97, 1 for 0.97
	LOCALE_INEGNUMBER  = &H00001010  ' negative number mode, 0-4, see documentation
	LOCALE_SNATIVEDIGITS  = &H00000013  ' native digits for 0-9, eg "0123456789"
	LOCALE_SCURRENCY  = &H00000014  ' local monetary symbol, eg "$"
	LOCALE_SINTLSYMBOL  = &H00000015  ' intl monetary symbol, eg "USD"
	LOCALE_SMONDECIMALSEP  = &H00000016  ' monetary decimal separator, eg "." for $1,234.00
	LOCALE_SMONTHOUSANDSEP  = &H00000017  ' monetary thousand separator, eg "," for $1,234.00
	LOCALE_SMONGROUPING  = &H00000018  ' monetary grouping, eg "3;0" for $1,000,000.00
	LOCALE_ICURRDIGITS  = &H00000019  ' # local monetary digits, eg 2 for $1.00
	LOCALE_ICURRENCY  = &H0000001B  ' positive currency mode, 0-3, see documentation
	LOCALE_INEGCURR  = &H0000001C  ' negative currency mode, 0-15, see documentation
	LOCALE_SSHORTDATE  = &H0000001F  ' short date format string, eg "MM/dd/yyyy"
	LOCALE_SLONGDATE  = &H00000020  ' long date format string, eg "dddd, MMMM dd, yyyy"
	LOCALE_STIMEFORMAT  = &H00001003  ' time format string, eg "HH:mm:ss"
	LOCALE_SAM  = &H00000028  ' AM designator, eg "AM"
	LOCALE_SPM  = &H00000029  ' PM designator, eg "PM"
	LOCALE_ICALENDARTYPE  = &H00001009  ' type of calendar specifier, eg CAL_GREGORIAN
	LOCALE_IOPTIONALCALENDAR  = &H0000100B  ' additional calendar types specifier, eg CAL_GREGORIAN_US
	LOCALE_IFIRSTDAYOFWEEK  = &H0000100C  ' first day of week specifier, 0-6, 0=Monday, 6=Sunday
	LOCALE_IFIRSTWEEKOFYEAR  = &H0000100D  ' first week of year specifier, 0-2, see documentation
	LOCALE_SDAYNAME1  = &H0000002A  ' long name for Monday
	LOCALE_SDAYNAME2  = &H0000002B  ' long name for Tuesday
	LOCALE_SDAYNAME3  = &H0000002C  ' long name for Wednesday
	LOCALE_SDAYNAME4  = &H0000002D  ' long name for Thursday
	LOCALE_SDAYNAME5  = &H0000002E  ' long name for Friday
	LOCALE_SDAYNAME6  = &H0000002F  ' long name for Saturday
	LOCALE_SDAYNAME7  = &H00000030  ' long name for Sunday
	LOCALE_SABBREVDAYNAME1  = &H00000031  ' abbreviated name for Monday
	LOCALE_SABBREVDAYNAME2  = &H00000032  ' abbreviated name for Tuesday
	LOCALE_SABBREVDAYNAME3  = &H00000033  ' abbreviated name for Wednesday
	LOCALE_SABBREVDAYNAME4  = &H00000034  ' abbreviated name for Thursday
	LOCALE_SABBREVDAYNAME5  = &H00000035  ' abbreviated name for Friday
	LOCALE_SABBREVDAYNAME6  = &H00000036  ' abbreviated name for Saturday
	LOCALE_SABBREVDAYNAME7  = &H00000037  ' abbreviated name for Sunday
	LOCALE_SMONTHNAME1  = &H00000038  ' long name for January
	LOCALE_SMONTHNAME2  = &H00000039  ' long name for February
	LOCALE_SMONTHNAME3  = &H0000003A  ' long name for March
	LOCALE_SMONTHNAME4  = &H0000003B  ' long name for April
	LOCALE_SMONTHNAME5  = &H0000003C  ' long name for May
	LOCALE_SMONTHNAME6  = &H0000003D  ' long name for June
	LOCALE_SMONTHNAME7  = &H0000003E  ' long name for July
	LOCALE_SMONTHNAME8  = &H0000003F  ' long name for August
	LOCALE_SMONTHNAME9  = &H00000040  ' long name for September
	LOCALE_SMONTHNAME10  = &H00000041  ' long name for October
	LOCALE_SMONTHNAME11  = &H00000042  ' long name for November
	LOCALE_SMONTHNAME12  = &H00000043  ' long name for December
	LOCALE_SMONTHNAME13  = &H0000100E  ' long name for 13th month (if exists)
	LOCALE_SABBREVMONTHNAME1  = &H00000044  ' abbreviated name for January
	LOCALE_SABBREVMONTHNAME2  = &H00000045  ' abbreviated name for February
	LOCALE_SABBREVMONTHNAME3  = &H00000046  ' abbreviated name for March
	LOCALE_SABBREVMONTHNAME4  = &H00000047  ' abbreviated name for April
	LOCALE_SABBREVMONTHNAME5  = &H00000048  ' abbreviated name for May
	LOCALE_SABBREVMONTHNAME6  = &H00000049  ' abbreviated name for June
	LOCALE_SABBREVMONTHNAME7  = &H0000004A  ' abbreviated name for July
	LOCALE_SABBREVMONTHNAME8  = &H0000004B  ' abbreviated name for August
	LOCALE_SABBREVMONTHNAME9  = &H0000004C  ' abbreviated name for September
	LOCALE_SABBREVMONTHNAME10  = &H0000004D  ' abbreviated name for October
	LOCALE_SABBREVMONTHNAME11  = &H0000004E  ' abbreviated name for November
	LOCALE_SABBREVMONTHNAME12  = &H0000004F  ' abbreviated name for December
	LOCALE_SABBREVMONTHNAME13  = &H0000100F  ' abbreviated name for 13th month (if exists)
	LOCALE_SPOSITIVESIGN  = &H00000050  ' positive sign, eg ""
	LOCALE_SNEGATIVESIGN  = &H00000051  ' negative sign, eg "-"
	LOCALE_IPOSSIGNPOSN  = &H00000052  ' positive sign position (derived from INEGCURR)
	LOCALE_INEGSIGNPOSN  = &H00000053  ' negative sign position (derived from INEGCURR)
	LOCALE_IPOSSYMPRECEDES  = &H00000054  ' mon sym precedes pos amt (derived from ICURRENCY)
	LOCALE_IPOSSEPBYSPACE  = &H00000055  ' mon sym sep by space from pos amt (derived from ICURRENCY)
	LOCALE_INEGSYMPRECEDES  = &H00000056  ' mon sym precedes neg amt (derived from INEGCURR)
	LOCALE_INEGSEPBYSPACE  = &H00000057  ' mon sym sep by space from neg amt (derived from INEGCURR)
' #if(WINVER >= 0x0400)
	LOCALE_FONTSIGNATURE  = &H00000058  ' font signature
	LOCALE_SISO639LANGNAME  = &H00000059  ' ISO abbreviated language name, eg "en"
	LOCALE_SISO3166CTRYNAME  = &H0000005A  ' ISO abbreviated country/region name, eg "US"
' #endif /* WINVER >= 0x0400 */
' #if(WINVER >= 0x0500)
	LOCALE_IPAPERSIZE  = &H0000100A  ' 1 = letter, 5 = legal, 8 = a3, 9 = a4
	LOCALE_SENGCURRNAME  = &H00001007  ' english name of currency, eg "Euro"
	LOCALE_SNATIVECURRNAME  = &H00001008  ' native name of currency, eg "euro"
	LOCALE_SYEARMONTH  = &H00001006  ' year month format string, eg "MM/yyyy"
	LOCALE_SSORTNAME  = &H00001013  ' sort name, usually "", eg "Dictionary" in UI Language
	LOCALE_IDIGITSUBSTITUTION  = &H00001014  ' 0 = context, 1 = none, 2 = national
' #endif /* WINVER >= 0x0500 */
' #if (WINVER >= 0x0600)
	LOCALE_SNAME  = &H0000005c  ' locale name (ie: en-us)
	LOCALE_SDURATION  = &H0000005d  ' time duration format, eg "hh:mm:ss"
	LOCALE_SSHORTESTDAYNAME1  = &H00000060  ' Shortest day name for Monday
	LOCALE_SSHORTESTDAYNAME2  = &H00000061  ' Shortest day name for Tuesday
	LOCALE_SSHORTESTDAYNAME3  = &H00000062  ' Shortest day name for Wednesday
	LOCALE_SSHORTESTDAYNAME4  = &H00000063  ' Shortest day name for Thursday
	LOCALE_SSHORTESTDAYNAME5  = &H00000064  ' Shortest day name for Friday
	LOCALE_SSHORTESTDAYNAME6  = &H00000065  ' Shortest day name for Saturday
	LOCALE_SSHORTESTDAYNAME7  = &H00000066  ' Shortest day name for Sunday
	LOCALE_SISO639LANGNAME2  = &H00000067  ' 3 character ISO abbreviated language name, eg "eng"
	LOCALE_SISO3166CTRYNAME2  = &H00000068  ' 3 character ISO country/region name, eg "USA"
	LOCALE_SNAN  = &H00000069  ' Not a Number, eg "NaN"
	LOCALE_SPOSINFINITY  = &H0000006a  ' + Infinity, eg "infinity"
	LOCALE_SNEGINFINITY  = &H0000006b  ' - Infinity, eg "-infinity"
	LOCALE_SSCRIPTS  = &H0000006c  ' Typical scripts in the locale: ; delimited script codes, eg "Latn;"
	LOCALE_SPARENT  = &H0000006d  ' Fallback name for resources, eg "en" for "en-US"
	LOCALE_SCONSOLEFALLBACKNAME  = &H0000006e  ' Fallback name for within the console for Unicode Only locales, eg "en" for bn-IN
' #endif //(WINVER >= 0x0600)
' #if (WINVER >= _WIN32_WINNT_WIN7)
	LOCALE_IREADINGLAYOUT  = &H00000070  ' Returns one of the following 4 reading layout values:
'  0 - Left to right (eg en-US)
'  1 - Right to left (eg arabic locales)
'  2 - Vertical top to bottom with columns to the left and also left to right (ja-JP locales)
'  3 - Vertical top to bottom with columns proceeding to the right
	LOCALE_INEUTRAL  = &H00000071  ' Returns 0 for specific cultures, 1 for neutral cultures.
	LOCALE_INEGATIVEPERCENT  = &H00000074  ' Returns 0-11 for the negative percent format
	LOCALE_IPOSITIVEPERCENT  = &H00000075  ' Returns 0-3 for the positive percent formatIPOSITIVEPERCENT
	LOCALE_SPERCENT  = &H00000076  ' Returns the percent symbol
	LOCALE_SPERMILLE  = &H00000077  ' Returns the permille (U+2030) symbol
	LOCALE_SMONTHDAY  = &H00000078  ' Returns the preferred month/day format
	LOCALE_SSHORTTIME  = &H00000079  ' Returns the preferred short time format (ie: no seconds, just h:mm)
	LOCALE_SOPENTYPELANGUAGETAG  = &H0000007a  ' Open type language tag, eg: "latn" or "dflt"
	LOCALE_SSORTLOCALE  = &H0000007b  ' Name of locale to use for sorting/collation/casing behavior.
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_WIN8)
	LOCALE_SRELATIVELONGDATE  = &H0000007c  ' Long date without year, day of week, month, date, eg: for lock screen
' #endif
' #if (WINVER >= _WIN32_WINNT_WINBLUE)
	LOCALE_ICONSTRUCTEDLOCALE  = &H0000007d  ' Flags if this locale is constructed.  Avoid using.
' #endif
' #if (WINVER >= _WIN32_WINNT_WIN10)
	LOCALE_SSHORTESTAM  = &H0000007e  ' Shortest AM designator, eg "A"
	LOCALE_SSHORTESTPM  = &H0000007f  ' Shortest PM designator, eg "P"
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_MN)
	LOCALE_IUSEUTF8LEGACYACP  = &H00000666  ' default ansi code page (use of Unicode is recommended instead)
	LOCALE_IUSEUTF8LEGACYOEMCP  = &H00000999  ' default oem code page (use of Unicode is recommended instead)
' #endif
'  DEPRECATED LCTYPEs
'  DEPRECATED LCTYPEs for Code Pages
'  Applications are strongly encouraged to Use Unicode, such as UTF-16 (WCHAR type)
'  or the CP_UTF8 Code Page.  Legacy encodings are unable to represent the full
'  set of scripts/language and characters (& emoji!) available on modern computers.
'  Use of legacy code pages (encodings) is a leading cause of data loss and corruption.
	LOCALE_IDEFAULTCODEPAGE  = &H0000000B  ' default oem code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
	LOCALE_IDEFAULTANSICODEPAGE  = &H00001004  ' default ansi code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
	LOCALE_IDEFAULTMACCODEPAGE  = &H00001011  ' default mac code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
' #if(WINVER >= 0x0500)
	LOCALE_IDEFAULTEBCDICCODEPAGE  = &H00001012  ' default ebcdic code page for a locale (use of Unicode is recommended instead)
' #endif /* WINVER >= 0x0500 */
'  LCTYPEs using out-of-date concepts
	LOCALE_ILANGUAGE  = &H00000001  ' DEPRECATED language id (LCID), LOCALE_SNAME preferred
	LOCALE_SABBREVLANGNAME  = &H00000003  ' DEPRECATED arbitrary abbreviated language name, LOCALE_SISO639LANGNAME instead.
	LOCALE_SABBREVCTRYNAME  = &H00000007  ' DEPRECATED arbitrary abbreviated country/region name, LOCALE_SISO3166CTRYNAME instead.
	LOCALE_IGEOID  = &H0000005B  ' DEPRECATED geographical location id, use LOCALE_SISO3166CTRYNAME instead.
	LOCALE_IDEFAULTLANGUAGE  = &H00000009  ' DEPRECATED default language id, deprecated
	LOCALE_IDEFAULTCOUNTRY  = &H0000000A  ' DEPRECATED default country/region code, deprecated
	LOCALE_IINTLCURRDIGITS  = &H0000001A  ' DEPRECATED, use LOCALE_ICURRDIGITS # intl monetary digits, eg 2 for $1.00
'  Derived legacy date & time values for compatibility only.
'  Please use the appropriate date or time pattern instead.
'  These can be misleading, for example a locale configured as 12h24m52s could have a time separator of "h".
	LOCALE_SDATE  = &H0000001D  ' DEPRECATED date separator (derived from LOCALE_SSHORTDATE, use that instead)
	LOCALE_STIME  = &H0000001E  ' DEPRECATED time separator (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_IDATE  = &H00000021  ' DEPRECATED short date format ordering (derived from LOCALE_SSHORTDATE, use that instead)
	LOCALE_ILDATE  = &H00000022  ' DEPRECATED long date format ordering (derived from LOCALE_SLONGDATE, use that instead)
	LOCALE_ITIME  = &H00000023  ' DEPRECATED time format specifier (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_ITIMEMARKPOSN  = &H00001005  ' DEPRECATED time marker position (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_ICENTURY  = &H00000024  ' DEPRECATED century format specifier (short date, LOCALE_SSHORTDATE is preferred)
	LOCALE_ITLZERO  = &H00000025  ' DEPRECATED leading zeros in time field (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_IDAYLZERO  = &H00000026  ' DEPRECATED leading zeros in day field (short date, LOCALE_SSHORTDATE is preferred)
	LOCALE_IMONLZERO  = &H00000027  ' DEPRECATED leading zeros in month field (short date, LOCALE_SSHORTDATE is preferred)
' #if(WINVER >= 0x0600)
	LOCALE_SKEYBOARDSTOINSTALL  = &H0000005e  ' Used internally, see GetKeyboardLayoutName() function
' #endif /* WINVER >= 0x0600 */
'  LCTYPEs which have been renamed to enable more understandable source code.
	LOCALE_SLANGUAGE  = LOCALE_SLOCALIZEDDISPLAYNAME  ' DEPRECATED as new name is more readable.
	LOCALE_SLANGDISPLAYNAME  = LOCALE_SLOCALIZEDLANGUAGENAME  ' DEPRECATED as new name is more readable.
	LOCALE_SENGLANGUAGE  = LOCALE_SENGLISHLANGUAGENAME  ' DEPRECATED as new name is more readable.
	LOCALE_SNATIVELANGNAME  = LOCALE_SNATIVELANGUAGENAME  ' DEPRECATED as new name is more readable.
	LOCALE_SCOUNTRY  = LOCALE_SLOCALIZEDCOUNTRYNAME  ' DEPRECATED as new name is more readable.
	LOCALE_SENGCOUNTRY  = LOCALE_SENGLISHCOUNTRYNAME  ' DEPRECATED as new name is more readable.
	LOCALE_SNATIVECTRYNAME  = LOCALE_SNATIVECOUNTRYNAME  ' DEPRECATED as new name is more readable.
'  DEPRECATED: Use LOCALE_SISO3166CTRYNAME to query for a region identifier, LOCALE_ICOUNTRY is not a region identifier.
	LOCALE_ICOUNTRY  = LOCALE_IDIALINGCODE  ' Deprecated synonym for LOCALE_IDIALINGCODE
	LOCALE_S1159  = LOCALE_SAM  ' DEPRECATED: Please use LOCALE_SAM, which is more readable.
	LOCALE_S2359  = LOCALE_SPM  ' DEPRECATED: Please use LOCALE_SPM, which is more readable.
End Enum


Public Enum GST_Class
    CT_CTYPE1 = &H1          ' ctype 1 information
    CT_CTYPE2 = &H2          ' ctype 2 information
    CT_CTYPE3 = &H4          ' ctype 3 information
End Enum
Public Enum C1_CharTypes
    C1_UPPER = &H1      ' upper case
    C1_LOWER     = &H2      ' lower case
    C1_DIGIT     = &H4      ' decimal digits
    C1_SPACE     = &H8      ' spacing characters
    C1_PUNCT     = &H10     ' punctuation characters
    C1_CNTRL     = &H20     ' control characters
    C1_BLANK     = &H40     ' blank characters
    C1_XDIGIT     = &H80     ' other digits
    C1_ALPHA     = &H100    ' any linguistic character
    C1_DEFINED     = &H200    ' defined character
End Enum
Public Enum C2_CharTypes
	C2_LEFTTORIGHT  = &H0001  ' left to right
	C2_RIGHTTOLEFT  = &H0002  ' right to left
	C2_EUROPENUMBER  = &H0003  ' European number, digit
	C2_EUROPESEPARATOR  = &H0004  ' European numeric separator
	C2_EUROPETERMINATOR  = &H0005  ' European numeric terminator
	C2_ARABICNUMBER  = &H0006  ' Arabic number
	C2_COMMONSEPARATOR  = &H0007  ' common numeric separator
	C2_BLOCKSEPARATOR  = &H0008  ' block separator
	C2_SEGMENTSEPARATOR  = &H0009  ' segment separator
	C2_WHITESPACE  = &H000A  ' white space
	C2_OTHERNEUTRAL  = &H000B  ' other neutrals
	C2_NOTAPPLICABLE  = &H0000  ' no implicit directionality
End Enum
Public Enum C3_CharTypes
	C3_NONSPACING  = &H0001  ' nonspacing character
	C3_DIACRITIC  = &H0002  ' diacritic mark
	C3_VOWELMARK  = &H0004  ' vowel mark
	C3_SYMBOL  = &H0008  ' symbols
	C3_KATAKANA  = &H0010  ' katakana character
	C3_HIRAGANA  = &H0020  ' hiragana character
	C3_HALFWIDTH  = &H0040  ' half width character
	C3_FULLWIDTH  = &H0080  ' full width character
	C3_IDEOGRAPH  = &H0100  ' ideographic character
	C3_KASHIDA  = &H0200  ' Arabic kashida character
	C3_LEXICAL  = &H0400  ' lexical character
	C3_HIGHSURROGATE  = &H0800  ' high surrogate code unit
	C3_LOWSURROGATE  = &H1000  ' low surrogate code unit
	C3_ALPHA  = &H8000&  ' any linguistic char (C1_ALPHA)
	C3_NOTAPPLICABLE  = &H0000  ' ctype 3 is not applicable
End Enum



Public Enum WCMB_Flags
	WC_COMPOSITECHECK  = &H00000200  ' convert composite to precomposed
	WC_DISCARDNS  = &H00000010  ' discard non-spacing chars          // Used with WC_COMPOSITECHECK
	WC_SEPCHARS  = &H00000020  ' generate separate chars            // Used with WC_COMPOSITECHECK
	WC_DEFAULTCHAR  = &H00000040  ' replace w/ default char            // Used with WC_COMPOSITECHECK
	WC_ERR_INVALID_CHARS  = &H00000080  ' error for invalid chars
	WC_NO_BEST_FIT_CHARS  = &H00000400  ' do not use best fit chars
End Enum

Public Enum StandardAccessTypes
    DELETE                          = (&H00010000)
    READ_CONTROL                    = (&H00020000)
    WRITE_DAC = (&H00040000)
    WRITE_OWNER                     = (&H00080000)
    SYNCHRONIZE                     = (&H00100000)

    STANDARD_RIGHTS_REQUIRED = (&H000F0000)

    STANDARD_RIGHTS_READ            = (READ_CONTROL)
    STANDARD_RIGHTS_WRITE           = (READ_CONTROL)
    STANDARD_RIGHTS_EXECUTE         = (READ_CONTROL)

    STANDARD_RIGHTS_ALL             = (&H001F0000)

    SPECIFIC_RIGHTS_ALL             = (&H0000FFFF&)

' //
' // AccessSystemAcl access type
' //

    ACCESS_SYSTEM_SECURITY          = (&H01000000)	
    MAXIMUM_ALLOWED                 = (&H02000000)
End Enum
Public Enum GenericRights
    GENERIC_READ                     = (&H80000000)
    GENERIC_WRITE                    = (&H40000000)
    GENERIC_EXECUTE                  = (&H20000000)
    GENERIC_ALL                      = (&H10000000)
End Enum
Public Enum FileAccessRights
	FILE_READ_DATA  = ( &H0001 )  ' file & pipe
	FILE_LIST_DIRECTORY  = ( &H0001 )  ' directory
	FILE_WRITE_DATA  = ( &H0002 )  ' file & pipe
	FILE_ADD_FILE  = ( &H0002 )  ' directory
	FILE_APPEND_DATA  = ( &H0004 )  ' file
	FILE_ADD_SUBDIRECTORY  = ( &H0004 )  ' directory
	FILE_CREATE_PIPE_INSTANCE  = ( &H0004 )  ' named pipe
	FILE_READ_EA  = ( &H0008 )  ' file & directory
	FILE_WRITE_EA  = ( &H0010 )  ' file & directory
	FILE_EXECUTE  = ( &H0020 )  ' file
	FILE_TRAVERSE  = ( &H0020 )  ' directory
	FILE_DELETE_CHILD  = ( &H0040 )  ' directory
	FILE_READ_ATTRIBUTES  = ( &H0080 )  ' all
	FILE_WRITE_ATTRIBUTES  = ( &H0100 )  ' all
	FILE_ALL_ACCESS  = (STANDARD_RIGHTS_REQUIRED  Or  SYNCHRONIZE  Or  &H1FF)
	FILE_GENERIC_READ  = (STANDARD_RIGHTS_READ  Or  FILE_READ_DATA  Or  FILE_READ_ATTRIBUTES  Or  FILE_READ_EA  Or SYNCHRONIZE)
	FILE_GENERIC_WRITE  = (STANDARD_RIGHTS_WRITE  Or  FILE_WRITE_DATA  Or  FILE_WRITE_ATTRIBUTES  Or  FILE_WRITE_EA  Or  FILE_APPEND_DATA  Or  SYNCHRONIZE)
	FILE_GENERIC_EXECUTE  = (STANDARD_RIGHTS_EXECUTE  Or  FILE_READ_ATTRIBUTES  Or  FILE_EXECUTE  Or  SYNCHRONIZE)
End Enum
Public Enum EventAccessRights
    EVENT_ALL_ACCESS = &H1F0003
    EVENT_MODIFY_STATE = &H0002
End Enum
Public Enum MutexAccessRights
    MUTEX_ALL_ACCESS = &H1F0001
    MUTEX_MODIFY_STATE = &H0001
End Enum
Public Enum SemaphoreAccessRights
    SEMAPHORE_ALL_ACCESS = &H1F0003
    SEMAPHORE_MODIFY_STATE = &H0002
End Enum
Public Enum TimerAccessRights
    TIMER_ALL_ACCESS = &H1F0003
    TIMER_MODIFY_STATE = &H0002
    TIMER_QUERY_STATE = &H0001
End Enum

Public Const INVALID_HANDLE_VALUE = -1&

Public Enum ProcessAccessRights
    PROCESS_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &HFFF&)
    PROCESS_TERMINATE = &H1 ' Enables using the process handle in the TerminateProcess function to terminate the process.
    PROCESS_CREATE_THREAD = &H2   ' Enables using the process handle in the CreateRemoteThread function to create a thread in the process.
    PROCESS_VM_OPERATION = &H8 ' Enables using the process handle in the VirtualProtectEx and WriteProcessMemory functions to modify the virtual memory of the process.
    PROCESS_VM_READ = &H10     ' Enables using the process handle in the ReadProcessMemory function to read from the virtual memory of the process.
    PROCESS_VM_WRITE = &H20 ' Enables using the process handle in the WriteProcessMemory function to write to the virtual memory of the process.
    PROCESS_DUP_HANDLE = &H40   ' Enables using the process handle as either the source or target process in the DuplicateHandle function to duplicate a handle
    PROCESS_SET_INFORMATION = &H200 ' Enables using the process handle in the SetPriorityClass function to set the priority class of the process.
    PROCESS_QUERY_INFORMATION = &H400 ' Enables using the process handle in the GetExitCodeProcess and GetPriorityClass functions to read information from the process object.
    PROCESS_QUERY_LIMITED_INFORMATION = &H1000
End Enum

Public Enum MBWC_Flags
    MB_PRECOMPOSED = &H1
    MB_COMPOSITE = &H2
    MB_USEGLYPHCHARS = &H4
    MB_ERR_INVALID_CHARS = &H8
End Enum

Public Type OVERLAPPED
    Internal As LongPtr
    InternalHigh As LongPtr
    #If Win64 Then
    OffsetsOrPtr As LongLong
    #Else
    OffsetOrPtr As Long
    OffsetHigh As Long
    #End If
    hEvent As LongPtr
End Type

Public Enum ResourceTypes
        RT_CURSOR = 1
        RT_BITMAP = 2
        RT_ICON = 3
        RT_MENU = 4
        RT_DIALOG = 5
        RT_STRING = 6
        RT_FONTDIR = 7
        RT_FONT = 8
        RT_ACCELERATOR = 9
        RT_RCDATA = 10
        RT_MESSAGETABLE = 11
        RT_GROUP_CURSOR = 12
        RT_GROUP_ICON = 14
        RT_VERSION = 16
        RT_DLGINCLUDE = 17
        RT_PLUGPLAY = 19
        RT_VXD = 20
        RT_ANICURSOR = 21
        RT_ANIICON = 22
        RT_HTML = 23
        RT_MANIFEST = 24
End Enum

Public Enum ResourceEnumFlags
	RESOURCE_ENUM_LN  = (&H0001)
	RESOURCE_ENUM_MUI  = (&H0002)
	RESOURCE_ENUM_MUI_SYSTEM  = (&H0004)
	RESOURCE_ENUM_VALIDATE  = (&H0008)
	RESOURCE_ENUM_MODULE_EXACT  = (&H0010)
End Enum

Public Enum FindResourceFlags
	FIND_RESOURCE_DIRECTORY_TYPES  = (&H0100)
	FIND_RESOURCE_DIRECTORY_NAMES  = (&H0200)
	FIND_RESOURCE_DIRECTORY_LANGUAGES  = (&H0400)
End Enum

Public Type ENUMUILANG
	NumOfEnumUILang As Long ' Acutall number of enumerated languages
	SizeOfEnumUIBuffer As Long ' Buffer size of pMUIEnumUILanguages
	pEnumUIBuffer As LongPtr
End Type



Public Enum LoadLibraryFlags
    DONT_RESOLVE_DLL_REFERENCES = &H00000001
    LOAD_LIBRARY_AS_DATAFILE = &H00000002
    LOAD_PACKAGED_LIBRARY = &H00000004
    LOAD_WITH_ALTERED_SEARCH_PATH = &H00000008
    LOAD_IGNORE_CODE_AUTHZ_LEVEL = &H00000010
    LOAD_LIBRARY_AS_IMAGE_RESOURCE = &H00000020
    LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = &H00000040
    LOAD_LIBRARY_REQUIRE_SIGNED_TARGET = &H00000080
    LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = &H00000100
    LOAD_LIBRARY_SEARCH_APPLICATION_DIR = &H00000200
    LOAD_LIBRARY_SEARCH_USER_DIRS = &H00000400
    LOAD_LIBRARY_SEARCH_SYSTEM32 = &H00000800
    LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = &H00001000
    LOAD_LIBRARY_SAFE_CURRENT_DIRS = &H00002000
    LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER = &H00004000
    LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY = &H00008000&
End Enum

Public Enum LockFileExFlags
    LOCKFILE_FAIL_IMMEDIATELY = &H0001
    LOCKFILE_EXCLUSIVE_LOCK = &H0002
End Enum

Public Enum FileBaseType
    FILE_TYPE_UNKNOWN = &H0000
    FILE_TYPE_DISK = &H0001
    FILE_TYPE_CHAR = &H0002
    FILE_TYPE_PIPE = &H0003
    FILE_TYPE_REMOTE = &H8000&
End Enum

Public Enum NTSectionAccessRights
    SECTION_QUERY  = &H0001	
    SECTION_MAP_WRITE  = &H0002
    SECTION_MAP_READ  = &H0004
    SECTION_MAP_EXECUTE  = &H0008
    SECTION_EXTEND_SIZE  = &H0010
    SECTION_MAP_EXECUTE_EXPLICIT = &H0020  ' not included in SECTION_ALLACCESS
    SECTION_ALL_ACCESS  = (STANDARD_RIGHTS_REQUIRED Or SECTION_QUERY Or  SECTION_MAP_WRITE  Or  SECTION_MAP_READ  Or  SECTION_MAP_EXECUTE  Or  SECTION_EXTEND_SIZE)
End Enum

Public Enum NTSectionFlags
	SEC_HUGE_PAGES  = &H00020000
	SEC_PARTITION_OWNER_HANDLE  = &H00040000
	SEC_64K_PAGES  = &H00080000
	SEC_FILE  = &H00800000
	SEC_IMAGE = &H01000000
	SEC_PROTECTED_IMAGE  = &H02000000
	SEC_RESERVE  = &H04000000
	SEC_COMMIT = &H08000000
	SEC_NOCACHE  = &H10000000
	SEC_WRITECOMBINE  = &H40000000
	SEC_LARGE_PAGES  = &H80000000
	SEC_IMAGE_NO_EXECUTE  = (SEC_IMAGE  Or  SEC_NOCACHE)
End Enum

Public Enum FileMapFlags
	FILE_MAP_WRITE = SECTION_MAP_WRITE
	FILE_MAP_READ  = SECTION_MAP_READ
	FILE_MAP_ALL_ACCESS  = SECTION_ALL_ACCESS
	FILE_MAP_EXECUTE  = SECTION_MAP_EXECUTE_EXPLICIT  ' not included in FILE_MAP_ALL_ACCESS
	FILE_MAP_COPY  = &H00000001
	FILE_MAP_RESERVE  = &H80000000
	FILE_MAP_TARGETS_INVALID  = &H40000000
	FILE_MAP_LARGE_PAGES  = &H20000000
End Enum

Public Enum MEM_EXTENDED_PARAMETER_TYPE
	MemExtendedParameterInvalidType=0
	MemExtendedParameterAddressRequirements = 1
	MemExtendedParameterNumaNode = 2
	MemExtendedParameterPartitionHandle = 3
	MemExtendedParameterUserPhysicalHandle = 4
	MemExtendedParameterAttributeFlags = 5
	MemExtendedParameterImageMachine = 6
	MemExtendedParameterMax = 7
End Enum
Public Type MEM_EXTENDED_PARAMETER
	Type As LongLong
    SizeOrHandleOrPointer As LongPtr
End Type


Public Type MEMORY_BASIC_INFORMATION
	BaseAddress As LongPtr
	AllocationBase As LongPtr
	AllocationProtect As MemProtectFlags
	PartitionId As Integer
	RegionSize As LongPtr
	State As MemAllocType
	Protect As MemProtectFlags
	Type As MemAllocType
End Type

Public Enum ProcessorArchitecture
	PROCESSOR_ARCHITECTURE_INTEL  = 0
	PROCESSOR_ARCHITECTURE_MIPS  = 1
	PROCESSOR_ARCHITECTURE_ALPHA  = 2
	PROCESSOR_ARCHITECTURE_PPC  = 3
	PROCESSOR_ARCHITECTURE_SHX  = 4
	PROCESSOR_ARCHITECTURE_ARM  = 5
	PROCESSOR_ARCHITECTURE_IA64  = 6
	PROCESSOR_ARCHITECTURE_ALPHA64 = 7
	PROCESSOR_ARCHITECTURE_MSIL  = 8
	PROCESSOR_ARCHITECTURE_AMD64  = 9
	PROCESSOR_ARCHITECTURE_IA32_ON_WIN64  = 10
	PROCESSOR_ARCHITECTURE_NEUTRAL = 11
	PROCESSOR_ARCHITECTURE_ARM64 = 12
	PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 13
	PROCESSOR_ARCHITECTURE_IA32_ON_ARM64  = 14
    '[IgnoreWarnings(TB0012)]
    PROCESSOR_ARCHITECTURE_UNKNOWN = &HFFFF&
End Enum

Public Type SYSTEM_INFO
	wProcessorArchitecture As Integer
    wReserved As Integer
	dwPageSize As Long
	lpMinimumApplicationAddress As LongPtr
	lpMaximumApplicationAddress As LongPtr
	dwActiveProcessorMask As LongPtr
	dwNumberOfProcessors As Long
	dwProcessorType As Long
	dwAllocationGranularity As Long
	wProcessorLevel As Integer
	wProcessorRevision As Integer
End Type

Public Enum InitCriticalSectExFlags
    CRITICAL_SECTION_NO_DEBUG_INFO = &H01000000
End Enum

Public Enum CreateMutexExFlags
    CREATE_MUTEX_INITIAL_OWNER = &H00000001
End Enum

Public Enum CreateWaitableTimerExFlags
    CREATE_WAITABLE_TIMER_MANUAL_RESET = &H00000001
    CREATE_WAITABLE_TIMER_HIGH_RESOLUTION = &H00000002
End Enum

Public Enum WaitForObjOutcomes
    WAIT_FAILED = (&HFFFFFFFF)
    WAIT_OBJECT_0    =   ((STATUS_WAIT_0 ) + 0 )

    WAIT_ABANDONED        = ((STATUS_ABANDONED_WAIT_0 ) + 0 )
    WAIT_ABANDONED_0      = ((STATUS_ABANDONED_WAIT_0 ) + 0)

    WAIT_IO_COMPLETION                 = STATUS_USER_APC    
End Enum

Public Enum ReasonCtxFlags
    POWER_REQUEST_CONTEXT_SIMPLE_STRING = &H00000001
    POWER_REQUEST_CONTEXT_DETAILED_STRING = &H00000002
End Enum
Public Type REASON_CONTEXT
	Version As Long
    Flags As ReasonCtxFlags
    SimpleReasonString_Or_LocalizedReasonModule As LongPtr
    LocalizedReasonId As Long
    ReasonStringCount As Long
    ReasonStrings As LongPtr
End Type

Public Type RTL_BARRIER
	Reserved1 As Long
	Reserved2 As Long
	Reserved3(0 To 1) As LongPtr
	Reserved4 As Long
	Reserved5 As Long
End Type
'Alias SYNCHRONIZATION_BARRIER As RTL_BARRIER
Public Type SYNCHRONIZATION_BARRIER
    Reserved1 As Long
    Reserved2 As Long
    Reserved3(0 To 1) As LongPtr
    Reserved4 As Long
    Reserved5 As Long
End Type
Public Enum SyncBarrierFlags
	SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY  = &H01
	SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY  = &H02
	SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE  = &H04
End Enum

Public Enum ActivationContextFlags
	ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID  = (&H00000001)
	ACTCTX_FLAG_LANGID_VALID  = (&H00000002)
	ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID  = (&H00000004)
	ACTCTX_FLAG_RESOURCE_NAME_VALID  = (&H00000008)
	ACTCTX_FLAG_SET_PROCESS_DEFAULT  = (&H00000010)
	ACTCTX_FLAG_APPLICATION_NAME_VALID  = (&H00000020)
	ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF  = (&H00000040)
	ACTCTX_FLAG_HMODULE_VALID  = (&H00000080)
End Enum
Public Type ACTCTXA
	cbSize As Long
	dwFlags As ActivationContextFlags
	lpSource As String
	wProcessorArchitecture As Integer
	wLangId As Integer
	lpAssemblyDirectory As String
	lpResourceName As String
	lpApplicationName As String
	hModule As LongPtr
End Type
Public Type ACTCTXW
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As LongPtr
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As LongPtr
    lpResourceName As LongPtr
    lpApplicationName As LongPtr
    hModule As LongPtr
End Type
Public Type ACTCTX
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As LongPtr
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As LongPtr
    lpResourceName As LongPtr
    lpApplicationName As LongPtr
    hModule As LongPtr
End Type
Public Enum DeactivateActCtxFlags
    DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION = (&H00000001)
End Enum

Public Type ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
	lpInformation As LongPtr
	lpSectionBase As LongPtr
	ulSectionLength As Long
	lpSectionGlobalDataBase As LongPtr
	ulSectionGlobalDataLength As Long
End Type

Public Type ACTCTX_SECTION_KEYED_DATA_2600
    cbSize As Long
    ulDataFormatVersion As Long
    lpData As LongPtr
    ulLength As Long
    lpSectionGlobalData As LongPtr
    ulSectionGlobalDataLength As Long
    lpSectionBase As LongPtr
    ulSectionTotalLength As Long
    hActCtx As LongPtr
    ulAssemblyRosterIndex As Long
End Type
Public Enum ActivationContextKeyedDataFlags
	FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX  = (&H00000001)
	FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS  = (&H00000002)
	FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA  = (&H00000004)
End Enum
Public Type ACTCTX_SECTION_KEYED_DATA
	cbSize As Long
	ulDataFormatVersion As Long
	lpData As LongPtr
	ulLength As Long
	lpSectionGlobalData As LongPtr
	ulSectionGlobalDataLength As Long
	lpSectionBase As LongPtr
	ulSectionTotalLength As Long
	hActCtx As LongPtr
	ulAssemblyRosterIndex As Long
	' 2600 stops here
	ulFlags As Long
	AssemblyMetadata As ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
End Type

Public Enum ActivationContextSections
	ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION  = (1)
	ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION  = (2)
	ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION  = (3)
	ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION  = (4)
	ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION  = (5)
	ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION  = (6)
	ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION  = (7)
	ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE  = (8)
	ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES  = (9)
	ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS  = (10)
	ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO  = (11)
	ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES  = (12)
End Enum

Public Enum ACTIVATION_CONTEXT_INFO_CLASS
	ActivationContextBasicInformation=1
	ActivationContextDetailedInformation= 2
	AssemblyDetailedInformationInActivationContext=3
	FileInformationInAssemblyOfAssemblyInActivationContext=4
	RunlevelInformationInActivationContext=5
	CompatibilityInformationInActivationContext=6
	ActivationContextManifestResourceName= 7
	MaxActivationContextInfoClass
	' 
	'  compatibility with old names
	' 
	AssemblyDetailedInformationInActivationContxt=3
	FileInformationInAssemblyOfAssemblyInActivationContxt=4
End Enum

Public Type ACTIVATION_CONTEXT_BASIC_INFORMATION
	hActCtx As LongPtr
	dwFlags As Long
End Type

Public Type ASSEMBLY_FILE_DETAILED_INFORMATION
	ulFlags As Long
	ulFilenameLength As Long
	ulPathLength As Long
	lpFileName As LongPtr
	lpFilePath As LongPtr
End Type


Public Enum ActivationContextPathType
	ACTIVATION_CONTEXT_PATH_TYPE_NONE  = (1)
	ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE  = (2)
	ACTIVATION_CONTEXT_PATH_TYPE_URL  = (3)
	ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF  = (4)
End Enum

Public Type ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
	ulFlags As Long
	ulEncodedAssemblyIdentityLength As Long ' in bytes
	ulManifestPathType As ActivationContextPathType ' ACTIVATION_CONTEXT_PATH_TYPE_*
	ulManifestPathLength As Long ' in bytes
	liManifestLastWriteTime As LARGE_INTEGER ' FILETIME
	ulPolicyPathType As ActivationContextPathType ' ACTIVATION_CONTEXT_PATH_TYPE_*
	ulPolicyPathLength As Long ' in bytes
	liPolicyLastWriteTime As LARGE_INTEGER ' FILETIME
	ulMetadataSatelliteRosterIndex As Long
	ulManifestVersionMajor As Long ' 1
	ulManifestVersionMinor As Long ' 0
	ulPolicyVersionMajor As Long ' 0
	ulPolicyVersionMinor As Long ' 0
	ulAssemblyDirectoryNameLength As Long ' in bytes
	lpAssemblyEncodedAssemblyIdentity As LongPtr
	lpAssemblyManifestPath As LongPtr
	lpAssemblyPolicyPath As LongPtr
	lpAssemblyDirectoryName As LongPtr
	ulFileCount As Long
End Type


Public Enum ACTCTX_REQUESTED_RUN_LEVEL
	ACTCTX_RUN_LEVEL_UNSPECIFIED=0
	ACTCTX_RUN_LEVEL_AS_INVOKER = 1
	ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2
	ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3
	ACTCTX_RUN_LEVEL_NUMBERS = 4
End Enum

Public Type ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
	ulFlags As Long
	RunLevel As ACTCTX_REQUESTED_RUN_LEVEL
	UiAccess As Long
End Type

Public Enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN=0
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3
End Enum
Public Type COMPATIBILITY_CONTEXT_ELEMENT
	Id As UUID
	Type As ACTCTX_COMPATIBILITY_ELEMENT_TYPE
	MaxVersionTested As LongLong
End Type

Public Enum QueryActivationContextFlags
	QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX  = (&H00000004)
	QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE  = (&H00000008)
	QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS  = (&H00000010)
	QUERY_ACTCTX_FLAG_NO_ADDREF  = (&H80000000)
End Enum

Public Type ACTIVATION_CONTEXT_DETAILED_INFORMATION
	dwFlags As Long
	ulFormatVersion As Long
	ulAssemblyCount As Long
	ulRootManifestPathType As Long
	ulRootManifestPathChars As Long
	ulRootConfigurationPathType As Long
	ulRootConfigurationPathChars As Long
	ulAppDirPathType As Long
	ulAppDirPathChars As Long
	lpRootManifestPath As LongPtr
	lpRootConfigurationPath As LongPtr
	lpAppDirPath As LongPtr
End Type

Public Type SUPPORTED_OS_INFO
	MajorVersion As Integer
	MinorVersion As Integer
End Type

Public Const MAILSLOT_NO_MESSAGE = -1
Public Const MAILSLOT_WAIT_FOREVER = -1

Public Enum EnumModulesFlags
	LIST_MODULES_DEFAULT  = &H0  ' This is the default one app would get without any flag.
	LIST_MODULES_32BIT  = &H01  ' list 32bit modules in the target process.
	LIST_MODULES_64BIT  = &H02  ' list all 64bit modules. 32bit exe will be stripped off.
'  list all the modules
	LIST_MODULES_ALL  = (LIST_MODULES_32BIT  Or  LIST_MODULES_64BIT)
End Enum

Public Type PROCESS_MEMORY_COUNTERS
	cb As Long
	PageFaultCount As Long
	PeakWorkingSetSize As LongPtr
	WorkingSetSize As LongPtr
	QuotaPeakPagedPoolUsage As LongPtr
	QuotaPagedPoolUsage As LongPtr
	QuotaPeakNonPagedPoolUsage As LongPtr
	QuotaNonPagedPoolUsage As LongPtr
	PagefileUsage As LongPtr
	PeakPagefileUsage As LongPtr
End Type
Public Type PROCESS_MEMORY_COUNTERS_EX
	cb As Long
	PageFaultCount As Long
	PeakWorkingSetSize As LongPtr
	WorkingSetSize As LongPtr
	QuotaPeakPagedPoolUsage As LongPtr
	QuotaPagedPoolUsage As LongPtr
	QuotaPeakNonPagedPoolUsage As LongPtr
	QuotaNonPagedPoolUsage As LongPtr
	PagefileUsage As LongPtr
	PeakPagefileUsage As LongPtr
	PrivateUsage As LongPtr
End Type
Public Type PROCESS_MEMORY_COUNTERS_EX2
    cb As Long
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
    PrivateWorkingSetSize As LongPtr
    SharedCommitUsage As LongLong
End Type
Public Type PERFORMANCE_INFORMATION
	cb As Long
	CommitTotal As LongPtr
	CommitLimit As LongPtr
	CommitPeak As LongPtr
	PhysicalTotal As LongPtr
	PhysicalAvailable As LongPtr
	SystemCache As LongPtr
	KernelTotal As LongPtr
	KernelPaged As LongPtr
	KernelNonpaged As LongPtr
	PageSize As LongPtr
	HandleCount As Long
	ProcessCount As Long
	ThreadCount As Long
End Type

Public Enum ThreadPoolFlags
	WT_EXECUTEDEFAULT  = &H00000000
	WT_EXECUTEINIOTHREAD  = &H00000001
	WT_EXECUTEINUITHREAD  = &H00000002
	WT_EXECUTEINWAITTHREAD  = &H00000004
	WT_EXECUTEONLYONCE  = &H00000008
	WT_EXECUTEINTIMERTHREAD  = &H00000020
	WT_EXECUTELONGFUNCTION  = &H00000010
	WT_EXECUTEINPERSISTENTIOTHREAD  = &H00000040
	WT_EXECUTEINPERSISTENTTHREAD  = &H00000080
	WT_TRANSFER_IMPERSONATION  = &H00000100
End Enum

Public Enum ErrorModes
	SEM_FAILCRITICALERRORS  = &H0001
	SEM_NOGPFAULTERRORBOX = &H0002
	SEM_NOALIGNMENTFAULTEXCEPT  = &H0004
	SEM_NOOPENFILEERRORBOX = &H8000&
End Enum

Public Enum LocaleIndMappingFlags
	MAP_FOLDCZONE  = &H00000010  ' fold compatibility zone chars
	MAP_PRECOMPOSED  = &H00000020  ' convert to precomposed chars
	MAP_COMPOSITE  = &H00000040  ' convert to composite chars
	MAP_FOLDDIGITS  = &H00000080  ' all digits to ASCII 0-9
	MAP_EXPAND_LIGATURES  = &H00002000  ' expand all ligatures
End Enum

Public Enum ProcessDEPFlags
	PROCESS_DEP_ENABLE  = &H00000001
	PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION  = &H00000002
End Enum

Public Enum PROCESS_MITIGATION_POLICY
	ProcessDEPPolicy = 0
	ProcessASLRPolicy = 1
	ProcessDynamicCodePolicy = 2
	ProcessStrictHandleCheckPolicy = 3
	ProcessSystemCallDisablePolicy = 4
	ProcessMitigationOptionsMask = 5
	ProcessExtensionPointDisablePolicy = 6
	ProcessControlFlowGuardPolicy = 7
	ProcessSignaturePolicy = 8
	ProcessFontDisablePolicy = 9
	ProcessImageLoadPolicy = 10
	ProcessSystemCallFilterPolicy = 11
	ProcessPayloadRestrictionPolicy = 12
	ProcessChildProcessPolicy = 13
	ProcessSideChannelIsolationPolicy = 14
	ProcessUserShadowStackPolicy = 15
	ProcessRedirectionTrustPolicy = 16
	ProcessUserPointerAuthPolicy = 17
	ProcessSEHOPPolicy = 18
	MaxProcessMitigationPolicy = 19
End Enum

Public Type PROCESS_MITIGATION_ASLR_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_DEP_POLICY
    dwFlags As Long
    Permanent As Byte
End Type
Public Type PROCESS_MITIGATION_SEHOP_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_FONT_DISABLE_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_IMAGE_LOAD_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_CHILD_PROCESS_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY
    dwFlags As Long
End Type
Public Type PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
	dwFlags As Long
End Type

Public Enum PROC_THREAD_ATTRIBUTES ' attributes for ProcThreadAttributeList
	PROC_THREAD_ATTRIBUTE_PARENT_PROCESS = &H00020000
	PROC_THREAD_ATTRIBUTE_HANDLE_LIST = &H00020002
	PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY = &H00030003
	PROC_THREAD_ATTRIBUTE_PREFERRED_NODE = &H00020004
	PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR = &H00030005
	PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY = &H00020007
	PROC_THREAD_ATTRIBUTE_UMS_THREAD = &H00030006
	PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL = &H0002000b
	PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES = &H00020009
	PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE = &H00020016
End Enum

Public Const PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE  = &H01
Public Const PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE  = &H02
Public Const PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE  = &H04
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
'  Define mandatory ASLR options.  Mandatory ASLR forcibly rebases images that
'  are not dynamic base compatible by acting as though there were an image base
'  collision at load time.
'  Note that 'require relocations' mode refuses load of images that do not have
'  a base relocation section.
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK  = (&H00000003 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER  = (&H00000000 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON  = (&H00000001 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF  = (&H00000002 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS  = (&H00000003 << 8)
'  Define heap terminate on corruption options.  Note that 'always off' does
'  not override the default opt-in for binaries with current subsystem versions
'  set in the image header.
'  Heap terminate on corruption is user mode enforced.
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK  = (&H00000003 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER  = (&H00000000 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON  = (&H00000001 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF  = (&H00000002 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED  = (&H00000003 << 12)
'  Define bottom up randomization (includes stack randomization) options,
'  i.e. randomization of the lowest user address.
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK  = (&H00000003 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER  = (&H00000000 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON  = (&H00000001 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF  = (&H00000002 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED  = (&H00000003 << 16)
'  Define high entropy bottom up randomization.  Note that high entropy bottom
'  up randomization is effective if and only if bottom up ASLR is also enabled.
'  N.B.  High entropy mode is only meaningful for native 64-bit processes.  in
'        high entropy mode, up to 1TB of bottom up variance is enabled.
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK  = (&H00000003 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER  = (&H00000000 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON  = (&H00000001 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF  = (&H00000002 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED  = (&H00000003 << 20)
'  Define handle checking enforcement options.  Handle checking enforcement
'  causes an exception to be raised immediately on a bad handle reference,
'  versus simply returning a failure status from the handle reference.
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK  = (&H00000003 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER  = (&H00000000 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON  = (&H00000001 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF  = (&H00000002 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED  = (&H00000003 << 24)
'  Define win32k system call disable options.  Win32k system call disable
'  prevents a process from making Win32k calls.
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK  = (&H00000003 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER  = (&H00000000 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON  = (&H00000001 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF  = (&H00000002 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED  = (&H00000003 << 28)
'  Define the extension point disable options.  Extension point disable allows
'  a process to opt-out of loading various arbitrary extension point DLLs.
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK  = (&H00000003 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER  = (&H00000000 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON  = (&H00000001 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF  = (&H00000002 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED  = (&H00000003 << 32)
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINBLUE)
'  Define dynamic code options.
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK  = (&H00000003 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER  = (&H00000000 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON  = (&H00000001 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF  = (&H00000002 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT  = (&H00000003 << 36)
'  Define Control Flow Guard (CFG) mitigation policy options.  Control Flow
'  Guard allows indirect control transfers to be checked at runtime.
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK  = (&H00000003 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER  = (&H00000000 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION  = (&H00000003 << 40)
'  Define module signature options.  When enabled, this option will
'  block mapping of non-microsoft binaries.
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK  = (&H00000003 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER  = (&H00000000 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON  = (&H00000001 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF  = (&H00000002 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE  = (&H00000003 << 44)
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINTHRESHOLD)
'  Define Font Disable Policy.  When enabled, this option will
'  block loading Non System Fonts.
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK  = (&H00000003 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER  = (&H00000000 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON  = (&H00000001 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF  = (&H00000002 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS  = (&H00000003 << 48)
'  Define remote image load options.  When enabled, this option will
'  block mapping of images from remote devices.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK  = (&H00000003 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER  = (&H00000000 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON  = (&H00000001 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF  = (&H00000002 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED  = (&H00000003 << 52)
'  Define low IL image load options.  When enabled, this option will
'  block mapping of images that have the low mandatory label.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK  = (&H00000003 << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER  = (&H00000000 << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON  = (&H00000001 << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF  = (&H00000002 << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED  = (&H00000003 << 56)
'  Define image load options to prefer System32 images compared to
'  the same images in application directory. When enabled, this option
'  will prefer loading images from system32 folder.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK  = (&H00000003 << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER  = (&H00000000 << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON  = (&H00000001 << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF  = (&H00000002 << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED  = (&H00000003 << 60)
'  Define Loader Integrity Continuity mitigation policy options.  This mitigation
'  enforces OS signing levels for depenedent module loads.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK  = (&H00000003 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER  = (&H00000000 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON  = (&H00000001 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF  = (&H00000002 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT  = (&H00000003 << 4)
'  Define the strict Control Flow Guard (CFG) mitigation policy options. This mitigation
'  requires all images that load in the process to be instrumented by CFG.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK  = (&H00000003 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER  = (&H00000000 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED  = (&H00000003 << 8)
'  Define the module tampering mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK  = (&H00000003 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER  = (&H00000000 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON  = (&H00000001 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF  = (&H00000002 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT  = (&H00000003 << 12)
'  Define the restricted indirect branch prediction mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK  = (&H00000003 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER  = (&H00000000 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON  = (&H00000001 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF  = (&H00000002 << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED  = (&H00000003 << 16)
'  Define the policy option that allows a broker to downgrade the dynamic code policy for a process.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK  = (&H00000003 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER  = (&H00000000 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON  = (&H00000001 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF  = (&H00000002 << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED  = (&H00000003 << 20)
'  Define the Memory Disambiguation Disable mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK  = (&H00000003 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER  = (&H00000000 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON  = (&H00000001 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF  = (&H00000002 << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED  = (&H00000003 << 24)
'  Define the user-mode shadow stack mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK  = (&H00000003 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER  = (&H00000000 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON  = (&H00000001 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF  = (&H00000002 << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE  = (&H00000003 << 28)
'  Define the user-mode CET set context instruction pointer validation mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK  = (&H00000003 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER  = (&H00000000 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON  = (&H00000001 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF  = (&H00000002 << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE  = (&H00000003 << 32)
'  Define the block non-CET/non-EHCONT binaries mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK  = (&H00000003 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER  = (&H00000000 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON  = (&H00000001 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF  = (&H00000002 << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT  = (&H00000003 << 36)
'  Define the XFG mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK  = (&H00000003 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER  = (&H00000000 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002 << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED  = (&H00000003 << 40)
'  Define the ARM64 user-mode per-process instruction pointer authentication
'  mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK  = (&H00000003 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER  = (&H00000000 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON  = (&H00000001 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF  = (&H00000002 << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED  = (&H00000003 << 44)
'  Define the CET-related dynamic code validation data APIs out-of-proc mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK  = (&H00000003 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER  = (&H00000000 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON  = (&H00000001 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF  = (&H00000002 << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED  = (&H00000003 << 48)
'  Define the restrict core sharing policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK  = (&H00000003 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER  = (&H00000000 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON  = (&H00000001 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF  = (&H00000002 << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED  = (&H00000003 << 52)


Public DeclareWide PtrSafe Function DeviceIoControl Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwIoControlCode As Long, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesReturned As Long, lpOverlapped As OVERLAPPED) As BOOL

Public DeclareWide PtrSafe Function SetErrorMode Lib "kernel32" (ByVal uMode As ErrorModes) As ErrorModes
Public DeclareWide PtrSafe Function GetErrorMode Lib "kernel32" () As ErrorModes
Public DeclareWide PtrSafe Function SetThreadErrorMode Lib "kernel32" (ByVal uMode As ErrorModes) As ErrorModes
Public DeclareWide PtrSafe Function GetThreadErrorMode Lib "kernel32" () As ErrorModes
Public DeclareWide PtrSafe Sub SetLastError Lib "kernel32" (ByVal dwErrorCode As Long)
Public Declare PtrSafe Function GetLastError Lib "kernel32" () As Long
Public DeclareWide PtrSafe Sub FatalAppExitW Lib "kernel32" (ByVal uAction As Long, ByVal lpMessageText As LongPtr)
Public DeclareWide PtrSafe Sub FatalAppExit Lib "kernel32" Alias "FatalAppExitW" (ByVal uAction As Long, ByVal lpMessageText As String)

Public DeclareWide PtrSafe Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Public DeclareWide PtrSafe Function GetPerformanceInfo Lib "kernel32" (pPerformanceInformation As PERFORMANCE_INFORMATION, ByVal cb As Long) As BOOL
Public DeclareWide PtrSafe Function GetSystemDefaultLangID Lib "kernel32" () As Integer
Public DeclareWide PtrSafe Function GetUserDefaultLangID Lib "kernel32" () As Integer
Public DeclareWide PtrSafe Function GetUserDefaultUILanguage Lib "kernel32" () As Integer
Public DeclareWide PtrSafe Function GetLocaleInfo Lib "kernel32" Alias "GetLocaleInfoW" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public DeclareWide PtrSafe Function GetLocaleInfoW Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr, ByVal cchData As Long) As Long
Public DeclareWide PtrSafe Function GetLocaleInfoEx Lib "kernel32" (ByVal LocaleName As String, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long


Public Declare PtrSafe Function CreateActCtxA Lib "kernel32" (pActCtx As ACTCTXA) As LongPtr
Public DeclareWide PtrSafe Function CreateActCtxW Lib "kernel32" (pActCtx As ACTCTXW) As LongPtr
Public DeclareWide PtrSafe Function CreateActCtx Lib "kernel32" Alias "CreateActCtxW" (pActCtx As ACTCTX) As LongPtr
Public DeclareWide PtrSafe Sub AddRefActCtx Lib "kernel32" (ByVal hActCtx As LongPtr)
Public DeclareWide PtrSafe Sub ReleaseRefActCtx Lib "kernel32" (ByVal hActCtx As LongPtr)
Public Declare PtrSafe Function ZombifyActCtx Lib "kernel32" (ByVal hActCtx As LongPtr) As BOOL
Public Declare PtrSafe Function ActivateActCtx Lib "kernel32" (ByVal hActCtx As LongPtr, lpCookie As LongPtr) As BOOL
Public Declare PtrSafe Function DeactivateActCtx Lib "kernel32" (ByVal dwFlags As DeactivateActCtxFlags, ByVal lpCookie As LongPtr) As BOOL
Public Declare PtrSafe Function GetCurrentActCtx Lib "kernel32" (lphActCtx As LongPtr) As BOOL
Public Declare PtrSafe Function FindActCtxSectionStringA Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As String, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public DeclareWide PtrSafe Function FindActCtxSectionStringW Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As LongPtr, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public DeclareWide PtrSafe Function FindActCtxSectionString Lib "kernel32" Alias "FindActCtxSectionStringW" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As String, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public DeclareWide PtrSafe Function FindActCtxSectionGuid Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, lpGuidToFind As UUID, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public DeclareWide PtrSafe Function QueryActCtxW Lib "kernel32" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtx Lib "kernel32" Alias "QueryActCtxW" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtxSettingsW Lib "kernel32" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As LongPtr, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtxSettings Lib "kernel32" Alias "QueryActCtxSettingsW" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As String, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL

Public Declare PtrSafe Function CreateToolhelp32Snapshot Lib "kernel32" (ByVal dwFlags As TH32CS_Flags, ByVal th32ProcessID As Long) As LongPtr
Public Declare PtrSafe Function Process32FirstW Lib "kernel32" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32W) As Long
Public Declare PtrSafe Function Process32NextW Lib "kernel32" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32W) As Long
Public Declare PtrSafe Function Thread32First Lib "kernel32" (ByVal hSnapshot As LongPtr, lpTE As THREADENTRY32) As Long
Public Declare PtrSafe Function Thread32Next Lib "kernel32" (ByVal hSnapshot As LongPtr, lpTE As THREADENTRY32) As Long
Public DeclareWide PtrSafe Function QueryFullProcessImageName Lib "kernel32" Alias "QueryFullProcessImageNameW" (ByVal hProcess As LongPtr, ByVal dwFlags As Long, ByVal lpExeName As String, lpdwSize As Long) As Long
Public DeclareWide PtrSafe Function QueryFullProcessImageNameW Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As Long, ByVal lpExeName As LongPtr, lpdwSize As Long) As Long
Public Declare PtrSafe Function ReadProcessMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, lpNumberOfBytesRead As LongPtr) As Long
Public Declare PtrSafe Function WriteProcessMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, lpNumberOfBytesWritten As LongPtr) As Long
Public Declare PtrSafe Function GetCurrentProcess Lib "kernel32" () As LongPtr

Public Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal uFlags As GMEM, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalReAlloc Lib "kernel32" (ByVal hMem As LongPtr, ByVal dwBytes As LongPtr, ByVal uFlags As GMEM) As LongPtr
Public Declare PtrSafe Function GlobalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function GlobalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalHandle Lib "kernel32" (ByVal pMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalFlags Lib "kernel32" (ByVal hMem As LongPtr) As GMEM
Public Declare PtrSafe Sub GlobalFix Lib "kernel32" (ByVal hMem As LongPtr)
Public Declare PtrSafe Sub GlobalUnfix Lib "kernel32" (ByVal hMem As LongPtr)
Public Declare PtrSafe Function GlobalWire Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnWire Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Sub GlobalMemoryStatus Lib "kernel32" (ByRef lpBuffer As MEMORYSTATUS)
Public Declare PtrSafe Function GlobalMemoryStatusEx Lib "kernel32" (ByRef lpBuffer As MEMORYSTATUSEX) As Long
        
Public Declare PtrSafe Function LocalAlloc Lib "kernel32" (ByVal uFlags As LMEM, ByVal uBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalReAlloc Lib "kernel32" (ByVal hMem As LongPtr, ByVal uBytes As LongPtr, ByVal uFlags As LMEM) As LongPtr
Public Declare PtrSafe Function LocalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function LocalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalHandle Lib "kernel32" (ByVal pMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalFlags Lib "kernel32" (ByVal hMem As LongPtr) As GMEM

Public Declare PtrSafe Function HeapCreate Lib "kernel32" (ByVal flOptions As HeapFlags, ByVal dwInitialSize As LongPtr, ByVal dwMaximumSize As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapAlloc Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapReAlloc Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, lpMem As Any, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapLock Lib "kernel32" (ByVal hHeap As LongPtr) As Long
Public Declare PtrSafe Function HeapUnlock Lib "kernel32" (ByVal hHeap As LongPtr) As Long
Public Declare PtrSafe Function HeapFree Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, ByRef lpMem As Any) As Long
Public Declare PtrSafe Function HeapWalk Lib "kernel32" (ByVal hHeap As LongPtr, lpEntry As PROCESS_HEAP_ENTRY) As Long
Public Declare PtrSafe Function HeapDestroy Lib "kernel32" (ByVal hHeap As LongPtr) As Long
Public Declare PtrSafe Function HeapCompact Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags) As LongPtr
Public Declare PtrSafe Function HeapSize Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, lpMem As Any) As LongPtr
Public Declare PtrSafe Function GetProcessHeaps Lib "kernel32" (ByVal NumberOfHeaps As Long, ByRef ProcessHeaps As LongPtr) As Long
Public Declare PtrSafe Function HeapQueryInformation Lib "kernel32" (ByVal HeapHandle As LongPtr, ByVal HeapInformationClass As HEAP_INFORMATION_CLASS, ByRef HeapInformation As Any, ByVal HeapInformationLength As LongPtr, ByRef ReturnLength As LongPtr) As Long
Public Declare PtrSafe Function HeapSetInformation Lib "kernel32" (ByVal HeapHandle As LongPtr, ByVal HeapInformationClass As HEAP_INFORMATION_CLASS, ByRef HeapInformation As Any, ByVal HeapInformationLength As LongPtr) As Long
Public Declare PtrSafe Function GetProcessHeap Lib "kernel32" () As LongPtr
        
        
Public Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Public Declare PtrSafe Function SleepEx Lib "kernel32" (ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As Long
Public Declare PtrSafe Function CloseHandle Lib "kernel32" (ByVal hObject As LongPtr) As Long
Public Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub MoveMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub ZeroMemory Lib "kernel32" Alias "RtlZeroMemory" (Destination As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub FillMemory Lib "kernel32" Alias "RtlFillMemory" (Destination As Any, ByVal Length As LongPtr, ByVal Fill As Long)

[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadReadPtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadWritePtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadStringPtrA Lib "kernel32" (ByVal lpsz As String, ByVal ucchMax As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadStringPtrW Lib "kernel32" Alias "IsBadStringPtrW" (ByVal lpsz As String, ByVal ucchMax As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadStringPtr Lib "kernel32" (ByVal lpsz As LongPtr, ByVal ucchMax As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadHugeReadPtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadHugeWritePtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description ("WARNING: This function is obsolete and unreliable. It is also in banned.h, APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.") ]
Public Declare PtrSafe Function IsBadCodePtr Lib "kernel32" (ByVal lpfn As LongPtr) As BOOL

Public Declare PtrSafe Sub InitializeCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Function InitializeCriticalSectionAndSpinCount Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION, ByVal dwSpinCount As Long) As BOOL
Public Declare PtrSafe Function InitializeCriticalSectionEx Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION, ByVal dwSpinCount As Long, ByVal Flags As InitCriticalSectExFlags) As BOOL
Public Declare PtrSafe Function TryEnterCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION) As BOOL
Public Declare PtrSafe Sub EnterCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub LeaveCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub DeleteCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Function DuplicateHandle Lib "kernel32" (ByVal hSourceProcessHandle As LongPtr, ByVal hSourceHandle As LongPtr, ByVal hTargetProcessHandle As LongPtr, lpTargetHandle As LongPtr, ByVal dwDesiredAccess As Long, ByVal bInheritHandle As Long, ByVal dwOptions As Long) As Long
Public Declare PtrSafe Function FormatMessageW Lib "kernel32" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As LongPtr, ByVal nSize As Long, Arguments As LongPtr) As Long
Public DeclareWide PtrSafe Function FormatMessage Lib "kernel32" Alias "FormatMessageW" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As LongPtr, ByVal nSize As Long, Arguments As LongPtr) As Long
Public DeclareWide PtrSafe Function GetCurrentProcessId Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentThreadId Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentThread Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As Long) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForMultipleObjects Lib "kernel32" (ByVal nCount As Long, ByRef lpHandles As LongPtr, ByVal bWaitAll As Long, ByVal dwMilliseconds As Long) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForSingleObjectEx Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForMultipleObjectsEx Lib "kernel32" (ByVal nCount As Long, ByRef lpHandles As LongPtr, ByVal bWaitAll As Long, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function SignalObjectAndWait Lib "kernel32" (ByVal hObjectToSignal As LongPtr, ByVal hObjectToWaitOn As LongPtr, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public DeclareWide PtrSafe Function CreateEvent Lib "kernel32" Alias "CreateEventW" (ByVal lpEventAttributes As LongPtr, ByVal bManualReset As Long, ByVal bInitialState As Long, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function PulseEvent Lib "kernel32" (ByVal hEvent As LongPtr) As Long
Public Declare PtrSafe Function SetEvent Lib "kernel32" (ByVal hEvent As LongPtr) As Long
Public Declare PtrSafe Function ResetEvent Lib "kernel32" (ByVal hEvent As LongPtr) As Long
Public Declare PtrSafe Function CreateSemaphoreA Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphoreW Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphore Lib "kernel32" Alias "CreateSemaphoreW" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreExA Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As String, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphoreExW Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As LongPtr, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphoreEx Lib "kernel32" Alias "CreateSemaphoreExW" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As String, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenSemaphoreA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function OpenSemaphoreW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenSemaphore Lib "kernel32" Alias "OpenSemaphoreW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function ReleaseSemaphore Lib "kernel32" (ByVal hSemaphore As LongPtr, ByVal lReleaseCount As Long, Optional lpPreviousCount As Long) As BOOL
Public Declare PtrSafe Function CreateMutexA Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function CreateMutexW Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateMutex Lib "kernel32" Alias "CreateMutexW" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateMutexExA Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As String, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateMutexExW Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As LongPtr, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateMutexEx Lib "kernel32" Alias "CreateMutexExW" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As String, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenMutexA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function OpenMutexW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenMutex Lib "kernel32" Alias "OpenMutexW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function ReleaseMutex Lib "kernel32" (ByVal hMutex As LongPtr) As BOOL
Public Declare PtrSafe Function CreateWaitableTimerA Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As String) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimerW Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimer Lib "kernel32" Alias "CreateWaitableTimerW" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerExA Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimerExW Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimerEx Lib "kernel32" Alias "CreateWaitableTimerExW" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenWaitableTimerA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As String) As LongPtr
Public DeclareWide PtrSafe Function OpenWaitableTimerW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenWaitableTimer Lib "kernel32" Alias "OpenWaitableTimerW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As String) As LongPtr
Public DeclareWide PtrSafe Function CancelWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As LongPtr, lpArgToCompletionRoutine As Any, ByVal fResume As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetWaitableTimerEx Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As LongPtr, lpArgToCompletionRoutine As Any, WakeContext As REASON_CONTEXT, ByVal TolerableDelay As Long) As BOOL
Public DeclareWide PtrSafe Sub InitializeSRWLock Lib "kernel32" (SRWLock As LongPtr)
Public DeclareWide PtrSafe Sub AcquireSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr)
Public DeclareWide PtrSafe Sub AcquireSRWLockShared Lib "kernel32" (SRWLock As LongPtr)
Public DeclareWide PtrSafe Function TryAcquireSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr) As Byte
Public DeclareWide PtrSafe Function TryAcquireSRWLockShared Lib "kernel32" (SRWLock As LongPtr) As Byte
Public DeclareWide PtrSafe Sub ReleaseSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr)
Public DeclareWide PtrSafe Sub ReleaseSRWLockShared Lib "kernel32" (SRWLock As LongPtr)
Public DeclareWide PtrSafe Sub InitializeConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public DeclareWide PtrSafe Function SleepConditionVariableCS Lib "kernel32" (ConditionVariable As LongPtr, CriticalSection As CRITICAL_SECTION, ByVal dwMilliseconds As Long) As BOOL
Public DeclareWide PtrSafe Sub WakeConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public DeclareWide PtrSafe Sub WakeAllConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Function SleepConditionVariableSRW Lib "kernel32" (ConditionVariable As LongPtr, SRWLock As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Function InitializeSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER, ByVal lTotalThreads As Long, ByVal lSpinCount As Long) As BOOL
Public Declare PtrSafe Function EnterSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER, ByVal dwFlags As SyncBarrierFlags) As BOOL
Public Declare PtrSafe Function DeleteSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER) As BOOL
Public DeclareWide PtrSafe Function CreateMailslotW Lib "kernel32" (ByVal lpName As LongPtr, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateMailslot Lib "kernel32" Alias "CreateMailslotW" (ByVal lpName As LongPtr, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function GetMailslotInfo Lib "kernel32" (ByVal hMailslot As LongPtr, Optional lpMaxMessageSize As Long, Optional lpNextSize As Long, Optional lpMessageCount As Long, Optional lpReadTimeout As Long) As BOOL
Public DeclareWide PtrSafe Function SetMailslotInfo Lib "kernel32" (ByVal hMailslot As LongPtr, ByVal lpReadTimeout As Long) As BOOL
Public DeclareWide PtrSafe Function CreateTimerQueue Lib "kernel32" () As LongPtr
Public DeclareWide PtrSafe Function CreateTimerQueueTimer Lib "kernel32" (phNewTimer As LongPtr, ByVal TimerQueue As LongPtr, ByVal Callback As LongPtr, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal Flags As ThreadPoolFlags) As BOOL
Public DeclareWide PtrSafe Function ChangeTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal hTimer As LongPtr, ByVal DueTime As Long, ByVal Period As Long) As BOOL
Public DeclareWide PtrSafe Function DeleteTimerQueue Lib "kernel32" (ByVal TimerQueue As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteTimerQueueEx Lib "kernel32" (ByVal TimerQueue As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal hTimer As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueueUserWorkItem Lib "kernel32" (ByVal pfnStart As LongPtr, Context As Any, ByVal Flags As ThreadPoolFlags) As BOOL


[Description ("Change the protection flags of a memory address") ] Public Declare PtrSafe Function VirtualProtect Lib "kernel32" (ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal flNewProtect As MemProtectFlags, ByRef lpflOldProtect As MemProtectFlags) As Long
Public Declare PtrSafe Function VirtualProtectEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal flNewProtect As MemProtectFlags, ByRef lpflOldProtect As MemProtectFlags) As Long
Public Declare PtrSafe Function VirtualAlloc Lib "kernel32" (ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags) As LongPtr
Public Declare PtrSafe Function VirtualAlloc2 Lib "kernel32" (ByVal Process As LongPtr, ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function VirtualAllocEx Lib "kernel32" (ByVal Process As LongPtr, ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags) As LongPtr
Public Declare PtrSafe Function VirtualFree Lib "kernel32" (ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal dwFreeType As MemAllocType) As BOOL
Public Declare PtrSafe Function VirtualFreeEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpAddress As Any, ByVal dwSize As LongPtr, ByVal dwFreeType As MemAllocType) As BOOL
Public Declare PtrSafe Function VirtualLock Lib "kernel32" (ByRef lpAddress As Any, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function VirtualUnlock Lib "kernel32" (ByRef lpAddress As Any, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function VirtualQuery Lib "kernel32" (ByRef lpAddress As Any, lpBuffer As MEMORY_BASIC_INFORMATION,  ByVal dwLength As LongPtr) As LongPtr
Public Declare PtrSafe Function VirtualQueryEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpAddress As Any, lpBuffer As MEMORY_BASIC_INFORMATION, ByVal dwLength As LongPtr) As LongPtr
Public Declare PtrSafe Function AllocateUserPhysicalPages  Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function AllocateUserPhysicalPagesNuma  Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr, ByVal nndPreferred As Long) As BOOL
Public Declare PtrSafe Function MapUserPhysicalPages Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function FreeUserPhysicalPages Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL

Public Declare PtrSafe Function TlsAlloc Lib "kernel32" () As Long
Public Declare PtrSafe Function TlsSetValue Lib "kernel32" (ByVal dwTlsIndex As Long, ByRef lpTlsValue As Any) As Long
Public Declare PtrSafe Function TlsGetValue Lib "kernel32" (ByVal dwTlsIndex As Long) As LongPtr
Public Declare PtrSafe Function TlsFree Lib "kernel32" (ByVal dwTlsIndex As Long) As Long

Public Declare PtrSafe Function LocalFileTimeToFileTime Lib "kernel32" (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As Long
Public Declare PtrSafe Function FileTimeToLocalFileTime Lib "kernel32" (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As Long
Public Declare PtrSafe Function FileTimeToSystemTime Lib "kernel32" (lpFileTime As FILETIME, lpSystemTime As SYSTEMTIME) As Long
Public Declare PtrSafe Function SystemTimeToFileTime Lib "kernel32" (lpSystemTime As SYSTEMTIME, lpFileTime As FILETIME) As Long
Public DeclareWide PtrSafe Function FindFirstFileExW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAW, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileEx Lib "kernel32" Alias "FindFirstFileExW" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAW, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public Declare PtrSafe Function FindFirstFileW Lib "kernel32" (ByVal lpFileName As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAW) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFile Lib "kernel32" Alias "FindFirstFileW" (ByVal lpFileName As String, ByRef lpFindFileData As WIN32_FIND_DATA) As LongPtr
Public Declare PtrSafe Function FindFirstStreamW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW, ByVal dwFlags As Long) As LongPtr
Public DeclareWide PtrSafe Function FindFirstStream Lib "kernel32" Alias "FindFirstStreamW" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long) As LongPtr
Public Declare PtrSafe Function FindNextFile Lib "kernel32" Alias "FindNextFileW" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAW) As Long
Public Declare PtrSafe Function FindNextStreamW Lib "kernel32" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW) As Long
Public Declare PtrSafe Function FindNextStream Lib "kernel32" Alias "FindNextStreamW" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA) As Long
Public Declare PtrSafe Function FindClose Lib "kernel32" (ByVal hFindFile As LongPtr) As Long
Public Declare PtrSafe Function GetFileInformationByHandle Lib "kernel32" (ByVal hFile As LongPtr, ByRef lpFileInformation As BY_HANDLE_FILE_INFORMATION) As Long
Public Declare PtrSafe Function GetFileInformationByHandleEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_HANDLE_CLASS, ByVal lpFileInformation As LongPtr, ByVal dwBufferSize As Long) As Long
Public Declare PtrSafe Function SetFileInformationByHandle Lib "kernel32" (ByVal hFile As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_HANDLE_CLASS, lpFileInformation As Any, ByVal dwBufferSize As Long) As Long
Public Declare PtrSafe Function GetTickCount Lib "kernel32" () As Long
Public Declare PtrSafe Function GetTickCount64 Lib "kernel32" () As LongLong
Public DeclareWide PtrSafe Function SetDefaultDllDirectories Lib "kernel32" (ByVal DirectoryFlags As LoadLibraryFlags) As BOOL
Public DeclareWide PtrSafe Function AddDllDirectory Lib "kernel32" (ByVal NewDirectory As String) As LongPtr
Public DeclareWide PtrSafe Function RemoveDllDirectory Lib "kernel32" (ByVal Cookie As LongPtr) As BOOL
Public Declare PtrSafe Function SetDllDirectoryA Lib "kernel32" (Optional ByVal lpPathName As String) As BOOL
Public DeclareWide PtrSafe Function SetDllDirectoryW Lib "kernel32" (Optional ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetDllDirectory Lib "kernel32" Alias "SetDllDirectoryW" (Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function LoadLibraryA Lib "kernel32" (ByVal lpLibFileName As String) As LongPtr
Public Declare PtrSafe Function LoadLibraryW Lib "kernel32" (ByVal lpLibFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadLibrary Lib "kernel32" Alias "LoadLibraryW" (ByVal lpLibFileName As String) As LongPtr
Public Declare PtrSafe Function LoadLibraryExA Lib "kernel32" (ByVal lpLibFileName As String, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public Declare PtrSafe Function LoadLibraryExW Lib "kernel32" (ByVal lpLibFileName As LongPtr, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadLibraryEx Lib "kernel32" Alias "LoadLibraryExW" (ByVal lpLibFileName As String, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public Declare PtrSafe Function GetProcAddress Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpProcName As String) As LongPtr
Public Declare PtrSafe Function FreeLibrary Lib "kernel32" (ByVal hLibModule As LongPtr) As Long
Public DeclareWide PtrSafe Function GetModuleHandle Lib "kernel32" Alias "GetModuleHandleW" (Optional lpModuleName As Any) As LongPtr
Public Declare PtrSafe Function GetModuleHandleA Lib "kernel32" (Optional ByVal lpModuleName As String) As LongPtr
Public Declare PtrSafe Function GetModuleHandleW Lib "kernel32" (Optional ByVal lpModuleName As LongPtr) As LongPtr
Public Declare PtrSafe Sub FreeLibraryAndExitThread Lib "kernel32" (ByVal hLibModule As LongPtr, ByVal dwExitCode As Long)
Public DeclareWide PtrSafe Function GetWindowsDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryW" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileNameW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileName Lib "kernel32" Alias "GetModuleFileNameW" (ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameExA Lib "kernel32" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileNameExW Lib "kernel32" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileNameEx Lib "kernel32" Alias "GetModuleFileNameExW" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProcessImageFileNameA Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpImageFileName As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProcessImageFileNameW Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpImageFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProcessImageFileName Lib "kernel32" Alias "GetProcessImageFileNameW" (ByVal hProcess As LongPtr, ByVal lpImageFileName As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function EnumProcesses Lib "kernel32" (lpidProcess As Long, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function EnumProcessModules Lib "kernel32" (ByVal hProcess As LongPtr, lphModule As LongPtr, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function EnumProcessModulesEx Lib "kernel32" (ByVal hProcess As LongPtr, lphModule As LongPtr, ByVal cb As Long, lpcbNeeded As Long, ByVal dwFilterFlag As EnumModulesFlags) As BOOL
Public DeclareWide PtrSafe Function GetProcessMemoryInfo Lib "kernel32" (ByVal hProcess As LongPtr, ppsmemCounters As PROCESS_MEMORY_COUNTERS_EX, ByVal cb As Long) As BOOL


Public Declare PtrSafe Function LoadResource Lib "kernel32" (ByVal hInstance As LongPtr, ByVal hResInfo As LongPtr) As LongPtr
Public Declare PtrSafe Function LockResource Lib "kernel32" (ByVal hResData As LongPtr) As LongPtr
Public Declare PtrSafe Function FreeResource Lib "kernel32" (ByVal hResData As LongPtr) As BOOL
Public Declare PtrSafe Function FindResourceW Lib "kernel32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindResource Lib "kernel32" Alias "FindResourceW" (ByVal hInstance As LongPtr, ByVal lpName As String, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public Declare PtrSafe Function FindResourceExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal wLanguage As Integer) As LongPtr
Public DeclareWide PtrSafe Function FindResourceEx Lib "kernel32" Alias "FindResourceExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer) As LongPtr
Public Declare PtrSafe Function SizeofResource Lib "kernel32" (ByVal hModule As LongPtr, ByVal hResInfo As LongPtr) As Long
Public DeclareWide PtrSafe Function BeginUpdateResourceW Lib "kernel32" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public DeclareWide PtrSafe Function BeginUpdateResource Lib "kernel32" Alias "BeginUpdateResourceW" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public DeclareWide PtrSafe Function EndUpdateResourceW Lib "kernel32" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public DeclareWide PtrSafe Function EndUpdateResource Lib "kernel32" Alias "EndUpdateResourceW" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguagesW Lib "kernel32" (ByVal hModule As LongPtr, [ TypeHint (ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguages Lib "kernel32" Alias "EnumResourceLanguagesW" (ByVal hModule As LongPtr, [ TypeHint (ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypesW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypes Lib "kernel32" Alias "EnumResourceTypesW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNamesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNames Lib "kernel32" Alias "EnumResourceNamesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguagesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguagesEx Lib "kernel32" Alias "EnumResourceLanguagesExW" (ByVal hModule As LongPtr, [TypeHint (ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypesExW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypesEx Lib "kernel32" Alias "EnumResourceTypesExW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNamesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNamesEx Lib "kernel32" Alias "EnumResourceNamesExW" (ByVal hModule As LongPtr, [TypeHint (ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function UpdateResourceW Lib "kernel32" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL
Public DeclareWide PtrSafe Function UpdateResource Lib "kernel32" Alias "UpdateResourceW" (ByVal hUpdate As LongPtr, [TypeHint (ResourceTypes) ] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL

Public Declare PtrSafe Function lstrcmpA  Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public DeclareWide PtrSafe Function lstrcmpW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As Long
Public DeclareWide PtrSafe Function lstrcmp Lib "kernel32" Alias "lstrcmpW" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public Declare PtrSafe Function lstrcmpiA  Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public DeclareWide PtrSafe Function lstrcmpiW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As Long
Public DeclareWide PtrSafe Function lstrcmpi Lib "kernel32" Alias "lstrcmpiW" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public Declare PtrSafe Function lstrcatA Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
Public DeclareWide PtrSafe Function lstrcatW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function lstrcat Lib "kernel32" Alias "lstrcatW" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
Public Declare PtrSafe Function lstrcpyA Lib "kernel32" (lpString1 As Any, lpString2 As Any) As LongPtr
Public DeclareWide PtrSafe Function lstrcpy Lib "kernel32" Alias "lstrcpyW" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
Public Declare PtrSafe Function lstrcpyW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As LongPtr
Public Declare PtrSafe Function lstrlenA Lib "kernel32" (lpString As Any) As Long
Public Declare PtrSafe Function lstrlenW Lib "kernel32" (lpString As Any) As Long

Public Declare PtrSafe Function WritePrivateProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lsString As String, ByVal lplFilename As String) As Long
Public Declare PtrSafe Function GetPrivateProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public DeclareWide PtrSafe Function WritePrivateProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lsString As LongPtr, ByVal lplFilename As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpDefault As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lsString As String, ByVal lplFilename As String) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long


Public Enum TRANSACTION_OPTION_FLAGS
    TRANSACTION_DO_NOT_PROMOTE = &H1
End Enum
Public Enum TRANSACTION_MANAGER_OPTIONS
    TRANSACTION_MANAGER_VOLATILE  = &H00000001
    TRANSACTION_MANAGER_COMMIT_DEFAULT  = &H00000000
    TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME  = &H00000002
    TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES  = &H00000004
    TRANSACTION_MANAGER_COMMIT_LOWEST  = &H00000008
    TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY  = &H00000010
    TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS  = &H00000020
    TRANSACTION_MANAGER_MAXIMUM_OPTION  = &H0000003F
End Enum
Public Enum TRANSACTION_MANAGER_RESOURCE_OPTIONS
    RESOURCE_MANAGER_VOLATILE  = &H00000001
    RESOURCE_MANAGER_COMMUNICATION  = &H00000002
    RESOURCE_MANAGER_MAXIMUM_OPTION  = &H00000003
End Enum
Public Enum TRANSACTION_PROTOCOL_OPTIONS
    CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY  = &H00000001
    CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO  = &H00000002
    CRM_PROTOCOL_MAXIMUM_OPTION  = &H00000003
End Enum
Public Enum TRANSACTION_ENLISTMENT_OPTIONS
    ENLISTMENT_SUPERIOR = &H1
End Enum
Public Enum TRANSACTION_NOTIFY_FLAGS
    TRANSACTION_NOTIFY_MASK  = &H3FFFFFFF
    TRANSACTION_NOTIFY_PREPREPARE  = &H00000001
    TRANSACTION_NOTIFY_PREPARE  = &H00000002
    TRANSACTION_NOTIFY_COMMIT  = &H00000004
    TRANSACTION_NOTIFY_ROLLBACK  = &H00000008
    TRANSACTION_NOTIFY_PREPREPARE_COMPLETE  = &H00000010
    TRANSACTION_NOTIFY_PREPARE_COMPLETE  = &H00000020
    TRANSACTION_NOTIFY_COMMIT_COMPLETE  = &H00000040
    TRANSACTION_NOTIFY_ROLLBACK_COMPLETE  = &H00000080
    TRANSACTION_NOTIFY_RECOVER  = &H00000100
    TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT  = &H00000200
    TRANSACTION_NOTIFY_DELEGATE_COMMIT  = &H00000400
    TRANSACTION_NOTIFY_RECOVER_QUERY  = &H00000800
    TRANSACTION_NOTIFY_ENLIST_PREPREPARE  = &H00001000
    TRANSACTION_NOTIFY_LAST_RECOVER  = &H00002000
    TRANSACTION_NOTIFY_INDOUBT  = &H00004000
    TRANSACTION_NOTIFY_PROPAGATE_PULL  = &H00008000&
    TRANSACTION_NOTIFY_PROPAGATE_PUSH  = &H00010000
    TRANSACTION_NOTIFY_MARSHAL  = &H00020000
    TRANSACTION_NOTIFY_ENLIST_MASK  = &H00040000
    TRANSACTION_NOTIFY_RM_DISCONNECTED  = &H01000000
    TRANSACTION_NOTIFY_TM_ONLINE  = &H02000000
    TRANSACTION_NOTIFY_COMMIT_REQUEST  = &H04000000
    TRANSACTION_NOTIFY_PROMOTE  = &H08000000
    TRANSACTION_NOTIFY_PROMOTE_NEW  = &H10000000
    TRANSACTION_NOTIFY_REQUEST_OUTCOME  = &H20000000
'   Note that this flag is not included in the TRANSACTION_NOTIFY_MASK.
'   The reason being that KTM does not understand this flag yet. This
'   flag is strictly for the use of filter manager. In fact we mask it
'   out before enlisting in any transaction.
    TRANSACTION_NOTIFY_COMMIT_FINALIZE  = &H40000000
End Enum

Public Const TRANSACTIONMANAGER_OBJECT_PATH  = "\TransactionManager\"
Public Const TRANSACTION_OBJECT_PATH  = "\Transaction\"
Public Const ENLISTMENT_OBJECT_PATH  = "\Enlistment\"
Public Const RESOURCE_MANAGER_OBJECT_PATH  = "\ResourceManager\"

Public Type TRANSACTION_NOTIFICATION
    TransactionKey As LongPtr
    TransactionNotification As TRANSACTION_NOTIFY_FLAGS
    TmVirtualClock As QLARGE_INTEGER
    ArgumentLength As Long
End Type

Public Type TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
    EnlistmentId As UUID
    UOW As UUID
End Type
Public Type TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
    TmIdentity As UUID
    Flags As Long
End Type

Public Enum TRANSACTION_OBJECT_RIGHTS
    TRANSACTION_QUERY_INFORMATION  = ( &H0001 )
    TRANSACTION_SET_INFORMATION  = ( &H0002 )
    TRANSACTION_ENLIST  = ( &H0004 )
    TRANSACTION_COMMIT  = ( &H0008 )
    TRANSACTION_ROLLBACK  = ( &H0010 )
    TRANSACTION_PROPAGATE  = ( &H0020 )
    TRANSACTION_RIGHT_RESERVED1  = ( &H0040 )
    TRANSACTION_GENERIC_READ            = (STANDARD_RIGHTS_READ Or TRANSACTION_QUERY_INFORMATION Or SYNCHRONIZE)
    TRANSACTION_GENERIC_WRITE           = (STANDARD_RIGHTS_WRITE Or TRANSACTION_SET_INFORMATION Or TRANSACTION_COMMIT Or TRANSACTION_ENLIST Or TRANSACTION_ROLLBACK Or TRANSACTION_PROPAGATE Or SYNCHRONIZE)
    TRANSACTION_GENERIC_EXECUTE         = (STANDARD_RIGHTS_EXECUTE Or TRANSACTION_COMMIT Or TRANSACTION_ROLLBACK Or SYNCHRONIZE)
    TRANSACTION_ALL_ACCESS              = (STANDARD_RIGHTS_REQUIRED Or TRANSACTION_GENERIC_READ Or TRANSACTION_GENERIC_WRITE Or TRANSACTION_GENERIC_EXECUTE)
    TRANSACTION_RESOURCE_MANAGER_RIGHTS = (TRANSACTION_GENERIC_READ Or STANDARD_RIGHTS_WRITE Or TRANSACTION_SET_INFORMATION Or TRANSACTION_ENLIST Or TRANSACTION_ROLLBACK  Or TRANSACTION_PROPAGATE Or SYNCHRONIZE)
End Enum
Public Enum TRANSACTION_OUTCOME
    TransactionOutcomeUndetermined=1
    TransactionOutcomeCommitted = 2
    TransactionOutcomeAborted = 3
End Enum
Public Enum TXFS_MINIVERSION
    TXFS_MINIVERSION_COMMITTED_VIEW  = &H0000
    TXFS_MINIVERSION_DIRTY_VIEW  = &HFFFE&
    TXFS_MINIVERSION_DEFAULT_VIEW = &HFFFF&
End Enum

Public Enum ReplaceFileFlags
    REPLACEFILE_WRITE_THROUGH  = &H00000001
    REPLACEFILE_IGNORE_MERGE_ERRORS  = &H00000002
    REPLACEFILE_IGNORE_ACL_ERRORS  = &H00000004
End Enum

Public Type FILE_SEGMENT_ELEMENT
    Buffer As LongPtr
    #If Win64 = 0 Then
    Alignment As Long
    #End If
End Type

Public DeclareWide PtrSafe Function CreateTransaction Lib "ktmw32" (lpTransactionAttributes As SECURITY_ATTRIBUTES, UOW As GUID, Optional ByVal CreateOptions As TRANSACTION_OPTION_FLAGS, Optional ByVal IsolationLevel As Long, Optional ByVal IsolationFlags As Long, Optional ByVal Timeout As Long, Optional ByVal Description As String) As LongPtr
Public DeclareWide PtrSafe Function CommitTransaction Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CommitTransactionAsync Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RollbackTransaction Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RollbackTransactionAsync Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function OpenTransaction Lib "ktmw32" (ByVal dwDesiredAccess As TRANSACTION_OBJECT_RIGHTS, TransactionId As UUID) As LongPtr
Public DeclareWide PtrSafe Function GetTransactionId Lib "ktmw32" (ByVal TransactionHandle As LongPtr, TransactionId As UUID) As BOOL
Public DeclareWide PtrSafe Function GetTransactionInformation Lib "ktmw32" (ByVal TransactionHandle As LongPtr, Optional Outcome As TRANSACTION_OUTCOME, Optional IsolationLevel As Long, Optional IsolationFlags As Long, Optional Timeout As Long, Optional ByVal BufferLength As Long, Optional ByVal Description As String) As BOOL
Public DeclareWide PtrSafe Function SetTransactionInformation Lib "ktmw32" (ByVal TransactionHandle As LongPtr, Optional ByVal IsolationLevel As Long, Optional ByVal IsolationFlags As Long, Optional ByVal Timeout As Long, Optional ByVal Description As String) As BOOL

Public Declare PtrSafe Function WriteFile Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function WriteFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr) As Long
Public Declare PtrSafe Function WriteFileGather Lib "kernel32" (ByVal hFile As LongPtr, aSegmentArray As FILE_SEGMENT_ELEMENT, ByVal nNumberOfBytesToWrite As Long, lpReserved As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function ReadFile Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, ByVal lpOverlapped As Any) As Long
Public Declare PtrSafe Function ReadFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function ReadFileScatter Lib "kernel32" (ByVal hFile As LongPtr, aSegmentArray As FILE_SEGMENT_ELEMENT, ByVal nNumberOfBytesToRead As Long, lpReserved As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetFilePointer Lib "kernel32" (ByVal hFile As LongPtr, ByVal lDistanceToMove As Long, lpDistanceToMoveHigh As Long, ByVal dwMoveMethod As FileMoveMethods) As Long
Public Declare PtrSafe Function SetFilePointerEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal lDistanceToMove As LongLong, lpDistanceToMoveHigh As LongLong, ByVal dwMoveMethod As FileMoveMethods) As Long
Public Declare PtrSafe Function SetEndOfFile Lib "kernel32" (ByVal hFile As LongPtr) As Long
Public Declare PtrSafe Function CreateFileA Lib "kernel32" (ByVal lpFileName As String, [ TypeHint (GenericRights, StandardAccessTypes , FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES , SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateFileW Lib "kernel32" (ByVal lpFileName As LongPtr, [ TypeHint (GenericRights, StandardAccessTypes , FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFile Lib "kernel32" Alias "CreateFileW" (ByVal lpFileName As String, [ TypeHint (GenericRights, StandardAccessTypes, FileAccessRights) ]ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES , SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateFileTransactedA Lib "kernel32" (ByVal lpFileName As String, [ TypeHint (GenericRights, StandardAccessTypes , FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES , SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint (TXFS_MINIVERSION) ] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public Declare PtrSafe Function CreateFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, [ TypeHint (GenericRights, StandardAccessTypes , FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION) ] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateFileTransacted Lib "kernel32" Alias "CreateFileTransactedW" (ByVal lpFileName As String, [ TypeHint (GenericRights, StandardAccessTypes, FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES , SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint (TXFS_MINIVERSION) ] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public Declare PtrSafe Function CreateFile2 Lib "kernel32" (ByVal lpFileName As LongPtr, [ TypeHint (GenericRights, StandardAccessTypes , FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, ByVal dwCreationDisposition As CreateFileDisposition, pCreateExParams As CREATEFILE2_EXTENDED_PARAMETERS) As LongPtr
Public Declare PtrSafe Function ReOpenFile Lib "kernel32" (ByVal hOriginalFile As LongPtr, [ TypeHint (GenericRights, StandardAccessTypes , FileAccessRights) ] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, [ TypeHint (FILE_FLAGS, FILE_ATTRIBUTES , SQOS_Bits) ] ByVal dwFlagsAndAttributes As Long) As Long
Public Declare PtrSafe Function FlushFileBuffers Lib "kernel32" (ByVal hFile As LongPtr) As Long
Public Declare PtrSafe Function LockFile Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFileOffsetLow As Long, ByVal dwFileOffsetHigh As Long, ByVal nNumberOfBytesToLockLow As Long, ByVal nNumberOfBytesToLockHigh As Long) As BOOL
Public Declare PtrSafe Function LockFileEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFlags As LockFileExFlags, ByVal dwReserved As Long, ByVal nNumberOfBytesToLockLow As Long, ByVal nNumberOfBytesToLockHigh As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function UnlockFile Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFileOffsetLow As Long, ByVal dwFileOffsetHigh As Long, ByVal nNumberOfBytesToUnlockLow As Long, ByVal nNumberOfBytesToUnlockHigh As Long) As BOOL
Public Declare PtrSafe Function UnlockFileEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwReserved As Long, ByVal nNumberOfBytesToUnlockLow As Long, ByVal nNumberOfBytesToUnlockHigh As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetFileValidData Lib "kernel32" (ByVal hFile As LongPtr, ByVal ValidDataLength As LongLong) As BOOL
Public Declare PtrSafe Function GetFileSize Lib "kernel32" (ByVal hFile As LongPtr, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetFileSizeEx Lib "kernel32" (ByVal hFile As LongPtr, lpFileSizeHigh As LongLong) As BOOL
Public DeclareWide PtrSafe Function DeleteFile Lib "kernel32" Alias "DeleteFileW" (ByVal lpFileName As String) As BOOL
Public DeclareWide PtrSafe Function DeleteFileW Lib "kernel32" (ByVal lpFileName As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileA Lib "kernel32" (ByVal lpFileName As String) As BOOL
Public DeclareWide PtrSafe Function DeleteFileTransacted Lib "kernel32" Alias "DeleteFileTransactedW" (ByVal lpFileName As String, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function GetFileType Lib "kernel32" (ByVal hFile As LongPtr) As FileBaseType
Public DeclareWide PtrSafe Function CreateFileMappingW Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags) ] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMapping Lib "kernel32" Alias "CreateFileMappingW" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMapping2 Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [ TypeHint (GenericRights, FileMapFlags) ] ByVal DesiredAccess As Long, ByVal PageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, ByVal MaximumSize As LongLong, ByVal Name As String, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ParameterCount As Long) As LongPtr
Public DeclareWide PtrSafe Function OpenFileMappingW Lib "kernel32" ([TypeHint(GenericRights, FileMapFlags) ] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenFileMapping Lib "kernel32" Alias "OpenFileMappingW" ([TypeHint (GenericRights, FileMapFlags) ] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function MapViewOfFile Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function MapViewOfFile2 Lib "kernel32" (ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags) As LongPtr
Public DeclareWide PtrSafe Function MapViewOfFile3 Lib "kernel32" (ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ParameterCount As Long) As LongPtr
Public DeclareWide PtrSafe Function MapViewOfFileEx Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr, Optional ByVal lpBaseAddress As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function UnmapViewOfFile Lib "kernel32" (ByVal BaseAddress As LongPtr) As BOOL
Public DeclareWide PtrSafe Function UnmapViewOfFileEx Lib "kernel32" (ByVal BaseAddress As LongPtr, ByVal UnmapFlags As MemAllocType) As BOOL
Public DeclareWide PtrSafe Function UnmapViewOfFile2 Lib "kernel32" (ByVal Process As LongPtr, ByVal BaseAddress As LongPtr, ByVal UnmapFlags As MemAllocType) As BOOL
Public Declare PtrSafe Function CopyFileA  Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As BOOL) As BOOL
Public DeclareWide PtrSafe Function CopyFileW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal bFailIfExists As BOOL) As BOOL
Public DeclareWide PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As BOOL) As BOOL
Public Declare PtrSafe Function CopyFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public DeclareWide PtrSafe Function CopyFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public DeclareWide PtrSafe Function CopyFileEx Lib "kernel32" Alias "CopyFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public Declare PtrSafe Function CopyFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFileTransacted Lib "kernel32" Alias "CopyFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFile2 Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, pExtendedParameters As COPYFILE2_EXTENDED_PARAMETERS) As BOOL
Public Declare PtrSafe Function MoveFileA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As BOOL
Public DeclareWide PtrSafe Function MoveFileW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFile Lib "kernel32" Alias "MoveFileW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As BOOL
Public Declare PtrSafe Function MoveFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileEx Lib "kernel32" Alias "MoveFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileWithProgressA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileWithProgressW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileWithProgress Lib "kernel32" Alias "MoveFileWithProgressW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFileTransacted Lib "kernel32" Alias "MoveFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function ReplaceFileA Lib "kernel32" (ByVal lpReplacedFileName As String, ByVal lpReplacementFileName As String, ByVal lpBackupFileName As String, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReplaceFileW Lib "kernel32" (ByVal lpReplacedFileName As LongPtr, ByVal lpReplacementFileName As LongPtr, ByVal lpBackupFileName As LongPtr, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReplaceFile Lib "kernel32" Alias "ReplaceFileW" (ByVal lpReplacedFileName As String, ByVal lpReplacementFileName As String, ByVal lpBackupFileName As String, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function GetFullPathNameA Lib "kernel32" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As String) As Long
Public DeclareWide PtrSafe Function GetFullPathNameW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, lpFilePart As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathName Lib "kernel32" Alias "GetFullPathNameW" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As LongPtr) As Long
Public Declare PtrSafe Function GetFullPathNameTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As String, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathNameTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, lpFilePart As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathNameTransacted Lib "kernel32" Alias "GetFullPathNameTransactedW" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameA Lib "kernel32" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathNameW Lib "kernel32" (ByVal lpszShortPath As LongPtr, ByVal lpszLongPath As LongPtr, ByVal cchBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathName Lib "kernel32" Alias "GetLongPathNameW" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameTransactedA Lib "kernel32" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathNameTransactedW Lib "kernel32" (ByVal lpszShortPath As LongPtr, ByVal lpszLongPath As LongPtr, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathNameTransacted Lib "kernel32" Alias "GetLongPathNameTransactedW" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetShortPathNameA Lib "kernel32" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Public DeclareWide PtrSafe Function GetShortPathNameW Lib "kernel32" (ByVal lpszLongPath As LongPtr, ByVal lpszShortPath As LongPtr, ByVal cchBuffer As Long) As Long
Public DeclareWide PtrSafe Function GetShortPathName Lib "kernel32" Alias "GetShortPathNameW" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Public Declare PtrSafe Function GetTempPathA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public DeclareWide PtrSafe Function GetTempPathW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempPath Lib "kernel32" Alias "GetTempPathW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long

Public Declare PtrSafe Function GetCurrentDirectoryA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public DeclareWide PtrSafe Function GetCurrentDirectoryW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetCurrentDirectory Lib "kernel32" Alias "GetCurrentDirectoryW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function SetCurrentDirectoryA Lib "kernel32" (ByVal lpBuffer As String) As Long
Public DeclareWide PtrSafe Function SetCurrentDirectoryW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function RemoveDirectoryA Lib "kernel32" (ByVal lpPathName As String) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectory Lib "kernel32" Alias "RemoveDirectoryW" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryTransactedA Lib "kernel32" (ByVal lpPathName As String, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectoryTransactedW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectoryTransacted Lib "kernel32" Alias "RemoveDirectoryTransactedW" (ByVal lpPathName As String, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CreateDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateDirectoryA Lib "kernel32" (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateDirectory Lib "kernel32" Alias "CreateDirectoryW" (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateDirectoryExA Lib "kernel32" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function CreateDirectoryExW Lib "kernel32" (ByVal lpTemplateDirectory As LongPtr, ByVal lpNewDirectory As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public DeclareWide PtrSafe Function CreateDirectoryEx Lib "kernel32" Alias "CreateDirectoryExW" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function CreateDirectoryTransactedA Lib "kernel32" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateDirectoryTransactedW Lib "kernel32" (ByVal lpTemplateDirectory As LongPtr, ByVal lpNewDirectory As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateDirectoryTransacted Lib "kernel32" Alias "CreateDirectoryTransactedW" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long


Public Enum MoveFileExFlags
	MOVEFILE_REPLACE_EXISTING = &H00000001
	MOVEFILE_COPY_ALLOWED  = &H00000002
	MOVEFILE_DELAY_UNTIL_REBOOT  = &H00000004
	MOVEFILE_WRITE_THROUGH  = &H00000008
	MOVEFILE_CREATE_HARDLINK  = &H00000010
	MOVEFILE_FAIL_IF_NOT_TRACKABLE  = &H00000020
End Enum

Public Enum COPYFILE2_MESSAGE_TYPE
	COPYFILE2_CALLBACK_NONE=0
	COPYFILE2_CALLBACK_CHUNK_STARTED = 1
	COPYFILE2_CALLBACK_CHUNK_FINISHED = 2
	COPYFILE2_CALLBACK_STREAM_STARTED = 3
	COPYFILE2_CALLBACK_STREAM_FINISHED = 4
	COPYFILE2_CALLBACK_POLL_CONTINUE = 5
	COPYFILE2_CALLBACK_ERROR = 6
	COPYFILE2_CALLBACK_MAX = 7
End Enum

Public Enum COPYFILE2_MESSAGE_ACTION
	COPYFILE2_PROGRESS_CONTINUE=0
	COPYFILE2_PROGRESS_CANCEL = 1
	COPYFILE2_PROGRESS_STOP = 2
	COPYFILE2_PROGRESS_QUIET = 3
	COPYFILE2_PROGRESS_PAUSE = 4
End Enum

Public Enum COPYFILE2_COPY_PHASE
	COPYFILE2_PHASE_NONE=0
	COPYFILE2_PHASE_PREPARE_SOURCE = 1
	COPYFILE2_PHASE_PREPARE_DEST = 2
	COPYFILE2_PHASE_READ_SOURCE = 3
	COPYFILE2_PHASE_WRITE_DESTINATION = 4
	COPYFILE2_PHASE_SERVER_COPY = 5
	COPYFILE2_PHASE_NAMEGRAFT_COPY = 6
	'  ... etc phases.
	COPYFILE2_PHASE_MAX = 7
End Enum

Public Enum CopyFileFlags
	COPY_FILE_FAIL_IF_EXISTS  = &H00000001
	COPY_FILE_RESTARTABLE  = &H00000002
	COPY_FILE_OPEN_SOURCE_FOR_WRITE  = &H00000004
	COPY_FILE_ALLOW_DECRYPTED_DESTINATION  = &H00000008
	COPY_FILE_COPY_SYMLINK  = &H00000800
	COPY_FILE_NO_BUFFERING  = &H00001000
	COPY_FILE_REQUEST_SECURITY_PRIVILEGES  = &H00002000
	COPY_FILE_RESUME_FROM_PAUSE  = &H00004000
	COPY_FILE_NO_OFFLOAD  = &H00040000
	COPY_FILE_IGNORE_EDP_BLOCK  = &H00400000
	COPY_FILE_IGNORE_SOURCE_ENCRYPTION  = &H00800000
'  Don't request WRITE_DAC for the destination file access.
	COPY_FILE_DONT_REQUEST_DEST_WRITE_DAC  = &H02000000
'  If either source or target is an SMB share, compression
'  will be requested on all READs and WRITEs.
	COPY_FILE_REQUEST_COMPRESSED_TRAFFIC  = &H10000000
	COPY_FILE_OPEN_AND_COPY_REPARSE_POINT  = &H00200000
	COPY_FILE_DIRECTORY  = &H00000080
	COPY_FILE_SKIP_ALTERNATE_STREAMS = &H00008000&
	COPY_FILE_DISABLE_PRE_ALLOCATION  = &H04000000
	COPY_FILE_ENABLE_LOW_FREE_SPACE_MODE  = &H08000000
	COPY_FILE_ENABLE_SPARSE_COPY  = &H20000000
End Enum

Public Const COPYFILE2_IO_CYCLE_SIZE_MIN  = 4096
'  maximum allowed requested i/o size, in bytes (1GB)
'  (constrains COPYFILE2_EXTENDED_PARAMETERS_V2 ioDesiredSize field).
Public Const COPYFILE2_IO_CYCLE_SIZE_MAX  = &H40000000
'  minimum allowed requested average i/o rate, in kbytes per second
'  (constrains COPYFILE2_EXTENDED_PARAMETERS_V2 ioDesiredRate field).
Public Const COPYFILE2_IO_RATE_MIN  = 512

Public Type COPYFILE2_EXTENDED_PARAMETERS
	dwSize As Long
	dwCopyFlags As CopyFileFlags
	pfCancel As LongPtr
	pProgressRoutine As LongPtr
	pvCallbackContext As LongPtr
End Type
Public Type COPYFILE2_EXTENDED_PARAMETERS_V2
	dwSize As Long
	dwCopyFlags As CopyFileFlags
	pfCancel As LongPtr
	pProgressRoutine As LongPtr
	pvCallbackContext As LongPtr
	' Additional copy flags (COPYFILE2_EXTENDED_PARAMETERS_V2 only;
	' treated as zero if COPYFILE2_EXTENDED_PARAMETERS is used).
	dwCopyFlagsV2 As Long
	' size of the i/o for each {read, write} cycle, in bytes
	' (may be reduced, if insufficient memory is available)
	' if zero: use a suitable default.
	' may be ignored if ioDesiredRate is specified (i.e.,
	' CopyFile2() will disregard if a requested size is
	' rate is inappropriate for a requested rate.)
	ioDesiredSize As Long
	' requested average i/o rate, in kbytes per second.
	' if zero: use a suitable default (usually as fast as possible).
	ioDesiredRate As Long
	' reserved for future use; must be set to zero
	reserved(0 To 7) As LongPtr
End Type

[Description("Copy union() to one of the COPYFILE2_INFO_* UDTs based on the Type member.")]
Public Type COPYFILE2_MESSAGE
    Type As COPYFILE2_MESSAGE_TYPE
    dwPadding As Long
    union(63) As Byte
End Type
Public Type COPYFILE2_INFO_CHUNKSTARTED
	dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliChunkNumber As LongLong
    uliChunkSize As LongLong
    uliStreamSize As LongLong
    uliTotalFileSize As LongLong
End Type
Public Type COPYFILE2_INFO_CHUNKFINISHED
    dwStreamNumber As Long
    dwFlags As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliChunkNumber As LongLong
    uliChunkSize As LongLong
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type
Public Type COPYFILE2_INFO_STREAMSTARTED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliStreamSize As LongLong
    uliTotalFileSize As LongLong
End Type
Public Type COPYFILE2_INFO_STREAMFINISHED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type
Public Type COPYFILE2_INFO_POLLCONTINUE
    dwReserved As Long
End Type
Public Type COPYFILE2_INFO_ERROR
    dwStreamNumber As Long
    hrFailure As Long
    dwReserved As Long
    uliChunkNumber As LongLong
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type

Public Const CALLBACK_CHUNK_FINISHED  = &H00000000
Public Const CALLBACK_STREAM_SWITCH  = &H00000001

Public Enum CopyProgressReturns
	PROGRESS_CONTINUE  = 0
	PROGRESS_CANCEL  = 1
	PROGRESS_STOP  = 2
	PROGRESS_QUIET  = 3
End Enum

Public Enum FileShareMode
	FILE_SHARE_READ = &H00000001
	FILE_SHARE_WRITE  = &H00000002
	FILE_SHARE_DELETE  = &H00000004
End Enum

Public Type CREATEFILE2_EXTENDED_PARAMETERS
	dwSize As Long
	dwFileAttributes As FILE_ATTRIBUTES
	dwFileFlags As FILE_FLAGS
	dwSecurityQosFlags As SQOS_Bits
	lpSecurityAttributes As LongPtr
	hTemplateFile As LongPtr
End Type

Public Enum FileSystemFlags
    FILE_CASE_SENSITIVE_SEARCH  = &H00000001
    FILE_CASE_PRESERVED_NAMES  = &H00000002
    FILE_UNICODE_ON_DISK  = &H00000004
    FILE_PERSISTENT_ACLS  = &H00000008
    FILE_FILE_COMPRESSION  = &H00000010
    FILE_VOLUME_QUOTAS  = &H00000020
    FILE_SUPPORTS_SPARSE_FILES  = &H00000040
    FILE_SUPPORTS_REPARSE_POINTS  = &H00000080
    FILE_SUPPORTS_REMOTE_STORAGE  = &H00000100
    FILE_RETURNS_CLEANUP_RESULT_INFO  = &H00000200
    FILE_SUPPORTS_POSIX_UNLINK_RENAME  = &H00000400
    FILE_SUPPORTS_BYPASS_IO  = &H00000800
    FILE_SUPPORTS_STREAM_SNAPSHOTS  = &H00001000
    FILE_SUPPORTS_CASE_SENSITIVE_DIRS  = &H00002000
    FILE_VOLUME_IS_COMPRESSED = &H00008000&
    FILE_SUPPORTS_OBJECT_IDS  = &H00010000
    FILE_SUPPORTS_ENCRYPTION  = &H00020000
    FILE_NAMED_STREAMS  = &H00040000
    FILE_READ_ONLY_VOLUME  = &H00080000
    FILE_SEQUENTIAL_WRITE_ONCE  = &H00100000
    FILE_SUPPORTS_TRANSACTIONS  = &H00200000
    FILE_SUPPORTS_HARD_LINKS  = &H00400000
    FILE_SUPPORTS_EXTENDED_ATTRIBUTES  = &H00800000
    FILE_SUPPORTS_OPEN_BY_FILE_ID  = &H01000000
    FILE_SUPPORTS_USN_JOURNAL  = &H02000000
    FILE_SUPPORTS_INTEGRITY_STREAMS  = &H04000000
    FILE_SUPPORTS_BLOCK_REFCOUNTING  = &H08000000
    FILE_SUPPORTS_SPARSE_VDL  = &H10000000
    FILE_DAX_VOLUME  = &H20000000
    FILE_SUPPORTS_GHOSTING  = &H40000000
End Enum

Public Type TIME_ZONE_INFORMATION
    Bias As Long
    StandardName(0 To 31) As Integer
    StandardDate As SYSTEMTIME
    StandardBias As Long
    DaylightName(0 To 31) As Integer
    DaylightDate As SYSTEMTIME
    DaylightBias As Long
End Type
Public Type DYNAMIC_TIME_ZONE_INFORMATION
    Bias As LONG
    StandardName(31) As Integer
    StandardDate As SYSTEMTIME
    StandardBias As LONG
    DaylightName(31) As Integer
    DaylightDate As SYSTEMTIME
    DaylightBias As LONG
    TimeZoneKeyName(127) As Integer
    DynamicDaylightTimeDisabled As Byte
End Type

Public Enum TIME_ZONE_ID
    TIME_ZONE_ID_UNKNOWN  = 0
    TIME_ZONE_ID_STANDARD  = 1
    TIME_ZONE_ID_DAYLIGHT  = 2
    TIME_ZONE_ID_INVALID  = (&HFFFFFFFF)
End Enum


Public DeclareWide PtrSafe Function GetOverlappedResult Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED, lpNumberOfBytesTransferred As Long, ByVal bWait As BOOL) As BOOL
Public DeclareWide PtrSafe Function GetOverlappedResultEx Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED, lpNumberOfBytesTransferred As Long, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As BOOL
Public DeclareWide PtrSafe Function CancelIo Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CancelIoEx Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED) As BOOL

Public Declare PtrSafe Function GetFileAttributesA Lib "kernel32" (ByVal lpFileName As String) As FILE_ATTRIBUTES
Public DeclareWide PtrSafe Function GetFileAttributesW Lib "kernel32" (ByVal lpFileName As LongPtr) As FILE_ATTRIBUTES
Public DeclareWide PtrSafe Function GetFileAttributes Lib "kernel32" Alias "GetFileAttributesW" (ByVal lpFileName As String) As FILE_ATTRIBUTES
Public Declare PtrSafe Function GetFileAttributesExA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public DeclareWide PtrSafe Function GetFileAttributesExW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public DeclareWide PtrSafe Function GetFileAttributesEx Lib "kernel32" Alias "GetFileAttributesExW" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public Declare PtrSafe Function SetFileAttributesA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES) As Long
Public DeclareWide PtrSafe Function SetFileAttributesW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES) As Long
Public DeclareWide PtrSafe Function SetFileAttributes Lib "kernel32" Alias "SetFileAttributesW" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES) As Long
Public Declare PtrSafe Function GetFileAttributesTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFileAttributesTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFileAttributesTransacted Lib "kernel32" Alias "GetFileAttributesTransactedW" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function SetFileAttributesTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function SetFileAttributesTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function SetFileAttributesTransacted Lib "kernel32" Alias "SetFileAttributesTransactedW" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function Wow64DisableWow64FsRedirection Lib "kernel32" (pOldVal As LongPtr) As Long
Public Declare PtrSafe Function Wow64RevertWow64FsRedirection Lib "kernel32" (pOldVal As LongPtr) As Long
Public Declare PtrSafe Function CompareFileTime Lib "kernel32" (lpFileTime1 As FILETIME, lpFileTime2 As FILETIME) As Long
Public Declare PtrSafe Function MulDiv Lib "kernel32" (ByVal nNumber As Long, ByVal nNumerator As Long, ByVal nDenominator As Long) As Long

Public DeclareWide PtrSafe Function CompareStringW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As LongPtr, ByVal cchCount1 As Long, ByVal lpString2 As LongPtr, ByVal cchCount2 As Long) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareString Lib "kernel32" Alias "CompareStringW" (ByVal Locale As DefaultLocales, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareStringEx Lib "kernel32" (ByVal lpLocaleName As String, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long, ByVal lpVersionInformation As LongPtr, ByVal lpReserved As LongPtr, ByVal lParam As LongPtr) As CSTR_RETURNS
Public Declare PtrSafe Function MultiByteToWideChar Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As MBWC_Flags, ByVal lpMultiByteStr As LongPtr, ByVal cchMultiByte As Long, ByVal lpWideCharStr As LongPtr, ByVal cchWideChar As Long) As Long
Public Declare PtrSafe Function WideCharToMultiByte Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As WCMB_Flags, ByVal lpWideCharStr As LongPtr, ByVal cchWideChar As Long, ByVal lpMultiByteStr As LongPtr, ByVal cbMultiByte As Long, Optional lpDefaultChar As LongPtr, Optional lpUsedDefaultChar As BOOL) As Long
Public Declare PtrSafe Function GetStringTypeA Lib "kernel32" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringTypeW Lib "kernel32" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringType Lib "kernel32" Alias "GetStringTypeW" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeExA Lib "kernel32" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringTypeExW Lib "kernel32" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringTypeEx Lib "kernel32" Alias "GetStringTypeW" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function FoldStringW Lib "kernel32" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function FoldString Lib "kernel32" Alias "FoldStringW" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long

Public Declare PtrSafe Function QueryDosDeviceA Lib "kernel32" (ByVal lpDeviceName As String, ByVal lpTargetPath As String, ByVal ucchMax As Long) As Long
Public DeclareWide PtrSafe Function QueryDosDeviceW Lib "kernel32" (ByVal lpDeviceName As LongPtr, ByVal lpTargetPath As LongPtr, ByVal ucchMax As Long) As Long
Public DeclareWide PtrSafe Function QueryDosDevice Lib "kernel32" Alias "QueryDosDeviceW" (ByVal lpDeviceName As String, ByVal lpTargetPath As String, ByVal ucchMax As Long) As Long
Public Declare PtrSafe Function DefineDosDeviceA Lib "kernel32" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As String, Optional ByVal lpTargetPath As String) As BOOL
Public DeclareWide PtrSafe Function DefineDosDeviceW Lib "kernel32" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As LongPtr, Optional ByVal lpTargetPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DefineDosDevice Lib "kernel32" Alias "DefineDosDeviceW" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As String, Optional ByVal lpTargetPath As String) As BOOL
Public DeclareWide PtrSafe Function FindFirstVolume Lib "kernel32" Alias "FindFirstVolumeW" (ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As LongPtr
Public DeclareWide PtrSafe Function FindFirstVolumeW Lib "kernel32" (ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As LongPtr
Public DeclareWide PtrSafe Function FindNextVolume Lib "kernel32" Alias "FindNextVolumeW" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As LongPtr
Public DeclareWide PtrSafe Function FindNextVolumeW Lib "kernel32" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As LongPtr
Public DeclareWide PtrSafe Function FindVolumeClose Lib "kernel32" (ByVal hFindFile As LongPtr) As Long
Public DeclareWide PtrSafe Function GetVolumePathNamesForVolumeNameW Lib "kernel32" (ByVal lpszVolumeName As LongPtr, ByVal lpszVolumePathNames As LongPtr, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathNamesForVolumeName Lib "kernel32" Alias "GetVolumePathNamesForVolumeNameW" (ByVal lpszVolumeName As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public Declare PtrSafe Function SetVolumeLabelA Lib "kernel32" (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long
Public DeclareWide PtrSafe Function SetVolumeLabelW Lib "kernel32" (ByVal lpRootPathName As LongPtr, ByVal lpVolumeName As LongPtr) As Long
Public DeclareWide PtrSafe Function SetVolumeLabel Lib "kernel32" Alias "SetVolumeLabelW" (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long
Public DeclareWide PtrSafe Function CreateHardLinkW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal lpExistingFileName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateHardLink Lib "kernel32" Alias "CreateHardLinkW" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function SetVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr, ByVal lpszVolumeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetVolumeMountPoint Lib "kernel32" Alias "SetVolumeMountPointW" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumeName As String) As BOOL
Public DeclareWide PtrSafe Function GetVolumeNameForVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr, ByVal lpszVolumePathNames As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeNameForVolumeMountPoint Lib "kernel32" Alias "GetVolumeNameForVolumeMountPointW" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNameA Lib "kernel32" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathNameW Lib "kernel32" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathName Lib "kernel32" Alias "GetVolumePathNameW" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationA Lib "kernel32" (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformationW Lib "kernel32" (ByVal lpRootPathName As LongPtr, ByVal lpVolumeNameBuffer As LongPtr, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As LongPtr, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformation Lib "kernel32" Alias "GetVolumeInformationW" (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationByHandleA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformationByHandleW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As LongPtr, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As LongPtr, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformationByHandle Lib "kernel32" Alias "GetVolumeInformationW" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function DeleteVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String) As BOOL
Public DeclareWide PtrSafe Function DeleteVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteVolumeMountPoint Lib "kernel32" Alias "DeleteVolumeMountPointW" (ByVal lpszVolumeMountPoint As String) As BOOL



Public DeclareWide PtrSafe Function CreateProcessW Lib "kernel32" (ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public DeclareWide PtrSafe Function CreateProcess Lib "kernel32" Alias "CreateProcessW" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public DeclareWide PtrSafe Function CreateProcessAsUserW Lib "kernel32" (ByVal hToken As LongPtr, ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public DeclareWide PtrSafe Function CreateProcessAsUser Lib "kernel32" Alias "CreateProcessAsUserW" (ByVal hToken As LongPtr, ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public Declare PtrSafe Sub ExitProcess Lib "kernel32" (ByVal uExitCode As Long)
Public Declare PtrSafe Sub ExitThread Lib "kernel32" (ByVal dwExitCode As Long)
Public DeclareWide PtrSafe Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As LongPtr, lpExitCode As Long) As BOOL
Public DeclareWide PtrSafe Function GetExitCodeThread Lib "kernel32" (ByVal hThread As LongPtr, lpExitCode As Long) As BOOL
Public DeclareWide PtrSafe Function SetThreadIdealProcessor Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwIdealProcessor As Long) As Long
Public DeclareWide PtrSafe Function SetThreadIdealProcessorEx Lib "kernel32" (ByVal hThread As LongPtr, lpIdealProcessor As PROCESSOR_NUMBER, lpPreviousIdealProcessor As PROCESSOR_NUMBER) As BOOL
Public DeclareWide PtrSafe Function SwitchToThread Lib "kernel32" () As BOOL
Public DeclareWide PtrSafe Function SetThreadPriority Lib "kernel32" (ByVal hThread As LongPtr, ByVal nPriority As ThreadPriorityClasses) As BOOL
Public DeclareWide PtrSafe Function GetThreadPriority Lib "kernel32" (ByVal hThread As LongPtr) As ThreadPriorityClasses
Public DeclareWide PtrSafe Function SetThreadPriorityBoost Lib "kernel32" (ByVal hThread As LongPtr, ByVal bDisablePriorityBoost As BOOL) As BOOL
Public DeclareWide PtrSafe Function GetThreadPriorityBoost Lib "kernel32" (ByVal hThread As LongPtr, pbDisablePriorityBoost As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetPriorityClass Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwPriority As PriorityClass) As BOOL
Public DeclareWide PtrSafe Function GetPriorityClass Lib "kernel32" (ByVal hProcess As LongPtr) As PriorityClass
Public DeclareWide PtrSafe Function SetProcessPriorityBoost Lib "kernel32" (ByVal hProcess As LongPtr, ByVal bDisablePriorityBoost As BOOL) As BOOL
Public DeclareWide PtrSafe Function GetProcessPriorityBoost Lib "kernel32" (ByVal hProcess As LongPtr, pbDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetCommandLineA Lib "kernel32" () As String
Public DeclareWide PtrSafe Function GetCommandLineW Lib "kernel32" () As LongPtr
Public DeclareWide PtrSafe Function GetCommandLine Lib "kernel32" Alias "GetCommandLineW" () As String
Public Declare PtrSafe Function GetProcessIdOfThread Lib "kernel32" (ByVal Thread As LongPtr) As Long
Public Declare PtrSafe Function IsWow64Process Lib "kernel32" (ByVal hProcess As LongPtr, Wow64Process As Long) As Long
Public Declare PtrSafe Function CreateThread Lib "kernel32" (ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function CreateRemoteThread Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function CreateRemoteThreadEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByVal lpThreadAttributesList As LongPtr, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function ResumeThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function SuspendThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function TerminateThread Lib "kernel32" (ByRef hThread As LongPtr, ByVal dwExitCode As Long) As Long
Public Declare PtrSafe Function TerminateProcess Lib "kernel32" (ByRef hProcess As LongPtr, ByVal dwExitCode As Long) As Long
Public Declare PtrSafe Function OpenThread Lib "kernel32" (ByVal dwDesiredAccess As ThreadAccess, ByVal bInheritHandle As BOOL, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function OpenProcess Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal dwProcessId As Long) As LongPtr
Public Declare PtrSafe Function InitializeProcThreadAttributeList Lib "kernel32" (ByVal lpAttributeList As LongPtr, ByVal dwAttributeCount As Long, ByVal dwFlags As Long, lpSize As LongPtr) As BOOL
Public Declare PtrSafe Function UpdateProcThreadAttribute Lib "kernel32" (ByVal lpAttributeList As LongPtr, ByVal dwFlags As Long, [TypeHint (PROC_THREAD_ATTRIBUTES) ] ByVal Attribute As LongPtr, lpValue As Any, ByVal cbSize As LongPtr, lpPreviousValue As Any, lpReturnSize As LongPtr) As BOOL
Public Declare PtrSafe Sub DeleteProcThreadAttributeList Lib "kernel32" (ByVal lpAttributeList As LongPtr)
Public DeclareWide PtrSafe Function SetProcessDEPPolicy Lib "kernel32" (ByVal dwFlags As ProcessDEPFlags) As BOOL
Public DeclareWide PtrSafe Function GetProcessDEPPolicy Lib "kernel32" (ByVal hProcess As LongPtr, pdwFlags As ProcessDEPFlags, lpPermanent As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetProcessMitigationPolicy Lib "kernel32" (ByVal MitigationPolicy As PROCESS_MITIGATION_POLICY, lpBuffer As Any, ByVal dwLength As LongPtr) As BOOL

Public Declare PtrSafe Function SetEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, Optional ByVal lpValue As String) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, Optional ByVal lpValue As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentVariable Lib "kernel32" Alias "SetEnvironmentVariableW" (ByVal lpName As String, Optional ByVal lpValue As String) As BOOL
Public Declare PtrSafe Function ExpandEnvironmentStringsW Lib "kernel32" (ByVal lpSrc As LongPtr, ByVal lpDst As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function ExpandEnvironmentStrings Lib "kernel32" Alias "ExpandEnvironmentStringsW" (ByVal lpSrc As String, ByVal lpDst As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetEnvironmentStringsA Lib "kernel32" (ByVal NewEnvironment As String) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentStringsW Lib "kernel32" (ByVal NewEnvironment As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentStrings Lib "kernel32" Alias "SetEnvironmentStringsW" (ByVal NewEnvironment As String) As BOOL
[Description("Warning: This is not a Unicode function; the API does not follow the standard rules for that; this version returns ANSI characters, and GetEnvironmentStringsA returns OEM characters.") ]
Public Declare PtrSafe Function GetEnvironmentStrings Lib "kernel32" () As String
Public Declare PtrSafe Function GetEnvironmentStringsA Lib "kernel32" () As String
Public DeclareWide PtrSafe Function GetEnvironmentStringsW Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function FreeEnvironmentStringsA Lib "kernel32" (ByVal penv As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FreeEnvironmentStringsW Lib "kernel32" (ByVal penv As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FreeEnvironmentStrings Lib "kernel32" Alias "FreeEnvironmentStringsW" (ByVal penv As LongPtr) As BOOL

Public DeclareWide PtrSafe Function SetSystemTime Lib "kernel32" (lpSystemTime As SYSTEMTIME) As BOOL
Public DeclareWide PtrSafe Sub GetSystemTime Lib "kernel32" (lpSystemTime As SYSTEMTIME)
Public DeclareWide PtrSafe Sub GetSystemTimeAsFileTime Lib "kernel32" (lpSystemTime As FILETIME)
Public DeclareWide PtrSafe Function SetLocalTime Lib "kernel32" (lpSystemTime As SYSTEMTIME) As BOOL
Public DeclareWide PtrSafe Sub GetLocalTime Lib "kernel32" (lpSystemTime As SYSTEMTIME)
Public DeclareWide PtrSafe Function SetSystemTimeAdjustment Lib "kernel32" (ByVal dwTimeAdjustment As Long, ByVal bTimeAdjustmentDisabled As Long) As BOOL
Public DeclareWide PtrSafe Function SetSystemTimeAdjustmentPrecise Lib "kernel32" (ByVal dwTimeAdjustment As LongLong, ByVal bTimeAdjustmentDisabled As Long) As BOOL
Public DeclareWide PtrSafe Function GetSystemTimeAdjustment Lib "kernel32" (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Long) As BOOL
Public DeclareWide PtrSafe Function GetSystemTimeAdjustmentPrecise Lib "kernel32" (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Long) As BOOL
Public DeclareWide PtrSafe Function SystemTimeToTzSpecificLocalTime Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION, lpUniversalTime As SYSTEMTIME, lpLocalTime As SYSTEMTIME) As BOOL
Public DeclareWide PtrSafe Function SystemTimeToTzSpecificLocalTimeEx Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, lpUniversalTime As SYSTEMTIME, lpLocalTime As SYSTEMTIME) As BOOL
Public DeclareWide PtrSafe Function TzSpecificLocalTimeToSystemTime Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION, lpLocalTime As SYSTEMTIME, lpUniversalTime As SYSTEMTIME) As BOOL
Public DeclareWide PtrSafe Function TzSpecificLocalTimeToSystemTimeEx Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, lpLocalTime As SYSTEMTIME, lpUniversalTime As SYSTEMTIME) As BOOL
Public DeclareWide PtrSafe Function GetDynamicTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As TIME_ZONE_ID
Public DeclareWide PtrSafe Function SetDynamicTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function GetTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION) As TIME_ZONE_ID
Public DeclareWide PtrSafe Function SetTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function GetTimeZoneInformationForYear Lib "kernel32" (ByVal wYear As Long, pdtzi As DYNAMIC_TIME_ZONE_INFORMATION, ptzi As TIME_ZONE_INFORMATION) As BOOL

Public Enum COMPUTER_NAME_FORMAT 
  ComputerNameNetBIOS
  ComputerNameDnsHostname
  ComputerNameDnsDomain
  ComputerNameDnsFullyQualified
  ComputerNamePhysicalNetBIOS
  ComputerNamePhysicalDnsHostname
  ComputerNamePhysicalDnsDomain
  ComputerNamePhysicalDnsFullyQualified
  ComputerNameMax
End Enum

Public Const MAX_COMPUTERNAME_LENGTH = 15

Public Declare PtrSafe Function GetComputerNameA Lib "kernel32" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameW Lib "kernel32" (ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerName Lib "kernel32" Alias "GetComputerNameW" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function SetComputerNameA Lib "kernel32" (ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function SetComputerNameW Lib "kernel32" (ByVal lpBuffer As LongPtr) As BOOL
Public Declare PtrSafe Function SetComputerName Lib "kernel32" Alias "SetComputerNameW" (ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function GetComputerNameExA Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameExW Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameEx Lib "kernel32" Alias "GetComputerNameExW" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function SetComputerNameExA Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function SetComputerNameExW Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As LongPtr) As BOOL
Public Declare PtrSafe Function SetComputerNameEx Lib "kernel32" Alias "SetComputerNameExW" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function DnsHostnameToComputerNameA Lib "kernel32" (ByVal Hostname As String, ByVal ComputerName As String, nSize As Long) As BOOL
Public Declare PtrSafe Function DnsHostnameToComputerNameW Lib "kernel32" (ByVal Hostname As LongPtr, ByVal ComputerName As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function DnsHostnameToComputerName Lib "kernel32" Alias "DnsHostnameToComputerNameW" (ByVal Hostname As String, ByVal ComputerName As String, nSize As Long) As BOOL


Public DeclareWide PtrSafe Function GlobalAddAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function GlobalAddAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function GlobalAddAtom Lib "kernel32" Alias "GlobalAddAtomW" (ByVal lpString As LongPtr) As Integer
Public DeclareWide PtrSafe Function GlobalDeleteAtom Lib "kernel32" (ByVal nAtom As Integer) As Integer
Public DeclareWide PtrSafe Function DeleteAtom Lib "kernel32" (ByVal nAtom As Integer) As Integer
Public DeclareWide PtrSafe Function InitAtomTable Lib "kernel32" (ByVal nSize As Long) As BOOL
Public DeclareWide PtrSafe Function AddAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function AddAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function AddAtom Lib "kernel32" Alias "AddAtomW" (ByVal lpString As LongPtr) As Integer
Public DeclareWide PtrSafe Function FindAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function FindAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function FindAtom Lib "kernel32" Alias "FindAtomW" (ByVal lpString As LongPtr) As Integer
Public DeclareWide PtrSafe Function GlobalFindAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function GlobalFindAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function GlobalFindAtom Lib "kernel32" Alias "GlobalFindAtomW" (ByVal lpString As LongPtr) As Integer
Public DeclareWide PtrSafe Function GetAtomNameW Lib "kernel32" (ByVal nAtom As Integer, lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetAtomNameA Lib "kernel32" (ByVal nAtom As Integer, lpBuffer As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetAtomName Lib "kernel32" Alias "GetAtomNameW" (ByVal nAtom As Integer, lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GlobalGetAtomNameW Lib "kernel32" (ByVal nAtom As Integer, lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GlobalGetAtomNameA Lib "kernel32" (ByVal nAtom As Integer, lpBuffer As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GlobalGetAtomName Lib "kernel32" Alias "GetAtomNameW" (ByVal nAtom As Integer, lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function CreateNamedPipeA Lib "kernel32" (ByVal lpName As String, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateNamedPipe Lib "kernel32" Alias "CreateNamedPipeW" (ByVal lpName As String, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes) ] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateNamedPipeW Lib "kernel32" (ByVal lpName As LongPtr, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes) ] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function DisconnectNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr) As BOOL
Public Declare PtrSafe Function CallNamedPipeA Lib "kernel32" (ByVal lpNamedPipeName As String, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As Long
Public DeclareWide PtrSafe Function CallNamedPipe Lib "kernel32" Alias "CallNamedPipeW" (ByVal lpNamedPipeName As String, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As Long
Public DeclareWide PtrSafe Function CallNamedPipeW Lib "kernel32" (ByVal lpNamedPipeName As LongPtr, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As Long
Public DeclareWide PtrSafe Function CreatePipe Lib "kernel32" (ByVal hReadPipe As LongPtr, ByVal hWritePipe As LongPtr, lpPipeAttributes As SECURITY_ATTRIBUTES, ByVal nSize As Long) As BOOL
Public DeclareWide PtrSafe Function ConnectNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function PeekNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpBuffer As Any, ByVal nBufferSize As Long, lpBytesRead As Long, lpTotalBytesAvail As Long, lpBytesLeftThisMessage As Long) As BOOL
Public DeclareWide PtrSafe Function SetNamedPipeHandleState Lib "kernel32" (ByVal hNamedPipe As LongPtr, Optional lpMode As Long, Optional lpMaxCollectionCount As Long, Optional lpCollectDataTimeout As Long) As BOOL
Public DeclareWide PtrSafe Function TransactNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function WaitNamedPipe Lib "kernel32" Alias "WaitNamedPipeW" (ByVal lpNamedPipeName As String, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function WaitNamedPipeA Lib "kernel32" (ByVal lpNamedPipeName As String, ByVal nTimeOut As Long) As BOOL
Public DeclareWide PtrSafe Function WaitNamedPipeW Lib "kernel32" (ByVal lpNamedPipeName As LongPtr, ByVal nTimeOut As Long) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeClientComputerNameW Lib "kernel32" (ByVal Pipe As LongPtr, ClientComputerName As LongPtr, ByVal ClientComputerNameLength As Long) as BOOL
Public DeclareWide PtrSafe Function GetNamedPipeClientComputerName Lib "kernel32" Alias "GetNamedPipeClientComputerNameW" (ByVal Pipe As String, ClientComputerName As LongPtr, ByVal ClientComputerNameLength As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientComputerNameA Lib "kernel32" (ByVal Pipe As String, ClientComputerName As LongPtr, ByVal ClientComputerNameLength As Long) As BOOL
Public DeclareWide PtrSafe Function ImpersonateNamedPipeClient Lib "kernel32" (ByVal hNamedPipe As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeInfo Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpFlags As Long, lpOutBufferSize As Long, lpInBufferSize As Long, lpMaxInstances As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeHandleStateA Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, lpUserName As LongPtr, ByVal nMaxUserNameSize) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeHandleStateW Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, lpUserName As LongPtr, ByVal nMaxUserNameSize) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeHandleState Lib "kernel32" Alias "GetNamedPipeHandleStateW" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, lpUserName As LongPtr, ByVal nMaxUserNameSize) As BOOL

Public DeclareWide PtrSafe Function QueryPerformanceCounter Lib "kernel32" (lpPerformanceCount As LongLong) As BOOL
Public DeclareWide PtrSafe Function QueryPerformanceFrequency Lib "kernel32" (lpFrequency As LongLong) As BOOL
Public DeclareWide PtrSafe Function GetLogicalDriveStringsA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public DeclareWide PtrSafe Function GetLogicalDriveStringsW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLogicalDriveStrings Lib "kernel32" Alias "GetLogicalDriveStringsW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public DeclareWide PtrSafe Function GetLogicalDrives Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetDriveType Lib "kernel32" Alias "GetDriveTypeW" (Optional ByVal lpRootPathName As String) As DriveTypes
Public DeclareWide PtrSafe Function GetDriveTypeW Lib "kernel32" (Optional ByVal lpRootPathName As LongPtr) As DriveTypes
[Description("WARNING: This function is deprecated.")]
Public DeclareWide PtrSafe Function GetVersion Lib "kernel32" () As Long
[Description ("WARNING: This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10. \nTo get real version info, use RtlGetVersion.") ]
Public DeclareWide PtrSafe Function GetVersionEx Lib "kernel32" Alias "GetVersionExW" (lpVersionInformation As OSVERSIONINFOEX) As BOOL
Public DeclareWide PtrSafe Function GetVersionExW Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXW) As BOOL
Public DeclareWide PtrSafe Function GetVersionExA Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXA) As BOOL

Public Const RECOVERY_DEFAULT_PING_INTERVAL  = 5000
Public Const RECOVERY_MAX_PING_INTERVAL  = (5 * 60 * 1000)
Public Const RESTART_MAX_CMD_LINE  = 1024
Public Enum RegisterRestartFlags
	RESTART_NO_CRASH  = 1
'  Do not restart the process for termination due to application hangs
	RESTART_NO_HANG  = 2
'  Do not restart the process for termination due to patch installations
	RESTART_NO_PATCH  = 4
'  Do not restart the process when the system is rebooted due to patch installations
	RESTART_NO_REBOOT  = 8
End Enum
Public DeclareWide PtrSafe Function RegisterApplicationRestart Lib "kernel32" (ByVal pwzCommandLine As String, ByVal dwFlags As RegisterRestartFlags) As Long
Public DeclareWide PtrSafe Function UnregisterApplicationRestart Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetApplicationRestartSettings Lib "kernel32" (ByVal hProcess As LongPtr, ByVal pwzCommandLine As String, pcchSize As Long, pdwFlags As RegisterRestartFlags) As Long
Public DeclareWide PtrSafe Function RegisterApplicationRecoveryCallback Lib "kernel32" (ByVal pRecoveryCallback As LongPtr, pvParameter As Any, ByVal dwPingInterval As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function UnregisterApplicationRecoveryCallback Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetApplicationRecoveryCallback Lib "kernel32" (ByVal hProcess As LongPtr, pRecoveryCallback As LongPtr, ppvParameter As LongPtr, pdwPingInterval As Long, pdwFlags As Long) As Long
Public DeclareWide PtrSafe Function ApplicationRecoveryInProgress Lib "kernel32" (pbCancelled As BOOL) As Long
Public DeclareWide PtrSafe Sub ApplicationRecoveryFinished Lib "kernel32" (ByVal bSuccess As BOOL)

Public DeclareWide PtrSafe Function GetDiskFreeSpaceW Lib "kernel32" (ByVal lpRootPathName As LongPtr, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpace Lib "kernel32" Alias "GetDiskFreeSpaceW" (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpaceExW Lib "kernel32" (Optional ByVal lpDirectoryName As LongPtr, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpaceEx Lib "kernel32" Alias "GetDiskFreeSpaceW" (Optional ByVal lpDirectoryName As String, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
[Description("This function is only available on Windows 10 17763 and newer") ]
Public DeclareWide PtrSafe Function GetDiskSpaceInformationW Lib "kernel32" (ByVal rootPath As LongPtr, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
[Description("This function is only available on Windows 10 17763 and newer")]
Public DeclareWide PtrSafe Function GetDiskSpaceInformation Lib "kernel32" Alias "GetDiskSpaceInformationW" (ByVal rootPath As String, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
Public Type DISK_SPACE_INFORMATION
	ActualTotalAllocationUnits As LongLong
	ActualAvailableAllocationUnits As LongLong
	ActualPoolUnavailableAllocationUnits As LongLong
	CallerTotalAllocationUnits As LongLong
	CallerAvailableAllocationUnits As LongLong
	CallerPoolUnavailableAllocationUnits As LongLong
	UsedAllocationUnits As LongLong
	TotalReservedAllocationUnits As LongLong
	VolumeStorageReserveAllocationUnits As LongLong
	AvailableCommittedAllocationUnits As LongLong
	PoolAvailableAllocationUnits As LongLong
	SectorsPerAllocationUnit As Long
	BytesPerSector As Long
End Type

Public Enum PipeOpenMode
    PIPE_ACCESS_DUPLEX = &H3
    PIPE_ACCESS_INBOUND  = &H1
    PIPE_ACCESS_OUTBOUND  = &H2	
End Enum
Public Enum PipeEndFlags
	PIPE_CLIENT_END  = &H00000000
	PIPE_SERVER_END  = &H00000001
End Enum
Public Enum PipeModeFlags
	PIPE_WAIT  = &H00000000
	PIPE_NOWAIT  = &H00000001
	PIPE_READMODE_BYTE = &H00000000
	PIPE_READMODE_MESSAGE  = &H00000002
	PIPE_TYPE_BYTE = &H00000000
	PIPE_TYPE_MESSAGE = &H00000004
	PIPE_ACCEPT_REMOTE_CLIENTS  = &H00000000
	PIPE_REJECT_REMOTE_CLIENTS  = &H00000008
End Enum
Public Const PIPE_UNLIMITED_INSTANCES    = 255

Public Type PROCESSOR_NUMBER
    Group As Integer
    Number As Byte
    Reserved As Byte
End Type

Public Enum DriveTypes
	DRIVE_UNKNOWN
    DRIVE_NO_ROOT_DIR
    DRIVE_REMOVABLE
    DRIVE_FIXED
    DRIVE_REMOTE
    DRIVE_CDROM
    DRIVE_RAMDISK
End Enum

Public Enum DDD_Flags
	DDD_RAW_TARGET_PATH  = &H00000001
	DDD_REMOVE_DEFINITION  = &H00000002
	DDD_EXACT_MATCH_ON_REMOVE  = &H00000004
	DDD_NO_BROADCAST_SYSTEM  = &H00000008
	DDD_LUID_BROADCAST_DRIVE  = &H00000010
End Enum


Public Enum FileMoveMethods
    FILE_BEGIN	
    FILE_CURRENT
    FILE_END
End Enum

Public Type OSVERSIONINFOW
	dwOSVersionInfoSize As Long
	dwMajorVersion As Long
	dwMinorVersion As Long
	dwBuildNumber As Long
	dwPlatformId As Long
	szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEXW
	dwOSVersionInfoSize As Long
	dwMajorVersion As Long
	dwMinorVersion As Long
	dwBuildNumber As Long
	dwPlatformId As Long
	szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
	wServicePackMajor As Integer
	wServicePackMinor As Integer
	wSuiteMask As Integer
	wProductType As Byte
	wReserved As Byte
End Type
Public Type OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As Long
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEX
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As Long
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    wSuiteMask As Integer
    wProductType As Byte
    wReserved As Byte
End Type
Public Type OSVERSIONINFOA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As Long
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEXA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As Long
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    wSuiteMask As Integer
    wProductType As Byte
    wReserved As Byte
End Type





#End Region

#Region "ntdll"

Public Type IMAGE_DOS_HEADER ' DOS .EXE header
	e_magic As Integer ' Magic number
	e_cblp As Integer ' Bytes on last page of file
	e_cp As Integer ' Pages in file
	e_crlc As Integer ' Relocations
	e_cparhdr As Integer ' Size of header in paragraphs
	e_minalloc As Integer ' Minimum extra paragraphs needed
	e_maxalloc As Integer ' Maximum extra paragraphs needed
	e_ss As Integer ' Initial (relative) SS value
	e_sp As Integer ' Initial SP value
	e_csum As Integer ' Checksum
	e_ip As Integer ' Initial IP value
	e_cs As Integer ' Initial (relative) CS value
	e_lfarlc As Integer ' File address of relocation table
	e_ovno As Integer ' Overlay number
	e_res(0 To 3) As Integer ' Reserved words
	e_oemid As Integer ' OEM identifier (for e_oeminfo)
	e_oeminfo As Integer ' OEM information; e_oemid specific
	e_res2(0 To 9) As Integer ' Reserved words
	e_lfanew As LONG ' File address of new exe header
End Type

Public Const IMAGE_SIZEOF_FILE_HEADER            = 20
Public Enum ImageFileCharacteristics
	IMAGE_FILE_RELOCS_STRIPPED  = &H0001  ' Relocation info stripped from file.
	IMAGE_FILE_EXECUTABLE_IMAGE  = &H0002  ' File is executable  (i.e. no unresolved external references).
	IMAGE_FILE_LINE_NUMS_STRIPPED  = &H0004  ' Line nunbers stripped from file.
	IMAGE_FILE_LOCAL_SYMS_STRIPPED  = &H0008  ' Local symbols stripped from file.
	IMAGE_FILE_AGGRESIVE_WS_TRIM  = &H0010  ' Aggressively trim working set
	IMAGE_FILE_LARGE_ADDRESS_AWARE  = &H0020  ' App can handle >2gb addresses
	IMAGE_FILE_BYTES_REVERSED_LO  = &H0080  ' Bytes of machine word are reversed.
	IMAGE_FILE_32BIT_MACHINE  = &H0100  ' 32 bit word machine.
	IMAGE_FILE_DEBUG_STRIPPED  = &H0200  ' Debugging info stripped from file in .DBG file
	IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP  = &H0400  ' If Image is on removable media, copy and run from the swap file.
	IMAGE_FILE_NET_RUN_FROM_SWAP = &H0800  ' If Image is on Net, copy and run from the swap file.
	IMAGE_FILE_SYSTEM = &H1000  ' System File.
	IMAGE_FILE_DLL  = &H2000  ' File is a DLL.
	IMAGE_FILE_UP_SYSTEM_ONLY  = &H4000  ' File should only be run on a UP machine
	IMAGE_FILE_BYTES_REVERSED_HI  = &H8000&  ' Bytes of machine word are reversed.
End Enum
Public Enum ImageMachineType
	IMAGE_FILE_MACHINE_UNKNOWN  = 0
	IMAGE_FILE_MACHINE_TARGET_HOST  = &H0001  ' Useful for indicating we want to interact with the host and not a WoW guest.
	IMAGE_FILE_MACHINE_I386  = &H014c  ' Intel 386.
	IMAGE_FILE_MACHINE_R3000  = &H0162  ' MIPS little-endian, 0x160 big-endian
	IMAGE_FILE_MACHINE_R4000  = &H0166  ' MIPS little-endian
	IMAGE_FILE_MACHINE_R10000  = &H0168  ' MIPS little-endian
	IMAGE_FILE_MACHINE_WCEMIPSV2  = &H0169  ' MIPS little-endian WCE v2
	IMAGE_FILE_MACHINE_ALPHA  = &H0184  ' Alpha_AXP
	IMAGE_FILE_MACHINE_SH3  = &H01a2  ' SH3 little-endian
	IMAGE_FILE_MACHINE_SH3DSP  = &H01a3
	IMAGE_FILE_MACHINE_SH3E  = &H01a4  ' SH3E little-endian
	IMAGE_FILE_MACHINE_SH4  = &H01a6  ' SH4 little-endian
	IMAGE_FILE_MACHINE_SH5  = &H01a8  ' SH5
	IMAGE_FILE_MACHINE_ARM  = &H01c0  ' ARM Little-Endian
	IMAGE_FILE_MACHINE_THUMB  = &H01c2  ' ARM Thumb/Thumb-2 Little-Endian
	IMAGE_FILE_MACHINE_ARMNT = &H01c4  ' ARM Thumb-2 Little-Endian
	IMAGE_FILE_MACHINE_AM33  = &H01d3
	IMAGE_FILE_MACHINE_POWERPC  = &H01F0  ' IBM PowerPC Little-Endian
	IMAGE_FILE_MACHINE_POWERPCFP  = &H01f1
	IMAGE_FILE_MACHINE_IA64  = &H0200  ' Intel 64
	IMAGE_FILE_MACHINE_MIPS16  = &H0266  ' MIPS
	IMAGE_FILE_MACHINE_ALPHA64  = &H0284  ' ALPHA64
	IMAGE_FILE_MACHINE_MIPSFPU  = &H0366  ' MIPS
	IMAGE_FILE_MACHINE_MIPSFPU16  = &H0466  ' MIPS
	IMAGE_FILE_MACHINE_AXP64  = IMAGE_FILE_MACHINE_ALPHA64
	IMAGE_FILE_MACHINE_TRICORE = &H0520  ' Infineon
	IMAGE_FILE_MACHINE_CEF  = &H0CEF
	IMAGE_FILE_MACHINE_EBC  = &H0EBC  ' EFI Byte Code
	IMAGE_FILE_MACHINE_AMD64  = &H8664&  ' AMD64 (K8)
	IMAGE_FILE_MACHINE_M32R  = &H9041&  ' M32R little-endian
	IMAGE_FILE_MACHINE_ARM64  = &HAA64&  ' ARM64 Little-Endian
	IMAGE_FILE_MACHINE_CEE  = &HC0EE&
End Enum
Public Type IMAGE_FILE_HEADER
	Machine As Integer
	NumberOfSections As Integer
	TimeDateStamp As Long
	PointerToSymbolTable As Long
	NumberOfSymbols As Long
	SizeOfOptionalHeader As Integer
	Characteristics As Integer
End Type

Public Type IMAGE_DATA_DIRECTORY
	VirtualAddress As Long
	Size As Long
End Type

Public Const IMAGE_NUMBEROF_DIRECTORY_ENTRIES   = 16

Public Enum ImageSubsystemType
	IMAGE_SUBSYSTEM_UNKNOWN  = 0  ' Unknown subsystem.
	IMAGE_SUBSYSTEM_NATIVE  = 1  ' Image doesn't require a subsystem.
	IMAGE_SUBSYSTEM_WINDOWS_GUI  = 2  ' Image runs in the Windows GUI subsystem.
	IMAGE_SUBSYSTEM_WINDOWS_CUI  = 3  ' Image runs in the Windows character subsystem.
	IMAGE_SUBSYSTEM_OS2_CUI  = 5  ' image runs in the OS/2 character subsystem.
	IMAGE_SUBSYSTEM_POSIX_CUI  = 7  ' image runs in the Posix character subsystem.
	IMAGE_SUBSYSTEM_NATIVE_WINDOWS  = 8  ' image is a native Win9x driver.
	IMAGE_SUBSYSTEM_WINDOWS_CE_GUI  = 9  ' Image runs in the Windows CE subsystem.
	IMAGE_SUBSYSTEM_EFI_APPLICATION  = 10  '
	IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER  = 11  '
	IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER  = 12  '
	IMAGE_SUBSYSTEM_EFI_ROM  = 13
	IMAGE_SUBSYSTEM_XBOX  = 14
	IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION  = 16
	IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG  = 17
End Enum
Public Enum ImageDllCharacteristics
	IMAGE_LIBRARY_PROCESS_INIT  = &H0001  ' Reserved.
	IMAGE_LIBRARY_PROCESS_TERM  = &H0002  ' Reserved.
	IMAGE_LIBRARY_THREAD_INIT  = &H0004  ' Reserved.
	IMAGE_LIBRARY_THREAD_TERM  = &H0008  ' Reserved.
	IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA  = &H0020  ' Image can handle a high entropy 64-bit virtual address space.
	IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE  = &H0040  ' DLL can move.
	IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY  = &H0080  ' Code Integrity Image
	IMAGE_DLLCHARACTERISTICS_NX_COMPAT  = &H0100  ' Image is NX compatible
	IMAGE_DLLCHARACTERISTICS_NO_ISOLATION  = &H0200  ' Image understands isolation and doesn't want it
	IMAGE_DLLCHARACTERISTICS_NO_SEH  = &H0400  ' Image does not use SEH.  No SE handler may reside in this image
	IMAGE_DLLCHARACTERISTICS_NO_BIND  = &H0800  ' Do not bind this image.
	IMAGE_DLLCHARACTERISTICS_APPCONTAINER  = &H1000  ' Image should execute in an AppContainer
	IMAGE_DLLCHARACTERISTICS_WDM_DRIVER  = &H2000  ' Driver uses WDM model
	IMAGE_DLLCHARACTERISTICS_GUARD_CF  = &H4000  ' Image supports Control Flow Guard.
	IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = &H8000&
End Enum
Public Enum ImageDirectories
	IMAGE_DIRECTORY_ENTRY_EXPORT  = 0  ' Export Directory
	IMAGE_DIRECTORY_ENTRY_IMPORT  = 1  ' Import Directory
	IMAGE_DIRECTORY_ENTRY_RESOURCE  = 2  ' Resource Directory
	IMAGE_DIRECTORY_ENTRY_EXCEPTION  = 3  ' Exception Directory
	IMAGE_DIRECTORY_ENTRY_SECURITY  = 4  ' Security Directory
	IMAGE_DIRECTORY_ENTRY_BASERELOC  = 5  ' Base Relocation Table
	IMAGE_DIRECTORY_ENTRY_DEBUG  = 6  ' Debug Directory
'       IMAGE_DIRECTORY_ENTRY_COPYRIGHT       7   // (X86 usage)
	IMAGE_DIRECTORY_ENTRY_ARCHITECTURE  = 7  ' Architecture Specific Data
	IMAGE_DIRECTORY_ENTRY_GLOBALPTR  = 8  ' RVA of GP
	IMAGE_DIRECTORY_ENTRY_TLS  = 9  ' TLS Directory
	IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG  = 10  ' Load Configuration Directory
	IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT  = 11  ' Bound Import Directory in headers
	IMAGE_DIRECTORY_ENTRY_IAT  = 12  ' Import Address Table
	IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT  = 13  ' Delay Load Import Descriptors
	IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR  = 14  ' COM Runtime descriptor
End Enum

Public Type IMAGE_OPTIONAL_HEADER
	' Standard fields.
	Magic As Integer
	MajorLinkerVersion As BYTE
	MinorLinkerVersion As BYTE
	SizeOfCode As Long
	SizeOfInitializedData As Long
	SizeOfUninitializedData As Long
	AddressOfEntryPoint As Long
	BaseOfCode As Long
	BaseOfData As Long
	' NT additional fields.
	ImageBase As LongPtr
	SectionAlignment As Long
	FileAlignment As Long
	MajorOperatingSystemVersion As Integer
	MinorOperatingSystemVersion As Integer
	MajorImageVersion As Integer
	MinorImageVersion As Integer
	MajorSubsystemVersion As Integer
	MinorSubsystemVersion As Integer
	Win32VersionValue As Long
	SizeOfImage As Long
	SizeOfHeaders As Long
	CheckSum As Long
	Subsystem As Integer
	DllCharacteristics As Integer
	SizeOfStackReserve As LongPtr
	SizeOfStackCommit As LongPtr
	SizeOfHeapReserve As LongPtr
	SizeOfHeapCommit As LongPtr
	LoaderFlags As Long
	NumberOfRvaAndSizes As Long
	DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type
Public Type IMAGE_OPTIONAL_HEADER32
    ' Standard fields.
    Magic As Integer
    MajorLinkerVersion As BYTE
    MinorLinkerVersion As BYTE
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    BaseOfData As Long
    ' NT additional fields.
    ImageBase As Long
    SectionAlignment As Long
    FileAlignment As Long
    MajorOperatingSystemVersion As Integer
    MinorOperatingSystemVersion As Integer
    MajorImageVersion As Integer
    MinorImageVersion As Integer
    MajorSubsystemVersion As Integer
    MinorSubsystemVersion As Integer
    Win32VersionValue As Long
    SizeOfImage As Long
    SizeOfHeaders As Long
    CheckSum As Long
    Subsystem As Integer
    DllCharacteristics As Integer
    SizeOfStackReserve As Long
    SizeOfStackCommit As Long
    SizeOfHeapReserve As Long
    SizeOfHeapCommit As Long
    LoaderFlags As Long
    NumberOfRvaAndSizes As Long
    DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type
Public Const IMAGE_NT_OPTIONAL_HDR32_MAGIC  = &H10b
Public Const IMAGE_NT_OPTIONAL_HDR64_MAGIC  = &H20b
Public Const IMAGE_ROM_OPTIONAL_HDR_MAGIC  = &H107

Public Const IMAGE_SIZEOF_SECTION_HEADER     = 40
Public Const IMAGE_SIZEOF_SHORT_NAME        = 8
Public Type IMAGE_SECTION_HEADER
	Name(0 To (IMAGE_SIZEOF_SHORT_NAME - 1)) As BYTE
	Misc As Long
	VirtualAddress As Long
	SizeOfRawData As Long
	PointerToRawData As Long
	PointerToRelocations As Long
	PointerToLinenumbers As Long
	NumberOfRelocations As Integer
	NumberOfLinenumbers As Integer
	Characteristics As Long
End Type

Public Enum ImageSymbolCharacteristics
	IMAGE_SCN_TYPE_REG  = &H00000000  ' Reserved.
	IMAGE_SCN_TYPE_DSECT  = &H00000001  ' Reserved.
	IMAGE_SCN_TYPE_NOLOAD  = &H00000002  ' Reserved.
	IMAGE_SCN_TYPE_GROUP  = &H00000004  ' Reserved.
	IMAGE_SCN_TYPE_NO_PAD  = &H00000008  ' Reserved.
	IMAGE_SCN_TYPE_COPY  = &H00000010  ' Reserved.
	IMAGE_SCN_CNT_CODE  = &H00000020  ' Section contains code.
	IMAGE_SCN_CNT_INITIALIZED_DATA  = &H00000040  ' Section contains initialized data.
	IMAGE_SCN_CNT_UNINITIALIZED_DATA  = &H00000080  ' Section contains uninitialized data.
	IMAGE_SCN_LNK_OTHER  = &H00000100  ' Reserved.
	IMAGE_SCN_LNK_INFO  = &H00000200  ' Section contains comments or some other type of information.
'       IMAGE_SCN_TYPE_OVER                  0x00000400  // Reserved.
	IMAGE_SCN_LNK_REMOVE  = &H00000800  ' Section contents will not become part of image.
	IMAGE_SCN_LNK_COMDAT  = &H00001000  ' Section contents comdat.
'                                            0x00002000  // Reserved.
'       IMAGE_SCN_MEM_PROTECTED - Obsolete   0x00004000
	IMAGE_SCN_NO_DEFER_SPEC_EXC  = &H00004000  ' Reset speculative exceptions handling bits in the TLB entries for this section.
	IMAGE_SCN_GPREL  = &H00008000&  ' Section content can be accessed relative to GP
	IMAGE_SCN_MEM_FARDATA  = &H00008000&
'       IMAGE_SCN_MEM_SYSHEAP  - Obsolete    0x00010000
	IMAGE_SCN_MEM_PURGEABLE  = &H00020000
	IMAGE_SCN_MEM_16BIT  = &H00020000
	IMAGE_SCN_MEM_LOCKED  = &H00040000
	IMAGE_SCN_MEM_PRELOAD  = &H00080000
	IMAGE_SCN_ALIGN_1BYTES  = &H00100000  '
	IMAGE_SCN_ALIGN_2BYTES  = &H00200000  '
	IMAGE_SCN_ALIGN_4BYTES  = &H00300000  '
	IMAGE_SCN_ALIGN_8BYTES  = &H00400000  '
	IMAGE_SCN_ALIGN_16BYTES  = &H00500000  ' Default alignment if no others are specified.
	IMAGE_SCN_ALIGN_32BYTES  = &H00600000  '
	IMAGE_SCN_ALIGN_64BYTES  = &H00700000  '
	IMAGE_SCN_ALIGN_128BYTES  = &H00800000  '
	IMAGE_SCN_ALIGN_256BYTES  = &H00900000  '
	IMAGE_SCN_ALIGN_512BYTES  = &H00A00000  '
	IMAGE_SCN_ALIGN_1024BYTES  = &H00B00000  '
	IMAGE_SCN_ALIGN_2048BYTES  = &H00C00000  '
	IMAGE_SCN_ALIGN_4096BYTES  = &H00D00000  '
	IMAGE_SCN_ALIGN_8192BYTES  = &H00E00000  '
'  Unused                                    0x00F00000
	IMAGE_SCN_ALIGN_MASK  = &H00F00000
	IMAGE_SCN_LNK_NRELOC_OVFL  = &H01000000  ' Section contains extended relocations.
	IMAGE_SCN_MEM_DISCARDABLE  = &H02000000  ' Section can be discarded.
	IMAGE_SCN_MEM_NOT_CACHED  = &H04000000  ' Section is not cachable.
	IMAGE_SCN_MEM_NOT_PAGED  = &H08000000  ' Section is not pageable.
	IMAGE_SCN_MEM_SHARED  = &H10000000  ' Section is shareable.
	IMAGE_SCN_MEM_EXECUTE  = &H20000000  ' Section is executable.
	IMAGE_SCN_MEM_READ  = &H40000000  ' Section is readable.
	IMAGE_SCN_MEM_WRITE  = &H80000000  ' Section is writeable.
End Enum


Public Type CLIENT_ID
    UniqueProcess As LongPtr
    UniqueThread  As LongPtr
End Type

Public Enum ObjectAttributeValues
	OBJ_INHERIT                       = &H00000002
	OBJ_PERMANENT                     = &H00000010
	OBJ_EXCLUSIVE                     = &H00000020
	OBJ_CASE_INSENSITIVE              = &H00000040
	OBJ_OPENIF                        = &H00000080
	OBJ_OPENLINK                      = &H00000100
	OBJ_KERNEL_HANDLE                 = &H00000200
	OBJ_FORCE_ACCESS_CHECK            = &H00000400
	OBJ_IGNORE_IMPERSONATED_DEVICEMAP = &H00000800
	OBJ_DONT_REPARSE                  = &H00001000
	OBJ_VALID_ATTRIBUTES              = &H00001FF2
End Enum


Public Type OBJECT_ATTRIBUTES
	Length As Long
    RootDirectory As LongPtr
    ObjectName As LongPtr
    Attributes As ObjectAttributeValues
    SecurityDescriptor As LongPtr
    SecurityQualityOfService As LongPtr
End Type

Public Enum OBJECT_INFORMATION_CLASS
    ObjectBasicInformation = 0
    ObjectNameInformation
    ObjectTypeInformation
    ObjectTypesInformation
    ObjectHandleFlagInformation
    ObjectSessionInformation
    ObjectSessionObjectInformation
End Enum

Public Type OBJECT_BASIC_INFORMATION
    Attributes As ObjectAttributeValues
    GrantedAccess As Long
    HandleCount As Long
    PointerCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    Reserved(2) As Long
    NameInfoSize As Long
    TypeInfoSize As Long
    SecurityDescriptorSize As Long
    CreationTime As LongLong
End Type
Public Type GENERIC_MAPPING
    GenericRead As Long
    GenericWrite As Long
    GenericExecute As Long
    GenericAll As Long
End Type
[Description("This structure is followed by the string described by TypeName.") ]
Public Type OBJECT_TYPE_INFORMATION
   TypeName                    As UNICODE_STRING   '
   TotalNumberOfObjects        As Long    'ULONG   '
   TotalNumberOfHandles        As Long    'ULONG   '
   TotalPagedPoolUsage         As Long    'ULONG   '
   TotalNonPagedPoolUsage      As Long    'ULONG   '
   TotalNamePoolUsage          As Long    'ULONG   '
   TotalHandleTableUsage       As Long    'ULONG   '
   HighWaterNumberOfObjects    As Long    'ULONG   '
   HighWaterNumberOfHandles    As Long    'ULONG   '
   HighWaterPagedPoolUsage     As Long    'ULONG   '
   HighWaterNonPagedPoolUsage  As Long    'ULONG   '
   HighWaterNamePoolUsage      As Long    'ULONG   '
   HighWaterHandleTableUsage   As Long    'ULONG   '
   InvalidAttributes           As Long    'ULONG   '
   GenericMapping              As GENERIC_MAPPING  '
   ValidAccessMask             As Long    'ULONG   '
   SecurityRequired            As Byte    'BOOLEAN '
   MaintainHandleCount         As Byte    'BOOLEAN '
   MaintainTypeList            As Integer
   PoolType                    As Long    'ULONG   '
   DefaultPagedPoolCharge      As Long    'ULONG   '
   DefaultNonPagedPoolCharge   As Long    'ULONG   ' total 22 x ULONG
End Type

Public Type OBJECT_DIRECTORY_INFORMATION
    Name As UNICODE_STRING
    TypeName As UNICODE_STRING
End Type

Public Type OBJECT_HANDLE_FLAG_INFORMATION 
    Inherit As Byte
    ProtectFromClose As Byte
End Type

Public Enum DuplicateObjectOptions
	DUPLICATE_CLOSE_SOURCE  = &H00000001
	DUPLICATE_SAME_ACCESS  = &H00000002
	DUPLICATE_SAME_ATTRIBUTES  = &H00000004
End Enum




public enum SYSTEM_INFORMATION_CLASS
    SystemBasicInformation = &H00
    SystemProcessorInformation                = &H01
    SystemPerformanceInformation              = &H02
    SystemTimeOfDayInformation = &H03
    SystemPathInformation                 = &H04
    SystemProcessInformation                  = &H05
    SystemCallCountInformation                = &H06
    SystemDeviceInformation                   = &H07
    SystemProcessorPerformanceInformation         = &H08
    SystemFlagsInformation                = &H09
    SystemCallTimeInformation                 = &H0A
    SystemModuleInformation                   = &H0B
    SystemLocksInformation                = &H0C
    SystemStackTraceInformation               = &H0D
    SystemPagedPoolInformation                = &H0E
    SystemNonPagedPoolInformation             = &H0F
    SystemHandleInformation                   = &H10
    SystemObjectInformation                   = &H11
    SystemPageFileInformation                 = &H12
    SystemVdmInstemulInformation              = &H13
    SystemVdmBopInformation                   = &H14
    SystemFileCacheInformation                = &H15
    SystemPoolTagInformation                  = &H16
    SystemInterruptInformation                = &H17
    SystemDpcBehaviorInformation              = &H18
    SystemFullMemoryInformation               = &H19
    SystemLoadGdiDriverInformation            = &H1A
    SystemUnloadGdiDriverInformation              = &H1B
    SystemTimeAdjustmentInformation               = &H1C
    SystemSummaryMemoryInformation            = &H1D
    SystemMirrorMemoryInformation             = &H1E
    SystemPerformanceTraceInformation             = &H1F
    SystemObsolete0                       = &H20
    SystemExceptionInformation                = &H21
    SystemCrashDumpStateInformation               = &H22
    SystemKernelDebuggerInformation               = &H23
    SystemContextSwitchInformation            = &H24
    SystemRegistryQuotaInformation            = &H25
    SystemExtendServiceTableInformation           = &H26
    SystemPrioritySeperation                  = &H27
    SystemVerifierAddDriverInformation            = &H28
    SystemVerifierRemoveDriverInformation         = &H29
    SystemProcessorIdleInformation            = &H2A
    SystemLegacyDriverInformation             = &H2B
    SystemCurrentTimeZoneInformation              = &H2C
    SystemLookasideInformation                = &H2D
    SystemTimeSlipNotification                = &H2E
    SystemSessionCreate                   = &H2F
    SystemSessionDetach                   = &H30
    SystemSessionInformation                  = &H31
    SystemRangeStartInformation               = &H32
    SystemVerifierInformation                 = &H33
    SystemVerifierThunkExtend                 = &H34
    SystemSessionProcessInformation               = &H35
    SystemLoadGdiDriverInSystemSpace              = &H36
    SystemNumaProcessorMap                = &H37
    SystemPrefetcherInformation               = &H38
    SystemExtendedProcessInformation              = &H39
    SystemRecommendedSharedDataAlignment          = &H3A
    SystemComPlusPackage                  = &H3B
    SystemNumaAvailableMemory                 = &H3C
    SystemProcessorPowerInformation               = &H3D
    SystemEmulationBasicInformation               = &H3E
    SystemEmulationProcessorInformation           = &H3F
    SystemExtendedHandleInformation               = &H40
    SystemLostDelayedWriteInformation             = &H41
    SystemBigPoolInformation                  = &H42
    SystemSessionPoolTagInformation               = &H43
    SystemSessionMappedViewInformation            = &H44
    SystemHotpatchInformation                 = &H45
    SystemObjectSecurityMode                  = &H46
    SystemWatchdogTimerHandler                = &H47
    SystemWatchdogTimerInformation            = &H48
    SystemLogicalProcessorInformation             = &H49
    SystemWow64SharedInformationObsolete          = &H4A
    SystemRegisterFirmwareTableInformationHandler     = &H4B
    SystemFirmwareTableInformation            = &H4C
    SystemModuleInformationEx                 = &H4D
    SystemVerifierTriageInformation               = &H4E
    SystemSuperfetchInformation               = &H4F
    SystemMemoryListInformation               = &H50
    SystemFileCacheInformationEx              = &H51
    SystemThreadPriorityClientIdInformation           = &H52
    SystemProcessorIdleCycleTimeInformation           = &H53
    SystemVerifierCancellationInformation         = &H54
    SystemProcessorPowerInformationEx             = &H55
    SystemRefTraceInformation                 = &H56
    SystemSpecialPoolInformation              = &H57
    SystemProcessIdInformation                = &H58
    SystemErrorPortInformation                = &H59
    SystemBootEnvironmentInformation              = &H5A
    SystemHypervisorInformation               = &H5B
    SystemVerifierInformationEx               = &H5C
    SystemTimeZoneInformation                 = &H5D
    SystemImageFileExecutionOptionsInformation        = &H5E
    SystemCoverageInformation                 = &H5F
    SystemPrefetchPatchInformation            = &H60
    SystemVerifierFaultsInformation               = &H61
    SystemSystemPartitionInformation              = &H62
    SystemSystemDiskInformation               = &H63
    SystemProcessorPerformanceDistribution        = &H64
    SystemNumaProximityNodeInformation            = &H65
    SystemDynamicTimeZoneInformation              = &H66
    SystemCodeIntegrityInformation            = &H67
    SystemProcessorMicrocodeUpdateInformation         = &H68
    SystemProcessorBrandString                = &H69
    SystemVirtualAddressInformation               = &H6A
    SystemLogicalProcessorAndGroupInformation         = &H6B
    SystemProcessorCycleTimeInformation           = &H6C
    SystemStoreInformation                = &H6D
    SystemRegistryAppendString                = &H6E
    SystemAitSamplingValue                = &H6F
    SystemVhdBootInformation                  = &H70
    SystemCpuQuotaInformation                 = &H71
    SystemNativeBasicInformation              = &H72
    SystemErrorPortTimeouts                   = &H73
    SystemLowPriorityIoInformation            = &H74
    SystemBootEntropyInformation              = &H75
    SystemVerifierCountersInformation             = &H76
    SystemPagedPoolInformationEx              = &H77
    SystemSystemPtesInformationEx             = &H78
    SystemNodeDistanceInformation             = &H79
    SystemAcpiAuditInformation                = &H7A
    SystemBasicPerformanceInformation             = &H7B
    SystemQueryPerformanceCounterInformation          = &H7C
    SystemSessionBigPoolInformation               = &H7D
    SystemBootGraphicsInformation             = &H7E
    SystemScrubPhysicalMemoryInformation          = &H7F
    SystemBadPageInformation                  = &H80
    SystemProcessorProfileControlArea             = &H81
    SystemCombinePhysicalMemoryInformation        = &H82
    SystemEntropyInterruptTimingInformation           = &H83
    SystemConsoleInformation                  = &H84
    SystemPlatformBinaryInformation               = &H85
    SystemPolicyInformation                   = &H86
    SystemHypervisorProcessorCountInformation         = &H87
    SystemDeviceDataInformation               = &H88
    SystemDeviceDataEnumerationInformation        = &H89
    SystemMemoryTopologyInformation               = &H8A
    SystemMemoryChannelInformation            = &H8B
    SystemBootLogoInformation                 = &H8C
    SystemProcessorPerformanceInformationEx           = &H8D
    SystemCriticalProcessErrorLogInformation          = &H8E
    SystemSecureBootPolicyInformation             = &H8F
    SystemPageFileInformationEx               = &H90
    SystemSecureBootInformation               = &H91
    SystemEntropyInterruptTimingRawInformation        = &H92
    SystemPortableWorkspaceEfiLauncherInformation     = &H93
    SystemFullProcessInformation              = &H94
    SystemKernelDebuggerInformationEx             = &H95
    SystemBootMetadataInformation             = &H96
    SystemSoftRebootInformation               = &H97
    SystemElamCertificateInformation              = &H98
    SystemOfflineDumpConfigInformation            = &H99
    SystemProcessorFeaturesInformation            = &H9A
    SystemRegistryReconciliationInformation           = &H9B
    SystemEdidInformation                 = &H9C
    SystemManufacturingInformation            = &H9D
    SystemEnergyEstimationConfigInformation           = &H9E
    SystemHypervisorDetailInformation             = &H9F
    SystemProcessorCycleStatsInformation          = &HA0
    SystemVmGenerationCountInformation            = &HA1
    SystemTrustedPlatformModuleInformation        = &HA2
    SystemKernelDebuggerFlags                 = &HA3
    SystemCodeIntegrityPolicyInformation          = &HA4
    SystemIsolatedUserModeInformation             = &HA5
    SystemHardwareSecurityTestInterfaceResultsInformation = &HA6
    SystemSingleModuleInformation             = &HA7
    SystemAllowedCpuSetsInformation               = &HA8
    SystemDmaProtectionInformation            = &HA9
    SystemInterruptCpuSetsInformation             = &HAA
    SystemSecureBootPolicyFullInformation         = &HAB
    SystemCodeIntegrityPolicyFullInformation          = &HAC
    SystemAffinitizedInterruptProcessorInformation    = &HAD
    SystemRootSiloInformation                 = &HAE
    SystemCpuSetInformation                   = &HAF
    SystemCpuSetTagInformation                = &HB0
    SystemWin32WerStartCallout                = &HB1
    SystemSecureKernelProfileInformation          = &HB2
    SystemCodeIntegrityPlatformManifestInformation    = &HB3
    SystemInterruptSteeringInformation            = &HB4
    SystemSuppportedProcessorArchitectures        = &HB5
    SystemMemoryUsageInformation              = &HB6
    SystemCodeIntegrityCertificateInformation         = &HB7
    SystemPhysicalMemoryInformation               = &HB8
    SystemControlFlowTransition               = &HB9
    SystemKernelDebuggingAllowed              = &HBA
    SystemActivityModerationExeState              = &HBB
    SystemActivityModerationUserSettings          = &HBC
    SystemCodeIntegrityPoliciesFullInformation        = &HBD
    SystemCodeIntegrityUnlockInformation          = &HBE
    SystemIntegrityQuotaInformation               = &HBF
    SystemFlushInformation                = &HC0
    SystemProcessorIdleMaskInformation            = &HC1
    SystemSecureDumpEncryptionInformation         = &HC2
    SystemWriteConstraintInformation              = &HC3
    SystemKernelVaShadowInformation               = &HC4
    SystemHypervisorSharedPageInformation         = &HC5
    SystemFirmwareBootPerformanceInformation          = &HC6
    SystemCodeIntegrityVerificationInformation        = &HC7
    SystemFirmwarePartitionInformation            = &HC8
    SystemSpeculationControlInformation           = &HC9
    SystemDmaGuardPolicyInformation               = &HCA
    SystemEnclaveLaunchControlInformation         = &HCB
    SystemWorkloadAllowedCpuSetsInformation           = &HCC
    SystemCodeIntegrityUnlockModeInformation          = &HCD
    SystemLeapSecondInformation               = &HCE
    SystemFlags2Information                   = &HCF
    SystemSecurityModelInformation            = &HD0
    SystemCodeIntegritySyntheticCacheInformation      = &HD1
    MaxSystemInfoClass                    = &HD2
End Enum

Public Type SYSTEM_HANDLE_TABLE_ENTRY_INFO 
	UniqueProcessId As Integer
    CreatorBackTraceIndex As Integer
    ObjectTypeIndex As Byte
    HandleAttributes As Byte
    HandleValue As Integer
    Object As LongPtr
    GrantedAccess As Long
End Type

[Description("WARNING: This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_HANDLE_INFORMATION
    NumberOfHandles As Long
    Handles() As SYSTEM_HANDLE_TABLE_ENTRY_INFO
End Type

Public Type SYSTEM_PROCESS_INFORMATION
	NextEntryOffset As Long
	NumberOfThreads As Long
	'The following 48 bytes may change and are invalid on some early Windows versions:
    WorkingSetPrivateSize As LARGE_INTEGER
    HardFaultCount As Long
    NumberOfThreadsHighWatermark As Long
    CycleTime As LongLong
    CreateTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    'Resume documented members
	ImageName As UNICODE_STRING
	BasePriority As Long
	UniqueProcessId As Long
	InheritedFromUniqueProcessId As LongPtr
	HandleCount As Long
	SessionId As Long
	UniqueProcessKey As LongPtr
	PeakVirtualSize As LongPtr
	VirtualSize As LongPtr
	PageFaultCount As Long
	PeakWorkingSetSize As LongPtr
	WorkingSetSize As LongPtr
	QuotaPeakPagedPoolUsage As LongPtr
	QuotaPagedPoolUsage As LongPtr
	QuotaPeakNonPagedPoolUsage As LongPtr
	QuotaNonPagedPoolUsage As LongPtr
	PagefileUsage As LongPtr
	PeakPagefileUsage As LongPtr
	PrivatePageCount As LongPtr
    ReadOperationCount As LARGE_INTEGER
    WriteOperationCount As LARGE_INTEGER
    OtherOperationCount As LARGE_INTEGER
    ReadTransferCount As LARGE_INTEGER
    WriteTransferCount As LARGE_INTEGER
    OtherTransferCount As LARGE_INTEGER
End Type
Public Type SYSTEM_THREAD_INFORMATION
	KernelTime As LARGE_INTEGER
	UserTime As LARGE_INTEGER
	CreateTime As LARGE_INTEGER
	WaitTime As Long
	StartAddress As LongPtr
	ClientId As CLIENT_ID
	Priority As LONG
	BasePriority As LONG
	ContextSwitches As Long
	ThreadState As Long
	WaitReason As Long
End Type




Public Type FILE_DIRECTORY_INFORMATION
  NextEntryOffset As Long
  FileIndex As Long
  CreationTime As FILETIME
  LastAccessTime As FILETIME
  LastWriteTime As FILETIME
  ChangeTime As FILETIME
  EndOfFile As LARGE_INTEGER
  AllocationSize As LARGE_INTEGER
  FileAttributes As Long
  FileNameLength As Long
  FileName1 As Integer 'OFFSET=&H40 (64)
End Type

Public Type FILE_STREAM_INFORMATION
    NextEntryOffset As Long
    StreamNameLength As Long
    StreamSize As LARGE_INTEGER
    StreamAllocationSize As LARGE_INTEGER
    StreamName(259) As Byte
End Type

Public Type IO_STATUS_BLOCK
    StatusPointer As LongPtr
    Information As LongPtr
End Type

Public Enum FILE_INFORMATION_CLASS
    FileDirectoryInformation = 1
    FileFullDirectoryInformation = 2
    FileBothDirectoryInformation = 3
    FileBasicInformation = 4
    FileStandardInformation = 5
    FileInternalInformation = 6
    FileEaInformation = 7
    FileAccessInformation = 8
    FileNameInformation = 9
    FileRenameInformation = 10
    FileLinkInformation = 11
    FileNamesInformation = 12
    FileDispositionInformation = 13
    FilePositionInformation = 14
    FileFullEaInformation = 15
    FileModeInformation = 16
    FileAlignmentInformation = 17
    FileAllInformation = 18
    FileAllocationInformation = 19
    FileEndOfFileInformation = 20
    FileAlternateNameInformation = 21
    FileStreamInformation = 22
    FilePipeInformation = 23
    FilePipeLocalInformation = 24
    FilePipeRemoteInformation = 25
    FileMailslotQueryInformation = 26
    FileMailslotSetInformation = 27
    FileCompressionInformation = 28
    FileObjectIdInformation = 29
    FileCompletionInformation = 30
    FileMoveClusterInformation = 31
    FileQuotaInformation = 32
    FileReparsePointInformation = 33
    FileNetworkOpenInformation = 34
    FileAttributeTagInformation = 35
    FileTrackingInformation = 36
    FileIdBothDirectoryInformation = 37
    FileIdFullDirectoryInformation = 38
    FileValidDataLengthInformation = 39
    FileShortNameInformation = 40
    FileHardLinkInformation = 46
            
End Enum

Public Type TOKEN_USER
    User As SID_AND_ATTRIBUTES	
End Type

Public Type TOKEN_GROUPS
    GroupCount As Long
    Groups(0) As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_OWNER
    psid As LongPtr	
End Type

Public Type TOKEN_PRIMARY_GROUP 
    psid As LongPtr	
End Type

Public Type TOKEN_DEFAULT_DACL
	DefaultDacl As LongPtr
End Type

Public Const TOKEN_SOURCE_LENGTH = 8
Public Type TOKEN_SOURCE
	SourceName(0 To (TOKEN_SOURCE_LENGTH - 1)) As Byte
	SourceIdentifier As LUID
End Type

Public Type TOKEN_CONTROL
	TokenId As LUID
    AuthenticationId As LUID
    ModifiedId As LUID
    TokenSource As TOKEN_SOURCE
End Type

Public Type TOKEN_STATISTICS
    TokenId As LUID
    AuthenticationId As LUID
    ExpirationTime As LARGE_INTEGER
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    DynamicCharged As Long
    DynamicAvailable As Long
    GroupCount As Long
    PrivilegeCount As Long
    ModifiedId As LUID
End Type

Public Type TOKEN_GROUPS_AND_PRIVILEGES
    SidCount As Long
    SidLength As Long
    Sids As LongPtr
    RestrictedSidCount As Long
    RestrictedSidLength As Long
    RestrictedSids As LongPtr
    PrivilegeCount As Long
    PrivilegeLength As Long
    Privileges As LongPtr
    AuthenticationId As LUID
End Type

Public Type TOKEN_ORIGIN
    OriginatingLogonSession As LUID
End Type

Public Enum TOKEN_ELEVATION_TYPE
    TokenElevationTypeDefault=1
    TokenElevationTypeFull = 2
    TokenElevationTypeLimited = 3
End Enum

Public Type TOKEN_ELEVATION
    TokenIsElevated As Long
End Type

Public Enum TOKEN_MANDATORY_POLICY_FLAGS
    TOKEN_MANDATORY_POLICY_OFF  = &H0
    TOKEN_MANDATORY_POLICY_NO_WRITE_UP  = &H1
    TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN  = &H2
    TOKEN_MANDATORY_POLICY_VALID_MASK  = (TOKEN_MANDATORY_POLICY_NO_WRITE_UP  Or  TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN)
End Enum
Public Type TOKEN_MANDATORY_POLICY
    Policy As TOKEN_MANDATORY_POLICY_FLAGS
End Type

Public Type TOKEN_ACCESS_INFORMATION
    SidHash As LongPtr
    RestrictedSidHash As LongPtr
    Privileges As LongPtr
    AuthenticationId As LUID
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    MandatoryPolicy As TOKEN_MANDATORY_POLICY
    Flags As Long
    AppContainerNumber As Long
    PackageSid As LongPtr
    CapabilitiesHash As LongPtr
    TrustLevelSid As LongPtr
    SecurityAttributes As LongPtr
End Type

Public Type TOKEN_MANDATORY_LABEL
    Label As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_APPCONTAINER_INFORMATION
    TokenAppContainer As LongPtr
End Type

Public Type TOKEN_LINKED_TOKEN
    LinkedToken As LongPtr
End Type


Public Declare PtrSafe Function CompareMemory Lib "ntdll" Alias "RtlCompareMemory" (Source1 As Any, Source2 As Any, ByVal Length As LongPtr) As LongPtr
Public Declare PtrSafe Function NtQuerySystemInformation Lib "ntdll" (ByVal SystemInformationClass As SYSTEM_INFORMATION_CLASS, SystemInformation As Any, ByVal SystemInformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function NtQueryInformationProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ProcessInformationClass As PROCESSINFOCLASS, ProccessInformation As Any, ByVal ProcessInformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function NtClose Lib "ntdll" (ByVal ObjectHandle As LongPtr) As Long
Public Declare PtrSafe Function NtCreateFile Lib "ntdll" (FileHandle As LongPtr, ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, AllocationSize As Any, ByVal FileAttributes As Long, ByVal ShareAccess As Long, ByVal CreateDisposition As Long, ByVal CreateOptions As Long, EaBuffer As Any, ByVal EaLength As Long) As Long
Public Declare PtrSafe Function NtOpenFile Lib "ntdll" (FileHandle As LongPtr, ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, ByVal ShareAccess As Long, ByVal OpenOptions As Long) As Long
Public Declare PtrSafe Function NtQueryDirectoryFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As Any, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS, ByVal ReturnSingleEntry As Long, FileName As Any, ByVal RestartScan As Long) As Long
Public Declare PtrSafe Function NtQueryInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock_Out As IO_STATUS_BLOCK, lpFileInformation_Out As LongPtr, ByVal Length As Long, ByVal FileInformationClass As Long) As Long
Public Declare PtrSafe Function RtlDosPathNameToNtPathName_U Lib "ntdll" (ByVal DosFileName As LongPtr, NtFileName As UNICODE_STRING, FilePart As LongPtr, RelativeName As Any) As Boolean
Public Declare PtrSafe Sub RtlFreeUnicodeString Lib "ntdll" (UnicodeString As UNICODE_STRING)
Public Declare PtrSafe Sub RtlInitUnicodeString Lib "ntdll" (DestinationString As Any, ByVal SourceString As LongPtr)
Public Declare PtrSafe Function NtImpersonateThread Lib "ntdll" (ByVal hThread As LongPtr, ByVal hThreadToImpersonate As LongPtr, SecurityQualityOfService As SECURITY_QUALITY_OF_SERVICE) As Long
Public Declare PtrSafe Function NtQueryObject Lib "ntdll" (ByVal Handle As LongPtr, ByVal ObjectInformationClass As OBJECT_INFORMATION_CLASS, ObjectInformation As Any, ByVal ObjectInformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function NtDuplicateObject Lib "ntdll" (ByVal SourceProcessHandle As LongPtr, ByVal SourceHandle As LongPtr, pTargetHandle As LongPtr, ByVal DesiredAccess As Long, ByVal HandleAttributes As ObjectAttributeValues, ByVal Options As DuplicateObjectOptions) As Long
Public Declare PtrSafe Function NtOpenProcess Lib "ntdll" (ProcessHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes) ] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ClientID As CLIENT_ID) As Long
[Description("Returns true Windows version. Takes either OSVERSIONINFO or OSVERSIONINFOEX types (RTL_OSV... is an alias for these).") ]
Public Declare PtrSafe Function RtlGetVersion Lib "ntdll" (lpVersionInformation As Any) As Long
Public Declare PtrSafe Function NtOpenProcessToken Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint (TokenAccessRights, StandardAccessTypes) ] ByVal DesiredAccess As Long, TokenHandle As LongPtr) As Long
Public Declare PtrSafe Function NtQueryInformationToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function NtCreateToken Lib "ntdll" (TokenHandle As LongPtr, [ TypeHint (TokenAccessRights, StandardAccessTypes) ] ByVal DesiredAccess As Long, ByVal TokenType As TOKEN_TYPE, AuthenticationId As LUID, ExpirationTime As LongLong, TokenUser As Any, TokenGroups As Any, TokenPrivileges As Any, TokenOwner As TOKEN_OWNER, TokenPrimaryGroup As TOKEN_PRIMARY_GROUP, TokenDefaultDacl As TOKEN_DEFAULT_DACL, TokenSource As TOKEN_SOURCE) As Long
Public Declare PtrSafe Function NtDuplicateToken Lib "ntdll" (ByVal ExistingTokenHandle As LongPtr, [ TypeHint (TokenAccessRights, StandardAccessTypes) ] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal EffectiveOnly As Byte, ByVal TokenType As TOKEN_TYPE, NewTokenHandle As LongPtr) As Long
Public Declare PtrSafe Function NtCreateSection Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights) ] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, MaximumSize As QLARGE_INTEGER, ByVal SectionPageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, Optional ByVal FileHandle As LongPtr) As Long
Public Declare PtrSafe Function RtlAdjustPrivilege Lib "ntdll" (ByVal Privilege As Long, ByVal Enable As Byte, ByVal CurrentThread As Byte, Enabled As Byte) As Long

Public Declare PtrSafe Function DbgPrint CDecl Lib "ntdll" (ByVal Format As String, Arg1 As Any) As Long
Public Declare PtrSafe Function DbgPrint2 CDecl Lib "ntdll" (ByVal Format As String, Arg1 As Any, Arg2 As Any) As Long
Public Declare PtrSafe Function DbgPrint3 CDecl Lib "ntdll" (ByVal Format As String, Arg1 As Any, Arg2 As Any, Arg3 As Any) As Long



#If Win64 = 0 Then
Public Declare Function NtWow64QueryInformationProcess64 Lib "ntdll" ( _
                         ByVal hProcess As Long, _
                         ByVal ProcessInformationClass As Long, _
                         ByRef pProcessInformation As Any, _
                         ByVal ProcessInformationLength As Long, _
                         ByRef puReturnLength As Long) As Long
Public Declare Function NtWow64ReadVirtualMemory64 Lib "ntdll" ( _
                         ByVal hProcess As Long, _
                         ByVal BaseAddress As LongLong, _
                         ByRef Buffer As Any, _
                         ByVal BufferLengthL As Long, _
                         ByVal BufferLengthH As Long, _
                         ByRef ReturnLength As LongLong) As Long	
                         
Public Type UNICODE_STRING64
    Length As Integer
    MaxLength As Integer
    lpBuffer As LongLong
End Type


Public Type PROCESS_BASIC_INFORMATION64
    ExitStatus                      As Long
    Reserved0                       As Long
    PebBaseAddress                  As LongLong
    AffinityMask                    As LongLong
    BasePriority                    As Long
    Reserved1                       As Long
    uUniqueProcessId                As LongLong
    uInheritedFromUniqueProcessId   As LongLong
End Type

#End If

#End Region

#Region "ole32"
'**********************************************************
'ole32.dll

Public Type STGOPTIONS
	usVersion As Integer
	reserved As Integer
	ulSectorSize As Long
	pwcsTemplateFile As LongPtr
	'const WCHAR *pwcsTemplateFile;
End Type

Public Enum STGFMT
    STGFMT_STORAGE = 0
    STGFMT_FILE = 3
    STGFMT_ANY = 4
    STGFMT_DOCFILE = 5
End Enum

Public Enum MEMCTX
    MEMCTX_TASK = 1
    MEMCTX_SHARED = 2
    MEMCTX_MACSYSTEM = 3
    MEMCTX_UNKNOWN = -1
    MEMCTX_SAME = -2
End Enum

Public Enum STDMSHLFLAGS
    SMEXF_SERVER = 1
    SMEXF_HANDLER = 2
End Enum

Public Enum OLERENDER
    OLERENDER_NONE = 0
    OLERENDER_DRAW = 1
    OLERENDER_FORMAT = 2
    OLERENDER_ASIS = 3
End Enum

Public Enum OLECREATE_UDT
    OLECREATE_LEAVERUNNING = 1
End Enum

Public Enum REGCLS
  REGCLS_SINGLEUSE = 0
  REGCLS_MULTIPLEUSE = 1
  REGCLS_MULTI_SEPARATE = 2
  REGCLS_SUSPENDED = 4
  REGCLS_SURROGATE = 8
  REGCLS_AGILE = &H10
End Enum

Public Enum COINIT
  COINIT_APARTMENTTHREADED = &H2
  COINIT_MULTITHREADED
  COINIT_DISABLE_OLE1DDE = &H4
  COINIT_SPEED_OVER_MEMORY = &H8
End Enum



Public Type COAUTHIDENTITY
	User As Integer
	UserLength As Long
	Domain As Integer
	DomainLength As Long
	Password As Integer
	PasswordLength As Long
	Flags As Long
End Type
Public Type COAUTHINFO
	dwAuthnSvc As RPC_AUTHN
	dwAuthzSvc As RPC_AUTHZ
	pwszServerPrincName As LongPtr
	dwAuthnLevel As RPC_AUTHN_LVL
	dwImpersonationLevel As RPC_IMP_LVL
	pAuthIdentityData As LongPtr
	dwCapabilities As EOLE_AUTHENTICATION_CAPABILITIES
End Type
Public Type COSERVERINFO
	dwReserved1 As Long
	pwszName As LongPtr
	pAuthInfo As LongPtr
	dwReserved2 As Long
End Type

Public Enum CWMO_FLAGS
	CWMO_DEFAULT=0
	CWMO_DISPATCH_CALLS=1
	CWMO_DISPATCH_WINDOW_MESSAGES=2
End Enum

Public Enum COWAIT_FLAGS
	COWAIT_DEFAULT=0
	COWAIT_WAITALL=1
	COWAIT_ALERTABLE=2
	COWAIT_INPUTAVAILABLE=4
	COWAIT_DISPATCH_CALLS=8
	COWAIT_DISPATCH_WINDOW_MESSAGES = &H10
End Enum

Public Type SOLE_AUTHENTICATION_SERVICE
	dwAuthnSvc As RPC_AUTHN
	dwAuthzSvc As RPC_AUTHZ
	pPrincipalName As LongPtr
	hr As Long
End Type

Public Type SOLE_AUTHENTICATION_INFO
	dwAuthnSvc As RPC_AUTHN
	dwAuthzSvc As RPC_AUTHZ
	pAuthInfo As LongPtr
End Type

Public Enum RpcImpLevel
	RPC_C_IMP_LEVEL_DEFAULT  = 0
	RPC_C_IMP_LEVEL_ANONYMOUS  = 1
	RPC_C_IMP_LEVEL_IDENTIFY  = 2
	RPC_C_IMP_LEVEL_IMPERSONATE  = 3
	RPC_C_IMP_LEVEL_DELEGATE  = 4
End Enum


Public Declare PtrSafe Function CoCreateInstance Lib "ole32" (rclsid As Any, ByVal pUnkOuter As LongPtr, ByVal dwClsContext As CLSCTX, riid As Any, pvarResult As Any) As Long
Public Declare PtrSafe Sub CoTaskMemFree Lib "ole32" (ByVal pv As LongPtr)
Public Declare PtrSafe Function OleRegEnumFormatEtc Lib "ole32" (clsid As UUID, ByVal dwDirection As DATADIR, ppenum As IEnumFormatETC) As Long
Public Declare PtrSafe Function StgOpenStorageEx Lib "ole32" (ByVal pwcsName As LongPtr, ByVal grfMode As STGM, ByVal stgfmt As STGFMT, ByVal grfAttrs As Long, pStgOptions As STGOPTIONS, ByVal reserved2 As LongPtr, riid As UUID, ppObjectOpen As Any) As Long
Public Declare PtrSafe Function StgCreateStorageEx Lib "ole32" (ByVal pwcsName As LongPtr, ByVal grfMode As STGM, ByVal stgfmt As STGFMT, ByVal grfAttrs As Long, ByVal pStgOptions As LongPtr, ByVal pSecurityDescriptor As LongPtr, riid As UUID, ppObjectOpen As Any) As Long
Public Declare PtrSafe Function CoCreateGuid Lib "ole32" (ByRef pGUID As UUID) As Long
Public Declare PtrSafe Function CoTaskMemAlloc Lib "ole32" (ByVal cb As LongPtr) As LongPtr
Public Declare PtrSafe Function CoTaskMemRealloc Lib "ole32" (ByVal pv As LongPtr, ByVal cb As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function StgIsStorageFile Lib "ole32" (ByVal lpwcsFileName As String) As Long
Public DeclareWide PtrSafe Function StgOpenStorage Lib "ole32" (ByVal pwcsName As String, ByVal pstgPriority As IStorage, ByVal grfMode As STGM, ByVal snbExclude As String, ByVal reserved As Long, ppstgOpen As IStorage) As Long
Public Declare PtrSafe Function StgCreateDocfile Lib "ole32" (ByVal pwcsName As String, ByVal grfMode As STGM, ByVal reserved As Long, ppstgOpen As IStorage) As Long
Public Declare PtrSafe Function GetHGlobalFromILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, phglobal As LongPtr) As Long
Public Declare PtrSafe Function CreateILockBytesOnHGlobal Lib "ole32" (ByVal hGlobal As LongPtr, ByVal fDeleteOnRelease As Long, pplkbyt As ILockBytes) As Long
Public Declare PtrSafe Function GetHGlobalFromStream Lib "ole32" (ByVal pStm As IStream, phglobal As LongPtr) As Long
Public Declare PtrSafe Function CreateStreamOnHGlobal Lib "ole32" (ByVal hGlobal As LongPtr, ByVal fDeleteOnRelease As Long, ppstm As IStream) As Long
Public Declare PtrSafe Function StgCreateDocfileOnILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, ByVal grfMode As STGM, ByVal reserved As Long, ppstgOpen As IStorage) As Long
Public DeclareWide PtrSafe Function StgOpenStorageOnILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, ByVal pstgPriority As IStorage, ByVal grfMode As STGM, ByVal snbExclude As String, ByVal reserved As Long, ppstgOpen As IStorage) As Long
Public Declare PtrSafe Function StgIsStorageILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes) As Long
Public Declare PtrSafe Function ReadClassStg Lib "ole32" (ByVal pStg As IStorage, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function WriteClassStg Lib "ole32" (ByVal pStg As IStorage, ByRef rclsid As UUID) As Long
Public Declare PtrSafe Function ReadClassStm Lib "ole32" (ByVal pStg As IStream, ByRef rclsid As UUID) As Long
Public Declare PtrSafe Function WriteClassStm Lib "ole32" (ByVal pStg As IStream, ByRef rclsid As UUID) As Long
Public Declare PtrSafe Function PropVariantClear Lib "ole32" (ByRef pvarg As Variant) As Long
Public Declare PtrSafe Function PropVariantCopy Lib "ole32" (ByRef pvarDest As Variant, ByRef pvarSrc As Variant) As Long
Public Declare PtrSafe Function CLSIDFromProgID Lib "ole32" (ByVal lpszProgID As String, ByRef lpclsid As UUID) As Long
Public Declare PtrSafe Function CLSIDFromString Lib "ole32" (ByVal lpszProgID As String, ByRef lpclsid As UUID) As Long
Public Declare PtrSafe Function ProgIDFromCLSID Lib "ole32" (ByRef clsid As UUID, ByRef lplpszProgID As LongPtr) As Long
Public Declare PtrSafe Function StringFromGUID2 Lib "ole32" (ByRef UUID As UUID, ByVal lplpsz As LongPtr, ByVal cbMax As Long) As Long
Public Declare PtrSafe Function BindMoniker Lib "ole32" (ByVal pmk As IMoniker, ByVal grfOpt As Long, ByRef iidResult As UUID, ByRef ppvResult As Any) As Long
Public Declare PtrSafe Function CoGetObject Lib "ole32" (ByVal pszName As String, ByRef pBindOptions As BIND_OPTS, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function MkParseDisplayName Lib "ole32" (ByVal pbc As IBindCtx, ByVal szUserName As String, ByRef pchEaten As Long, ppmk As IMoniker) As Long
Public Declare PtrSafe Function MonikerRelativePathTo Lib "ole32" (ByVal pmkSrc As IMoniker, ByVal pmkDest As IMoniker, ByRef ppmkRelPath As IMoniker, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function MonikerCommonPrefixWith Lib "ole32" (ByVal pmkThis As IMoniker, ByVal pmkOther As IMoniker, ppmkCommon As IMoniker) As Long
Public Declare PtrSafe Function CreateBindCtx Lib "ole32" (ByVal reserved As Long, ppbc As IBindCtx) As Long
Public Declare PtrSafe Function CreateGenericComposite Lib "ole32" (ByVal pmkFirst As IMoniker, ByVal pmkRest As IMoniker, ppmkComposite As IMoniker) As Long
Public DeclareWide PtrSafe Function GetClassFile Lib "ole32" (ByVal szFileName As String, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function CreateClassMoniker Lib "ole32" (ByRef rclsid As UUID, ppmk As IMoniker) As Long
Public DeclareWide PtrSafe Function CreateFileMoniker Lib "ole32" (ByVal lpszPathName As String, ppmk As IMoniker) As Long
Public DeclareWide PtrSafe Function CreateItemMoniker Lib "ole32" (ByVal lpszDelim As String, ByVal lpszItem As String, ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreateAntiMoniker Lib "ole32" (ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreatePointerMoniker Lib "ole32" (ByVal pUnk As stdole.IUnknown, ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreateObjrefMoniker Lib "ole32" (ByVal pUnk As stdole.IUnknown, ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreateDataAdviseHolder Lib "ole32" (ppDAHolder As IDataAdviseHolder) As Long
Public Declare PtrSafe Function CreateOleAdviseHolder Lib "ole32" (ppOAHolder As IDataAdviseHolder) As Long

Public Declare PtrSafe Function GetRunningObjectTable Lib "ole32" (ByVal reserved As Long, pprot As IRunningObjectTable) As Long
Public Declare PtrSafe Function CoGetClassObject Lib "ole32" (ByRef rclsid As UUID, ByVal dwClsContext As CLSCTX, ByRef pvReserved As Any, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoRegisterClassObject Lib "ole32" (ByRef rclsid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwClsContext As CLSCTX, ByVal flags As REGCLS, lpdwRegister As Long) As Long
Public Declare PtrSafe Function CoRegisterMessageFilter Lib "ole32" (ByVal pNewMessageFilter As IMessageFilter, lplpMessageFilter As IMessageFilter) As Long
Public Declare PtrSafe Function CoRevokeClassObject Lib "ole32" (ByVal dwRegister As Long) As Long
Public Declare PtrSafe Function CoResumeClassObjects Lib "ole32" () As Long
Public Declare PtrSafe Function CoSuspendClassObjects Lib "ole32" () As Long
Public DeclareWide PtrSafe Function CoLoadLibrary Lib "ole32" (ByVal lpszLibName As String, ByVal bAutoFree As Long) As LongPtr
Public Declare PtrSafe Sub CoFreeLibrary Lib "ole32" (ByVal hInst As LongPtr)
Public Declare PtrSafe Sub CoFreeAllLibraries Lib "ole32" ()
Public Declare PtrSafe Sub CoFreeUnusedLibraries Lib "ole32" ()
Public Declare PtrSafe Sub CoFreeUnusedLibrariesEx Lib "ole32" (ByVal dwUnloadDelay As Long, ByVal dwReserved As Long)
Public Declare PtrSafe Function CoFileTimeNow Lib "ole32" (lpFileTime As FILETIME) As Long
Public DeclareWide PtrSafe Function CreateStdProgressIndicator Lib "ole32" (ByVal hwndParent As LongPtr, ByVal pszTitle As String, ByVal pIbscCaller As IBindStatusCallback, ppIbsc As IBindStatusCallback) As Long
Public Declare PtrSafe Function IsEqualGUID Lib "ole32" (ByRef rguid1 As UUID, ByRef rguid2 As UUID) As Long
Public Declare PtrSafe Function CoBuildVersion Lib "ole32" () As Long
Public Declare PtrSafe Function CoInitialize Lib "ole32" (ByRef pvReserved As Any) As Long
Public Declare PtrSafe Function OleInitialize Lib "ole32" (ByRef pvReserved As Any) As Long
Public Declare PtrSafe Function CoInitializeEx Lib "ole32" (ByRef pvReserved As Any, ByVal dwCoInit As COINIT) As Long
Public Declare PtrSafe Sub CoUninitialize Lib "ole32" ()
Public Declare PtrSafe Function vbCoInitialize Lib "ole32" Alias "CoInitialize" (ByRef pvReserved As Any) As Long
Public Declare PtrSafe Sub vbCoUninitialize Lib "ole32" Alias "CoUninitialize" ()
Public Declare PtrSafe Function CoGetMalloc Lib "ole32" (ByVal dwMemContext As MEMCTX, ppMalloc As IMalloc) As Long
Public Declare PtrSafe Function CoCreateInstance Lib "ole32" (ByRef clsid As UUID, ByVal pUnkOuter As stdole.IUnknown, ByVal dwClsContext As CLSCTX, ByRef iid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoCreateInstanceEx Lib "ole32" (ByRef clsid As UUID, ByVal pUnkOuter As stdole.IUnknown, ByVal dwClsContext As CLSCTX, pServerInfo As COSERVERINFO, ByVal dwCount As Long, pResults As MULTI_QI) As Long
Public Declare PtrSafe Function CoGetCurrentProcess Lib "ole32" () As Long
Public Declare PtrSafe Function CoCreateStandardMalloc Lib "ole32" (ByVal MEMCTX As MEMCTX, ppMalloc As IMalloc) As Long
Public Declare PtrSafe Function CoGetMarshalSizeMax Lib "ole32" (ByRef pulSize As Long, ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
Public Declare PtrSafe Function CoMarshalInterface Lib "ole32" (ByVal pStm As IStream, ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
Public Declare PtrSafe Function CoUnmarshalInterface Lib "ole32" (ByVal pStm As IStream, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoMarshalInterThreadInterfaceInStream Lib "ole32" (ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ppStm As IStream) As Long
Public Declare PtrSafe Function CoGetInterfaceAndReleaseStream Lib "ole32" (ByVal pStm As IStream, ByRef iid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoMarshalHresult Lib "ole32" (ByVal pStm As IStream, ByVal hresult As Long) As Long
Public Declare PtrSafe Function CoUnmarshalHresult Lib "ole32" (ByVal pStm As IStream, phresult As Long) As Long
Public Declare PtrSafe Function CoReleaseMarshalData Lib "ole32" (ByVal pStm As IStream) As Long
Public Declare PtrSafe Function CoDisconnectObject Lib "ole32" (ByVal pUnk As stdole.IUnknown, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function CoLockObjectExternal Lib "ole32" (ByVal pUnk As stdole.IUnknown, ByVal fLock As Long, ByVal fLastUnlockReleases As Long) As Long
Public Declare PtrSafe Function CoGetStandardMarshal Lib "ole32" (ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS, ppMarshal As IMarshal) As Long
Public Declare PtrSafe Function CoGetStdMarshalEx Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ByVal smexflags As STDMSHLFLAGS, ppunkInner As stdole.IUnknown) As Long
Public Declare PtrSafe Function CoCreateFreeThreadedMarshaler Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ppunkMarshal As stdole.IUnknown) As Long
Public Declare PtrSafe Function CoImpersonateClient Lib "ole32" () As Long
Public Declare PtrSafe Function CoRevertToSelf Lib "ole32" () As Long
Public Declare PtrSafe Function CoQueryClientBlanket Lib "ole32" (pAuthnSvc As RPC_AUTHN, pAuthzSvc As RPC_AUTHZ, pServerPrincName As LongPtr, pAuthnLevel As RPC_AUTHN_LVL, pImpLevel As RPC_IMP_LVL, pPrivs As Any, pCapabilities As EOLE_AUTHENTICATION_CAPABILITIES) As Long
Public Declare PtrSafe Function CoCopyProxy Lib "OLE32.DLL" (ByVal pProxy As stdole.IUnknown, ppCopy As stdole.IUnknown) As Long
Public Declare PtrSafe Function CoDisconnectContext Lib "ole32" (ByVal dwTimeout As Long) As Long
Public Declare PtrSafe Function CoSwitchCallContext Lib "ole32" (ByVal pNewObject As IUnknown, ppOldObject As IUnknown) As Long
Public Declare PtrSafe Function CoWaitForMultipleObjects Lib "ole32" (ByVal dwFlags As CWMO_Flags, ByVal dwTimeout As Long, ByVal cHandles As Long, pHandles As LongPtr, lpdwindex As Long) As Long
Public Declare PtrSafe Function CoWaitForMultipleHandles Lib "ole32" (ByVal dwFlags As COWAIT_FLAGS, ByVal dwTimeout As Long, ByVal cHandles As Long, pHandles As LongPtr, lpdwindex As Long) As Long
Public Declare PtrSafe Function CoInitializeSecurity Lib "ole32" (pSecDesc As SECURITY_DESCRIPTOR, ByVal cAuthSvc As Long, asAuthSvc As SOLE_AUTHENTICATION_SERVICE, ByVal pReserved1 As LongPtr, ByVal dwAuthnLevel As RPC_AUTHN_LVL, ByVal dwImpLevel As RpcImpLevel, pAuthList As Any, ByVal dwCapabilities As EOLE_AUTHENTICATION_CAPABILITIES, Optional ByVal dwReserved3 As LongPtr = 0) As Long



Public Declare PtrSafe Sub ReleaseStgMedium Lib "ole32" (ByRef STM As STGMEDIUM)
Public DeclareWide PtrSafe Function OleGetIconOfClass Lib "ole32" (ByRef rclsid As UUID, ByVal lpszLabel As String, ByVal fUseTypeAsLabel As Long) As LongPtr
Public DeclareWide PtrSafe Function OleMetafilePictFromIconAndLabel Lib "ole32" (ByVal hIcon As LongPtr, ByVal lpszLabel As String, ByVal lpszSourceFile As String, ByVal iIconIndex As Long) As LongPtr
Public Declare PtrSafe Function OleSetContainedObject Lib "ole32" (ByVal pUnk As stdole.IUnknown, ByVal fContained As Long) As Long
Public Declare PtrSafe Function OleCreate Lib "ole32" (ByRef rclsid As UUID, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByVal pformatetc As LongPtr, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObject As Any) As Long
Public Declare PtrSafe Function OleCreateEx Lib "ole32" (ByRef rclsid As UUID, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As ADVF, ByRef rgFormatEtc As FORMATETC, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateFromData Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef pformatetc As FORMATETC, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateFromDataEx Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As Long, ByRef rgFormatEtc As FORMATETC, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkFromData Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef pformatetc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkFromDataEx Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As Long, ByRef rgFormatEtc As Any, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateStaticFromData Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef iid As UUID, ByVal renderopt As OLERENDER, ByRef pformatetc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLink Lib "ole32" (ByVal pmkLinkSrc As IMoniker, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef rgFormatEtc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkEx Lib "ole32" (ByVal pmkLinkSrc As IMoniker, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As ADVF, ByRef rgFormatEtc As Any, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkToFile Lib "ole32" (ByVal lpszFileName As String, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef rgFormatEtc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkToFileEx Lib "ole32" (ByVal lpszFileName As String, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As Long, ByRef rgFormatEtc As Any, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateFromFile Lib "ole32" (ByRef rclsid As Any, ByVal lpszFileName As String, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef rgFormatEtc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateFromFileEx Lib "ole32" (ByRef rclsid As UUID, ByVal lpszFileName As String, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As ADVF, ByRef rgFormatEtc As FORMATETC, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleLoad Lib "ole32" (ByVal pStg As IStorage, ByRef riid As UUID, ByVal pClientSite As IOleClientSite, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleSave Lib "ole32" (ByVal pps As IPersistStorage, ByVal pStg As IStorage, ByVal fSameAsLoad As Long) As Long
Public Declare PtrSafe Function OleLoadFromStream Lib "ole32" (ByVal pStm As IStream, ByRef iidInterface As UUID, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleSaveToStream Lib "ole32" (ByVal ppstm As IPersistStream, ByVal pStm As IStream) As Long
Public Declare PtrSafe Function OleNoteObjectVisible Lib "ole32" (ByVal pUnknown As stdole.IUnknown, ByVal fVisible As Long) As Long
Public Declare PtrSafe Function RegisterDragDrop Lib "ole32" (ByVal hWnd As LongPtr, ByVal DropTarget As IDropTarget) As Long
Public Declare PtrSafe Function RevokeDragDrop Lib "ole32" (ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function DoDragDrop Lib "ole32" (ByVal pDataObj As IDataObject, ByVal pDropSource As IDropSource, ByVal dwOKEffects As Long, ByRef pdwEffect As Long) As Long
Public Declare PtrSafe Function OleSetClipboard Lib "ole32" (ByVal pDataObj As IDataObject) as long
Public Declare PtrSafe Function OleGetClipboard Lib "ole32" (ppDataObj As IDataObject) As Long
Public Declare PtrSafe Function OleGetClipboardWithEnterpriseInfo Lib "ole32" (ppDataObj As IDataObject, dataEnterpriseId As LongPtr, sourceDescription As LongPtr, targetDescription As LongPtr, dataDescription As LongPtr) As Long
Public Declare PtrSafe Function OleFlushClipboard Lib "ole32" () As Long
Public Declare PtrSafe Function OleIsCurrentClipboard Lib "ole32" (ByVal pDataObj As IDataObject) As Long
Public Declare PtrSafe Function OleCreateMenuDescriptor Lib "ole32" (ByVal hmenuCombined As LongPtr, ByRef lpMenuWidths As OLEMENUGROUPWIDTHS) As LongPtr
Public Declare PtrSafe Function OleSetMenuDescriptor Lib "ole32" (ByVal holemenu As LongPtr, ByVal hwndFrame As LongPtr, ByVal hwndActiveObject As LongPtr, ByVal lpFrame As IOleInPlaceFrame, ByVal lpActiveObj As IOleInPlaceActiveObject) As Long
Public Declare PtrSafe Function OleDestroyMenuDescriptor Lib "ole32" (ByVal holemenu As LongPtr) As Long
Public Declare PtrSafe Function OleTranslateAccelerator Lib "ole32" (ByVal lpFrame As IOleInPlaceFrame, ByRef lpFrameInfo As OLEINPLACEFRAMEINFO, ByRef lpmsg As MSG) As Long
Public Declare PtrSafe Function OleDuplicateData Lib "ole32" (ByVal hSrc As LongPtr, ByVal cfFormat As Integer, ByVal uiFlags As GMEM) As LongPtr
Public Declare PtrSafe Function OleDraw Lib "ole32" (ByVal pUnknown As stdole.IUnknown, ByVal dwAspect As DVASPECT, ByVal hdcDraw As LongPtr, ByRef lprcBounds As RECT) As Long
Public Declare PtrSafe Function OleRun Lib "ole32" (ByVal pUnknown As stdole.IUnknown) As Long
Public Declare PtrSafe Function OleIsRunning Lib "ole32" (ByVal pObject As IOleObject) As Long
Public Declare PtrSafe Function OleLockRunning Lib "ole32" (ByVal pUnknown As stdole.IUnknown, ByVal fLock As Long, ByVal fLastUnlockCloses As Long) As Long
Public Declare PtrSafe Function CreateDataCache Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ByRef rclsid As UUID, ByRef iid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function OleCreateDefaultHandler Lib "ole32" (ByRef clsid As UUID, ByVal pUnkOuter As stdole.IUnknown, ByRef riid As UUID, ByRef lplpObj As Any) As Long
Public Declare PtrSafe Function IsAccelerator Lib "ole32" (ByVal haccel As LongPtr, ByVal cAccelEntries As Long, ByRef lpmsg As MSG, ByRef lpwCmd As Integer) As Long
#End Region

#Region "oleaut32"
'****************************************************
'oleaut32.dll

Public Enum REGKIND
    REGKIND_DEFAULT = 0                                  
    REGKIND_REGISTER = 1                          
    REGKIND_NONE = 2                                   
End Enum
    
Public Enum VARFORMAT_FLAGS
	VAR_TIMEVALUEONLY = &H00000001 ' return time value */
	VAR_DATEVALUEONLY = &H00000002 ' return date value */
	VAR_VALIDDATE = &H00000004
	VAR_CALENDAR_HIJRI = &H00000008 ' use Hijri calender */
	VAR_LOCALBOOL = &H00000010
	VAR_FORMAT_NOSUBSTITUTE = &H00000020
End Enum

Public Enum NAMEDFORMATS
    GeneralDate = 0                                      ' &H00000000&
    LongDate = 1                                         ' &H00000001&
    ShortDate = 2                                        ' &H00000002&
    LongTime = 3                                         ' &H00000003&
    ShortTime = 4                                        ' &H00000004&
End Enum

Public Enum ACTIVEOBJECTFLAGS
    ACTIVEOBJECT_STRONG = 0                              ' &H00000000&
    ACTIVEOBJECT_WEAK = 1                                ' &H00000001&
End Enum

Public Enum NUMPRS
	NUMPRS_LEADING_WHITE = &H0001
	NUMPRS_TRAILING_WHITE = &H0002
	NUMPRS_LEADING_PLUS = &H0004
	NUMPRS_TRAILING_PLUS = &H0008
	NUMPRS_LEADING_MINUS = &H0010
	NUMPRS_TRAILING_MINUS = &H0020
	NUMPRS_HEX_OCT = &H0040
	NUMPRS_PARENS = &H0080
	NUMPRS_DECIMAL = &H0100
	NUMPRS_THOUSANDS = &H0200
	NUMPRS_CURRENCY = &H0400
	NUMPRS_EXPONENT = &H0800
	NUMPRS_USE_ALL = &H1000
	NUMPRS_STD = &H1FFF
	NUMPRS_NEG = &H10000
	NUMPRS_INEXACT = &H20000
End Enum

Public Type NUMPARSE
    cDig As Long                                         ' offset &H0000
    dwInFlags As NUMPRS                                    ' offset &H0004
    dwOutFlags As NUMPRS                                   ' offset &H0008
    cchUsed As Long                                      ' offset &H000C
    nBaseShift As Long                                   ' offset &H0010
    nPwr10 As Long                                       ' offset &H0014
End Type                                                 ' LenB() = &H0018, Len() = &H0018, UDT Alignment = &H0004

Public Enum NORM
	NORM_IGNORECASE = &H00000001
	NORM_IGNORENONSPACE = &H00000002
	NORM_IGNORESYMBOLS = &H00000004
	NORM_IGNOREWIDTH = &H00000008
	NORM_IGNOREKANATYPE1 = &H00000040
	NORM_IGNOREKANATYPE = &H00010000
	NORM_IGNOREWIDTH1 = &H00020000
	NORM_IGNOREKASHIDA = &H00040000
End Enum

Public Enum VARCMP
    VARCMP_LT = 0                                        ' &H00000000&
    VARCMP_EQ = 1                                        ' &H00000001&
    VARCMP_GT = 2                                        ' &H00000002&
    VARCMP_NULL = 3                                      ' &H00000003&
End Enum

Public Type PARAMDATA
    szName As LongPtr '/ parameter name
    vt As Integer      '  / parameter type [ TypeHint (DispatchTypes) ] ByVal wFlags As Integer
End Type
 
Public Type METHODDATA
	szName As LongPtr
   [Description ("Pointer to array of PARAMDATA") ]
    ppdata As LongPtr
    dispid As Long
    iMeth As Long
    cc As CALLCONV
    cArgs As Long
    '[ TypeHint (DispatchTypes) ] 
    wFlags As Integer
    '[ TypeHint (VARENUM) ]
    vtReturn As Integer
End Type

[Description("Takes a pointer to an array of METHODDATA and a count of the array.") ]
Public Type INTERFACEDATA
	pmethdata As LongPtr
    cMembers As Long
End Type
        
Public Declare PtrSafe Function DispCallFunc Lib "oleaut32" (ByRef pvInstance As Any, ByVal oVft As LongPtr, ByVal cc As CALLCONV, ByVal vtReturn As Integer, ByVal cActuals As Long, ByRef prgvt As Any, ByRef prgpvarg As Any, ByRef pvargResult As Any) As Long
Public Declare PtrSafe Function SystemTimeToVariantTime Lib "oleaut32" (ByRef lpSystemTime As SYSTEMTIME, ByRef pvtime As Double) As Long
Public Declare PtrSafe Function VariantTimeToSystemTime Lib "oleaut32" (ByVal vtime As Double, ByRef lpSystemTime As SYSTEMTIME) As Long
Public Declare PtrSafe Function DosDateTimeToVariantTime Lib "oleaut32" (ByVal wDosDate As Integer, ByVal wDosTime As Integer, ByRef pvtime As Double) As Long
Public Declare PtrSafe Function VariantTimeToDosDateTime Lib "oleaut32" (ByVal vtime As Double, ByRef pwDosDate As Integer, ByRef pwDosTime As Integer) As Long

Public DeclareWide PtrSafe Function LHashValOfName Lib "oleaut32" (ByVal lcid As Long, ByVal szName As String) As Long
Public DeclareWide PtrSafe Function LHashValOfNameSys Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal lcid As Long, ByVal szName As String) As Long
Public DeclareWide PtrSafe Function RegisterTypeLib Lib "oleaut32" (ByVal ptlib As ITypeLib, ByVal szFullPath As String, ByVal szHelpDir As String) As Long
Public Declare PtrSafe Function UnRegisterTypeLib Lib "oleaut32" (ByRef libID As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, ByVal SYSKIND As SYSKIND) as Long
Public DeclareWide PtrSafe Function RegisterTypeLibForUser Lib "oleaut32" (ByVal ptlib As ITypeLib, ByVal szFullPath As String, ByVal szHelpDir As String) As Long
Public Declare PtrSafe Function UnRegisterTypeLibForUser Lib "oleaut32" (ByRef libID As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, ByVal SYSKIND As SYSKIND) as Long
Public DeclareWide PtrSafe Function CreateTypeLib Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal szFile As String, ppctlib As ICreateTypeLib) As Long
Public DeclareWide PtrSafe Function CreateTypeLib2 Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal szFile As String, ppctlib As ICreateTypeLib2) As Long
Public Declare PtrSafe Function LoadRegTypeLib Lib "oleaut32" (ByRef rguid As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, pptlib As ITypeLib) As Long
Public DeclareWide PtrSafe Function LoadTypeLibEx Lib "oleaut32" (ByVal szFile As String, ByVal REGKIND As REGKIND, pptlib As ITypeLib) As Long
Public DeclareWide PtrSafe Function LoadTypeLib Lib "oleaut32" (ByVal szFile As String, pptlib As ITypeLib) As Long
Public DeclareWide PtrSafe Function QueryPathOfRegTypeLib Lib "oleaut32" (ByRef guid As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, lpbstrPathName As String) As Long
Public DeclareWide PtrSafe Function CreateDispTypeInfo Lib "oleaut32" (pidata As INTERFACEDATA, ByVal lcid As Long, pptinfo As ITypeInfo) As Long



Public DeclareWide PtrSafe Function SysAllocString Lib "oleaut32" (ByVal pStr As Long) As String
Public Declare PtrSafe Function SysAllocStringPtrPtr Lib "oleaut32" Alias "SysAllocString" (ByVal pStr As LongPtr) As LongPtr
Public Declare PtrSafe Function SysAllocStringPtr Lib "oleaut32" Alias "SysAllocString" (ByVal pStr As String) As LongPtr
[ Description ("This is an alias for SysAllocString") ]
Public DeclareWide PtrSafe Function RTrimNull Lib "oleaut32" Alias "SysAllocString" (ByVal pStr As String) As String
[Description("Use SysReAllocStringW to supply a pointer.") ]
Public DeclareWide PtrSafe Function SysReAllocString Lib "oleaut32" (ByRef in As String, ByVal pStr As LongPtr) As Long
[ Description ("Alias for SysReAllocString supporting Unicode.") ]
Public Declare PtrSafe Function SysReAllocStringW Lib "oleaut32" Alias "SysReAllocString" (ByVal pBSTR As LongPtr, Optional ByVal pszStrPtr As LongPtr) As Long
Public Declare PtrSafe Function SysReAllocStringLenW Lib "oleaut32" Alias "SysReAllocStringLen" (ByVal pBSTR As LongPtr, Optional ByVal pszStrPtr As LongPtr, Optional ByVal Length As Long) As Long
[Description("Use SysReAllocStringLenW to supply a pointer.") ]
Public Declare PtrSafe Function SysReAllocStringLen Lib "oleaut32" (ByRef bstr As String, ByVal pStr As LongPtr, ByVal cb As Long) As Long
Public DeclareWide PtrSafe Sub SysFreeString Lib "oleaut32" (ByRef bstr As String)
Public DeclareWide PtrSafe Function SysStringLen Lib "oleaut32" (ByVal str As String) As Long
Public DeclareWide PtrSafe Function SysStringByteLen Lib "oleaut32" (ByVal bstr As String) As Long
Public DeclareWide PtrSafe Function SysAllocStringByteLen Lib "oleaut32" (ByRef psz As Any, ByVal len As Long) As String
Public Declare PtrSafe Function VarR8Round Lib "oleaut32" (ByVal dblIn As Double, ByVal cDecimals As Long, pdblResult As Double) As Long
Public Declare PtrSafe Function GetAltMonthNames Lib "oleaut32" (ByVal lcid As Long, ByRef prgp As LongPtr) As Long
Public DeclareWide PtrSafe Function VarFormat Lib "oleaut32" (ByRef pvarIn As Variant, ByVal pstrFormat As String, ByVal iFirstDay As Long, ByVal iFirstWeek As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatDateTime Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNamedFormat As NAMEDFORMATS, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatNumber Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNumDig As Long, ByVal iIncLead As Long, ByVal iUseParens As Long, ByVal iGroup As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatPercent Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNumDig As Long, ByVal iIncLead As Long, ByVal iUseParens As Long, ByVal iGroup As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatCurrency Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNumDig As Long, ByVal iIncLead As Long, ByVal iUseParens As Long, ByVal iGroup As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarWeekdayName Lib "oleaut32" (ByVal iWeekday As Long, ByVal fAbbrev As Long, ByVal iFirstDay As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarMonthName Lib "oleaut32" (ByVal iMonth As Long, ByVal fAbbrev As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarFormatFromTokens Lib "oleaut32" (ByRef pvarIn As Variant, ByVal pstrFormat As String, ByRef pbTokCur As Any, ByVal dwFlags As VARFORMAT_FLAGS, ByRef pbstrOut As String, ByVal lcid As Long) As Long
Public DeclareWide PtrSafe Function VarTokenizeFormatString Lib "oleaut32" (ByVal pstrFormat As String, ByRef rgbTok As Any, ByVal cbTok As Long, ByVal iFirstDay As Long, ByVal iFirstWeek As Long, ByVal lcid As Long, Optional ByRef pcbActual As Long = 0) As Long
Public Declare PtrSafe Function DispGetParam Lib "oleaut32" (ByRef pDispParams As DISPPARAMS, ByVal position As Long, ByVal vtTarg As Integer, ByRef pVarResult As Variant, ByRef puArgErr As Long) As Long
Public DeclareWide PtrSafe Function DispGetIDsOfNames Lib "oleaut32" (ByVal pTInfo As ITypeInfo, ByRef rgszNames As String, ByVal cNames As Long, ByRef rgdispid As Long) As Long
Public Declare PtrSafe Function DispInvoke Lib "oleaut32" (ByRef this As Any, ByVal pTInfo As ITypeInfo, ByVal dispidMember As Long, ByVal wFlags As Integer, ByRef pparams As DISPPARAMS, ByRef pVarResult As Variant, ByRef pExcepInfo As EXCEPINFO, ByRef puArgErr As Long) As Long
Public Declare PtrSafe Function CreateStdDispatch Lib "oleaut32" (ByVal pUnkOuter As stdole.IUnknown, ByRef pvThis As Any, ByVal pTInfo As ITypeInfo, ppunkStdDisp As stdole.IUnknown) As Long
Public Declare PtrSafe Function RegisterActiveObject Lib "oleaut32" (ByVal pUnk As stdole.IUnknown, ByRef rclsid As UUID, ByVal dwFlags As ACTIVEOBJECTFLAGS, pdwRegister As Long) As Long
Public Declare PtrSafe Function RevokeActiveObject Lib "oleaut32" (ByVal dwRegister As Long,  ByVal pvReserved As LongPtr) as Long
Public Declare PtrSafe Function GetActiveObject Lib "oleaut32" (ByRef rclsid As UUID, ByVal pvReserved As Long, ppunk As stdole.IUnknown) As Long
Public Declare PtrSafe Function SetErrorInfo Lib "oleaut32" (ByVal dwReserved As Long, ByVal perrinfo As IErrorInfo) As Long
Public Declare PtrSafe Function GetErrorInfo Lib "oleaut32" (ByVal dwReserved As Long, pperrinfo As IErrorInfo) As Long
Public Declare PtrSafe Function CreateErrorInfo Lib "oleaut32" (pperrinfo As ICreateErrorInfo) As Long
Public Declare PtrSafe Function GetRecordInfoFromTypeInfo Lib "oleaut32" (ByVal pTypeInfo As ITypeInfo, ppRecInfo As IRecordInfo) As Long
Public Declare PtrSafe Function GetRecordInfoFromGuids Lib "oleaut32" (ByRef rGuidTypeLib As UUID, ByVal uVerMajor As Long, ByVal uVerMinor As Long, ByVal lcid As Long, ByRef rGuidTypeInfo As UUID, ppRecInfo As IRecordInfo) As Long
Public DeclareWide PtrSafe Function VarParseNumFromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As NUMPRS, ByRef pnumprs As NUMPARSE, ByRef rgbDig As Byte) As Long
Public Declare PtrSafe Function VarNumFromParseNum Lib "oleaut32" (ByRef pnumprs As NUMPARSE, ByRef rgbDig As Byte, ByVal dwVtBits As Long, pvar As Variant) As Long
Public DeclareWide PtrSafe Function VarBstrCat Lib "oleaut32" (ByVal bstrLeft As String, ByVal bstrRight As String, pbstrResult As String) As Long
Public Declare PtrSafe Function VarBstrCmp Lib "oleaut32" (ByVal bstrLeft As String, ByVal bstrRight As String, ByVal lcid As Long, ByVal dwFlags As NORM) As VARCMP
Public Declare PtrSafe Function VariantChangeType Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvarSrc As Variant, ByVal wFlags As Integer, [TypeHint(VARENUM) ] ByVal vt As Integer) As Long
Public Declare PtrSafe Function VariantChangeTypeEx Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvarSrc As Variant, ByVal lcid As Long, ByVal wFlags As Integer, [TypeHint(VARENUM)] ByVal vt As Integer) As Long
Public Declare PtrSafe Function VariantClear Lib "oleaut32" (ByRef pvarg As Variant) As Long
Public Declare PtrSafe Function VariantCopy Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyPtrVar Lib "oleaut32" Alias "VariantCopy" (ByVal pvargDest As Long, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyVarPtr Lib "oleaut32" Alias "VariantCopy" (ByRef pvargDest As Variant, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Function VariantCopyPtr Lib "oleaut32" Alias "VariantCopy" (ByVal pvargDest As LongPtr, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Function VariantCopyInd Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyIndPtrVar Lib "oleaut32" Alias "VariantCopyInd" (ByVal pvargDest As LongPtr, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyIndVarPtr Lib "oleaut32" Alias "VariantCopyInd" (ByRef pvargDest As Variant, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Function VariantCopyIndPtr Lib "oleaut32" Alias "VariantCopyInd" (ByVal pvargDest As LongPtr, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Sub VariantInit Lib "oleaut32" (ByRef pvarg As Variant)
Public Declare PtrSafe Function OleLoadPictureEx Lib "oleaut32" (ByVal lpstream As IStream, ByVal lSize As Long, ByVal fRunmode As Long, ByRef riid As UUID, ByVal xSizeDesired As Long, ByVal ySizeDesired As Long, ByVal dwFlags As stdole.LoadPictureConstants, lplpvObj As Any) As Long
Public DeclareWide PtrSafe Function OleLoadPicturePath Lib "oleaut32" (ByVal szURLorPath As String, ByVal punkCaller As IUnknown, ByVal dwReserved As Long, ByVal clrReserved As stdole.OLE_COLOR, ByRef riid As UUID, ppvRet As Any) As Long
Public Declare PtrSafe Function OleLoadPictureFile Lib "oleaut32" (ByVal varFileName As Variant, lplpdispPicture As stdole.IPictureDisp) As Long
Public Declare PtrSafe Function OleLoadPictureFileEx Lib "oleaut32" (ByVal varFileName As Variant, ByVal xSizeDesired As Long, ByVal ySizeDesired As Long, ByVal dwFlags As stdole.LoadPictureConstants, lplpdispPicture As stdole.IPictureDisp) As Long
Public DeclareWide PtrSafe Function OleSavePictureFile Lib "oleaut32" (ByVal lpdispPicture As stdole.IPictureDisp, ByVal bstrFileName As String) As Long

Public DeclareWide PtrSafe Function SafeArrayCreate Lib "oleaut32" ([ TypeHint (VARENUM) ] ByVal vt As Integer, ByVal cDims As Long, rgsabound As SAFEARRAYBOUND) As LongPtr
Public DeclareWide PtrSafe Function SafeArrayCreateVector Lib "oleaut32" ([ TypeHint (VARENUM) ] ByVal vt As Integer, ByVal lLbound As Long, ByVal cElements As Long) As LongPtr
Public DeclareWide PtrSafe Function SafeArrayCreateEx Lib "oleaut32" ([ TypeHint (VARENUM) ] ByVal vt As Integer, ByVal cDims As Long, rgsabound As SAFEARRAYBOUND, pvExtra As Any) As LongPtr
Public DeclareWide PtrSafe Function SafeArrayCreateVectorEx Lib "oleaut32" ([ TypeHint (VARENUM) ] ByVal vt As Integer, ByVal lLbound As Long, ByVal cElements As Long, pvExtra As Any) As LongPtr
Public DeclareWide PtrSafe Function SafeArrayLock Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayUnlock Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayDestroy Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayDestroyData Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayDestroyDescriptor Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArraySetIID Lib "oleaut32" (ByVal psa As LongPtr, guid As UUID) As Long
Public DeclareWide PtrSafe Function SafeArrayGetIID Lib "oleaut32" (ByVal psa As LongPtr, guid As UUID) As Long
Public DeclareWide PtrSafe Function SafeArrayGetRecordInfo Lib "oleaut32" (ByVal psa As LongPtr, prinfo As IRecordInfo) As Long
Public DeclareWide PtrSafe Function SafeArraySetRecordInfo Lib "oleaut32" (ByVal psa As LongPtr, ByVal prinfo As IRecordInfo) As Long
Public DeclareWide PtrSafe Function SafeArrayAllocDescriptor Lib "oleaut32" (ByVal cDims As Long, ppsaOut As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayAllocDescriptorEx Lib "oleaut32" ([ TypeHint (VARENUM) ] ByVal vt As Integer, ByVal cDims As Long, ppsaOut As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayAllocData Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayCopy Lib "oleaut32" (ByVal psa As LongPtr, ppsaOut As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayCopyData Lib "oleaut32" (ByVal psaSource As LongPtr, ByVal psaTarget As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayPutElement Lib "oleaut32" (ByVal psa As LongPtr, rgIndices As Long, pv As Any) As Long
Public DeclareWide PtrSafe Function SafeArrayGetElement Lib "oleaut32" (ByVal psa As LongPtr, rgIndices As Long, pv As Any) As Long
Public DeclareWide PtrSafe Function SafeArrayGetElemsize Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayRedim Lib "oleaut32" (ByVal psa As LongPtr, rgsaboundNew As SAFEARRAYBOUND) As Long
Public DeclareWide PtrSafe Function SafeArrayPtrOfIndex Lib "oleaut32" (ByVal psa As LongPtr, rgIndices As Long, pv As Any) As Long
Public DeclareWide PtrSafe Function SafeArrayGetDim Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayGetLBound Lib "oleaut32" (ByVal psa As LongPtr, ByVal nDim As Long, plLbound As Long) As Long
Public DeclareWide PtrSafe Function SafeArrayGetUBound Lib "oleaut32" (ByVal psa As LongPtr, ByVal nDim As Long, plUbound As Long) As Long
Public DeclareWide PtrSafe Function SafeArrayGetVartype Lib "oleaut32" (ByVal psa As LongPtr, pvt As Integer) As Long
Public DeclareWide PtrSafe Function SafeArrayAccessData Lib "oleaut32" (ByVal psa As LongPtr, ppvData As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayUnaccessData Lib "oleaut32" (ByVal psa As LongPtr) As Long


Public Declare PtrSafe Function OleTranslateColor Lib "oleaut32" (ByVal clr As stdole.OLE_COLOR, ByVal hpal As LongPtr, lpcolorref As Long) As Long
Public DeclareWide PtrSafe Function OleCreatePropertyFrame Lib "oleaut32" (ByVal hWndOwner As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpszCaption As String, ByVal cObjects As Long, ByRef ppunk As IUnknown, ByVal cPages As Long, ByRef pPageClsID As Any, ByVal lcid As Long, ByVal dwReserved As Long, ByVal pvReserved As LongPtr) As Long
Public Declare PtrSafe Function OleCreatePropertyFrameIndirect Lib "oleaut32" (ByRef lpParams As OCPFIPARAMS) As Long
Public Declare PtrSafe Function OleCreateFontIndirect Lib "oleaut32" (ByRef lpFontDesc As FONTDESC, ByRef riid As UUID, lplpvObj As stdole.IFont) As Long
Public Declare PtrSafe Function OleCreatePictureIndirect Lib "oleaut32" (ByRef lpPictDesc As PICTDESC, ByRef riid As UUID, ByVal fOwn As Long, lplpvObj As stdole.IPicture) As Long
Public Declare PtrSafe Function OleIconToCursor Lib "oleaut32" (ByVal hinstExe As LongPtr, ByVal hIcon As LongPtr) As LongPtr
Public Declare PtrSafe Function OleLoadPicture Lib "oleaut32" (ByVal lpstream As IStream, ByVal lSize As Long, ByVal fRunmode As Long, ByRef riid As UUID, lplpvObj As Any) As Long

Public Type OCPFIPARAMS
	cbStructSize As Long
	hWndOwner As LongPtr
	x As Long
	y As Long
	lpszCaption As LongPtr
	cObjects As Long
	lplpUnk As LongPtr
	cPages As Long
	lpPagesGUID As LongPtr
	lcid As Long
	dispidInitialProperty As Long
End Type

Public Type FONTDESC
	cbSizeofstruct As Long
	lpstrName As Long
	cySize As CURRENCY
	sWeight As Integer
	sCharset As Integer
	fItalic As Long
	fUnderline As Long
	fStrikethrough As Long
End Type

Public Enum PICTYPE
	PICTYPE_UNINITIALIZED=-1
	PICTYPE_NONE=0
	PICTYPE_BITMAP=1
	PICTYPE_METAFILE= 2
	PICTYPE_ICON=3
	PICTYPE_ENHMETAFILE=4
End Enum

Public Type PICTDESC
	cbSizeofstruct As Long
	picType As PICTYPE
	#If Win64 Then
    hImage As LongPtr
    hPalette As LongPtr
    #Else
    hImage As LongPtr
    hPalette As LongPtr
    pad As Long
    #End If
End Type

#End Region

#Region "user32"

Public Enum DT_Flags
    DT_BOTTOM = &H8&
    DT_CENTER = &H1&
    DT_LEFT = &H0&
    DT_CALCRECT = &H400&
    DT_WORDBREAK = &H10&
    DT_VCENTER = &H4&
    DT_TOP = &H0&
    DT_TABSTOP = &H80&
    DT_SINGLELINE = &H20&
    DT_RIGHT = &H2&
    DT_NOCLIP = &H100&
    DT_INTERNAL = &H1000&
    DT_EXTERNALLEADING = &H200&
    DT_EXPANDTABS = &H40&
    DT_NOPREFIX = &H800&
    DT_EDITCONTROL = &H2000&
    DT_PATH_ELLIPSIS = &H4000&
    DT_END_ELLIPSIS = &H8000&
    DT_MODIFYSTRING = &H10000
    DT_RTLREADING = &H20000
    DT_WORD_ELLIPSIS = &H40000
    DT_HIDEPREFIX = &H00100000
    DT_PREFIXONLY = &H00200000
End Enum

Public Type WINDOWPOS
    hWnd As LongPtr
    hWndInsertAfter As LongPtr
    X As Long
    Y As Long
    cx As Long
    cy As Long
    dwFlags As Long 'SWP_*
End Type

Public Enum LoadResourceFlags
  LR_DEFAULTCOLOR = &H0
  LR_MONOCHROME = &H1
  LR_COLOR = &H2
  LR_COPYRETURNORG = &H4
  LR_COPYDELETEORG = &H8
  LR_LOADFROMFILE = &H10
  LR_LOADTRANSPARENT = &H20
  LR_DEFAULTSIZE = &H40
  LR_VGACOLOR = &H80
  LR_LOADMAP3DCOLORS = &H1000
  LR_CREATEDIBSECTION = &H2000
  LR_COPYFROMRESOURCE = &H4000
  LR_SHARED = &H8000&
End Enum


Public Enum SPI
    SPI_GETBEEP = &H1
    SPI_SETBEEP = &H2
    SPI_GETMOUSE = &H3
    SPI_SETMOUSE = &H4
    SPI_GETBORDER = &H5
    SPI_SETBORDER = &H6
    SPI_GETKEYBOARDSPEED = &HA
    SPI_SETKEYBOARDSPEED = &HB
    SPI_LANGDRIVER = &HC
    SPI_ICONHORIZONTALSPACING = &HD
    SPI_GETSCREENSAVETIMEOUT = &HE
    SPI_SETSCREENSAVETIMEOUT = &HF
    SPI_GETSCREENSAVEACTIVE = &H10
    SPI_SETSCREENSAVEACTIVE = &H11
    SPI_GETGRIDGRANULARITY = &H12
    SPI_SETGRIDGRANULARITY = &H13
    SPI_SETDESKWALLPAPER = &H14
    SPI_SETDESKPATTERN = &H15
    SPI_GETKEYBOARDDELAY = &H16
    SPI_SETKEYBOARDDELAY = &H17
    SPI_ICONVERTICALSPACING = &H18
    SPI_GETICONTITLEWRAP = &H19
    SPI_SETICONTITLEWRAP = &H1A
    SPI_GETMENUDROPALIGNMENT = &H1B
    SPI_SETMENUDROPALIGNMENT = &H1C
    SPI_SETDOUBLECLKWIDTH = &H1D
    SPI_SETDOUBLECLKHEIGHT = &H1E
    SPI_GETICONTITLELOGFONT = &H1F
    SPI_SETDOUBLECLICKTIME = &H20
    SPI_SETMOUSEBUTTONSWAP = &H21
    SPI_SETICONTITLELOGFONT = &H22
    SPI_GETFASTTASKSWITCH = &H23
    SPI_SETFASTTASKSWITCH = &H24
    SPI_SETDRAGFULLWINDOWS = &H25
    SPI_GETDRAGFULLWINDOWS = &H26
    SPI_GETNONCLIENTMETRICS = &H29
    SPI_SETNONCLIENTMETRICS = &H2A
    SPI_GETMINIMIZEDMETRICS = &H2B
    SPI_SETMINIMIZEDMETRICS = &H2C
    SPI_GETICONMETRICS = &H2D
    SPI_SETICONMETRICS = &H2E
    SPI_SETWORKAREA = &H2F
    SPI_GETWORKAREA = &H30
    SPI_SETPENWINDOWS = &H31

    SPI_GETHIGHCONTRAST = &H42
    SPI_SETHIGHCONTRAST = &H43
    SPI_GETKEYBOARDPREF = &H44
    SPI_SETKEYBOARDPREF = &H45
    SPI_GETSCREENREADER = &H46
    SPI_SETSCREENREADER = &H47
    SPI_GETANIMATION = &H48
    SPI_SETANIMATION = &H49
    SPI_GETFONTSMOOTHING = &H4A
    SPI_SETFONTSMOOTHING = &H4B
    SPI_SETDRAGWIDTH = &H4C
    SPI_SETDRAGHEIGHT = &H4D
    SPI_SETHANDHELD = &H4E
    SPI_GETLOWPOWERTIMEOUT = &H4F
    SPI_GETPOWEROFFTIMEOUT = &H50
    SPI_SETLOWPOWERTIMEOUT = &H51
    SPI_SETPOWEROFFTIMEOUT = &H52
    SPI_GETLOWPOWERACTIVE = &H53
    SPI_GETPOWEROFFACTIVE = &H54
    SPI_SETLOWPOWERACTIVE = &H55
    SPI_SETPOWEROFFACTIVE = &H56
    SPI_SETCURSORS = &H57
    SPI_SETICONS = &H58
    SPI_GETDEFAULTINPUTLANG = &H59
    SPI_SETDEFAULTINPUTLANG = &H5A
    SPI_SETLANGTOGGLE = &H5B
    SPI_GETWINDOWSEXTENSION = &H5C
    SPI_SETMOUSETRAILS = &H5D
    SPI_GETMOUSETRAILS = &H5E
    SPI_SETSCREENSAVERRUNNING = &H61
    SPI_SCREENSAVERRUNNING = SPI_SETSCREENSAVERRUNNING
    SPI_GETFILTERKEYS = &H32
    SPI_SETFILTERKEYS = &H33
    SPI_GETTOGGLEKEYS = &H34
    SPI_SETTOGGLEKEYS = &H35
    SPI_GETMOUSEKEYS = &H36
    SPI_SETMOUSEKEYS = &H37
    SPI_GETSHOWSOUNDS = &H38
    SPI_SETSHOWSOUNDS = &H39
    SPI_GETSTICKYKEYS = &H3A
    SPI_SETSTICKYKEYS = &H3B
    SPI_GETACCESSTIMEOUT = &H3C
    SPI_SETACCESSTIMEOUT = &H3D
    SPI_GETSERIALKEYS = &H3E
    SPI_SETSERIALKEYS = &H3F
    SPI_GETSOUNDSENTRY = &H40
    SPI_SETSOUNDSENTRY = &H41
    SPI_GETSNAPTODEFBUTTON = &H5F
    SPI_SETSNAPTODEFBUTTON = &H60
    SPI_GETMOUSEHOVERWIDTH = &H62
    SPI_SETMOUSEHOVERWIDTH = &H63
    SPI_GETMOUSEHOVERHEIGHT = &H64
    SPI_SETMOUSEHOVERHEIGHT = &H65
    SPI_GETMOUSEHOVERTIME = &H66
    SPI_SETMOUSEHOVERTIME = &H67
    SPI_GETWHEELSCROLLLINES = &H68
    SPI_SETWHEELSCROLLLINES = &H69
    SPI_GETMENUSHOWDELAY = &H6A
    SPI_SETMENUSHOWDELAY = &H6B

    SPI_GETWHEELSCROLLCHARS = &H6C
    SPI_SETWHEELSCROLLCHARS = &H6D

    SPI_GETSHOWIMEUI = &H6E
    SPI_SETSHOWIMEUI = &H6F

    SPI_GETMOUSESPEED = &H70
    SPI_SETMOUSESPEED = &H71
    SPI_GETSCREENSAVERRUNNING = &H72
    SPI_GETDESKWALLPAPER = &H73

    SPI_GETAUDIODESCRIPTION = &H74
    SPI_SETAUDIODESCRIPTION = &H75

    SPI_GETSCREENSAVESECURE = &H76
    SPI_SETSCREENSAVESECURE = &H77

    SPI_GETHUNGAPPTIMEOUT = &H78
    SPI_SETHUNGAPPTIMEOUT = &H79
    SPI_GETWAITTOKILLTIMEOUT = &H7A
    SPI_SETWAITTOKILLTIMEOUT = &H7B
    SPI_GETWAITTOKILLSERVICETIMEOUT = &H7C
    SPI_SETWAITTOKILLSERVICETIMEOUT = &H7D
    SPI_GETMOUSEDOCKTHRESHOLD = &H7E
    SPI_SETMOUSEDOCKTHRESHOLD = &H7F
    SPI_GETPENDOCKTHRESHOLD = &H80
    SPI_SETPENDOCKTHRESHOLD = &H81
    SPI_GETWINARRANGING = &H82
    SPI_SETWINARRANGING = &H83
    SPI_GETMOUSEDRAGOUTTHRESHOLD = &H84
    SPI_SETMOUSEDRAGOUTTHRESHOLD = &H85
    SPI_GETPENDRAGOUTTHRESHOLD = &H86
    SPI_SETPENDRAGOUTTHRESHOLD = &H87
    SPI_GETMOUSESIDEMOVETHRESHOLD = &H88
    SPI_SETMOUSESIDEMOVETHRESHOLD = &H89
    SPI_GETPENSIDEMOVETHRESHOLD = &H8A
    SPI_SETPENSIDEMOVETHRESHOLD = &H8B
    SPI_GETDRAGFROMMAXIMIZE = &H8C
    SPI_SETDRAGFROMMAXIMIZE = &H8D
    SPI_GETSNAPSIZING = &H8E
    SPI_SETSNAPSIZING = &H8F
    SPI_GETDOCKMOVING = &H90
    SPI_SETDOCKMOVING = &H91
    SPI_GETTOUCHPREDICTIONPARAMETERS = &H9C
    SPI_SETTOUCHPREDICTIONPARAMETERS = &H9D
    SPI_GETLOGICALDPIOVERRIDE = &H9E
    SPI_SETLOGICALDPIOVERRIDE = &H9F


    SPI_GETMENURECT = &HA2
    SPI_SETMENURECT = &HA3
    SPI_GETACTIVEWINDOWTRACKING = &H1000
    SPI_SETACTIVEWINDOWTRACKING = &H1001
    SPI_GETMENUANIMATION = &H1002
    SPI_SETMENUANIMATION = &H1003
    SPI_GETCOMBOBOXANIMATION = &H1004
    SPI_SETCOMBOBOXANIMATION = &H1005
    SPI_GETLISTBOXSMOOTHSCROLLING = &H1006
    SPI_SETLISTBOXSMOOTHSCROLLING = &H1007
    SPI_GETGRADIENTCAPTIONS = &H1008
    SPI_SETGRADIENTCAPTIONS = &H1009
    SPI_GETKEYBOARDCUES = &H100A
    SPI_SETKEYBOARDCUES = &H100B
    SPI_GETMENUUNDERLINES = SPI_GETKEYBOARDCUES
    SPI_SETMENUUNDERLINES = SPI_SETKEYBOARDCUES
    SPI_GETACTIVEWNDTRKZORDER = &H100C
    SPI_SETACTIVEWNDTRKZORDER = &H100D
    SPI_GETHOTTRACKING = &H100E
    SPI_SETHOTTRACKING = &H100F
    SPI_GETMENUFADE = &H1012
    SPI_SETMENUFADE = &H1013
    SPI_GETSELECTIONFADE = &H1014
    SPI_SETSELECTIONFADE = &H1015
    SPI_GETTOOLTIPANIMATION = &H1016
    SPI_SETTOOLTIPANIMATION = &H1017
    SPI_GETTOOLTIPFADE = &H1018
    SPI_SETTOOLTIPFADE = &H1019
    SPI_GETCURSORSHADOW = &H101A
    SPI_SETCURSORSHADOW = &H101B
    SPI_GETMOUSESONAR = &H101C
    SPI_SETMOUSESONAR = &H101D
    SPI_GETMOUSECLICKLOCK = &H101E
    SPI_SETMOUSECLICKLOCK = &H101F
    SPI_GETMOUSEVANISH = &H1020
    SPI_SETMOUSEVANISH = &H1021
    SPI_GETFLATMENU = &H1022
    SPI_SETFLATMENU = &H1023
    SPI_GETDROPSHADOW = &H1024
    SPI_SETDROPSHADOW = &H1025
    SPI_GETBLOCKSENDINPUTRESETS = &H1026
    SPI_SETBLOCKSENDINPUTRESETS = &H1027

    SPI_GETUIEFFECTS = &H103E
    SPI_SETUIEFFECTS = &H103F

    SPI_GETDISABLEOVERLAPPEDCONTENT = &H1040
    SPI_SETDISABLEOVERLAPPEDCONTENT = &H1041
    SPI_GETCLIENTAREAANIMATION = &H1042
    SPI_SETCLIENTAREAANIMATION = &H1043
    SPI_GETCLEARTYPE = &H1048
    SPI_SETCLEARTYPE = &H1049
    SPI_GETSPEECHRECOGNITION = &H104A
    SPI_SETSPEECHRECOGNITION = &H104B

    SPI_GETCARETBROWSING = &H104C
    SPI_SETCARETBROWSING = &H104D
    SPI_GETTHREADLOCALINPUTSETTINGS = &H104E
    SPI_SETTHREADLOCALINPUTSETTINGS = &H104F
    SPI_GETSYSTEMLANGUAGEBAR = &H1050
    SPI_SETSYSTEMLANGUAGEBAR = &H1051

    SPI_GETFOREGROUNDLOCKTIMEOUT = &H2000
    SPI_SETFOREGROUNDLOCKTIMEOUT = &H2001
    SPI_GETACTIVEWNDTRKTIMEOUT = &H2002
    SPI_SETACTIVEWNDTRKTIMEOUT = &H2003
    SPI_GETFOREGROUNDFLASHCOUNT = &H2004
    SPI_SETFOREGROUNDFLASHCOUNT = &H2005
    SPI_GETCARETWIDTH = &H2006
    SPI_SETCARETWIDTH = &H2007

    SPI_GETMOUSECLICKLOCKTIME = &H2008
    SPI_SETMOUSECLICKLOCKTIME = &H2009
    SPI_GETFONTSMOOTHINGTYPE = &H200A
    SPI_SETFONTSMOOTHINGTYPE = &H200B

    SPI_GETFONTSMOOTHINGCONTRAST = &H200C
    SPI_SETFONTSMOOTHINGCONTRAST = &H200D

    SPI_GETFOCUSBORDERWIDTH = &H200E
    SPI_SETFOCUSBORDERWIDTH = &H200F
    SPI_GETFOCUSBORDERHEIGHT = &H2010
    SPI_SETFOCUSBORDERHEIGHT = &H2011

    SPI_GETFONTSMOOTHINGORIENTATION = &H2012
    SPI_SETFONTSMOOTHINGORIENTATION = &H2013

    SPI_GETMINIMUMHITRADIUS = &H2014
    SPI_SETMINIMUMHITRADIUS = &H2015
    SPI_GETMESSAGEDURATION = &H2016
    SPI_SETMESSAGEDURATION = &H2017

    SPI_GETCONTACTVISUALIZATION = &H2018
    SPI_SETCONTACTVISUALIZATION = &H2019

    SPI_GETGESTUREVISUALIZATION = &H201A
    SPI_SETGESTUREVISUALIZATION = &H201B

    SPI_GETMOUSEWHEELROUTING = &H201C
    SPI_SETMOUSEWHEELROUTING = &H201D

    SPI_GETPENVISUALIZATION = &H201E
    SPI_SETPENVISUALIZATION = &H201F

'#if (NTDDI_VERSION >= NTDDI_WIN10_RS3)
    SPI_GETCARETTIMEOUT = &H2022
    SPI_SETCARETTIMEOUT = &H2023

'#if (NTDDI_VERSION >= NTDDI_WIN10_RS4)
    SPI_GETHANDEDNESS = &H2024
    SPI_SETHANDEDNESS = &H2025  
End Enum
Public Enum SPIF
   SPIF_UPDATEINIFILE = &H1     ' Writes the new system-wide parameter setting to the user profile.
   SPIF_SENDCHANGE = &H2        ' Broadcasts the WM_SETTINGCHANGE message after updating the user profile.
   SPIF_SENDWININICHANGE = &H2  ' Same as SPIF_SENDCHANGE.
End Enum
Public Enum PMOptions
    PM_NOREMOVE = 0                                      ' &H00000000&
    PM_REMOVE = 1                                        ' &H00000001&
    PM_NOYIELD = 2                                       ' &H00000002&
End Enum

Public Enum ClassStyles
     CS_VREDRAW = &H0001
     CS_HREDRAW = &H0002
     CS_DBLCLKS = &H0008
     CS_OWNDC = &H0020
     CS_CLASSDC = &H0040
     CS_PARENTDC = &H0080
     CS_NOCLOSE = &H0200
     CS_SAVEBITS = &H0800
     CS_BYTEALIGNCLIENT = &H1000
     CS_BYTEALIGNWINDOW = &H2000
     CS_GLOBALCLASS = &H4000
     CS_IME = &H00010000
     CS_DROPSHADOW = &H00020000
End Enum

Public Enum DefCursors
    IDC_ARROW = 32512&
    IDC_IBEAM = 32513&
    IDC_WAIT = 32514&
    IDC_CROSS = 32515&
    IDC_UPARROW = 32516&
    IDC_SIZE = 32640&
    IDC_ICON = 32641&
    IDC_SIZENWSE = 32642&
    IDC_SIZENESW = 32643&
    IDC_SIZEWE = 32644&
    IDC_SIZENS = 32645&
    IDC_SIZEALL = 32646&
    IDC_NO = 32648&
    IDC_HAND = 32649&
    IDC_APPSTARTING = 32650&
    IDC_HELP = 32651&
    IDC_PIN = 32671&
    IDC_PERSON = 32672&
End Enum
Public Enum SysCursors
    OCR_NORMAL = 32512&
    OCR_IBEAM = 32513&
    OCR_WAIT = 32514&
    OCR_CROSS = 32515&
    OCR_UP = 32516&
    OCR_SIZE = 32640&
    OCR_ICON = 32641&
    OCR_SIZENWSE = 32642&
    OCR_SIZENESW = 32643&
    OCR_SIZEWE = 32644&
    OCR_SIZENS = 32645&
    OCR_SIZEALL = 32646&
    OCR_NO = 32648&
    OCR_HAND = 32649&
    OCR_APPSTARTING = 32650&
    OCR_HELP = 32651&
End Enum


Public Enum DefIcons
	IDI_APPLICATION = 32512
	IDI_HAND        = 32513
	IDI_QUESTION    = 32514
	IDI_EXCLAMATION = 32515
	IDI_ASTERISK    = 32516
	IDI_WINLOGO     = 32517
	IDI_WARNING     = IDI_EXCLAMATION
	IDI_ERROR       = IDI_HAND
	IDI_INFORMATION = IDI_ASTERISK
    IDI_SHIELD      = 32518
End Enum

Public Type WNDCLASSEXA
    cbSize As Long
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As String
    lpszClassName As String
    hIconSm As LongPtr
End Type
Public Type WNDCLASSEXW
    cbSize As Long
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
    hIconSm As LongPtr
End Type
Public Type WNDCLASSEX
    cbSize As Long
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
    hIconSm As LongPtr
End Type
Public Type WNDCLASS
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
End Type
Public Type WNDCLASSW
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
End Type
Public Type WNDCLASSA
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As String
    lpszClassName As String
End Type

Public Enum WindowsHookCodes
    WH_MIN = (-1)
    WH_MSGFILTER = (-1)
    WH_JOURNALRECORD = 0
    WH_JOURNALPLAYBACK = 1
    WH_KEYBOARD = 2
    WH_GETMESSAGE = 3
    WH_CALLWNDPROC = 4
    WH_CBT = 5
    WH_SYSMSGFILTER = 6
    WH_MOUSE = 7
    WH_HARDWARE = 8
    WH_DEBUG = 9
    WH_SHELL = 10
    WH_FOREGROUNDIDLE = 11
    WH_MAX = 11
End Enum

Public Enum HookCodes
    HC_ACTION = 0
    HC_GETNEXT = 1
    HC_SKIP = 2
    HC_NOREMOVE = 3
    HC_NOREM = HC_NOREMOVE
    HC_SYSMODALON = 4
    HC_SYSMODALOFF = 5
End Enum

Public Enum CBTHookCodes
    HCBT_MOVESIZE = 0
    HCBT_MINMAX = 1
    HCBT_QS = 2
    HCBT_CREATEWND = 3
    HCBT_DESTROYWND = 4
    HCBT_ACTIVATE = 5
    HCBT_CLICKSKIPPED = 6
    HCBT_KEYSKIPPED = 7
    HCBT_SYSCOMMAND = 8
    HCBT_SETFOCUS = 9
End Enum

' HCBT_ACTIVATE structure pointed to by lParam
Public Type CBTACTIVATESTRUCT
    fMouse As Long
    hWndActive As LongPtr
End Type

Public Enum MsgFilterCodes
    MSGF_DIALOGBOX = 0
    MSGF_MESSAGEBOX = 1
    MSGF_MENU = 2
    MSGF_MOVE = 3
    MSGF_SIZE = 4
    MSGF_SCROLLBAR = 5
    MSGF_NEXTWINDOW = 6
    MSGF_MAINLOOP = 8
    MSGF_MAX = 8
    MSGF_USER = 4096
End Enum


Public Const HSHELL_WINDOWCREATED = 1
Public Const HSHELL_WINDOWDESTROYED = 2
Public Const HSHELL_ACTIVATESHELLWINDOW = 3
Public Const HSHELL_WINDOWACTIVATED  = 4
Public Const HSHELL_GETMINRECT  = 5
Public Const HSHELL_REDRAW  = 6
Public Const HSHELL_TASKMAN  = 7
Public Const HSHELL_LANGUAGE  = 8
Public Const HSHELL_SYSMENU  = 9
Public Const HSHELL_ENDTASK  = 10
Public Const HSHELL_ACCESSIBILITYSTATE  = 11
Public Const HSHELL_APPCOMMAND  = 12
Public Const HSHELL_WINDOWREPLACED  = 13
Public Const HSHELL_WINDOWREPLACING  = 14
Public Const HSHELL_MONITORCHANGED  = 16
Public Const HSHELL_HIGHBIT  = &H8000
Public Const HSHELL_FLASH  = (HSHELL_REDRAW Or HSHELL_HIGHBIT)
Public Const HSHELL_RUDEAPPACTIVATED  = (HSHELL_WINDOWACTIVATED Or HSHELL_HIGHBIT)

Public Const APPCOMMAND_BROWSER_BACKWARD  = 1
Public Const APPCOMMAND_BROWSER_FORWARD  = 2
Public Const APPCOMMAND_BROWSER_REFRESH  = 3
Public Const APPCOMMAND_BROWSER_STOP  = 4
Public Const APPCOMMAND_BROWSER_SEARCH  = 5
Public Const APPCOMMAND_BROWSER_FAVORITES  = 6
Public Const APPCOMMAND_BROWSER_HOME  = 7
Public Const APPCOMMAND_VOLUME_MUTE  = 8
Public Const APPCOMMAND_VOLUME_DOWN  = 9
Public Const APPCOMMAND_VOLUME_UP  = 10
Public Const APPCOMMAND_MEDIA_NEXTTRACK  = 11
Public Const APPCOMMAND_MEDIA_PREVIOUSTRACK  = 12
Public Const APPCOMMAND_MEDIA_STOP  = 13
Public Const APPCOMMAND_MEDIA_PLAY_PAUSE  = 14
Public Const APPCOMMAND_LAUNCH_MAIL  = 15
Public Const APPCOMMAND_LAUNCH_MEDIA_SELECT  = 16
Public Const APPCOMMAND_LAUNCH_APP1  = 17
Public Const APPCOMMAND_LAUNCH_APP2  = 18
Public Const APPCOMMAND_BASS_DOWN  = 19
Public Const APPCOMMAND_BASS_BOOST  = 20
Public Const APPCOMMAND_BASS_UP  = 21
Public Const APPCOMMAND_TREBLE_DOWN  = 22
Public Const APPCOMMAND_TREBLE_UP  = 23
Public Const APPCOMMAND_MICROPHONE_VOLUME_MUTE  = 24
Public Const APPCOMMAND_MICROPHONE_VOLUME_DOWN  = 25
Public Const APPCOMMAND_MICROPHONE_VOLUME_UP  = 26
Public Const APPCOMMAND_HELP  = 27
Public Const APPCOMMAND_FIND  = 28
Public Const APPCOMMAND_NEW  = 29
Public Const APPCOMMAND_OPEN  = 30
Public Const APPCOMMAND_CLOSE  = 31
Public Const APPCOMMAND_SAVE  = 32
Public Const APPCOMMAND_PRINT  = 33
Public Const APPCOMMAND_UNDO  = 34
Public Const APPCOMMAND_REDO  = 35
Public Const APPCOMMAND_COPY  = 36
Public Const APPCOMMAND_CUT  = 37
Public Const APPCOMMAND_PASTE  = 38
Public Const APPCOMMAND_REPLY_TO_MAIL  = 39
Public Const APPCOMMAND_FORWARD_MAIL  = 40
Public Const APPCOMMAND_SEND_MAIL  = 41
Public Const APPCOMMAND_SPELL_CHECK  = 42
Public Const APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE  = 43
Public Const APPCOMMAND_MIC_ON_OFF_TOGGLE  = 44
Public Const APPCOMMAND_CORRECTION_LIST  = 45
Public Const APPCOMMAND_MEDIA_PLAY  = 46
Public Const APPCOMMAND_MEDIA_PAUSE  = 47
Public Const APPCOMMAND_MEDIA_RECORD  = 48
Public Const APPCOMMAND_MEDIA_FAST_FORWARD  = 49
Public Const APPCOMMAND_MEDIA_REWIND  = 50
Public Const APPCOMMAND_MEDIA_CHANNEL_UP  = 51
Public Const APPCOMMAND_MEDIA_CHANNEL_DOWN  = 52
Public Const APPCOMMAND_DELETE  = 53
Public Const APPCOMMAND_DWM_FLIP3D  = 54

Public Const FAPPCOMMAND_MOUSE  = &H8000
Public Const FAPPCOMMAND_KEY  = 0
Public Const FAPPCOMMAND_OEM  = &H1000
Public Const FAPPCOMMAND_MASK  = &HF000


Public Const MDIS_ALLCHILDSTYLES  = &H0001

'Flags for WM_MDITILE and WM_MDICASCADE messages.
Public Const MDITILE_VERTICAL  = &H0000 /*not in win3.1 */
Public Const MDITILE_HORIZONTAL  = &H0001 /*not in win3.1 */
Public Const MDITILE_SKIPDISABLED  = &H0002 /*not in win3.1 */
Public Const MDITILE_ZORDER  = &H0004

Public Type DRAWTEXTPARAMS
	cbSize As Long
	iTabLength As Long
	iLeftMargin As Long
	iRightMargin As Long
	uiLengthDrawn As Long
End Type

Public Enum TouchInputFlags
	TOUCHEVENTF_MOVE  = &H0001
	TOUCHEVENTF_DOWN  = &H0002
	TOUCHEVENTF_UP  = &H0004
	TOUCHEVENTF_INRANGE  = &H0008
	TOUCHEVENTF_PRIMARY  = &H0010
	TOUCHEVENTF_NOCOALESCE  = &H0020
	TOUCHEVENTF_PEN  = &H0040
	TOUCHEVENTF_PALM  = &H0080
End Enum
Public Enum TouchInputMask
	TOUCHINPUTMASKF_TIMEFROMSYSTEM  = &H0001  ' the dwTime field contains a system generated value
	TOUCHINPUTMASKF_EXTRAINFO  = &H0002  ' the dwExtraInfo field is valid
	TOUCHINPUTMASKF_CONTACTAREA  = &H0004  ' the cxContact and cyContact fields are valid
End Enum
Public Type TOUCHINPUT
	x As LONG
	y As LONG
	hSource As LongPtr
	dwID As Long
	dwFlags As TouchInputFlags
	dwMask As TouchInputMask
	dwTime As Long
	dwExtraInfo As LongPtr
	cxContact As Long
	cyContact As Long
End Type

Public Enum RegTouchWindowFlags
	TWF_FINETOUCH  = (&H00000001)
	TWF_WANTPALM  = (&H00000002)
End Enum

Public Enum GCL_Index
	GCL_MENUNAME  = (-8)
	GCL_HBRBACKGROUND  = (-10)
	GCL_HCURSOR  = (-12)
	GCL_HICON  = (-14)
	GCL_HMODULE  = (-16)
	GCL_CBWNDEXTRA = (-18)
	GCL_CBCLSEXTRA  = (-20)
	GCL_WNDPROC  = (-24)
	GCL_STYLE  = (-26)
	GCW_ATOM  = (-32)
	GCL_HICONSM  = (-34)
End Enum
Public Enum GCLP_Index
    GCLP_MENUNAME  = (-8)
    GCLP_HBRBACKGROUND  = (-10)
    GCLP_HCURSOR  = (-12)
    GCLP_HICON = (-14)
    GCLP_HMODULE  = (-16)
    GCLP_CBWNDEXTRA = (-18)
    GCLP_CBCLSEXTRA = (-20)
    GCLP_WNDPROC  = (-24)
    GCLP_STYLE  = (-26)
    GCWP_ATOM  = (-32)
    GCLP_HICONSM  = (-34)
End Enum
Public Enum UserObjectInfoTypes
	UOI_FLAGS  = 1
	UOI_NAME  = 2
	UOI_TYPE  = 3
	UOI_USER_SID  = 4
	UOI_HEAPSIZE  = 5
	UOI_IO  = 6
	UOI_TIMERPROC_EXCEPTION_SUPPRESSION  = 7
End Enum

Public Enum WindowStationAccessFlags
	WINSTA_ENUMDESKTOPS  = &H0001
	WINSTA_READATTRIBUTES  = &H0002
	WINSTA_ACCESSCLIPBOARD  = &H0004
	WINSTA_CREATEDESKTOP  = &H0008
	WINSTA_WRITEATTRIBUTES  = &H0010
	WINSTA_ACCESSGLOBALATOMS  = &H0020
	WINSTA_EXITWINDOWS  = &H0040
	WINSTA_ENUMERATE  = &H0100
	WINSTA_READSCREEN  = &H0200
	WINSTA_ALL_ACCESS  = (WINSTA_ENUMDESKTOPS Or WINSTA_READATTRIBUTES Or WINSTA_ACCESSCLIPBOARD Or WINSTA_CREATEDESKTOP Or WINSTA_WRITEATTRIBUTES Or WINSTA_ACCESSGLOBALATOMS Or WINSTA_EXITWINDOWS Or WINSTA_ENUMERATE Or WINSTA_READSCREEN)
End Enum

Public Enum WindowStationCreateFlags
     CWF_CREATE_ONLY         = &H00000001
End Enum

Public Enum WindowStationAttribFlags
     WSF_VISIBLE             = &H0001
End Enum

Public Enum BorderStyles
	BDR_RAISEDOUTER  = &H0001
	BDR_SUNKENOUTER  = &H0002
	BDR_RAISEDINNER  = &H0004
	BDR_SUNKENINNER  = &H0008
	BDR_OUTER  = (BDR_RAISEDOUTER  Or  BDR_SUNKENOUTER)
	BDR_INNER  = (BDR_RAISEDINNER  Or  BDR_SUNKENINNER)
	BDR_RAISED  = (BDR_RAISEDOUTER  Or  BDR_RAISEDINNER)
	BDR_SUNKEN  = (BDR_SUNKENOUTER  Or  BDR_SUNKENINNER)
	EDGE_RAISED  = (BDR_RAISEDOUTER  Or  BDR_RAISEDINNER)
	EDGE_SUNKEN  = (BDR_SUNKENOUTER  Or  BDR_SUNKENINNER)
	EDGE_ETCHED  = (BDR_SUNKENOUTER  Or  BDR_RAISEDINNER)
	EDGE_BUMP  = (BDR_RAISEDOUTER  Or  BDR_SUNKENINNER)
End Enum

Public Enum BorderFlags
	BF_LEFT  = &H0001
	BF_TOP  = &H0002
	BF_RIGHT  = &H0004
	BF_BOTTOM  = &H0008
	BF_TOPLEFT  = (BF_TOP  Or BF_LEFT)
	BF_TOPRIGHT  = (BF_TOP  Or  BF_RIGHT)
	BF_BOTTOMLEFT  = (BF_BOTTOM  Or  BF_LEFT)
	BF_BOTTOMRIGHT  = (BF_BOTTOM  Or  BF_RIGHT)
	BF_RECT  = (BF_LEFT  Or  BF_TOP  Or  BF_RIGHT  Or BF_BOTTOM)
	BF_DIAGONAL  = &H0010
'  For diagonal lines, the BF_RECT flags specify the end point of the
'  vector bounded by the rectangle parameter.
	BF_DIAGONAL_ENDTOPRIGHT  = (BF_DIAGONAL  Or  BF_TOP  Or  BF_RIGHT)
	BF_DIAGONAL_ENDTOPLEFT  = (BF_DIAGONAL  Or  BF_TOP  Or BF_LEFT)
	BF_DIAGONAL_ENDBOTTOMLEFT  = (BF_DIAGONAL  Or  BF_BOTTOM  Or  BF_LEFT)
	BF_DIAGONAL_ENDBOTTOMRIGHT  = (BF_DIAGONAL  Or  BF_BOTTOM  Or  BF_RIGHT)
	BF_MIDDLE  = &H0800 /* Fill in the middle */
	BF_SOFT  = &H1000 /* For softer buttons */
	BF_ADJUST  = &H2000 /* Calculate the space left over */
	BF_FLAT  = &H4000 /* For flat rather than 3D borders */
	BF_MONO  = &H8000& /* For monochrome borders */
End Enum


Public Enum PrintWindowFlags
	PW_CLIENTONLY  = &H00000001
	PW_RENDERFULLCONTENT  = &H00000002
End Enum

Public Enum GetWindowConsts
	GW_HWNDFIRST  = 0
	GW_HWNDLAST  = 1
	GW_HWNDNEXT  = 2
	GW_HWNDPREV  = 3
	GW_OWNER  = 4
	GW_CHILD  = 5
	GW_ENABLEDPOPUP  = 6
End Enum

Public Enum GWL_INDEX
    GWL_WNDPROC = (-4)
    GWL_HINSTANCE = (-6)
    GWL_HWNDPARENT = (-8)
    GWL_ID = (-12)
    GWL_STYLE = (-16)
    GWL_EXSTYLE = (-20)
    GWL_USERDATA = (-21)
End Enum
Public Enum GWLP_INDEX
    GWLP_WNDPROC = (-4)
    GWLP_HINSTANCE = (-6)
    GWLP_HWNDPARENT = (-8)
    GWLP_ID = (-12)
    GWLP_STYLE = (-16)
    GWLP_EXSTYLE = (-20)
    GWLP_USERDATA = (-21)
End Enum

Public Enum HotKeyModifiers
	MOD_ALT  = &H0001
	MOD_CONTROL  = &H0002
	MOD_SHIFT  = &H0004
	MOD_WIN  = &H0008
	MOD_NOREPEAT  = &H4000
End Enum

Public Enum SendMessageTimeoutFlags
	SMTO_NORMAL  = &H0000
	SMTO_BLOCK  = &H0001
	SMTO_ABORTIFHUNG  = &H0002
	SMTO_NOTIMEOUTIFNOTHUNG  = &H0008
	SMTO_ERRORONEXIT  = &H0020
End Enum

Public Enum ChildWindowFromPointFlags
	CWP_ALL  = &H0000
	CWP_SKIPINVISIBLE  = &H0001
	CWP_SKIPDISABLED  = &H0002
	CWP_SKIPTRANSPARENT  = &H0004
End Enum

Public Enum WindowRegionTypes
	NULLREGION  = 1
	SIMPLEREGION  = 2
	COMPLEXREGION  = 3
	RGN_ERROR  = 0
End Enum

Public Enum AnimationTypeIDs
	IDANI_OPEN  = 1
	IDANI_CAPTION  = 3
End Enum

Public Enum DrawStateImageTypes
	DST_COMPLEX  = &H0000
	DST_TEXT  = &H0001
	DST_PREFIXTEXT  = &H0002
	DST_ICON  = &H0003
	DST_BITMAP  = &H0004
End Enum
Public Enum DrawStateStates
	DSS_NORMAL  = &H0000
	DSS_UNION  = &H0010 /* Gray string appearance */
	DSS_DISABLED  = &H0020
	DSS_MONO  = &H0080
	DSS_HIDEPREFIX  = &H0200
	DSS_PREFIXONLY  = &H0400
	DSS_RIGHT = &H8000&
End Enum

Public Enum DrawCaptionFlags
	DC_ACTIVE  = &H0001
	DC_SMALLCAP  = &H0002
	DC_ICON  = &H0004
	DC_TEXT  = &H0008
	DC_INBUTTON  = &H0010
	DC_GRADIENT  = &H0020
	DC_BUTTONS  = &H1000
End Enum

Public Enum DrawFrameControlTypes
	DFC_CAPTION  = 1
	DFC_MENU  = 2
	DFC_SCROLL  = 3
	DFC_BUTTON  = 4
	DFC_POPUPMENU  = 5
End Enum
Public Enum DrawFrameControlStates
	DFCS_CAPTIONCLOSE  = &H0000
	DFCS_CAPTIONMIN  = &H0001
	DFCS_CAPTIONMAX  = &H0002
	DFCS_CAPTIONRESTORE  = &H0003
	DFCS_CAPTIONHELP  = &H0004
	DFCS_MENUARROW  = &H0000
	DFCS_MENUCHECK  = &H0001
	DFCS_MENUBULLET  = &H0002
	DFCS_MENUARROWRIGHT  = &H0004
	DFCS_SCROLLUP  = &H0000
	DFCS_SCROLLDOWN  = &H0001
	DFCS_SCROLLLEFT  = &H0002
	DFCS_SCROLLRIGHT  = &H0003
	DFCS_SCROLLCOMBOBOX  = &H0005
	DFCS_SCROLLSIZEGRIP  = &H0008
	DFCS_SCROLLSIZEGRIPRIGHT  = &H0010
	DFCS_BUTTONCHECK  = &H0000
	DFCS_BUTTONRADIOIMAGE  = &H0001
	DFCS_BUTTONRADIOMASK  = &H0002
	DFCS_BUTTONRADIO  = &H0004
	DFCS_BUTTON3STATE  = &H0008
	DFCS_BUTTONPUSH  = &H0010
	DFCS_INACTIVE  = &H0100
	DFCS_PUSHED  = &H0200
	DFCS_CHECKED  = &H0400
	DFCS_TRANSPARENT  = &H0800
	DFCS_HOT  = &H1000
	DFCS_ADJUSTRECT  = &H2000
	DFCS_FLAT  = &H4000
	DFCS_MONO = &H8000&
End Enum

Public Enum GetDcExFlags
	DCX_WINDOW  = &H00000001
	DCX_CACHE  = &H00000002
	DCX_NORESETATTRS  = &H00000004
	DCX_CLIPCHILDREN  = &H00000008
	DCX_CLIPSIBLINGS  = &H00000010
	DCX_PARENTCLIP  = &H00000020
	DCX_EXCLUDERGN  = &H00000040
	DCX_INTERSECTRGN  = &H00000080
	DCX_EXCLUDEUPDATE  = &H00000100
	DCX_INTERSECTUPDATE  = &H00000200
	DCX_LOCKWINDOWUPDATE  = &H00000400
	DCX_VALIDATE  = &H00200000
End Enum

Public DeclareWide PtrSafe Function CreateWindowEx Lib "user32" Alias "CreateWindowExW" (ByVal dwExStyle As WindowStylesEx, ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateWindowExA Lib "user32" (ByVal dwExStyle As WindowStylesEx, ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateWindowExW Lib "user32" (ByVal dwExStyle As WindowStylesEx, ByVal lpClassName As LongPtr, ByVal lpWindowName As LongPtr, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateMDIWindow Lib "user32" Alias "CreateMDIWindowW" (ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateMDIWindowA Lib "user32" (ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateMDIWindowW Lib "user32" (ByVal lpClassName As LongPtr, ByVal lpWindowName As LongPtr, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function DestroyWindow Lib "user32" (ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function DestroyIcon Lib "user32" (ByVal hIcon As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateIconFromResource Lib "user32" (ByRef presbits As Any, ByVal dwResSize As Long, ByVal fIcon As BOOL, ByVal dwVer As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateIconFromResourceEx Lib "user32" (ByRef presbits As Any, ByVal dwResSize As Long, ByVal fIcon As BOOL, ByVal dwVer As Long, ByVal cxDesired As Long, ByVal cyDesired As Long, ByVal Flags As LoadResourceFlags) As LongPtr

Public DeclareWide PtrSafe Function PeekMessage Lib "user32" Alias "PeekMessageW" (ByRef lpmsg As MSG, ByVal hwnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As PMOptions) As Long
Public Declare PtrSafe Function PeekMessageA Lib "user32" (ByRef lpmsg As MSG, ByVal hwnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As PMOptions) As Long
Public Declare PtrSafe Function PeekMessageW Lib "user32" (ByRef lpmsg As MSG, ByVal hwnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As PMOptions) As Long
Public Declare PtrSafe Function TranslateMessage Lib "user32" (ByRef lpmsg As MSG) As Long
Public DeclareWide PtrSafe Function DispatchMessage Lib "user32" Alias "DispatchMessageW" (ByRef lpmsg As MSG) As Long
Public Declare PtrSafe Function DispatchMessageA Lib "user32" (ByRef lpmsg As MSG) As Long
Public Declare PtrSafe Function DispatchMessageW Lib "user32" (ByRef lpmsg As MSG) As Long
Public DeclareWide PtrSafe Function DefWindowProc Lib "user32" Alias "DefWindowProcW" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefWindowProcA Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefWindowProcW Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetMessage Lib "user32" Alias "GetMessageW" (lpMsg As MSG, ByVal hWnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long
Public Declare PtrSafe Function GetMessageA Lib "user32" (lpMsg As MSG, ByVal hWnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long
Public Declare PtrSafe Function GetMessageW Lib "user32" (lpMsg As MSG, ByVal hWnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long
Public Declare PtrSafe Function GetMessagePos Lib "user32" () As Long
Public Declare PtrSafe Sub PostQuitMessage Lib "user32" (ByVal nExitCode As Long)
Public DeclareWide PtrSafe Function CallWindowProc Lib "user32" Alias "CallWindowProcW" (ByVal lpPrevWndFunc As LongPtr, ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function CallWindowProcA Lib "user32" (ByVal lpPrevWndFunc As LongPtr, ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function CallWindowProcW Lib "user32" (ByVal lpPrevWndFunc As LongPtr, ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function EnumThreadWindows Lib "user32" (ByVal dwThreadId As Long, ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As Long
Public Declare PtrSafe Function GetClassNameA Lib "user32" (ByVal hwnd As LongPtr, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long
Public Declare PtrSafe Function GetClassNameW Lib "user32" (ByVal hwnd As LongPtr, ByVal lpClassName As LongPtr, ByVal nMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetClassName Lib "user32" Alias "GetClassNameW" (ByVal hwnd As LongPtr, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long
Public Declare PtrSafe Function SetTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr, ByVal uEleapse As Long, ByVal lpTimerFunc As LongPtr) As LongPtr
Public Declare PtrSafe Function KillTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr) As Long
Public Declare PtrSafe Function SystemParametersInfoA Lib "user32" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF) As BOOL
Public Declare PtrSafe Function SystemParametersInfoW Lib "user32" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF) As BOOL
Public DeclareWide PtrSafe Function SystemParametersInfo Lib "user32" Alias "SystemParametersInfoW" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF) As BOOL
Public Declare PtrSafe Function SystemParametersInfoForDpi Lib "user32" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF, ByVal dpi As Long) As BOOL
Public Declare PtrSafe Function RegisterShellHookWindow  Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function DeregisterShellHookWindow Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function GetTouchInputInfo Lib "user32" (ByVal hTouchInput As LongPtr, ByVal cInputs As Long, pInputs As TOUCHINPUT, ByVal cbSize As Long) As BOOL
Public Declare PtrSafe Function CloseTouchInputHandle Lib "user32" (ByVal hTouchInput As LongPtr) As BOOL
Public Declare PtrSafe Function RegisterTouchWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal ulFlags As RegTouchWindowFlags) As BOOL
Public Declare PtrSafe Function UnregisterTouchWindow Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsTouchWindow Lib "user32" (ByVal hwnd As LongPtr, pulFlags As RegTouchWindowFlags) As BOOL
Public Declare PtrSafe Function CreateMenu Lib "user32" () As LongPtr
Public Declare PtrSafe Function CreatePopupMenu Lib "user32" () As LongPtr
Public Declare PtrSafe Function SetPropA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String, Optional ByVal hData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetPropW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr, Optional ByVal hData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetProp Lib "user32" Alias "SetPropW" (ByVal hWnd As LongPtr, ByVal lpString As String, Optional ByVal hData As LongPtr) As BOOL
Public Declare PtrSafe Function GetPropA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public DeclareWide PtrSafe Function GetPropW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetProp Lib "user32" Alias "GetPropW" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function RemovePropA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public DeclareWide PtrSafe Function RemovePropW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RemoveProp Lib "user32" Alias "RemovePropW" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function EnumPropsA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr) As Long
Public DeclareWide PtrSafe Function EnumPropsW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr) As Long
Public DeclareWide PtrSafe Function EnumProps Lib "user32" Alias "EnumPropsW" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr) As Long
Public Declare PtrSafe Function EnumPropsExA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As Long
Public DeclareWide PtrSafe Function EnumPropsExW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As Long
Public DeclareWide PtrSafe Function EnumPropsEx Lib "user32" Alias "EnumPropsW" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As Long
Public DeclareWide PtrSafe Function GetShellWindow Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function GetDesktopWindow Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_Index) As LongPtr
Public DeclareWide PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetClassLongPtr Lib "user32" Alias "GetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index) As LongPtr
Public DeclareWide PtrSafe Function SetClassLongPtr Lib "user32" Alias "SetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RegisterHotKey Lib "user32" (ByVal hWnd As LongPtr, ByVal id As Long, ByVal fsModifiers As HotKeyModifiers, ByVal vk As VirtualKeyCodes) As BOOL
Public DeclareWide PtrSafe Function UnregisterHotKey Lib "user32" (ByVal hWnd As LongPtr, ByVal id As Long) As BOOL

#If Win64 Then
Public DeclareWide PtrSafe Function GetWindowLong Lib "user32" Alias "GetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_Index) As LongPtr
Public DeclareWide PtrSafe Function SetWindowLong Lib "user32" Alias "SetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetClassLong Lib "user32" Alias "GetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As LongPtr
Public DeclareWide PtrSafe Function SetClassLong Lib "user32" Alias "SetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetWindowLongA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_Index) As LongPtr
Public Declare PtrSafe Function SetWindowLongA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClassLongA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As LongPtr
Public Declare PtrSafe Function SetClassLongA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetWindowLongW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_Index) As LongPtr
Public DeclareWide PtrSafe Function SetWindowLongW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetClassLongW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As LongPtr
Public DeclareWide PtrSafe Function SetClassLongW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Public DeclareWide Function GetWindowLong Lib "user32" Alias "GetWindowLongW" (ByVal hWnd As Long, ByVal nIndex As GWL_INDEX) As Long
Public DeclareWide Function SetWindowLong Lib "user32" Alias "SetWindowLongW" (ByVal hwnd As Long, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long
Public DeclareWide Function GetClassLong Lib "user32" Alias "GetClassLongW" (ByVal hWnd As Long, ByVal nIndex As GCL_INDEX) As Long
Public DeclareWide Function SetClassLong Lib "user32" Alias "SetClassLongW" (ByVal hwnd As Long, ByVal nIndex As GCL_INDEX, ByVal dwNewLong As Long) As Long
Public Declare Function GetWindowLongA Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GWL_INDEX) As Long
Public Declare Function SetWindowLongA Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long
Public Declare Function GetClassLongA Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GCL_INDEX) As Long
Public Declare Function SetClassLongA Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GCL_Index, ByVal dwNewLong As Long) As Long
Public DeclareWide Function GetWindowLongW Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GWL_INDEX) As Long
Public DeclareWide Function SetWindowLongW Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long
Public DeclareWide Function GetClassLongW Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GCL_INDEX) As Long
Public DeclareWide Function SetClassLongW Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GCL_Index, ByVal dwNewLong As Long) As Long
#End If
Public Declare PtrSafe Function GetSystemMetrics Lib "user32" (ByVal nIndex As SystemMetrics) As Long
Public Declare PtrSafe Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SendMessageW Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public Declare PtrSafe Function SendMessageCallbackA Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As LongPtr, dwData As Any) As BOOL
Public DeclareWide PtrSafe Function SendMessageCallbackW Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As LongPtr, dwData As Any) As BOOL
Public DeclareWide PtrSafe Function SendMessageCallback Lib "user32" Alias "SendMessageCallbackW" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As LongPtr, dwData As Any) As BOOL
Public Declare PtrSafe Function SendMessageTimeoutA Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal fuFlags As SendMessageTimeoutFlags, ByVal uTimeout As Long, lpdwResult As Any) As LongPtr
Public DeclareWide PtrSafe Function SendMessageTimeoutW Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal fuFlags As SendMessageTimeoutFlags, ByVal uTimeout As Long, lpdwResult As Any) As LongPtr
Public DeclareWide PtrSafe Function SendMessageTimeout Lib "user32" Alias "SendMessageTimeoutW" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal fuFlags As SendMessageTimeoutFlags, ByVal uTimeout As Long, lpdwResult As Any) As LongPtr
Public Declare PtrSafe Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long
Public Declare PtrSafe Function PostMessageW Lib "user32" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long
Public Declare PtrSafe Function PostThreadMessage Lib "user32" (ByVal idThread As Long, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function FindWindow Lib "user32" Alias "FindWindowW" (ByVal Class As String, ByVal Title As String) As LongPtr
Public Declare PtrSafe Function FindWindowW Lib "user32" (ByVal Class As LongPtr, ByVal Title As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindWindowEx Lib "user32" Alias "FindWindowExW" (ByVal hwndParent As LongPtr, ByVal hWndChildAfter As LongPtr, ByVal lpszClass As String, ByVal lpszWindow As String) As LongPtr
Public Declare PtrSafe Function FindWindowExW Lib "user32" (ByVal hwndParent As LongPtr, ByVal hWndChildAfter As LongPtr, ByVal lpszClass As LongPtr, ByVal lpszWindow As LongPtr) As LongPtr
Public Declare PtrSafe Function RegisterWindowMessageA Lib "user32" (ByVal lpString As String) As Long
Public Declare PtrSafe Function RegisterWindowMessageW Lib "user32" (ByVal lpString As LongPtr) As Long
Public DeclareWide PtrSafe Function RegisterWindowMessage Lib "user32" (ByVal lpString As String) As Long
Public Declare PtrSafe Function RegisterClassExA Lib "user32" (pcWndClassEx As WNDCLASSEXA) As Integer
Public Declare PtrSafe Function RegisterClassExW Lib "user32" (pcWndClassEx As WNDCLASSEXW) As Integer
Public DeclareWide PtrSafe Function RegisterClassEx Lib "user32" Alias "RegisterClassExW" (pcWndClassEx As WNDCLASSEXW) As Integer
Public Declare PtrSafe Function UnregisterClassA Lib "user32" (ByVal lpClassName As String, Optional ByVal hInstance As LongPtr) As Long
Public Declare PtrSafe Function UnregisterClassW Lib "user32" (ByVal lpClassName As LongPtr, Optional ByVal hInstance As LongPtr) As Long
Public DeclareWide PtrSafe Function UnregisterClass Lib "user32" Alias "UnregisterClassW" (ByVal lpClassName As String, Optional ByVal hInstance As LongPtr) As Long
Public Declare PtrSafe Function GetClassInfoA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSA) As BOOL
Public DeclareWide PtrSafe Function GetClassInfoW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSW) As BOOL
Public DeclareWide PtrSafe Function GetClassInfo Lib "user32" Alias "GetClassInfoW" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASS) As BOOL
Public Declare PtrSafe Function GetClassInfoExA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSEXA) As BOOL
Public DeclareWide PtrSafe Function GetClassInfoExW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSEXW) As BOOL
Public DeclareWide PtrSafe Function GetClassInfoEx Lib "user32" Alias "GetClassInfoExW" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSEX) As BOOL

Public Declare PtrSafe Function SetMenuContextHelpId Lib "user32" (ByVal hMenu As LongPtr, ByVal dw As Long) As Long
Public Declare PtrSafe Function SetMenuDefaultItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPos As Long) As Long
Public Declare PtrSafe Function SetMessageExtraInfo Lib "user32" (ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function SetMessageQueue Lib "user32" (ByVal cMessagesMax As Long) As Long
Public Declare PtrSafe Function SetUserObjectInformationA Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long) As BOOL
Public Declare PtrSafe Function SetUserObjectInformationW Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long) As BOOL
Public DeclareWide PtrSafe Function SetUserObjectInformation Lib "user32" Alias "SetUserObjectInformationW" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long) As BOOL
Public Declare PtrSafe Function GetUserObjectInformationA Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long, Optional lpnLengthNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetUserObjectInformationW Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long, Optional lpnLengthNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetUserObjectInformation Lib "user32" Alias "GetUserObjectInformationW" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long, Optional lpnLengthNeeded As Long) As BOOL
Public Declare PtrSafe Function SetWindowContextHelpId Lib "user32" (ByVal hWnd As LongPtr, ByVal dw As Long) As Long
Public Declare PtrSafe Function SetWindowRgn Lib "user32" (ByVal hWnd As LongPtr, ByVal hRgn As LongPtr, ByVal bRedraw As Long) As Long
Public Declare PtrSafe Function SetWindowsHook Lib "user32" Alias "SetWindowsHookW" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExW" (ByVal idHook As WindowsHookCodes, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function SetWindowsHookA Lib "user32" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowsHookExA Lib "user32" (ByVal idHook As WindowsHookCodes, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function SetWindowsHookW Lib "user32" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowsHookExW Lib "user32" (ByVal idHook As WindowsHookCodes, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function UnhookWindowsHook Lib "user32" (ByVal nCode As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As Long
Public Declare PtrSafe Function UnhookWindowsHookEx Lib "user32" (ByVal hhk As LongPtr) As Long
Public Declare PtrSafe Function CallNextHookEx Lib "user32" (ByVal hHook As LongPtr, ByVal ncode As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
'The following has been moved to slShellCore.twin due to use of SHOWWINDOW
' Public Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal nCmdShow As SHOWWINDOW) As Long
Public Declare PtrSafe Function ShowWindowAsync Lib "user32" (ByVal hWnd As LongPtr, ByVal nCmdShow As SHOWWINDOW) As Long
Public Declare PtrSafe Function TileWindows Lib "user32" (ByVal hwndParent As LongPtr, ByVal wHow As Long, lpRect As RECT, ByVal cKids As Long, lpKids As LongPtr) As Integer
Public Declare PtrSafe Function ToAsciiEx Lib "user32" (ByVal uVirtKey As Long, ByVal uScanCode As Long, lpKeyState As Byte, lpChar As Integer, ByVal uFlags As Long, ByVal dwhkl As LongPtr) As Long
Public Declare PtrSafe Function UpdateWindow Lib "user32" (ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function RedrawWindow Lib "user32" (ByVal hWnd As LongPtr, lprcUpdate As RECT, ByVal hrgnUpdate As LongPtr, ByVal flags As RDW_Flags) As Long
Public Declare PtrSafe Function LockWindowUpdate Lib "user32" (ByVal hWndLock As LongPtr) As BOOL
Public Declare PtrSafe Function AnimateWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal dwTime As Long, ByVal dwFlags As AnimateWindowFlags) As Long
Public Declare PtrSafe Function BeginPaint Lib "user32" (ByVal hWnd As LongPtr, lpPaint As PAINTSTRUCT) As LongPtr
Public Declare PtrSafe Function EndPaint Lib "user32" (ByVal hWnd As LongPtr, lpPaint As PAINTSTRUCT) As Long
Public Declare PtrSafe Function GetClientRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function GetWindowRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function GetWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal uCmd As GetWindowConsts) As LongPtr
Public Declare PtrSafe Function GetWindowDC Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function AdjustWindowRect Lib "user32" (lpRect As RECT, ByVal dwStyle As WindowStyles, ByVal bMenu As Long) As Long
Public Declare PtrSafe Function AdjustWindowRectEx Lib "user32" (lpRect As RECT, ByVal dwStyle As WindowStyles, ByVal bMenu As BOOL, ByVal dwExStyle As WindowStylesEx) As Long
Public Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hWnd As LongPtr, ByVal hWndInsertAfter As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal CY As Long, ByVal wFlags As SWP_Flags) As Long
Public Declare PtrSafe Function InvalidateRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT, ByVal bErase As BOOL) As BOOL
Public Declare PtrSafe Function ValidateRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function PtInRect Lib "user32" (lpRect As RECT, ByVal Xy As LongLong) As Long
Public Declare PtrSafe Function SetRect Lib "user32" (ByRef lpRect As RECT, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long
Public Declare PtrSafe Function SetRectEmpty Lib "user32" (ByRef lpRect As RECT) As BOOL
Public Declare PtrSafe Function IntersectRect Lib "user32" (lpDestRect As RECT, lpSrc1Rect As RECT, lpSrc2Rect As RECT) As Long
Public Declare PtrSafe Function IsRectEmpty Lib "user32" (lpRect As RECT) As BOOL
Public Declare PtrSafe Function OffsetRect Lib "user32" (lprc As RECT, ByVal dx As Long, ByVal dy As Long) As BOOL
Public Declare PtrSafe Function InflateRect Lib "user32" (lpRect As RECT, ByVal dx As Long, ByVal dy As Long) As BOOL
Public Declare PtrSafe Function FillRect Lib "user32" (ByVal hDC As LongPtr, lpRect As RECT, ByVal hBrush As LongPtr) As Long
Public Declare PtrSafe Function CopyRect Lib "user32" (lprcDst As RECT, lprcSrc As RECT) As BOOL
Public Declare PtrSafe Function UnionRect Lib "user32" (lprcDst As RECT, lprcSrc1 As RECT, lprcSrc2 As RECT) As BOOL
Public Declare PtrSafe Function SubtractRect Lib "user32" (lprcDst As RECT, lprcSrc1 As RECT, lprcSrc2 As RECT) As BOOL
Public Declare PtrSafe Function EqualRect Lib "user32" (lprc1 As RECT, lprc2 As RECT) As BOOL
Public Declare PtrSafe Function InvertRect Lib "user32" (ByVal hDC As LongPtr, lprc As RECT) As BOOL

Public Declare PtrSafe Function InvalidateRgn Lib "user32" (ByVal hWnd As LongPtr, ByVal hRgn As LongPtr, ByVal bErase As BOOL) As BOOL
Public Declare PtrSafe Function ValidateRgn Lib "user32" (ByVal hWnd As LongPtr, ByVal hRgn As LongPtr) As BOOL
Public Declare PtrSafe Function ExcludeUpdateRgn Lib "user32" (ByVal hDC As LongPtr, ByVal hWnd As LongPtr) As Long

Public Declare PtrSafe Function GetSysColor Lib "user32" (ByVal nIndex As SystemColors) As Long
Public Declare PtrSafe Function GetSysColorBrush Lib "user32" (ByVal nIndex As SystemColors) As LongPtr
Public DeclareWide PtrSafe Function LoadCursor Lib "user32" Alias "LoadCursorW" (ByVal hInstance As LongPtr, [ TypeHint(DefCursors) ] ByVal lpCursorName As Any) As LongPtr
Public Declare PtrSafe Function LoadCursorA Lib "user32" (ByVal hInstance As LongPtr, [ TypeHint(DefCursors) ] ByVal lpCursorName As Any) As LongPtr
Public Declare PtrSafe Function LoadCursorW Lib "user32" (ByVal hInstance As LongPtr, [ TypeHint (DefCursors) ] ByVal lpCursorName As Any) As LongPtr
Public DeclareWide PtrSafe Function LoadCursorFromFile Lib "user32" Alias "LoadCursorW" (ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function LoadCursorFromFileA Lib "user32" (ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function LoadCursorFromFileW Lib "user32" (ByVal lpFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function DestroyCursor Lib "user32" (ByVal hCursor As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LoadIcon Lib "user32" Alias "LoadIconW" (ByVal hInstance As LongPtr, ByVal lpIconName As Any) As LongPtr
Public Declare PtrSafe Function LoadIconA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpIconName As Any) As LongPtr
Public Declare PtrSafe Function LoadIconW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpIconName As Any) As LongPtr
Public Declare PtrSafe Function LoadImageA Lib "user32" (ByVal hInst As LongPtr, ByVal lpsz As String, ByVal dwImageType As ImageTypes, ByVal dwDesiredWidth As Long, ByVal dwDesiredHeight As Long, ByVal dwFlags As LoadResourceFlags) As LongPtr
Public Declare PtrSafe Function LoadImageW Lib "user32" (ByVal hInst As LongPtr, ByVal lpsz As LongPtr, ByVal dwImageType As ImageTypes, ByVal dwDesiredWidth As Long, ByVal dwDesiredHeight As Long, ByVal dwFlags As LoadResourceFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadImage Lib "user32" Alias "LoadImageW" (ByVal hInst As LongPtr, ByVal lpsz As Any, ByVal dwImageType As ImageTypes, ByVal dwDesiredWidth As Long, ByVal dwDesiredHeight As Long, ByVal dwFlags As LoadResourceFlags) As LongPtr
Public Declare PtrSafe Function LoadStringA Lib "user32" (ByVal hInstance As LongPtr, ByVal uID As Long, ByVal lpBuffer As String, ByVal cchBufferMax As Long) As Long
Public Declare PtrSafe Function LoadStringW Lib "user32" (ByVal hInstance As LongPtr, ByVal uID As Long, ByVal lpBuffer As LongPtr, ByVal cchBufferMax As Long) As Long
Public DeclareWide PtrSafe Function LoadString Lib "user32" Alias "LoadStringW" (ByVal hInstance As LongPtr, ByVal uID As Long, ByVal lpBuffer As String, ByVal cchBufferMax As Long) As Long
Public Declare PtrSafe Function LoadAcceleratorsA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpTableName As String) As LongPtr
Public DeclareWide PtrSafe Function LoadAcceleratorsW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpTableName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadAccelerators Lib "user32" Alias "LoadAcceleratorsW" (ByVal hInstance As LongPtr, ByVal lpTableName As String) As LongPtr


Public DeclareWide PtrSafe Function TabbedTextOutW Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As LongPtr, ByVal chCount As Long, ByVal nTabPositions As Long, lpnTabStopPositions As Long, ByVal nTabOrigin As Long) As Long
Public DeclareWide PtrSafe Function TabbedTextOut Lib "gdi32" Alias "TabbedTextOutW" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal chCount As Long, ByVal nTabPositions As Long, lpnTabStopPositions As Long, ByVal nTabOrigin As Long) As Long
Public Declare PtrSafe Function DrawTextW Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As LongPtr, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags) As Long
Public Declare PtrSafe Function DrawTextA Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags) As Long
Public DeclareWide PtrSafe Function DrawText Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags) As Long
Public Declare PtrSafe Function DrawTextExW Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As LongPtr, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags, lpdtp As DRAWTEXTPARAMS) As Long
Public Declare PtrSafe Function DrawTextExA Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags, lpdtp As DRAWTEXTPARAMS) As Long
Public DeclareWide PtrSafe Function DrawTextEx Lib "user32" Alias "DrawTextExW" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags, lpdtp As DRAWTEXTPARAMS) As Long
Public DeclareWide PtrSafe Function DrawEdge Lib "user32" (ByVal hDC As LongPtr, qrc As RECT, ByVal edge As BorderStyles, ByVal grfFlags As BorderFlags) As BOOL
Public DeclareWide PtrSafe Function DrawFocusRect Lib "user32" (ByVal hdc As LongPtr, lpRect As RECT) As BOOL
Public DeclareWide PtrSafe Function DrawAnimatedRects Lib "user32" (ByVal hdc As LongPtr, ByVal idAni As AnimationTypeIDs, lprcFrom As RECT, lprcTo As RECT) As BOOL
Public Declare PtrSafe Function DrawStateA Lib "user32" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes) ] ByVal uFlags As Long) As BOOL
Public DeclareWide PtrSafe Function DrawStateW Lib "user32" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [ TypeHint (DrawStateStates, DrawStateImageTypes) ] ByVal uFlags As Long) As BOOL
Public DeclareWide PtrSafe Function DrawState Lib "user32" Alias "DrawStateW" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [ TypeHint (DrawStateStates, DrawStateImageTypes) ] ByVal uFlags As Long) As BOOL
Public Declare PtrSafe Function DrawCaption Lib "user32" (ByVal hWnd As LongPtr, ByVal hDC As LongPtr, lprect As RECT, ByVal flags As DrawCaptionFlags) As BOOL
Public DeclareWide PtrSafe Function DrawFrameControl Lib "user32" (ByVal hdc As LongPtr, lprc As RECT, ByVal type As DrawFrameControlTypes, ByVal state As DrawFrameControlStates) As BOOL
Public DeclareWide PtrSafe Function CreateCaret Lib "user32" (ByVal hWnd As LongPtr, ByVal hBitmap As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public DeclareWide PtrSafe Function SetCaretPos Lib "user32" (ByVal x As Long, ByVal y As Long) As BOOL
Public DeclareWide PtrSafe Function GetCaretPos Lib "user32" (lpPoint As POINT) As BOOL
Public DeclareWide PtrSafe Function SetCaretBlinkTime Lib "user32" (ByVal uMSeconds As Long) As BOOL
Public DeclareWide PtrSafe Function GetCaretBlinkTime Lib "user32" () As Long
Public DeclareWide PtrSafe Function HideCaret Lib "user32" (Optional ByVal hWnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ShowCaret Lib "user32" (Optional ByVal hWnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DestroyCaret Lib "user32" () As BOOL


Public DeclareWide PtrSafe Function PaintDesktop Lib "user32" (ByVal hdc As LongPtr) As BOOL

Public DeclareWide PtrSafe Function RegisterPointerDeviceNotifications Lib "user32" (ByVal window As LongPtr, ByVal notifyRange As BOOL) As BOOL
Public DeclareWide PtrSafe Function RegisterTouchHitTestingWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal value As TouchHitTestingValue) As BOOL
Public DeclareWide PtrSafe Function EvaluateProximityToRect Lib "user32" (controlBoundingBox As RECT, pHitTestingInput As TOUCH_HIT_TESTING_INPUT, pProximityEval As TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) As BOOL
Public Enum TouchHitTestingValue
	TOUCH_HIT_TESTING_DEFAULT  = &H0
	TOUCH_HIT_TESTING_CLIENT  = &H1
	TOUCH_HIT_TESTING_NONE = &H2
End Enum

Public Type TOUCH_HIT_TESTING_INPUT
	pointerId As Long
	point As POINT
	boundingBox As RECT
	nonOccludedBoundingBox As RECT
	orientation As Long
End Type
Public Type TOUCH_HIT_TESTING_PROXIMITY_EVALUATION
	score As Integer
	adjustedPoint As POINT
End Type




Public Enum WINDOWCOMPOSITIONATTRIB
	WCA_UNDEFINED=0
	WCA_NCRENDERING_ENABLED=1
	WCA_NCRENDERING_POLICY=2
	WCA_TRANSITIONS_FORCEDISABLED=3
	WCA_ALLOW_NCPAINT=4
	WCA_CAPTION_BUTTON_BOUNDS=5
	WCA_NONCLIENT_RTL_LAYOUT=6
	WCA_FORCE_ICONIC_REPRESENTATION=7
	WCA_EXTENDED_FRAME_BOUNDS=8
	WCA_HAS_ICONIC_BITMAP=9
	WCA_THEME_ATTRIBUTES=10
	WCA_NCRENDERING_EXILED=11
	WCA_NCADORNMENTINFO=12
	WCA_EXCLUDED_FROM_LIVEPREVIEW=13
	WCA_VIDEO_OVERLAY_ACTIVE=14
	WCA_FORCE_ACTIVEWINDOW_APPEARANCE=15
	WCA_DISALLOW_PEEK=16
	WCA_CLOAK=17
	WCA_CLOAKED=18
	WCA_ACCENT_POLICY=19
	WCA_FREEZE_REPRESENTATION=20
	WCA_EVER_UNCLOAKED=21
	WCA_VISUAL_OWNER=22
	WCA_HOLOGRAPHIC=23
	WCA_EXCLUDED_FROM_DDA=24
	WCA_PASSIVEUPDATEMODE=25
	WCA_USEDARKMODECOLORS=26
	WCA_CORNER_STYLE=27
	WCA_PART_COLOR=28
	WCA_DISABLE_MOVESIZE_FEEDBACK=29
	WCA_LAST=30
End Enum
Public Type WINDOWCOMPOSITIONATTRIBDATA
	Attrib As WINDOWCOMPOSITIONATTRIB
	pvData As LongPtr
	cbData As LongPtr
End Type
Public Enum ACCENT_STATE
	ACCENT_DISABLED=0
	ACCENT_ENABLE_GRADIENT=1
	ACCENT_ENABLE_TRANSPARENTGRADIENT=2
	ACCENT_ENABLE_BLURBEHIND=3
	ACCENT_ENABLE_ACRYLICBLURBEHIND=4 ' RS4 1803
	ACCENT_ENABLE_HOSTBACKDROP=5 ' RS5 1809
	ACCENT_INVALID_STATE=6
End Enum
Public Type ACCENT_POLICY
	AccentState As ACCENT_STATE
	AccentFlags As Long
	GradientColor As Long
	AnimationId As Long
End Type

Public Enum FlashWindowFlags
	FLASHW_STOP  = 0
	FLASHW_CAPTION  = &H00000001
	FLASHW_TRAY  = &H00000002
	FLASHW_ALL  = (FLASHW_CAPTION  Or  FLASHW_TRAY)
	FLASHW_TIMER  = &H00000004
	FLASHW_TIMERNOFG  = &H0000000C
End Enum
Public Type FLASHWINFO
    cbSize As Long
    hWnd As LongPtr
    dwFlags As FlashWindowFlags
    uCount As Long
    dwTimeout As Long
End Type

Public Declare PtrSafe Function SetWindowCompositionAttribute Lib "user32" (ByVal hWnd As LongPtr, wca As WINDOWCOMPOSITIONATTRIBDATA) As Long
Public Declare PtrSafe Function TrackMouseEvent Lib "user32" (lpEventTrack As TRACKMOUSEEVENT) As BOOL
Public Declare PtrSafe Sub keybd_event Lib "user32" ([TypeHint(VirtualKeyCodes)] ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As KeybdEventFlags, ByVal dwExtraInfo As LongPtr)
Public Declare PtrSafe Sub mouse_event Lib "user32" (ByVal dwFlags As MouseEventFlags, ByVal dx As Long, ByVal dy As Long, ByVal dwData As Long, ByVal dwExtraInfo As LongPtr)
Public Declare PtrSafe Function SendInput Lib "user32" (ByVal cInputs As Long, pInputs As INPUT, ByVal cbSize As Long) As Long
Public Declare PtrSafe Function ClientToScreen Lib "user32" (ByVal hWnd As LongPtr, lpPoint As Any) As Long  ' lpPoint As POINTAPI) As Long
Public Declare PtrSafe Function ScreenToClient Lib "user32" (ByVal hWnd As LongPtr, lpPoint As Any) As Long  ' lpPoint As POINT) As Long
Public Declare PtrSafe Function SetCapture Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetCapture Lib "user32" () As LongPtr
Public Declare PtrSafe Function ReleaseCapture Lib "user32" () As Long
Public Declare PtrSafe Function GetDC Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetDCEx Lib "user32" (ByVal hWnd As LongPtr, ByVal hrgnClip As LongPtr, ByVal flags As GetDcExFlags) As LongPtr
Public Declare PtrSafe Function ReleaseDC Lib "user32" (ByVal hWnd As LongPtr, ByVal hDC As LongPtr) As Long
Public DeclareWide PtrSafe Function CopyImage Lib "user32" (ByVal handle As LongPtr, ByVal type As ImageTypes, ByVal cx As Long, ByVal cy As Long, ByVal flags As LoadResourceFlags) As LongPtr
Public DeclareWide PtrSafe Function PrintWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal hdcBlt As LongPtr, ByVal nFlags As PrintWindowFlags) As BOOL
Public DeclareWide PtrSafe Function SetLayeredWindowAttributes Lib "user32" (ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Byte, ByVal dwFlags As LayeredWindowAttributes) As BOOL
Public DeclareWide PtrSafe Function GetLayeredWindowAttributes Lib "user32" (ByVal hwnd As LongPtr, Optional pcrKey As Long, Optional pbAlpha As Byte, Optional pdwFlags As LayeredWindowAttributes) As BOOL
Public DeclareWide PtrSafe Function UpdateLayeredWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal hdcDst As LongPtr, ppDst As POINT, psize As SIZE, ByVal hdcSrc As LongPtr, pptSrc As POINT, ByVal crKey As Long, pblend As BLENDFUNCTION, ByVal dwFlags As UpdateLayeredWindowFlags) As BOOL
Public DeclareWide PtrSafe Function GetWindowThreadProcessId Lib "user32" (ByVal hwnd As LongPtr, Optional lpdwProcessId As Long) As Long
Public Declare PtrSafe Function MapWindowPoints Lib "user32" (ByVal hWndFrom As LongPtr, ByVal hWndTo As LongPtr, lpPoints As Any, ByVal cPoints As Long) As Long
Public Declare PtrSafe Function MoveWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal bRepaint As BOOL) As BOOL
Public Declare PtrSafe Function SetForegroundWindow Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function LockSetForegroundWindow Lib "user32" (ByVal uLockCode As LSFW_Flags) As BOOL
Public Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetTopWindow Lib "user32" (Optional ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function IsWindow Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsWindowVisible Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsWindowUnicode Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function SetParent Lib "user32" (ByVal hWndChild As LongPtr, Optional ByVal hWndNewParent As LongPtr) As LongPtr
Public Declare PtrSafe Function GetParent Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Sub SwitchToThisWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal fAltTab As BOOL)
Public Declare PtrSafe Function EnableWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal fEnable As BOOL) As BOOL
Public Declare PtrSafe Function IsWindowEnabled Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function SetActiveWindow Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetFocus Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetFocusAPI Lib "user32" Alias "GetFocus" () As LongPtr
Public Declare PtrSafe Function SetFocusAPI Lib "user32" Alias "SetFocus" (ByVal hwnd As LongPtr) As LongPtr
[Description ("pt is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.") ]
Public Declare PtrSafe Function ChildWindowFromPoint Lib "user32" (ByVal hwnd As LongPtr, ByVal pt As LongLong) As LongPtr
[Description ("pt is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.") ]
Public Declare PtrSafe Function RealChildWindowFromPoint Lib "user32" (ByVal hwnd As LongPtr, ByVal pt As LongLong) As LongPtr
[ Description ("pt is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.") ]
Public Declare PtrSafe Function ChildWindowFromPointEx Lib "user32" (ByVal hwnd As LongPtr, ByVal pt As LongLong, ByVal flags As ChildWindowFromPointFlags) As LongPtr
Public Declare PtrSafe Function SetWindowTextA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String) As Long
Public DeclareWide PtrSafe Function SetWindowTextW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr) As Long
Public DeclareWide PtrSafe Function SetWindowText Lib "user32" Alias "SetWindowTextW" (ByVal hWnd As LongPtr, ByVal lpString As String) As Long
[Description("xy is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.") ]
Public DeclareWide PtrSafe Function WindowFromPoint Lib "user32" (ByVal xy As LongLong) As LongPtr
[Description("xy is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.") ]
Public DeclareWide PtrSafe Function WindowFromPhysicalPoint Lib "user32" (ByVal xy As LongLong) As LongPtr
Public DeclareWide PtrSafe Function GetWindowRgn Lib "user32" (ByVal hwnd As LongPtr, ByVal hRgn As LongPtr) As WindowRegionTypes
[Description("Determines whether a window is maximized.") ]
Public DeclareWide PtrSafe Function IsZoomed Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FlashWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal bInvert As BOOL) As BOOL
Public DeclareWide PtrSafe Function FlashWindowEx Lib "user32" (ByRef pFWI As FLASHWINFO) As BOOL
Public DeclareWide PtrSafe Function ShowOwnedPopups Lib "user32" (ByVal hwnd As LongPtr, ByVal fShow As BOOL) As BOOL
Public DeclareWide PtrSafe Function OpenIcon Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function IsIconic Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RealGetWindowClassW Lib "user32" (ByVal hwnd As LongPtr, ByVal ptszClassName As LongPtr, ByVal cchClassNameMax As Long) As Long
Public DeclareWide PtrSafe Function RealGetWindowClass Lib "user32" Alias "RealGetWindowClass" (ByVal hwnd As LongPtr, ByVal ptszClassName As String, ByVal cchClassNameMax As Long) As Long


Public Enum DialogStyles
	DS_ABSALIGN  = &H01
	DS_SYSMODAL  = &H02
	DS_LOCALEDIT  = &H20 /* 16-bit: Edit items get Local storage. 32-bit and up: meaningless. */
	DS_SETFONT  = &H40 /* User specified font for Dlg controls */
	DS_MODALFRAME  = &H80 /* Can be combined with WS_CAPTION */
	DS_NOIDLEMSG = &H100 /* WM_ENTERIDLE message will not be sent */
	DS_SETFOREGROUND = &H200 /* not in win3.1 */
	DS_3DLOOK  = &H0004
	DS_FIXEDSYS  = &H0008
	DS_NOFAILCREATE  = &H0010
	DS_CONTROL  = &H0400
	DS_CENTER  = &H0800
	DS_CENTERMOUSE  = &H1000
    DS_CONTEXTHELP  = &H2000
	DS_SHELLFONT  = (DS_SETFONT  Or DS_FIXEDSYS)
	DS_USEPIXELS = &H8000&
End Enum

[Description("style also includes control-specific styles") ]
[PackingAlignment(2)]
Public Type DLGITEMTEMPLATE
	style As WindowStyles
	dwExtendedStyle As WindowStylesEx
	x As Integer
	y As Integer
	cx As Integer
	cy As Integer
	id As Integer
End Type
[Description("style can also be DialogStyles entries") ]
[PackingAlignment(2)]
Public Type DLGTEMPLATE
	style As WindowStyles
	dwExtendedStyle As WindowStylesEx
	x As Integer
	y As Integer
	cx As Integer
	cy As Integer
	id As Integer
End Type

Public Enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
    DCDC_DEFAULT = &H0000
    DCDC_DISABLE_FONT_UPDATE = &H0001
    DCDC_DISABLE_RELAYOUT = &H0002
End Enum
Public Enum DIALOG_DPI_CHANGE_BEHAVIORS
    DDC_DEFAULT = &H0000
    DDC_DISABLE_ALL = &H0001
    DDC_DISABLE_RESIZE = &H0002
    DDC_DISABLE_CONTROL_RELAYOUT = &H0004
End Enum

Public DeclareWide PtrSafe Sub CreateDialogW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Sub CreateDialog Lib "user32" Alias "CreateDialogW" (ByVal hInstance As LongPtr, ByVal lpName As String, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Sub CreateDialogIndirectW Lib "user32" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Sub CreateDialogIndirect Lib "user32" Alias "CreateDialogIndirectW" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Function CreateDialogParamW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function CreateDialogParam Lib "user32" Alias "CreateDialogParamW" (ByVal hInstance As LongPtr, ByVal lpName As String, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function CreateDialogIndirectParamW Lib "user32" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function CreateDialogIndirectParam Lib "user32" Alias "CreateDialogIndirectParamW" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function DefDlgProcW Lib "user32" (ByVal hDlg As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function DefDlgProc Lib "user32" Alias "DefDlgProcW" (ByVal hDlg As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Sub DialogBoxW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Sub DialogBox Lib "user32" Alias "DialogBoxW" (ByVal hInstance As LongPtr, ByVal lpName As String, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Sub DialogBoxIndirectW Lib "user32" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Sub DialogBoxIndirect Lib "user32" Alias "DialogBoxIndirectW" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0)
Public DeclareWide PtrSafe Function DialogBoxParamW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function DialogBoxParam Lib "user32" Alias "DialogBoxParamW" (ByVal hInstance As LongPtr, ByVal lpName As String, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function DialogBoxIndirectParamW Lib "user32" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function DialogBoxIndirectParam Lib "user32" Alias "DialogBoxIndirectParamW" (ByVal hInstance As LongPtr, lpTemplate As Any, Optional ByVal hWndParent As LongPtr = 0, Optional ByVal lpDialogFunc As LongPtr = 0, Optional ByVal dwInitParam As LongPtr = 0) As LongPtr
Public DeclareWide PtrSafe Function EndDialog Lib "user32" (ByVal hDlg As LongPtr, ByVal nResult As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetDialogBaseUnits Lib "user32" () As Long
Public DeclareWide PtrSafe Function GetDlgCtrlID Lib "user32" (ByVal hWnd As LongPtr) As Long
Public DeclareWide PtrSafe Function GetDlgItem Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long) As LongPtr
Public DeclareWide PtrSafe Function GetDlgItemInt Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, lpTranslated As BOOL, ByVal bSigned As BOOL) As Long
Public DeclareWide PtrSafe Function GetDlgItemTextW Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal lpString As LongPtr, ByVal cchMax As Long) As Long
Public DeclareWide PtrSafe Function GetDlgItemText Lib "user32" Alias "GetDlgItemTextW" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal lpString As String, ByVal cchMax As Long) As Long
Public DeclareWide PtrSafe Function GetNextDlgGroupItem Lib "user32" (ByVal hDlg As LongPtr, ByVal hCtl As LongPtr, ByVal bPrevious As BOOL) As LongPtr
Public DeclareWide PtrSafe Function GetNextDlgTabItem Lib "user32" (ByVal hDlg As LongPtr, ByVal hCtl As LongPtr, ByVal bPrevious As BOOL) As LongPtr
Public Declare PtrSafe Function IsDialogMessageA Lib "user32" (ByVal hDlg As LongPtr, lpMsg As MSG) As BOOL
Public DeclareWide PtrSafe Function IsDialogMessageW Lib "user32" (ByVal hDlg As LongPtr, lpMsg As MSG) As BOOL
Public DeclareWide PtrSafe Function IsDialogMessage Lib "user32" Alias "IsDialogMessageW" (ByVal hDlg As LongPtr, lpMsg As MSG) As BOOL
Public DeclareWide PtrSafe Function MapDialogRect Lib "user32" (ByVal hDlg As LongPtr, lpRect As RECT) As BOOL
Public DeclareWide PtrSafe Function SendDlgItemMessageW Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SendDlgItemMessage Lib "user32" Alias "SendDlgItemMessageW" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SetDlgItemInt Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal uValue As Long, ByVal bSigned As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetDlgItemTextW Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetDlgItemText Lib "user32" Alias "SetDlgItemTextW" (ByVal hDlg As LongPtr, ByVal nIDDlgItem As Long, ByVal lpString As String) As BOOL
Public DeclareWide PtrSafe Function CheckDlgButton Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDButton As Long, ByVal uCheck As ButtonStates) As BOOL
Public DeclareWide PtrSafe Function CheckRadioButton Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDFirstButton As Long, ByVal nIDLastButton As Long, ByVal nIDCheckButton As Long) As BOOL
Public DeclareWide PtrSafe Function IsDlgButtonChecked Lib "user32" (ByVal hDlg As LongPtr, ByVal nIDButton As Long) As Long
Public Declare PtrSafe Function GetDialogControlDpiChangeBehavior Lib "user32" (ByVal hwnd As LongPtr) As DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
Public DeclareWide PtrSafe Function SetDialogControlDpiChangeBehavior Lib "user32" (ByVal hwnd As LongPtr, ByVal mask As DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS, ByVal values As DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS) As BOOL
Public DeclareWide PtrSafe Function GetDialogDpiChangeBehavior Lib "user32" (ByVal hDlg As LongPtr) As DIALOG_DPI_CHANGE_BEHAVIORS
Public DeclareWide PtrSafe Function SetDialogDpiChangeBehavior Lib "user32" (ByVal hDlg As LongPtr, ByVal mask As DIALOG_DPI_CHANGE_BEHAVIORS, ByVal values As DIALOG_DPI_CHANGE_BEHAVIORS) As BOOL

Public Declare PtrSafe Function GetAsyncKeyState Lib "user32" (ByVal vKey As VirtualKeyCodes) As Integer
Public Declare PtrSafe Function GetKeyState Lib "user32" (ByVal nVirtKey As VirtualKeyCodes) As Integer
Public Declare PtrSafe Function MapVirtualKeyA Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags) As Long
Public DeclareWide PtrSafe Function MapVirtualKeyW Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags) As Long
Public DeclareWide PtrSafe Function MapVirtualKey Lib "user32" Alias "MapVirtualKeyW" (ByVal uCode As Long, ByVal uMapType As MapVkFlags) As Long
Public Declare PtrSafe Function MapVirtualKeyExA Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags, Optional ByVal dwhkl As LongPtr) As Long
Public DeclareWide PtrSafe Function MapVirtualKeyExW Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags, Optional ByVal dwhkl As LongPtr) As Long
Public DeclareWide PtrSafe Function MapVirtualKeyEx Lib "user32" Alias "MapVirtualKeyExW" (ByVal uCode As Long, ByVal uMapType As MapVkFlags, Optional ByVal dwhkl As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLastInputInfo Lib "user32" (plii As LASTINPUTINFO) As BOOL
Public DeclareWide PtrSafe Function SetKeyboardState Lib "user32" (lpKeyState As Byte) As BOOL
Public DeclareWide PtrSafe Function GetKeyboardState Lib "user32" (lpKeyState As Byte) As BOOL
Public DeclareWide PtrSafe Function GetKeyboardLayoutList Lib "user32" (ByVal nBuff As Long, lpList As LongPtr) As Long
Public DeclareWide PtrSafe Function GetKeyboardLayout Lib "user32" (ByVal idThread As Long) As LongPtr
Public Declare PtrSafe Function LoadKeyboardLayoutA Lib "user32" (ByVal pwszKLID As String, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadKeyboardLayoutW Lib "user32" (ByVal pwszKLID As LongPtr, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadKeyboardLayout Lib "user32" Alias "LoadKeyboardLayoutW" (ByVal pwszKLID As String, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
Public DeclareWide PtrSafe Function ActivateKeyboardLayout Lib "user32" (ByVal hkl As LongPtr, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
[Description("Buffer must be preallocated and a minimum of KL_NAMELENGTH characters.")]
Public Declare PtrSafe Function GetKeyboardLayoutNameA Lib "user32" (ByVal pwszKLID As String) As BOOL
[Description("Buffer must be preallocated and a minimum of KL_NAMELENGTH characters.")]
Public DeclareWide PtrSafe Function GetKeyboardLayoutNameW Lib "user32" (ByVal pwszKLID As LongPtr) As BOOL
[Description("Buffer must be preallocated and a minimum of KL_NAMELENGTH characters.")]
Public DeclareWide PtrSafe Function GetKeyboardLayoutName Lib "user32" Alias "GetKeyboardLayoutNameW" (ByVal pwszKLID As LongPtr) As BOOL


Public DeclareWide PtrSafe Function CreateAcceleratorTableW Lib "user32" (paccel As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function CreateAcceleratorTableA Lib "user32" (paccel As ACCEL, ByVal cAccel As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateAcceleratorTable Lib "user32" Alias "CreateAcceleratorTableW" (paccel As ACCEL, ByVal cAccel As Long) As LongPtr
Public DeclareWide PtrSafe Function DestroyAcceleratorTable Lib "user32" (ByVal hAccel As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyAcceleratorTableW Lib "user32" (ByVal hAccel As LongPtr, lpAccelDst As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function CopyAcceleratorTableA Lib "user32" (ByVal hAccel As LongPtr, lpAccelDst As ACCEL, ByVal cAccel As Long) As LongPtr
Public DeclareWide PtrSafe Function CopyAcceleratorTable Lib "user32" Alias "CopyAcceleratorTableW" (ByVal hAccel As LongPtr, lpAccelDst As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function TranslateAcceleratorA Lib "user32" (ByVal hWnd As LongPtr, ByVal hAccTable As LongPtr, lpMsg As MSG) As Long
Public DeclareWide PtrSafe Function TranslateAcceleratorW Lib "user32" (ByVal hWnd As LongPtr, ByVal hAccTable As LongPtr, lpMsg As MSG) As Long
Public DeclareWide PtrSafe Function TranslateAccelerator Lib "user32" Alias "TranslateAcceleratorW" (ByVal hWnd As LongPtr, ByVal hAccTable As LongPtr, lpMsg As MSG) As Long




Public Const HKL_PREV As LongPtr  = 0
Public Const HKL_NEXT As LongPtr = 1
Public Enum KeyboardLoadLayoutFlags
	KLF_ACTIVATE = &H00000001
	KLF_SUBSTITUTE_OK  = &H00000002
	KLF_REORDER  = &H00000008
	KLF_REPLACELANG  = &H00000010
	KLF_NOTELLSHELL  = &H00000080
	KLF_SETFORPROCESS  = &H00000100
	KLF_SHIFTLOCK = &H00010000
	KLF_RESET  = &H40000000
End Enum

Public Const KL_NAMELENGTH = 9

Public Type LASTINPUTINFO
    cbSize As Long
    dwTime As Long
End Type
    
Public Enum MapVkFlags
	MAPVK_VK_TO_VSC  = (0)
	MAPVK_VSC_TO_VK  = (1)
	MAPVK_VK_TO_CHAR  = (2)
	MAPVK_VSC_TO_VK_EX  = (3)
	MAPVK_VK_TO_VSC_EX  = (4)
End Enum

Public Enum LSFW_Flags
    LSFW_LOCK = 1
    LSFW_UNLOCK = 2
End Enum

Public Enum LayeredWindowAttributes
	LWA_COLORKEY  = &H00000001
	LWA_ALPHA  = &H00000002
End Enum
Public Enum UpdateLayeredWindowFlags
	ULW_COLORKEY  = &H00000001
	ULW_ALPHA  = &H00000002
	ULW_OPAQUE  = &H00000004
	ULW_EX_NORESIZE  = &H00000008
End Enum
Public Type BLENDFUNCTION
	BlendOp As BYTE
	BlendFlags As BYTE
	SourceConstantAlpha As BYTE
	AlphaFormat As BYTE
End Type
Public Const AC_SRC_OVER  As Byte = 0
Public Const AC_SRC_ALPHA As Byte = 01

Public Enum ExitWindowsExFlags
	EWX_LOGOFF  = &H00000000
	EWX_SHUTDOWN = &H00000001
	EWX_REBOOT  = &H00000002
	EWX_FORCE  = &H00000004
	EWX_POWEROFF  = &H00000008
	EWX_FORCEIFHUNG  = &H00000010
	EWX_QUICKRESOLVE  = &H00000020
	EWX_RESTARTAPPS  = &H00000040
	EWX_HYBRID_SHUTDOWN  = &H00400000
	EWX_BOOTOPTIONS  = &H01000000
	EWX_ARSO  = &H04000000
	EWX_CHECK_SAFE_FOR_SERVER  = &H08000000
	EWX_SYSTEM_INITIATED  = &H10000000
End Enum

Public Enum SystemShutdownReasons
	SHTDN_REASON_FLAG_COMMENT_REQUIRED  = &H01000000
	SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED  = &H02000000
	SHTDN_REASON_FLAG_CLEAN_UI  = &H04000000
	SHTDN_REASON_FLAG_DIRTY_UI  = &H08000000
	SHTDN_REASON_FLAG_MOBILE_UI_RESERVED  = &H10000000
'  Flags that end up in the event log code.
	SHTDN_REASON_FLAG_USER_DEFINED  = &H40000000
	SHTDN_REASON_FLAG_PLANNED  = &H80000000
'  Microsoft major reasons.
	SHTDN_REASON_MAJOR_OTHER  = &H00000000
	SHTDN_REASON_MAJOR_NONE  = &H00000000
	SHTDN_REASON_MAJOR_HARDWARE  = &H00010000
	SHTDN_REASON_MAJOR_OPERATINGSYSTEM  = &H00020000
	SHTDN_REASON_MAJOR_SOFTWARE  = &H00030000
	SHTDN_REASON_MAJOR_APPLICATION  = &H00040000
	SHTDN_REASON_MAJOR_SYSTEM  = &H00050000
	SHTDN_REASON_MAJOR_POWER  = &H00060000
	SHTDN_REASON_MAJOR_LEGACY_API  = &H00070000
'  Microsoft minor reasons.
	SHTDN_REASON_MINOR_OTHER  = &H00000000
	SHTDN_REASON_MINOR_NONE  = &H000000ff
	SHTDN_REASON_MINOR_MAINTENANCE  = &H00000001
	SHTDN_REASON_MINOR_INSTALLATION  = &H00000002
	SHTDN_REASON_MINOR_UPGRADE  = &H00000003
	SHTDN_REASON_MINOR_RECONFIG  = &H00000004
	SHTDN_REASON_MINOR_HUNG  = &H00000005
	SHTDN_REASON_MINOR_UNSTABLE  = &H00000006
	SHTDN_REASON_MINOR_DISK  = &H00000007
	SHTDN_REASON_MINOR_PROCESSOR  = &H00000008
	SHTDN_REASON_MINOR_NETWORKCARD  = &H00000009
	SHTDN_REASON_MINOR_POWER_SUPPLY  = &H0000000a
	SHTDN_REASON_MINOR_CORDUNPLUGGED  = &H0000000b
	SHTDN_REASON_MINOR_ENVIRONMENT  = &H0000000c
	SHTDN_REASON_MINOR_HARDWARE_DRIVER  = &H0000000d
	SHTDN_REASON_MINOR_OTHERDRIVER  = &H0000000e
	SHTDN_REASON_MINOR_BLUESCREEN  = &H0000000F
	SHTDN_REASON_MINOR_SERVICEPACK  = &H00000010
	SHTDN_REASON_MINOR_HOTFIX  = &H00000011
	SHTDN_REASON_MINOR_SECURITYFIX  = &H00000012
	SHTDN_REASON_MINOR_SECURITY  = &H00000013
	SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY  = &H00000014
	SHTDN_REASON_MINOR_WMI  = &H00000015
	SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL  = &H00000016
	SHTDN_REASON_MINOR_HOTFIX_UNINSTALL  = &H00000017
	SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL  = &H00000018
	SHTDN_REASON_MINOR_MMC  = &H00000019
	SHTDN_REASON_MINOR_SYSTEMRESTORE  = &H0000001a
	SHTDN_REASON_MINOR_TERMSRV  = &H00000020
	SHTDN_REASON_MINOR_DC_PROMOTION  = &H00000021
	SHTDN_REASON_MINOR_DC_DEMOTION  = &H00000022
	SHTDN_REASON_UNKNOWN  = SHTDN_REASON_MINOR_NONE
	SHTDN_REASON_LEGACY_API  = (SHTDN_REASON_MAJOR_LEGACY_API  Or  SHTDN_REASON_FLAG_PLANNED)
End Enum

Public Enum CursorInfoFlags
	CURSOR_SHOWING  = &H00000001
	CURSOR_SUPPRESSED  = &H00000002
End Enum
Public Type CURSORINFO
	cbSize As Long
	flags As CursorInfoFlags
	hCursor As LongPtr
	ptScreenPos As POINT
End Type

Public Enum ChangeDisplaySettingsFlags
	CDS_UPDATEREGISTRY  = &H00000001
	CDS_TEST  = &H00000002
	CDS_FULLSCREEN  = &H00000004
	CDS_GLOBAL  = &H00000008
	CDS_SET_PRIMARY  = &H00000010
	CDS_VIDEOPARAMETERS  = &H00000020
	CDS_ENABLE_UNSAFE_MODES  = &H00000100
	CDS_DISABLE_UNSAFE_MODES  = &H00000200
	CDS_RESET = &H40000000
	CDS_RESET_EX  = &H20000000
	CDS_NORESET  = &H10000000
End Enum

Public Enum ChangeDisplaySettingsReturnCodes
	DISP_CHANGE_SUCCESSFUL  = 0
	DISP_CHANGE_RESTART  = 1
	DISP_CHANGE_FAILED  = -1
	DISP_CHANGE_BADMODE  = -2
	DISP_CHANGE_NOTUPDATED  = -3
	DISP_CHANGE_BADFLAGS  = -4
	DISP_CHANGE_BADPARAM  = -5
	DISP_CHANGE_BADDUALVIEW  = -6
End Enum

Public Enum EnumDispMode
	ENUM_CURRENT_SETTINGS  = (-1)
	ENUM_REGISTRY_SETTINGS  = (-2)
End Enum

Public Enum EnumDispDevFlags
    EDD_GET_DEVICE_INTERFACE_NAME = &H00000001
End Enum

Public Type DISPLAY_DEVICEW
	cb As Long
	DeviceName(0 To 31) As Integer
	DeviceString(0 To 127) As Integer
	StateFlags As Long
	DeviceID(0 To 127) As Integer
	DeviceKey(0 To 127) As Integer
End Type
'Alias DISPLAY_DEVICE As DISPLAY_DEVICEW
Public Type DISPLAY_DEVICE
	cb As Long
	DeviceName(0 To 31) As Integer
	DeviceString(0 To 127) As Integer
	StateFlags As Long
	DeviceID(0 To 127) As Integer
	DeviceKey(0 To 127) As Integer
End Type

Public Enum EnumDispSettingsExFlags
	EDS_RAWMODE  = &H00000002
	EDS_ROTATEDMODE  = &H00000004
End Enum

Public Enum DefaultMonitorValues
	MONITOR_DEFAULTTONULL  = &H00000000
	MONITOR_DEFAULTTOPRIMARY  = &H00000001
	MONITOR_DEFAULTTONEAREST  = &H00000002
End Enum

Public Enum MonitorInfoFlags
    MONITORINFOF_PRIMARY = &H1
End Enum

Public Type MONITORINFO
	cbSize As Long
	rcMonitor As RECT
	rcWork As RECT
	dwFlags As MonitorInfoFlags
End Type
Public Type MONITORINFOEXA
	info As MONITORINFO
	szDevice(0 To (CCHDEVICENAME - 1)) As Byte
End Type
Public Type MONITORINFOEXW
    info As MONITORINFO
    szDevice(0 To (CCHDEVICENAME - 1)) As Integer
End Type
'Alias MONITORINFOEX as MONITORINFOEXW
Public Type MONITORINFOEX
    info As MONITORINFO
    szDevice(0 To (CCHDEVICENAME - 1)) As Integer
End Type

Public DeclareWide PtrSafe Function ChangeDisplaySettingsW Lib "user32" (lpDevMode As DEVMODEW, ByVal dwFlags As ChangeDisplaySettingsFlags) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function ChangeDisplaySettings Lib "user32" Alias "ChangeDisplaySettingsW" (lpDevMode As DEVMODE, ByVal dwFlags As ChangeDisplaySettingsFlags) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function ChangeDisplaySettingsExW Lib "user32" (ByVal lpszDeviceName As LongPtr, lpDevMode As DEVMODEW, ByVal hwnd As LongPtr, ByVal dwFlags As ChangeDisplaySettingsFlags, lParam As Any) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function ChangeDisplaySettingsEx Lib "user32" Alias "ChangeDisplaySettingsExW" (ByVal lpszDeviceName As String, lpDevMode As DEVMODE, ByVal hwnd As LongPtr, ByVal dwFlags As ChangeDisplaySettingsFlags, lParam As Any) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function EnumDisplaySettingsW Lib "user32" (ByVal lpszDeviceName As LongPtr, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODEW) As BOOL
Public DeclareWide PtrSafe Function EnumDisplaySettings Lib "user32" Alias "EnumDisplaySettingsW" (ByVal lpszDeviceName As String, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODE) As BOOL
Public DeclareWide PtrSafe Function EnumDisplaySettingsExW Lib "user32" (ByVal lpszDeviceName As LongPtr, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODEW, ByVal dwFlags As EnumDispSettingsExFlags) As BOOL
Public DeclareWide PtrSafe Function EnumDisplaySettingsEx Lib "user32" Alias "EnumDisplaySettingsExW" (ByVal lpszDeviceName As String, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODE, ByVal dwFlags As EnumDispSettingsExFlags) As BOOL
Public DeclareWide PtrSafe Function EnumDisplayMonitors Lib "user32" (Byval hDC As LongPtr, lprcClip As RECT, ByVal lpfnEnum As LongPtr, dwData As Any) As BOOL
Public DeclareWide PtrSafe Function EnumDisplayDevicesW Lib "user32" (ByVal lpDevice As LongPtr, ByVal iDevNum As Long, lpDisplayDevice As DISPLAY_DEVICEW, ByVal dwFlags As EnumDispDevFlags) As BOOL
Public DeclareWide PtrSafe Function EnumDisplayDevices Lib "user32" Alias "EnumDisplayDevicesW" (ByVal lpDevice As LongPtr, ByVal iDevNum As Long, lpDisplayDevice As DISPLAY_DEVICEW, ByVal dwFlags As EnumDispDevFlags) As BOOL
Public DeclareWide PtrSafe Function MonitorFromPoint Lib "user32" (ByVal pt as LongLong, ByVal dwFlags as DefaultMonitorValues) As LongPtr
Public DeclareWide PtrSafe Function MonitorFromWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal dwFlags as DefaultMonitorValues) As LongPtr
Public DeclareWide PtrSafe Function MonitorFromRect Lib "user32" (lprc As RECT, ByVal dwFlags as DefaultMonitorValues) As LongPtr
Public Declare PtrSafe Function GetMonitorInfoA Lib "user32" (ByVal hMonitor As LongPtr, lpmi As Any) As BOOL
Public DeclareWide PtrSafe Function GetMonitorInfoW Lib "user32" (ByVal hMonitor As LongPtr, lpmi As Any) As BOOL
Public DeclareWide PtrSafe Function GetMonitorInfo Lib "user32" Alias "GetMonitorInfoW" (ByVal hMonitor As LongPtr, lpmi As Any) As BOOL

Public DeclareWide PtrSafe Function OpenClipboard Lib "user32" (ByVal hWnd As LongPtr) As Long
Public DeclareWide PtrSafe Function EmptyClipboard Lib "user32" () As BOOL
Public DeclareWide PtrSafe Function GetClipboardData Lib "user32" (ByVal wFormat As StdClipboardFormats) As LongPtr
Public Declare PtrSafe Function SetClipboardData Lib "user32" (ByVal wFormat As StdClipboardFormats, Optional ByVal hMem As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function IsClipboardFormatAvailable Lib "user32" (ByVal wFormat As StdClipboardFormats) As BOOL
Public Declare PtrSafe Function CloseClipboard Lib "user32" () As Long
Public DeclareWide PtrSafe Function RegisterClipboardFormat Lib "user32" Alias "RegisterClipboardFormatW" (ByVal lpszFormat As String) As Long
Public Declare PtrSafe Function RegisterClipboardFormatW Lib "user32" (ByVal lpszFormat As LongPtr) As Long
Public Declare PtrSafe Function RegisterClipboardFormatA Lib "user32" (ByVal lpszFormat As String) As Long
Public Declare PtrSafe Function AddClipboardFormatListener Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function RemoveClipboardFormatListener Lib "user32" (ByVal hwnd As LongPtr) As Long
Public DeclareWide PtrSafe Function ChangeClipboardChain Lib "user32" (ByVal hWndRemove As LongPtr, ByVal hWndNewNext As LongPtr) As BOOL
Public Declare PtrSafe Function CountClipboardFormats Lib "user32" () As Long
Public DeclareWide PtrSafe Function EnumClipboardFormats Lib "user32" (ByVal wFormat As StdClipboardFormats) As StdClipboardFormats
Public Declare PtrSafe Function GetClipboardFormatNameA Lib "user32" (ByVal wFormat As StdClipboardFormats, ByVal lpszFormatName As String, ByVal cchMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetClipboardFormatNameW Lib "user32" (ByVal wFormat As StdClipboardFormats, ByVal lpszFormatName As LongPtr, ByVal cchMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetClipboardFormatName Lib "user32" Alias "GetClipboardFormatNameW" (ByVal wFormat As StdClipboardFormats, ByVal lpszFormatName As String, ByVal cchMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetClipboardOwner Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function GetClipboardSequenceNumber Lib "user32" () As Long
Public DeclareWide PtrSafe Function SetClipboardViewer Lib "user32" (ByVal hwndNewViewer As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetClipboardViewer Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function GetOpenClipboardWindow Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function GetPriorityClipboardFormat Lib "user32" (paFormatPriorityList As StdClipboardFormats, ByVal cFormats As Long) As Long
Public DeclareWide PtrSafe Function GetUpdatedClipboardFormats Lib "user32" (lpuiFormats As StdClipboardFormats, ByVal cFormats As Long, pcFormatsOut As Long) As Long

Public Type MSGBOXPARAMSA
	cbSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpszText As String
	lpszCaption As String
	dwStyle As MessageBoxFlags
	lpszIcon As LongPtr
	dwContextHelpId As Long
	lpfnMsgBoxCallback As LongPtr
	dwLanguageId As Long
End Type
Public Type MSGBOXPARAMSW
    cbSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpszText As LongPtr
    lpszCaption As LongPtr
    dwStyle As MessageBoxFlags
    lpszIcon As LongPtr
    dwContextHelpId As Long
    lpfnMsgBoxCallback As LongPtr
    dwLanguageId As Long
End Type
'Alias MSGBOXPARAMS As MSGBOXPARAMSW
Public Type MSGBOXPARAMS
    cbSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpszText As LongPtr
    lpszCaption As LongPtr
    dwStyle As MessageBoxFlags
    lpszIcon As LongPtr
    dwContextHelpId As Long
    lpfnMsgBoxCallback As LongPtr
    dwLanguageId As Long
End Type
Public Declare PtrSafe Function MessageBoxA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As LongPtr, ByVal lpCaption As LongPtr, ByVal uType As MessageBoxFlags) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBox Lib "user32" Alias "MessageBoxW" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxExA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxExW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As LongPtr, ByVal lpCaption As LongPtr, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxEx Lib "user32" Alias "MessageBoxExW" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxIndirectA Lib "user32" (lpmbp As MSGBOXPARAMSA) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxIndirectW Lib "user32" (lpmbp As MSGBOXPARAMSW) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxIndirect Lib "user32" Alias "MessageBoxIndirectW" (lpmbp As MSGBOXPARAMS) As MessageBoxResults

Public Declare PtrSafe Function BlockInput Lib "user32" (ByVal fBlockIt As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetCursor Lib "user32" (ByVal hCursor As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetCursor Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function SetCursorPos Lib "user32" (ByVal x As Long, ByVal y As Long) As BOOL
Public DeclareWide PtrSafe Function GetCursorPos Lib "user32" (lpPoint As POINT) As BOOL
Public DeclareWide PtrSafe Function ClipCursor Lib "user32" (lpRect As RECT) As BOOL
Public DeclareWide PtrSafe Function ShowCursor Lib "user32" (ByVal fShow As BOOL) As Long
Public DeclareWide PtrSafe Function GetCursorInfo Lib "user32" (pci As CURSORINFO) As BOOL
Public DeclareWide PtrSafe Function SetSystemCursor Lib "user32" (ByVal hCursor As LongPtr, ByVal id As SysCursors) As BOOL
Public DeclareWide PtrSafe Function LookupIconIdFromDirectory Lib "user32" (presbits As Any, ByVal fIcon As BOOL) As Long
Public DeclareWide PtrSafe Function LookupIconIdFromDirectoryEx Lib "user32" (presbits As Any, ByVal fIcon As BOOL, ByVal cxDesired As Long, ByVal cyDesired As Long, ByVal Flags As LoadResourceFlags) As Long
Public Declare PtrSafe Function DrawIcon Lib "user32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal hIcon As LongPtr) As BOOL
Public Declare PtrSafe Function DrawIconEx Lib "user32" (ByVal hDC As LongPtr, ByVal xLeft As Long, ByVal yTop As Long, ByVal hIcon As LongPtr, ByVal cxWidth As Long, ByVal cyWidth As Long, ByVal istepIfAni As Long, ByVal hbrFlickerFreeDraw As LongPtr, ByVal diFlags As DrawImageFlags) As BOOL
Public Declare PtrSafe Function CreateIconIndirect Lib "user32" (piconinfo As ICONINFO) As LongPtr
Public Declare PtrSafe Function CreateIcon Lib "user32" (ByVal hInstance As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long, ByVal cPlanes As Byte, ByVal cBitsPixel As Byte, lpbANDbits As Any, lpXORbits As Any) As LongPtr
Public Declare PtrSafe Function GetIconInfo Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFO) As BOOL
Public Declare PtrSafe Function CopyIcon Lib "user32" (ByVal hIcon As LongPtr) As LongPtr
Public Declare PtrSafe Function GetIconInfoExA Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFOEXA) As BOOL
Public Declare PtrSafe Function GetIconInfoExW Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFOEXW) As BOOL
Public DeclareWide PtrSafe Function GetIconInfoEx Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFOEXW) As BOOL
Public Declare PtrSafe Function GetAncestor Lib "user32" (ByVal hwnd As LongPtr, ByVal gaFlags As GA_FLAGS) As LongPtr
Public Declare PtrSafe Function ChangeWindowMessageFilter Lib "user32"  (ByVal message As Long, ByVal dwFlag As CWMF_Flag) As BOOL
Public Declare PtrSafe Function ChangeWindowMessageFilterEx Lib "user32" (ByVal hwnd As LongPtr, ByVal message As Long, ByVal action As CWMF_Flag, ByRef pChangeFilterStruct As CHANGEFILTERSTRUCT) As BOOL
Public DeclareWide PtrSafe Function GetAltTabInfo Lib "user32" Alias "GetAltTabInfoW" (ByVal hwnd As LongPtr, ByVal iItem As Long, pati As ALTTABINFO, Optional pszItemText As LongPtr, Optional ByVal cchItemText As Long = 0) As BOOL
Public DeclareWide PtrSafe Function GetAltTabInfoW Lib "user32" (ByVal hwnd As LongPtr, ByVal iItem As Long, pati As ALTTABINFO, Optional pszItemText As LongPtr, Optional ByVal cchItemText As Long = 0) As BOOL
Public DeclareWide PtrSafe Function SoundSentry Lib "user32" () As BOOL

Public DeclareWide PtrSafe Function SetProcessDpiAwarenessContext Lib "user32" (ByVal lValue As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function SetThreadDpiAwarenessContext Lib "user32" (ByVal lValue As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetThreadDpiAwarenessContext Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function GetWindowDpiAwarenessContext Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetAwarenessFromDpiAwarenessContext Lib "user32" (ByVal lValue As LongPtr) As DPI_AWARENESS
Public DeclareWide PtrSafe Function GetDpiFromDpiAwarenessContext Lib "user32" (ByVal lValue As LongPtr) As Long
Public DeclareWide PtrSafe Function SetProcessDpiAwareness Lib "user32" (ByVal lValue As PROCESS_DPI_AWARENESS) As Long
Public DeclareWide PtrSafe Function GetProcessDpiAwareness Lib "user32" (ByVal hprocess As LongPtr, value As PROCESS_DPI_AWARENESS) As Long
Public Declare PtrSafe Function GetDpiForWindow Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function GetDpiForSystem Lib "user32" () As Long
Public Declare PtrSafe Function GetDpiForProcess Lib "user32" (ByVal hProcess As LongPtr) As Long
Public Declare PtrSafe Function GetSystemDpiForProcess Lib "user32" (ByVal hProcess As LongPtr) As Long
Public Declare PtrSafe Function GetSystemMetricsForDpi Lib "user32" (ByVal nIndex As SystemMetrics, ByVal dpi As Long) As Long
Public Declare PtrSafe Function AdjustWindowRectExForDpi Lib "user32" (lpRect As RECT, ByVal dwStyle As WindowStyles, ByVal bMenu As BOOL, ByVal dwExStyle As WindowStylesEx, ByVal dpi As Long) As Long
Public Declare PtrSafe Function LogicalToPhysicalPoint Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function PhysicalToLogicalPoint Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function LogicalToPhysicalPointForPerMonitorDPI Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function PhysicalToLogicalPointForPerMonitorDPI Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function SetThreadCursorCreationScaling Lib "user32" (ByVal cursorDpi As Long) As Long
Public Declare PtrSafe Function IsProcessDpiAware Lib "user32" () As BOOL
Public Declare PtrSafe Function AreDpiAwarenessContextsEqual Lib "user32" (ByVal dpiContextA As LongPtr, ByVal dpiContextB As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidDpiAwarenessContext Lib "user32" (ByVal value As LongPtr) As BOOL
Public Declare PtrSafe Function EnableNonClientDpiScaling Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function SetThreadDpiHostingBehavior Lib "user32" (ByVal value As DPI_HOSTING_BEHAVIOR) As DPI_HOSTING_BEHAVIOR
Public Declare PtrSafe Function GetThreadDpiHostingBehavior Lib "user32" () As DPI_HOSTING_BEHAVIOR

Public DeclareWide PtrSafe Function ExitWindowsEx Lib "user32" (ByVal uFlags As ExitWindowsExFlags, ByVal dwReason As SystemShutdownReasons) As BOOL
Public DeclareWide PtrSafe Function LockWorkstation Lib "user32" () As BOOL
Public DeclareWide PtrSafe Function ShutdownBlockReasonCreate Lib "user32" (ByVal hwnd As LongPtr, ByVal pwszReason As String) As BOOL
Public DeclareWide PtrSafe Function ShutdownBlockReasonDestroy Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ShutdownBlockReasonQuery Lib "user32" (ByVal hwnd As LongPtr, ByVal pwszBuff As LongPtr, pcchBuff As Long) As BOOL

Public Declare PtrSafe Function CreateDesktopA Lib "user32" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateDesktopW Lib "user32" (ByVal lpszDesktop As LongPtr, ByVal lpszDevice As LongPtr, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateDesktop Lib "user32" Alias "CreateDesktopW" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateDesktopExA Lib "user32" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES, ByVal ulHeapSize As Long, pvoid As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateDesktopExW Lib "user32" (ByVal lpszDesktop As LongPtr, ByVal lpszDevice As LongPtr, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES, ByVal ulHeapSize As Long, pvoid As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateDesktopEx Lib "user32" Alias "CreateDesktopExW" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES, ByVal ulHeapSize As Long, pvoid As Any) As LongPtr
Public DeclareWide PtrSafe Function SwitchDesktop Lib "user32" (ByVal hDesktop As LongPtr) As BOOL
Public DeclareWide PtrSafe Function OpenDesktopA Lib "user32" (ByVal lpszDesktop As String, ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function OpenDesktopW Lib "user32" (ByVal lpszDesktop As LongPtr, ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function OpenDesktop Lib "user32" Alias "OpenDesktopW" (ByVal lpszDesktop As String, ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function EnumDesktopsW Lib "user32" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function OpenInputDesktop Lib "user32" (ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CloseDesktop Lib "user32" (ByVal hDesktop As LongPtr) As Long
Public DeclareWide PtrSafe Function SetThreadDesktop Lib "user32" (ByVal hDesktop As LongPtr) As Long
Public DeclareWide PtrSafe Function GetThreadDesktop Lib "user32" (ByVal dwThreadId As Long) As LongPtr

Public DeclareWide PtrSafe Function GetProcessWindowStation Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function SetProcessWindowStation Lib "user32" (ByVal hWinSta As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumWindowStationsW Lib "user32" (ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumWindowStationsA Lib "user32" (ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumWindowStations Lib "user32" Alias "EnumWindowStationsW" (ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function CreateWindowStationA Lib "user32" (ByVal lpwinsta As String, ByVal dwFlags As WindowStationCreateFlags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateWindowStationW Lib "user32" (ByVal lpwinsta As LongPtr, ByVal dwFlags As WindowStationCreateFlags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateWindowStation Lib "user32" Alias "CreateWindowStationW" (ByVal lpwinsta As String, ByVal dwFlags As WindowStationCreateFlags, ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function OpenWindowStationA Lib "user32" (ByVal lpwinsta As String, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As BOOL
Public DeclareWide PtrSafe Function OpenWindowStationW Lib "user32" (ByVal lpwinsta As LongPtr, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As BOOL
Public DeclareWide PtrSafe Function OpenWindowStation Lib "user32" Alias "OpenWindowStationW" (ByVal lpwinsta As String, ByVal fInherit As BOOL, ByVal dwDesiredAccess As Long) As BOOL

Public DeclareWide PtrSafe Function GetGestureInfo Lib "user32" (ByVal hGestureInfo As LongPtr, pGestureInfo As GESTUREINFO) As BOOL
Public DeclareWide PtrSafe Function GetGestureExtraArgs Lib "user32" (ByVal hGestureInfo As LongPtr, ByVal cbExtraArgs As Long, pExtraArgs As Any) As BOOL
Public DeclareWide PtrSafe Function SetGestureConfig Lib "user32" (ByVal hwnd As LongPtr, ByVal dwReserved As Long, ByVal cIDs As Long, pGestureConfig As GESTURECONFIG, ByVal cbSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetGestureConfig Lib "user32" (ByVal hwnd As LongPtr, ByVal dwReserved As Long, ByVal dwFlags As GestureInfoFlags, pcIDs As Long, pGestureConfig As GESTURECONFIG, ByVal cbSize As Long) As BOOL
Public DeclareWide PtrSafe Function CloseGestureInfoHandle Lib "user32" (ByVal hGestureInfo As LongPtr) As BOOL

Public Enum GestureInfoFlags
	GF_BEGIN  = &H00000001
	GF_INERTIA  = &H00000002
	GF_END  = &H00000004
End Enum

Public Enum GestureIDs
	GID_BEGIN  = 1
	GID_END  = 2
	GID_ZOOM  = 3
	GID_PAN = 4
	GID_ROTATE  = 5
	GID_TWOFINGERTAP  = 6
	GID_PRESSANDTAP = 7
	GID_ROLLOVER = GID_PRESSANDTAP
End Enum

Public Type GESTUREINFO
	cbSize As Long ' size, in bytes, of this structure (including variable length Args field)
	dwFlags As GestureInfoFlags ' see GF_* flags
	dwID As GestureIDs ' gesture ID, see GID_* defines
	hwndTarget As LongPtr ' handle to window targeted by this gesture
	ptsLocation As POINTS ' current location of this gesture
	dwInstanceID As Long ' internally used
	dwSequenceID As Long ' internally used
	ullArguments As LongLong ' arguments for gestures whose arguments fit in 8 BYTES
    cbExtraArgs As Long ' size, in bytes, of extra arguments, if any, that accompany this gesture
End Type

Public Type GESTURENOTIFYSTRUCT
	cbSize As Long ' size, in bytes, of this structure
	dwFlags As Long ' unused
	hwndTarget As LongPtr ' handle to window targeted by the gesture
	ptsLocation As POINTS ' starting location
	dwInstanceID As Long ' internally used
End Type

Public Enum GestureConfigValues
	GC_ALLGESTURES  = &H00000001
	GC_ZOOM  = &H00000001
	GC_PAN = &H00000001
	GC_PAN_WITH_SINGLE_FINGER_VERTICALLY  = &H00000002
	GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY  = &H00000004
	GC_PAN_WITH_GUTTER  = &H00000008
	GC_PAN_WITH_INERTIA  = &H00000010
	GC_ROTATE  = &H00000001
	GC_TWOFINGERTAP  = &H00000001
	GC_PRESSANDTAP  = &H00000001
	GC_ROLLOVER  = GC_PRESSANDTAP
End Enum

Public Type GESTURECONFIG
	dwID As GestureIDs ' gesture ID
	dwWant As GestureConfigValues ' settings related to gesture ID that are to be turned on
	dwBlock As GestureConfigValues ' settings related to gesture ID that are to be turned off
End Type



Public Enum OpenDesktop_Flags
    DF_ALLOWOTHERACCOUNTHOOK
End Enum

Public Enum DesktopAccessMaskValues
    DESKTOP_CREATEMENU = &H0004 ' 	Required to create a menu on the desktop.	
    DESKTOP_CREATEWINDOW = &H0002 ' 	Required to create a window on the desktop.
    DESKTOP_ENUMERATE = &H0040 ' 	Required for the desktop to be enumerated.
    DESKTOP_HOOKCONTROL = &H0008 ' 	Required to establish any of the window hooks.
    DESKTOP_JOURNALPLAYBACK = &H0020 ' 	Required to perform journal playback on a desktop.
    DESKTOP_JOURNALRECORD = &H0010 ' 	Required to perform journal recording on a desktop.
    DESKTOP_READOBJECTS = &H0001 ' 	Required to read objects on the desktop.
    DESKTOP_SWITCHDESKTOP = &H0100 ' 	Required to activate the desktop using the SwitchDesktop function.
    DESKTOP_WRITEOBJECTS = &H0080 ' 	Required to write objects on the desktop.
End Enum




Public Enum DPI_AWARENESS
	DPI_AWARENESS_INVALID=-1
	DPI_AWARENESS_UNAWARE=0
	DPI_AWARENESS_SYSTEM_AWARE=1
	DPI_AWARENESS_PER_MONITOR_AWARE=2
End Enum
Public Enum DPI_AWARENESS_CONTEXT
	DPI_AWARENESS_CONTEXT_UNAWARE = (-1)
	DPI_AWARENESS_CONTEXT_SYSTEM_AWARE  = (-2)
	DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE = (-3)
	DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2  = (-4)
	DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED  = (-5)
End Enum
Public Enum DPI_HOSTING_BEHAVIOR
	DPI_HOSTING_BEHAVIOR_INVALID=-1
	DPI_HOSTING_BEHAVIOR_DEFAULT=0
	DPI_HOSTING_BEHAVIOR_MIXED=1
End Enum
Public Enum PROCESS_DPI_AWARENESS
	PROCESS_DPI_UNAWARE= 0
	PROCESS_SYSTEM_DPI_AWARE=1
	PROCESS_PER_MONITOR_DPI_AWARE=2
End Enum
Public Enum MONITOR_DPI_TYPE
	MDT_EFFECTIVE_DPI=0
	MDT_ANGULAR_DPI=1
	MDT_RAW_DPI=2
	MDT_DEFAULT = 2
End Enum


Public Type ALTTABINFO
	cbSize As Long
    cItems As Long
    cColumns As Long
    cRows As Long
    iColFocus As Long
    iRowFocus as Long
    cxItem As Long
    cyItem as Long
    ptStart As POINT
End Type
Public Enum CWMF_Flag
    MSGFLT_RESET = 0
    MSGFLT_ADD = 1
    MSGFLT_REMOVE = 2
End Enum
Public Enum MSGFLTINFO
	MSGFLTINFO_NONE
    MSGFLTINFO_ALREADYALLOWED_FORWND
    MSGFLTINFO_ALREADYDISALLOWED_FORWND
    MSGFLTINFO_ALLOWED_HIGHER
End Enum
Public Type CHANGEFILTERSTRUCT
    cbSize As Long
    ExtStatus As MSGFLTINFO
End Type


Public Enum GA_FLAGS
    GA_PARENT = 1
    GA_ROOT
    GA_ROOTOWNER
End Enum


Public Type ICONINFO
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
End Type
Public Type ICONINFOEXW
    cbSize As Long
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
    wResID As Integer
    szModName(0 To (MAX_PATH - 1)) As Integer
    szResName(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type ICONINFOEXA
    cbSize As Long
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
    wResID As Integer
    szModName(0 To (MAX_PATH - 1)) As Byte
    szResName(0 To (MAX_PATH - 1)) As Byte
End Type
'Alias ICONINFOEX As ICONINFOEXW

Public Enum DrawImageFlags
	DI_MASK  = &H0001
	DI_IMAGE  = &H0002
	DI_NORMAL  = &H0003
	DI_COMPAT = &H0004
	DI_DEFAULTSIZE  = &H0008
	DI_NOMIRROR  = &H0010
End Enum
Public Enum SendInputType
    INPUT_MOUSE = 0
    INPUT_KEYBOARD  = 1
    INPUT_HARDWARE  = 2
End Enum

[Description("UDT for SendInput API. Set the type then copy one of MOUSEINPUT, KEYBDINPUT, or HARDWAREINPUT into 'struct'")]
Public Type INPUT
	type As SendInputType
    #If Win64 Then
    struct(27) As Byte
    #Else
    struct(23) As Byte
    #End If
End Type
Public Type MOUSEINPUT
	dx As LONG
	dy As LONG
	mouseData As Long
	dwFlags As MouseEventFlags
	time As Long
	dwExtraInfo As LongPtr
End Type
Public Type KEYBDINPUT
    type As SendInputType 'MUST BE 1
	wVk As Integer
	wScan As Integer
	dwFlags As KeybdEventFlags
	time As Long
	dwExtraInfo As LongPtr
End Type
Public Type HARDWAREINPUT
    uMsg As Long
    wParamL As Integer
    wParamH As Integer
End Type


Public Enum MouseEventFlags
	MOUSEEVENTF_MOVE  = &H0001 /* mouse move */
	MOUSEEVENTF_LEFTDOWN  = &H0002 /* left button down */
	MOUSEEVENTF_LEFTUP  = &H0004 /* left button up */
	MOUSEEVENTF_RIGHTDOWN  = &H0008 /* right button down */
	MOUSEEVENTF_RIGHTUP  = &H0010 /* right button up */
	MOUSEEVENTF_MIDDLEDOWN  = &H0020 /* middle button down */
	MOUSEEVENTF_MIDDLEUP  = &H0040 /* middle button up */
	MOUSEEVENTF_XDOWN  = &H0080 /* x button down */
	MOUSEEVENTF_XUP  = &H0100 /* x button down */
	MOUSEEVENTF_WHEEL  = &H0800 /* wheel button rolled */
	MOUSEEVENTF_HWHEEL  = &H01000 /* hwheel button rolled */
	MOUSEEVENTF_MOVE_NOCOALESCE  = &H2000 /* do not coalesce mouse moves */
	MOUSEEVENTF_VIRTUALDESK  = &H4000 /* map to entire virtual desktop */
	MOUSEEVENTF_ABSOLUTE = &H8000& /* absolute move */
End Enum
Public Enum KeybdEventFlags
    KEYEVENTF_EXTENDEDKEY  = &H0001
    KEYEVENTF_KEYUP  = &H0002
    KEYEVENTF_UNICODE  = &H0004
    KEYEVENTF_SCANCODE  = &H0008
End Enum
Public Enum TrackMouseEventFlags
	TME_HOVER  = &H00000001
	TME_LEAVE  = &H00000002
	TME_NONCLIENT  = &H00000010
	TME_QUERY  = &H40000000
	TME_CANCEL  = &H80000000
End Enum
Public Type TRACKMOUSEEVENT
	cbSize As Long
	dwFlags As TrackMouseEventFlags
	hwndTrack As LongPtr
	dwHoverTime As Long
End Type
Public Const HOVER_DEFAULT = &HFFFFFFFF

Public Enum AccelFvirt
    FVIRTKEY  = TRUE /* Assumed to be == TRUE */
    FNOINVERT  = &H02
    FSHIFT  = &H04
    FCONTROL  = &H08
    FALT  = &H10
End Enum
Public Type ACCEL
   fVirt As BYTE                  '// Also called the flags field
   key As Integer
   cmd As Integer
End Type


Public Const CW_USEDEFAULT = &H80000000&

Public Enum SystemColors
    CTLCOLOR_MSGBOX = 0
    CTLCOLOR_EDIT = 1
    CTLCOLOR_LISTBOX = 2
    CTLCOLOR_BTN = 3
    CTLCOLOR_DLG = 4
    CTLCOLOR_SCROLLBAR = 5
    CTLCOLOR_STATIC = 6
    CTLCOLOR_MAX = 7

    COLOR_SCROLLBAR = 0
    COLOR_BACKGROUND = 1
    COLOR_ACTIVECAPTION = 2
    COLOR_INACTIVECAPTION = 3
    COLOR_MENU = 4
    COLOR_WINDOW = 5
    COLOR_WINDOWFRAME = 6
    COLOR_MENUTEXT = 7
    COLOR_WINDOWTEXT = 8
    COLOR_CAPTIONTEXT = 9
    COLOR_ACTIVEBORDER = 10
    COLOR_INACTIVEBORDER = 11
    COLOR_APPWORKSPACE = 12
    COLOR_HIGHLIGHT = 13
    COLOR_HIGHLIGHTTEXT = 14
    COLOR_BTNFACE = 15
    COLOR_BTNSHADOW = 16
    COLOR_GRAYTEXT = 17
    COLOR_BTNTEXT = 18
    COLOR_INACTIVECAPTIONTEXT = 19
    COLOR_BTNHIGHLIGHT = 20

    COLOR_3DDKSHADOW = 21
    COLOR_3DLIGHT = 22
    COLOR_INFOTEXT = 23
    COLOR_INFOBK = 24

    COLOR_HOTLIGHT = 26
    COLOR_GRADIENTACTIVECAPTION = 27
    COLOR_GRADIENTINACTIVECAPTION = 28

    COLOR_MENUHILIGHT = 29
    COLOR_MENUBAR = 30

    COLOR_DESKTOP = COLOR_BACKGROUND
    COLOR_3DFACE = COLOR_BTNFACE
    COLOR_3DSHADOW = COLOR_BTNSHADOW
    COLOR_3DHIGHLIGHT = COLOR_BTNHIGHLIGHT
    COLOR_3DHILIGHT = COLOR_BTNHIGHLIGHT
    COLOR_BTNHILIGHT = COLOR_BTNHIGHLIGHT
End Enum



Public Enum SWP_Flags
    SWP_NOSIZE = &H1
    SWP_NOMOVE = &H2
    SWP_NOZORDER = &H4
    SWP_NOREDRAW = &H8
    SWP_NOACTIVATE = &H10
    SWP_FRAMECHANGED = &H20
    SWP_DRAWFRAME = SWP_FRAMECHANGED
    SWP_SHOWWINDOW = &H40
    SWP_HIDEWINDOW = &H80
    SWP_NOCOPYBITS = &H100
    SWP_NOOWNERZORDER = &H200
    SWP_NOREPOSITION = SWP_NOOWNERZORDER
    SWP_NOSENDCHANGING = &H400
    
    SWP_DEFERERASE = &H2000
    SWP_ASYNCWINDOWPOS = &H4000
End Enum
Public Enum WindowZOrderDefaults
    HWND_DESKTOP = 0&
    HWND_TOP = 0&
    HWND_BOTTOM = 1&
    HWND_TOPMOST = -1
    HWND_NOTOPMOST = -2
End Enum

Public Type PAINTSTRUCT
	hdc                  As LongPtr
    fErase               As Long
    rcPaint              As RECT
    fRestore             As Long
    fIncUpdate           As Long
    rgbReserved(0 To 31) As Byte
End Type

Public Enum RDW_Flags
    RDW_INVALIDATE = &H1
    RDW_INTERNALPAINT = &H2
    RDW_ERASE = &H4
    RDW_VALIDATE = &H8
    RDW_NOINTERNALPAINT = &H10
    RDW_NOERASE = &H20
    RDW_NOCHILDREN = &H40
    RDW_ALLCHILDREN = &H80
    RDW_UPDATENOW = &H100
    RDW_ERASENOW = &H200
    RDW_FRAME = &H400
    RDW_NOFRAME = &H800
End Enum
Public Enum TPM_wFlags
  TPM_LEFTBUTTON = &H0
  TPM_RIGHTBUTTON = &H2
  TPM_LEFTALIGN = &H0
  TPM_CENTERALIGN = &H4
  TPM_RIGHTALIGN = &H8
  TPM_TOPALIGN = &H0
  TPM_VCENTERALIGN = &H10
  TPM_BOTTOMALIGN = &H20

  TPM_HORIZONTAL = &H0         ' Horz alignment matters more
  TPM_VERTICAL = &H40            ' Vert alignment matters more
  TPM_NONOTIFY = &H80           ' Don't send any notification msgs
  TPM_RETURNCMD = &H100
  
  TPM_HORPOSANIMATION = &H400
  TPM_HORNEGANIMATION = &H800
  TPM_VERPOSANIMATION = &H1000
  TPM_VERNEGANIMATION = &H2000
  TPM_NOANIMATION = &H4000
End Enum
Public Type TPMPARAMS
    cbSize As Long
    rcExclude As RECT
End Type
Public Enum AnimateWindowFlags
	AW_HOR_POSITIVE  = &H00000001
	AW_HOR_NEGATIVE  = &H00000002
	AW_VER_POSITIVE  = &H00000004
	AW_VER_NEGATIVE  = &H00000008
	AW_CENTER  = &H00000010
	AW_HIDE  = &H00010000
	AW_ACTIVATE  = &H00020000
	AW_SLIDE  = &H00040000
	AW_BLEND  = &H00080000
End Enum

Public Type MENUITEMINFOW
    cbSize As Long
    fMask As MII_Mask
    fType As MF_Type
    fState As MF_State
    wID As Long                       ' MIIM_ID
    hSubMenu As LongPtr            ' MIIM_SUBMENU
    hbmpChecked As LongPtr      ' MIIM_CHECKMARKS
    hbmpUnchecked As LongPtr  ' MIIM_CHECKMARKS
    dwItemData As LongPtr          ' MIIM_DATA
    dwTypeData As LongPtr        ' MIIM_TYPE
    cch As Long                       ' MIIM_TYPE
    hbmpItem As LongPtr
End Type
Public Enum MII_Mask
  MIIM_STATE = &H1
  MIIM_ID = &H2
  MIIM_SUBMENU = &H4
  MIIM_CHECKMARKS = &H8
  MIIM_TYPE = &H10
  MIIM_DATA = &H20
  MIIM_BITMAP = &H80
  MIIM_STRING = &H40
End Enum
Public Enum MenuFlags
  MF_INSERT = &H0
  MF_ENABLED = &H0
  MF_UNCHECKED = &H0
  MF_BYCOMMAND = &H0
  MF_STRING = &H0
  MF_UNHILITE = &H0
  MF_GRAYED = &H1
  MF_DISABLED = &H2
  MF_BITMAP = &H4
  MF_CHECKED = &H8
  MF_POPUP = &H10
  MF_MENUBARBREAK = &H20
  MF_MENUBREAK = &H40
  MF_HILITE = &H80
  MF_CHANGE = &H80
  MF_END = &H80                    ' Obsolete -- only used by old RES files
  MF_APPEND = &H100
  MF_OWNERDRAW = &H100
  MF_DELETE = &H200
  MF_USECHECKBITMAPS = &H200
  MF_BYPOSITION = &H400
  MF_SEPARATOR = &H800
  MF_REMOVE = &H1000
  MF_DEFAULT = &H1000
  MF_SYSMENU = &H2000
  MF_HELP = &H4000
  MF_RIGHTJUSTIFY = &H4000
  MF_MOUSESELECT = &H8000&
End Enum
Public Enum MF_Type
  MFT_STRING = MF_STRING
  MFT_BITMAP = MF_BITMAP
  MFT_MENUBARBREAK = MF_MENUBARBREAK
  MFT_MENUBREAK = MF_MENUBREAK
  MFT_OWNERDRAW = MF_OWNERDRAW
  MFT_RADIOCHECK = &H200
  MFT_SEPARATOR = MF_SEPARATOR
  MFT_RIGHTORDER = &H2000
  MFT_RIGHTJUSTIFY = MF_RIGHTJUSTIFY
End Enum
Public Enum MF_State
  MFS_GRAYED = &H3
  MFS_DISABLED = MFS_GRAYED
  MFS_CHECKED = MF_CHECKED
  MFS_HILITE = MF_HILITE
  MFS_ENABLED = MF_ENABLED
  MFS_UNCHECKED = MF_UNCHECKED
  MFS_UNHILITE = MF_UNHILITE
  MFS_DEFAULT = MF_DEFAULT
End Enum
Public Type MENUBARINFO
	cbSize As Long
	rcBar As RECT
	hMenu As LongPtr
	hwndMenu As LongPtr
	FocusBitfield As Long
End Type

Public Enum CommonObjectIDs
    CHILDID_SELF            = 0
    INDEXID_OBJECT          = 0
    INDEXID_CONTAINER       = 0
    OBJID_WINDOW            = (&H00000000)
    OBJID_SYSMENU           = (&HFFFFFFFF)
    OBJID_TITLEBAR          = (&HFFFFFFFE)
    OBJID_MENU              = (&HFFFFFFFD)
    OBJID_CLIENT            = (&HFFFFFFFC)
	OBJID_VSCROLL           = (&HFFFFFFFB)
	OBJID_HSCROLL           = (&HFFFFFFFA)
    OBJID_SIZEGRIP          = (&HFFFFFFF9)
    OBJID_CARET             = (&HFFFFFFF8)
    OBJID_CURSOR            = (&HFFFFFFF7)
    OBJID_ALERT             = (&HFFFFFFF6)
    OBJID_SOUND             = (&HFFFFFFF5)
    OBJID_QUERYCLASSNAMEIDX = (&HFFFFFFF4)
    OBJID_NATIVEOM          = (&HFFFFFFF0)
End Enum
    

Public Declare PtrSafe Function TrackPopupMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal wFlags As TPM_wFlags, ByVal x As Long, ByVal y As Long, ByVal nReserved As Long, ByVal hwnd As LongPtr, lpRC As Any) As Long
Public Declare PtrSafe Function TrackPopupMenuEx Lib "user32" (ByVal hMenu As LongPtr, ByVal wFlags As TPM_wFlags, ByVal X As Long, ByVal Y As Long, ByVal hWnd As LongPtr, lptpm As Any) As Long
Public Declare PtrSafe Function GetMenuItemCount Lib "user32" (ByVal hMenu As LongPtr) As Long
Public Declare PtrSafe Function GetMenuItemID Lib "user32" (ByVal hMenu As LongPtr, ByVal nPos As Long) As Long
Public Declare PtrSafe Function InsertMenuItemW Lib "user32" Alias "InsertMenuItemW" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPosition As Boolean, lpmii As MENUITEMINFOW) As Boolean
Public DeclareWide PtrSafe Function InsertMenuItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPosition As Boolean, lpmii As MENUITEMINFOW) As Boolean
Public Declare PtrSafe Function AppendMenuA Lib "user32" Alias "AppendMenuA" (ByVal hMenu As LongPtr, ByVal wFlags As MenuFlags, ByVal wIDNewItem As LongPtr, ByVal lpNewItem As String) As Long
Public Declare PtrSafe Function AppendMenuW Lib "user32" (ByVal hMenu As LongPtr, ByVal wFlags As Long, ByVal wIDNewItem As LongPtr, ByVal lpNewItem As LongPtr) As Long
Public DeclareWide PtrSafe Function AppendMenu Lib "user32" Alias "AppendMenuW" (ByVal hMenu As LongPtr, ByVal wFlags As MenuFlags, ByVal wIDNewItem As LongPtr, ByVal lpNewItem As String) As Long
Public Declare PtrSafe Function CheckMenuItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uIDCheckItem As Long, ByVal uCheck As MenuFlags) As Long
Public Declare PtrSafe Function CheckMenuRadioItem Lib "user32" (ByVal hMenu As LongPtr, ByVal first As Long, ByVal last As Long, ByVal check As Long, ByVal flags As MenuFlags) As Long
Public Declare PtrSafe Function DeleteMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags) As Long
Public Declare PtrSafe Function DestroyMenu Lib "user32" (ByVal hMenu As LongPtr) As Long
Public Declare PtrSafe Function EnableMenuItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uIDEnableItem As Long, ByVal uEnable As Long) As Long
Public Declare PtrSafe Function EndMenu Lib "user32" () As BOOL
Public Declare PtrSafe Function GetMenu Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetMenuBarInfo Lib "user32" (ByVal hWnd As LongPtr, ByVal idObject As CommonObjectIDs, ByVal idItem As Long, pmbi As MENUBARINFO) As LongPtr
Public DeclareWide PtrSafe Function LoadMenuW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpString As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadMenu Lib "user32" Alias "LoadMenuW" (ByVal hInstance As LongPtr, ByVal lpString As String) As LongPtr
Public DeclareWide PtrSafe Function LoadMenuIndirect Lib "user32" Alias "LoadMenuIndirectW" (ByVal lpMenuTemplate As LongPtr) As LongPtr
Public Declare PtrSafe Function SetMenu Lib "user32" (ByVal hwnd As LongPtr, ByVal hMenu As LongPtr) As Long
Public DeclareWide PtrSafe Function HiliteMenuItem Lib "user32" (ByVal hwnd As LongPtr, ByVal hMenu As LongPtr, ByVal wIDHiliteItem As Long, ByVal wHilite As Long) As Long
Public DeclareWide PtrSafe Function GetMenuStringW Lib "user32" (ByVal hMenu As LongPtr, ByVal wIDItem As Long, ByVal lpString As LongPtr, ByVal nMaxCount As Long, ByVal wFlag As Long) As Long
Public DeclareWide PtrSafe Function GetMenuString Lib "user32" Alias "GetMenuStringW" (ByVal hMenu As LongPtr, ByVal wIDItem As Long, ByVal lpString As String, ByVal nMaxCount As Long, ByVal wFlag As Long) As Long
Public Declare PtrSafe Function GetMenuState Lib "user32" (ByVal hMenu As LongPtr, ByVal wID As Long, ByVal wFlags As Long) As Long
Public Declare PtrSafe Function DrawMenuBar Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function GetSystemMenu Lib "user32" (ByVal hwnd As LongPtr, ByVal bRevert As Long) As LongPtr
Public Declare PtrSafe Function GetSubMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal nPos As Long) As LongPtr
Public DeclareWide PtrSafe Function InsertMenuW Lib "user32" (ByVal hMenu As LongPtr, ByVal nPosition As Long, ByVal wFlags As MenuFlags, ByVal wIDNewItem As LongPtr, ByVal lpNewItem As Any) As Long
Public DeclareWide PtrSafe Function InsertMenu Lib "user32" Alias "InsertMenuW" (ByVal hMenu As LongPtr, ByVal nPosition As Long, ByVal wFlags As Long, ByVal wIDNewItem As LongPtr, ByVal lpNewItem As Any) As Long
Public DeclareWide PtrSafe Function ModifyMenu Lib "user32" Alias "ModifyMenuW" (ByVal hMenu As LongPtr, ByVal nPosition As Long, ByVal wFlags As Long, ByVal wIDNewItem As LongPtr, ByVal lpString As Any) As Long
Public Declare PtrSafe Function RemoveMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal nPosition As Long, ByVal wFlags As Long) As Long
Public Declare PtrSafe Function SetMenuItemBitmaps Lib "user32" (ByVal hMenu As LongPtr, ByVal nPosition As Long, ByVal wFlags As Long, ByVal hBitmapUnchecked As LongPtr, ByVal hBitmapChecked As LongPtr) As Long
Public Declare PtrSafe Function GetMenuCheckMarkDimensions Lib "user32" () As Long


Public Declare PtrSafe Function GetUserObjectSecurity Lib "user32" (ByVal hObj As LongPtr, pSIRequested As SECURITY_INFORMATION, pSID As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
Public Declare PtrSafe Function SetUserObjectSecurity Lib "user32" (ByVal hObj As LongPtr, pSIRequested As SECURITY_INFORMATION, pSID As SECURITY_DESCRIPTOR) As BOOL


#End Region


#Region "comdlg"
'Common Dialogs

Public Type OPENFILENAMEA
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpstrFilter As String
	lpstrCustomFilter As String
	nMaxCustFilter As Long
	nFilterIndex As Long
	lpstrFile As String
	nMaxFile As Long
	lpstrFileTitle As String
	nMaxFileTitle As Long
	lpstrInitialDir As String
	lpstrTitle As String
	Flags As OFNFlags
	nFileOffset As Integer
	nFileExtension As Integer
	lpstrDefExt As String
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As String
	pvReserved As LongPtr
	dwReserved As Long
	FlagsEx As OFNFlagsEx
End Type
Public Type OPENFILENAMEW
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpstrFilter As LongPtr
	lpstrCustomFilter As LongPtr
	nMaxCustFilter As Long
	nFilterIndex As Long
	lpstrFile As LongPtr
	nMaxFile As Long
	lpstrFileTitle As LongPtr
	nMaxFileTitle As Long
	lpstrInitialDir As LongPtr
	lpstrTitle As LongPtr
	Flags As OFNFlags
	nFileOffset As Integer
	nFileExtension As Integer
	lpstrDefExt As LongPtr
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As LongPtr
	pvReserved As LongPtr
	dwReserved As Long
	FlagsEx As OFNFlagsEx
End Type
Public Type OPENFILENAME
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpstrFilter As LongPtr
	lpstrCustomFilter As LongPtr
	nMaxCustFilter As Long
	nFilterIndex As Long
	lpstrFile As LongPtr
	nMaxFile As Long
	lpstrFileTitle As LongPtr
	nMaxFileTitle As Long
	lpstrInitialDir As LongPtr
	lpstrTitle As LongPtr
	Flags As OFNFlags
	nFileOffset As Integer
	nFileExtension As Integer
	lpstrDefExt As LongPtr
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As LongPtr
	pvReserved As LongPtr
	dwReserved As Long
	FlagsEx As OFNFlagsEx
End Type

Public Enum OFNFlags
	OFN_READONLY = &H00000001
	OFN_OVERWRITEPROMPT = &H00000002
	OFN_HIDEREADONLY = &H00000004
	OFN_NOCHANGEDIR = &H00000008
	OFN_SHOWHELP = &H00000010
	OFN_ENABLEHOOK = &H00000020
	OFN_ENABLETEMPLATE = &H00000040
	OFN_ENABLETEMPLATEHANDLE = &H00000080
	OFN_NOVALIDATE = &H00000100
	OFN_ALLOWMULTISELECT = &H00000200
	OFN_EXTENSIONDIFFERENT = &H00000400
	OFN_PATHMUSTEXIST = &H00000800
	OFN_FILEMUSTEXIST = &H00001000
	OFN_CREATEPROMPT = &H00002000
	OFN_SHAREAWARE = &H00004000
	OFN_NOREADONLYRETURN = &H00008000&
	OFN_NOTESTFILECREATE = &H00010000
	OFN_NONETWORKBUTTON = &H00020000
	OFN_NOLONGNAMES = &H00040000  ' force no long names for 4.x modules
	OFN_EXPLORER = &H00080000  ' new look commdlg
	OFN_NODEREFERENCELINKS = &H00100000
	OFN_LONGNAMES = &H00200000  ' force long names for 3.x modules
'  OFN_ENABLEINCLUDENOTIFY and OFN_ENABLESIZING require
'  Windows 2000 or higher to have any effect.
	OFN_ENABLEINCLUDENOTIFY = &H00400000  ' send include message to callback
	OFN_ENABLESIZING = &H00800000
	OFN_DONTADDTORECENT = &H02000000
	OFN_FORCESHOWHIDDEN = &H10000000  ' Show All files including System and hidden files
End Enum
Public Enum OFNFlagsEx
	OFN_EX_NOPLACESBAR = &H1
End Enum

Public Declare PtrSafe Function GetOpenFileNameA Lib "comdlg32" (pOFN As OPENFILENAMEA) As Long
Public Declare PtrSafe Function GetOpenFileNameW Lib "comdlg32" (pOFN As OPENFILENAMEW) As Long
Public Declare PtrSafe Function GetOpenFileName Lib "comdlg32" Alias "GetOpenFileNameW" (pOFN As OPENFILENAME) As Long

Public Declare PtrSafe Function GetSaveFileNameA Lib "comdlg32" (pOFN As OPENFILENAMEA) As Long
Public Declare PtrSafe Function GetSaveFileNameW Lib "comdlg32" (pOFN As OPENFILENAMEW) As Long
Public Declare PtrSafe Function GetSaveFileName Lib "comdlg32" Alias "GetSaveFileNameW" (pOFN As OPENFILENAME) As Long

Public Declare PtrSafe Function GetFileTitleA Lib "comdlg32" (ByVal Buf As String, ByVal cchSize As Long) As Integer
Public Declare PtrSafe Function GetFileTitleW Lib "comdlg32" (ByVal Buf As LongPtr, ByVal cchSize As Long) As Integer
Public DeclareWide PtrSafe Function GetFileTitle Lib "comdlg32" Alias "GetFileTitleW" (ByVal Buf As String, ByVal cchSize As Long) As Integer

Public Const OFN_SHAREFALLTHROUGH  = 2
Public Const OFN_SHARENOWARN  = 1
Public Const OFN_SHAREWARN  = 0

Public Type OFNOTIFYA
	hdr As NMHDR
	lpOFN As LongPtr
	pszFile As String ' May be NULL
End Type
Public Type OFNOTIFYW
	hdr As NMHDR
	lpOFN As LongPtr
	pszFile As LongPtr ' May be NULL
End Type
Public Type OFNOTIFY
	hdr As NMHDR
	lpOFN As LongPtr
	pszFile As LongPtr ' May be NULL
End Type

Public Type OFNOTIFYEXA
	hdr As NMHDR
	lpOFN As LongPtr
	psf As LongPtr
	pidl As LongPtr ' May be NULL
End Type
Public Type OFNOTIFYEXW
	hdr As NMHDR
	lpOFN As LongPtr
	psf As LongPtr
	pidl As LongPtr ' May be NULL
End Type
Public Type OFNOTIFYEX
	hdr As NMHDR
	lpOFN As LongPtr
	psf As LongPtr
	pidl As LongPtr ' May be NULL
End Type

Public Const CDN_FIRST  = (-601)
Public Const CDN_LAST  = (-699)
'  Notifications from Open or Save dialog
Public Const CDN_INITDONE  = (CDN_FIRST - &H0000)
Public Const CDN_SELCHANGE  = (CDN_FIRST - &H0001)
Public Const CDN_FOLDERCHANGE  = (CDN_FIRST - &H0002)
Public Const CDN_SHAREVIOLATION  = (CDN_FIRST - &H0003)
Public Const CDN_HELP  = (CDN_FIRST - &H0004)
Public Const CDN_FILEOK  = (CDN_FIRST - &H0005)
Public Const CDN_TYPECHANGE  = (CDN_FIRST - &H0006)
Public Const CDN_INCLUDEITEM  = (CDN_FIRST - &H0007)

Private Const WM_USER = &H0400 'DO NOT MAKE PUBLIC:: This is only here as a temp fix to the 'error evaluating constant expression' bug.
Public Const CDM_FIRST = (WM_USER + 100)
Public Const CDM_LAST = (WM_USER + 200)
Public Const CDM_GETSPEC = (CDM_FIRST + &H0000)
Public Const CDM_GETFILEPATH  = (CDM_FIRST + &H0001)
Public Const CDM_GETFOLDERPATH  = (CDM_FIRST + &H0002)
Public Const CDM_GETFOLDERIDLIST  = (CDM_FIRST + &H0003)
Public Const CDM_SETCONTROLTEXT  = (CDM_FIRST + &H0004)
Public Const CDM_HIDECONTROL  = (CDM_FIRST + &H0005)
Public Const CDM_SETDEFEXT  = (CDM_FIRST + &H0006)

Public Type CHOOSECOLORA
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	rgbResult As Long
	lpCustColors As LongPtr
	Flags As ChooseColorFlags
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As String
End Type
Public Type CHOOSECOLORW
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	rgbResult As Long
	lpCustColors As LongPtr
	Flags As ChooseColorFlags
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As LongPtr
End Type
Public Type CHOOSECOLOR
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	rgbResult As Long
	lpCustColors As LongPtr
	Flags As ChooseColorFlags
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As LongPtr
End Type

Public Enum ChooseColorFlags
	CC_RGBINIT = &H00000001
	CC_FULLOPEN = &H00000002
	CC_PREVENTFULLOPEN = &H00000004
	CC_SHOWHELP = &H00000008
	CC_ENABLEHOOK = &H00000010
	CC_ENABLETEMPLATE = &H00000020
	CC_ENABLETEMPLATEHANDLE = &H00000040
	CC_SOLIDCOLOR = &H00000080
	CC_ANYCOLOR = &H00000100
End Enum

Public Declare PtrSafe Function ChooseColorA Lib "comdlg32" (lpCC As CHOOSECOLORA) As Long
Public Declare PtrSafe Function ChooseColorW Lib "comdlg32" (lpCC As CHOOSECOLORW) As Long
Public DeclareWide PtrSafe Function ChooseColor Lib "comdlg32" Alias "ChooseColorW" (lpCC As CHOOSECOLOR) As Long

Public Type FINDREPLACEA
	lStructSize As Long ' size of this struct 0x20
	hwndOwner As LongPtr ' handle to owner's window
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	Flags As FindReplaceFlags ' one or more of the FR_??
	lpstrFindWhat As String ' ptr. to search string
	lpstrReplaceWith As String ' ptr. to replace string
	wFindWhatLen As Integer ' size of find buffer
	wReplaceWithLen As Integer ' size of replace buffer
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook fn. or NULL
	lpTemplateName As String ' custom template name
End Type
Public Type FINDREPLACEW
	lStructSize As Long ' size of this struct 0x20
	hwndOwner As LongPtr ' handle to owner's window
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	Flags As FindReplaceFlags ' one or more of the FR_??
	lpstrFindWhat As LongPtr ' ptr. to search string
	lpstrReplaceWith As LongPtr ' ptr. to replace string
	wFindWhatLen As Integer ' size of find buffer
	wReplaceWithLen As Integer ' size of replace buffer
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook fn. or NULL
	lpTemplateName As LongPtr ' custom template name
End Type
Public Type FINDREPLACE
	lStructSize As Long ' size of this struct 0x20
	hwndOwner As LongPtr ' handle to owner's window
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	Flags As FindReplaceFlags ' one or more of the FR_??
	lpstrFindWhat As LongPtr ' ptr. to search string
	lpstrReplaceWith As LongPtr ' ptr. to replace string
	wFindWhatLen As Integer ' size of find buffer
	wReplaceWithLen As Integer ' size of replace buffer
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook fn. or NULL
	lpTemplateName As LongPtr ' custom template name
End Type

Public Enum FindReplaceFlags
	FR_DOWN = &H00000001
	FR_WHOLEWORD = &H00000002
	FR_MATCHCASE = &H00000004
	FR_FINDNEXT = &H00000008
	FR_REPLACE = &H00000010
	FR_REPLACEALL = &H00000020
	FR_DIALOGTERM = &H00000040
	FR_SHOWHELP = &H00000080
	FR_ENABLEHOOK = &H00000100
	FR_ENABLETEMPLATE = &H00000200
	FR_NOUPDOWN = &H00000400
	FR_NOMATCHCASE = &H00000800
	FR_NOWHOLEWORD = &H00001000
	FR_ENABLETEMPLATEHANDLE = &H00002000
	FR_HIDEUPDOWN = &H00004000
	FR_HIDEMATCHCASE = &H00008000&
	FR_HIDEWHOLEWORD = &H00010000
	FR_RAW = &H00020000
	FR_MATCHDIAC = &H20000000
	FR_MATCHKASHIDA = &H40000000
	FR_MATCHALEFHAMZA = &H80000000
End Enum

Public Const FRM_FIRST = (WM_USER + 100)
Public Const FRM_LAST = (WM_USER + 200)
Public Const FRM_SETOPERATIONRESULT  = (FRM_FIRST + &H0000)
Public Const FRM_SETOPERATIONRESULTTEXT  = (FRM_FIRST + &H0001)

Public Declare PtrSafe Function FindTextA Lib "comdlg32" (lpFR As FINDREPLACEA) As LongPtr
Public Declare PtrSafe Function FindTextW Lib "comdlg32" (lpFR As FINDREPLACEW) As LongPtr
Public DeclareWide PtrSafe Function FindText Lib "comdlg32" (lpFR As FINDREPLACE) As LongPtr

Public Declare PtrSafe Function ReplaceTextA Lib "comdlg32" (lpFR As FINDREPLACEA) As LongPtr
Public Declare PtrSafe Function ReplaceTextW Lib "comdlg32" (lpFR As FINDREPLACEW) As LongPtr
Public DeclareWide PtrSafe Function ReplaceText Lib "comdlg32" (lpFR As FINDREPLACE) As LongPtr

Public Type CHOOSEFONTA
	lStructSize As Long
	hwndOwner As LongPtr ' caller's window handle
	hDC As LongPtr ' printer DC/IC or NULL
	lpLogFont As LongPtr ' ptr. to a LOGFONT struct
	iPointSize As Long ' 10 * size in points of selected font
	Flags As ChooseFontFlags ' enum. type flags
	rgbColors As Long ' returned text color
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook function
	lpTemplateName As String ' custom template name
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	lpszStyle As String ' return the style field here
	' must be LF_FACESIZE or bigger
	nFontType As Integer ' same value reported to the EnumFonts
	'   call back with the extra FONTTYPE_
	'   bits added
	MISSING_ALIGNMENT As Integer
	nSizeMin As Long ' minimum pt size allowed &
	nSizeMax As Long ' max pt size allowed if
	'   CF_LIMITSIZE is used
End Type
Public Type CHOOSEFONTW
	lStructSize As Long
	hwndOwner As LongPtr ' caller's window handle
	hDC As LongPtr ' printer DC/IC or NULL
	lpLogFont As LongPtr ' ptr. to a LOGFONT struct
	iPointSize As Long ' 10 * size in points of selected font
	Flags As ChooseFontFlags ' enum. type flags
	rgbColors As Long ' returned text color
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook function
	lpTemplateName As LongPtr ' custom template name
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	lpszStyle As LongPtr ' return the style field here
	' must be LF_FACESIZE or bigger
	nFontType As Integer ' same value reported to the EnumFonts
	'   call back with the extra FONTTYPE_
	'   bits added
	MISSING_ALIGNMENT As Integer
	nSizeMin As Long ' minimum pt size allowed &
	nSizeMax As Long ' max pt size allowed if
	'   CF_LIMITSIZE is used
End Type
Public Type CHOOSEFONT
	lStructSize As Long
	hwndOwner As LongPtr ' caller's window handle
	hDC As LongPtr ' printer DC/IC or NULL
	lpLogFont As LongPtr ' ptr. to a LOGFONT struct
	iPointSize As Long ' 10 * size in points of selected font
	Flags As ChooseFontFlags ' enum. type flags
	rgbColors As Long ' returned text color
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook function
	lpTemplateName As LongPtr ' custom template name
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	lpszStyle As LongPtr ' return the style field here
	' must be LF_FACESIZE or bigger
	nFontType As Integer ' same value reported to the EnumFonts
	'   call back with the extra FONTTYPE_
	'   bits added
	MISSING_ALIGNMENT As Integer
	nSizeMin As Long ' minimum pt size allowed &
	nSizeMax As Long ' max pt size allowed if
	'   CF_LIMITSIZE is used
End Type

Public Enum ChooseFontFlags
	CF_SCREENFONTS = &H00000001
	CF_PRINTERFONTS = &H00000002
	CF_BOTH = (CF_SCREENFONTS Or CF_PRINTERFONTS)
	CF_SHOWHELP = &H00000004
	CF_ENABLEHOOK = &H00000008
	CF_ENABLETEMPLATE = &H00000010
	CF_ENABLETEMPLATEHANDLE = &H00000020
	CF_INITTOLOGFONTSTRUCT = &H00000040
	CF_USESTYLE = &H00000080
	CF_EFFECTS = &H00000100
	CF_APPLY = &H00000200
	CF_ANSIONLY = &H00000400

	CF_SCRIPTSONLY = CF_ANSIONLY

	CF_NOVECTORFONTS = &H00000800
	CF_NOOEMFONTS = CF_NOVECTORFONTS
	CF_NOSIMULATIONS = &H00001000
	CF_LIMITSIZE = &H00002000
	CF_FIXEDPITCHONLY = &H00004000
	CF_WYSIWYG = &H00008000&  ' must also have CF_SCREENFONTS & CF_PRINTERFONTS
	CF_FORCEFONTEXIST = &H00010000
	CF_SCALABLEONLY = &H00020000
	CF_TTONLY = &H00040000
	CF_NOFACESEL = &H00080000
	CF_NOSTYLESEL = &H00100000
	CF_NOSIZESEL = &H00200000

	CF_SELECTSCRIPT = &H00400000
	CF_NOSCRIPTSEL = &H00800000
	CF_NOVERTFONTS = &H01000000

	CF_INACTIVEFONTS = &H02000000
End Enum

Public Declare PtrSafe Function ChooseFontA Lib "comdlg32" (lpCF As CHOOSEFONTA) As Long
Public Declare PtrSafe Function ChooseFontW Lib "comdlg32" (lpCF As CHOOSEFONTW) As Long
Public DeclareWide PtrSafe Function ChooseFont Lib "comdlg32" Alias "ChooseFontW" (lpCF As CHOOSEFONT) As Long

Public Const SIMULATED_FONTTYPE  = &H8000
Public Const PRINTER_FONTTYPE  = &H4000
Public Const SCREEN_FONTTYPE  = &H2000
Public Const BOLD_FONTTYPE  = &H0100
Public Const ITALIC_FONTTYPE  = &H0200
Public Const REGULAR_FONTTYPE  = &H0400
Public Const RASTER_FONTTYPE  = &H001
Public Const DEVICE_FONTTYPE  = &H002
Public Const TRUETYPE_FONTTYPE  = &H004
Public Const PS_OPENTYPE_FONTTYPE  = &H10000
Public Const TT_OPENTYPE_FONTTYPE  = &H20000
Public Const TYPE1_FONTTYPE  = &H40000
Public Const SYMBOL_FONTTYPE  = &H80000
Public Const WM_CHOOSEFONT_GETLOGFONT = (WM_USER + 1)
Public Const WM_CHOOSEFONT_SETLOGFONT = (WM_USER + 101)
Public Const WM_CHOOSEFONT_SETFLAGS = (WM_USER + 102)

[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const LBSELCHSTRINGA = "commdlg_LBSelChangedNotify"
[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const SHAREVISTRINGA = "commdlg_ShareViolation"
[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const FILEOKSTRINGA  = "commdlg_FileNameOK"
[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const COLOROKSTRINGA = "commdlg_ColorOK"
[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const SETRGBSTRINGA  = "commdlg_SetRGBColor"
[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const HELPMSGSTRINGA = "commdlg_help"
[ Description ("NOTE: MUST BE CONVERTED TO ANSI. Use UtfToANSI().") ] Public Const FINDMSGSTRINGA = "commdlg_FindReplace"
Public Const LBSELCHSTRINGW = "commdlg_LBSelChangedNotify"
Public Const SHAREVISTRINGW = "commdlg_ShareViolation"
Public Const FILEOKSTRINGW  = "commdlg_FileNameOK"
Public Const COLOROKSTRINGW = "commdlg_ColorOK"
Public Const SETRGBSTRINGW  = "commdlg_SetRGBColor"
Public Const HELPMSGSTRINGW = "commdlg_help"
Public Const FINDMSGSTRINGW = "commdlg_FindReplace"

Public Const LBSELCHSTRING = LBSELCHSTRINGW
Public Const SHAREVISTRING = SHAREVISTRINGW
Public Const FILEOKSTRING  = FILEOKSTRINGW
Public Const COLOROKSTRING = COLOROKSTRINGW
Public Const SETRGBSTRING  = SETRGBSTRINGW
Public Const HELPMSGSTRING = HELPMSGSTRINGW
Public Const FINDMSGSTRING = FINDMSGSTRINGW

Public Const CD_LBSELNOITEMS  = -1
Public Const CD_LBSELCHANGE  = 0
Public Const CD_LBSELSUB  = 1
Public Const CD_LBSELADD  = 2

#If Win64 = 0 Then
[ PackingAlignment (1) ] 'This technically applies to all UDTs but hasn't mattered so far
#End If
Public Type PRINTDLGA
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	hDC As LongPtr
	Flags As PrintDialogFlags
	nFromPage As Integer
	nToPage As Integer
	nMinPage As Integer
	nMaxPage As Integer
	nCopies As Integer
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPrintHook As LongPtr
	lpfnSetupHook As LongPtr
	lpPrintTemplateName As LongPtr
	lpSetupTemplateName As LongPtr
	hPrintTemplate As LongPtr
	hSetupTemplate As LongPtr
End Type
#If Win64 = 0 Then
[ PackingAlignment (1) ] 'This technically applies to all UDTs in comdlg.h but hasn't mattered so far
#End If
Public Type PRINTDLGW
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	hDC As LongPtr
	Flags As PrintDialogFlags
	nFromPage As Integer
	nToPage As Integer
	nMinPage As Integer
	nMaxPage As Integer
	nCopies As Integer
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPrintHook As LongPtr
	lpfnSetupHook As LongPtr
	lpPrintTemplateName As LongPtr
	lpSetupTemplateName As LongPtr
	hPrintTemplate As LongPtr
	hSetupTemplate As LongPtr
End Type
#If Win64 = 0 Then
[ PackingAlignment (1) ] 'This technically applies to all UDTs but hasn't mattered so far
#End If
Public Type PRINTDLG
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	hDC As LongPtr
	Flags As PrintDialogFlags
	nFromPage As Integer
	nToPage As Integer
	nMinPage As Integer
	nMaxPage As Integer
	nCopies As Integer
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPrintHook As LongPtr
	lpfnSetupHook As LongPtr
	lpPrintTemplateName As LongPtr
	lpSetupTemplateName As LongPtr
	hPrintTemplate As LongPtr
	hSetupTemplate As LongPtr
End Type

Public Enum PrintDialogFlags
	PD_ALLPAGES = &H00000000
	PD_SELECTION = &H00000001
	PD_PAGENUMS = &H00000002
	PD_NOSELECTION = &H00000004
	PD_NOPAGENUMS = &H00000008
	PD_COLLATE = &H00000010
	PD_PRINTTOFILE = &H00000020
	PD_PRINTSETUP = &H00000040
	PD_NOWARNING = &H00000080
	PD_RETURNDC = &H00000100
	PD_RETURNIC = &H00000200
	PD_RETURNDEFAULT = &H00000400
	PD_SHOWHELP = &H00000800
	PD_ENABLEPRINTHOOK = &H00001000
	PD_ENABLESETUPHOOK = &H00002000
	PD_ENABLEPRINTTEMPLATE = &H00004000
	PD_ENABLESETUPTEMPLATE = &H00008000&
	PD_ENABLEPRINTTEMPLATEHANDLE = &H00010000
	PD_ENABLESETUPTEMPLATEHANDLE = &H00020000
	PD_USEDEVMODECOPIES = &H00040000
	PD_USEDEVMODECOPIESANDCOLLATE = &H00040000
	PD_DISABLEPRINTTOFILE = &H00080000
	PD_HIDEPRINTTOFILE = &H00100000
	PD_NONETWORKBUTTON = &H00200000

	PD_CURRENTPAGE = &H00400000
	PD_NOCURRENTPAGE = &H00800000
	PD_EXCLUSIONFLAGS = &H01000000
	PD_USELARGETEMPLATE = &H10000000
End Enum

Public Declare PtrSafe Function PrintDlgA Lib "comdlg32" (lpPD As PRINTDLGA) As Long
Public Declare PtrSafe Function PrintDlgW Lib "comdlg32" (lpPD As PRINTDLGW) As Long
Public DeclareWide PtrSafe Function PrintDlg Lib "comdlg32" Alias "PrintDlgW" (lpPD As PRINTDLG) As Long

Public Type PRINTPAGERANGE
	nFromPage As Long
	nToPage As Long
End Type

Public Enum PrintDialogExclusionFlags
    PD_EXCL_COPIESANDCOLLATE = &H8100&
End Enum

Public Enum PrintDialogResultActions
	PD_RESULT_CANCEL = 0
	PD_RESULT_PRINT = 1
	PD_RESULT_APPLY = 2
End Enum

Public Type PRINTDLGEXA
	lStructSize As Long ' size of structure in bytes
	hwndOwner As LongPtr ' caller's window handle
	hDevMode As LongPtr ' handle to DevMode
	hDevNames As LongPtr ' handle to DevNames
	hDC As LongPtr ' printer DC/IC or NULL
	Flags As PrintDialogFlags ' PD_ flags
	Flags2 As Long ' reserved
	ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
	nPageRanges As Long ' number of page ranges
	nMaxPageRanges As Long ' max number of page ranges
	lpPageRanges As LongPtr ' array of page ranges
	nMinPage As Long ' min page number
	nMaxPage As Long ' max page number
	nCopies As Long ' number of copies
	hInstance As LongPtr ' instance handle
	lpPrintTemplateName As String ' template name for app specific area
	lpCallback As LongPtr ' app callback interface
	nPropertyPages As Long ' number of app property pages in lphPropertyPages
	lphPropertyPages As LongPtr ' array of app property page handles
	nStartPage As Long ' start page id
	dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type
Public Type PRINTDLGEXW
	lStructSize As Long ' size of structure in bytes
	hwndOwner As LongPtr ' caller's window handle
	hDevMode As LongPtr ' handle to DevMode
	hDevNames As LongPtr ' handle to DevNames
	hDC As LongPtr ' printer DC/IC or NULL
	Flags As PrintDialogFlags ' PD_ flags
	Flags2 As Long ' reserved
	ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
	nPageRanges As Long ' number of page ranges
	nMaxPageRanges As Long ' max number of page ranges
	lpPageRanges As LongPtr ' array of page ranges
	nMinPage As Long ' min page number
	nMaxPage As Long ' max page number
	nCopies As Long ' number of copies
	hInstance As LongPtr ' instance handle
	lpPrintTemplateName As LongPtr ' template name for app specific area
	lpCallback As LongPtr ' app callback interface
	nPropertyPages As Long ' number of app property pages in lphPropertyPages
	lphPropertyPages As LongPtr ' array of app property page handles
	nStartPage As Long ' start page id
	dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type
Public Type PRINTDLGEX
	lStructSize As Long ' size of structure in bytes
	hwndOwner As LongPtr ' caller's window handle
	hDevMode As LongPtr ' handle to DevMode
	hDevNames As LongPtr ' handle to DevNames
	hDC As LongPtr ' printer DC/IC or NULL
	Flags As PrintDialogFlags ' PD_ flags
	Flags2 As Long ' reserved
	ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
	nPageRanges As Long ' number of page ranges
	nMaxPageRanges As Long ' max number of page ranges
	lpPageRanges As LongPtr ' array of page ranges
	nMinPage As Long ' min page number
	nMaxPage As Long ' max page number
	nCopies As Long ' number of copies
	hInstance As LongPtr ' instance handle
	lpPrintTemplateName As LongPtr ' template name for app specific area
	lpCallback As LongPtr ' app callback interface
	nPropertyPages As Long ' number of app property pages in lphPropertyPages
	lphPropertyPages As LongPtr ' array of app property page handles
	nStartPage As Long ' start page id
	dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type

Public Const START_PAGE_GENERAL = &Hffffffff

Public Declare PtrSafe Function PrintDlgExA Lib "comdlg32" (pPD As PRINTDLGEXA) As Long
Public Declare PtrSafe Function PrintDlgExW Lib "comdlg32" (pPD As PRINTDLGEXW) As Long
Public DeclareWide PtrSafe Function PrintDlgEx Lib "comdlg32" Alias "PrintDlgExW" (pPD As PRINTDLGEX) As Long

Public Type DEVNAMES
	wDriverOffset As Integer
	wDeviceOffset As Integer
	wOutputOffset As Integer
	wDefault As Integer
End Type

Public Const DN_DEFAULTPRN  = &H0001

Public Declare PtrSafe Function CommDlgExtendedError Lib "comdlg32" () As Long

Public Const WM_PSD_PAGESETUPDLG  = (WM_USER)
Public Const WM_PSD_FULLPAGERECT  = (WM_USER + 1)
Public Const WM_PSD_MINMARGINRECT  = (WM_USER + 2)
Public Const WM_PSD_MARGINRECT  = (WM_USER + 3)
Public Const WM_PSD_GREEKTEXTRECT  = (WM_USER + 4)
Public Const WM_PSD_ENVSTAMPRECT  = (WM_USER + 5)
Public Const WM_PSD_YAFULLPAGERECT  = (WM_USER + 6)

Public Type PAGESETUPDLGA
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	Flags As PageSetupDialogFlags
	ptPaperSize As POINT
	rtMinMargin As RECT
	rtMargin As RECT
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPageSetupHook As LongPtr
	lpfnPagePaintHook As LongPtr
	lpPageSetupTemplateName As String
	hPageSetupTemplate As LongPtr
End Type
Public Type PAGESETUPDLGW
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	Flags As PageSetupDialogFlags
	ptPaperSize As POINT
	rtMinMargin As RECT
	rtMargin As RECT
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPageSetupHook As LongPtr
	lpfnPagePaintHook As LongPtr
	lpPageSetupTemplateName As LongPtr
	hPageSetupTemplate As LongPtr
End Type
Public Type PAGESETUPDLG
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	Flags As PageSetupDialogFlags
	ptPaperSize As POINT
	rtMinMargin As RECT
	rtMargin As RECT
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPageSetupHook As LongPtr
	lpfnPagePaintHook As LongPtr
	lpPageSetupTemplateName As LongPtr
	hPageSetupTemplate As LongPtr
End Type

Public Enum PageSetupDialogFlags
	PSD_DEFAULTMINMARGINS = &H00000000  ' default (printer's)
	PSD_INWININIINTLMEASURE = &H00000000  ' 1st of 4 possible
	PSD_MINMARGINS = &H00000001  ' use caller's
	PSD_MARGINS = &H00000002  ' use caller's
	PSD_INTHOUSANDTHSOFINCHES = &H00000004  ' 2nd of 4 possible
	PSD_INHUNDREDTHSOFMILLIMETERS = &H00000008  ' 3rd of 4 possible
	PSD_DISABLEMARGINS = &H00000010
	PSD_DISABLEPRINTER = &H00000020
	PSD_NOWARNING = &H00000080  ' must be same as PD_*
	PSD_DISABLEORIENTATION = &H00000100
	PSD_RETURNDEFAULT = &H00000400  ' must be same as PD_*
	PSD_DISABLEPAPER = &H00000200
	PSD_SHOWHELP = &H00000800  ' must be same as PD_*
	PSD_ENABLEPAGESETUPHOOK = &H00002000  ' must be same as PD_*
	PSD_ENABLEPAGESETUPTEMPLATE = &H00008000&  ' must be same as PD_*
	PSD_ENABLEPAGESETUPTEMPLATEHANDLE = &H00020000  ' must be same as PD_*
	PSD_ENABLEPAGEPAINTHOOK = &H00040000
	PSD_DISABLEPAGEPAINTING = &H00080000
	PSD_NONETWORKBUTTON = &H00200000  ' must be same as PD_*
End Enum

Public Declare PtrSafe Function PageSetupDlgA Lib "comdlg32" (pPSD As PAGESETUPDLGA) As Long
Public Declare PtrSafe Function PageSetupDlgW Lib "comdlg32" (pPSD As PAGESETUPDLGW) As Long
Public DeclareWide PtrSafe Function PageSetupDlg Lib "comdlg32" Alias "PageSetupDlgW" (pPSD As PAGESETUPDLG) As Long


#End Region

#Region "gdip" 
'******************************
'Gdi+ Flat API
'
'Adapted from:
'clGdiplus.cls - CLASSE POUR UTILISATION DE GDIPLUS EN VBA
'Thierry GASPERMENT (Arkham46)
'
'Completed, corrected, and added enums by Jon Johnson (fafalone)

Public Const FlatnessDefault As Single = 1.0 / 4.0

Public Enum GpStatus
	Ok = 0
	GenericError = 1
	InvalidParameter = 2
	OutOfMemory = 3
	ObjectBusy = 4
	InsufficientBuffer = 5
	NotImplemented = 6
	Win32Error = 7
	WrongState = 8
	Aborted = 9
	FileNotFound = 10
	ValueOverflow = 11
	AccessDenied =  12
	UnknownImageFormat = 13
	FontFamilyNotFound = 14
	FontStyleNotFound = 15
	NotTrueTypeFont = 16
	UnsupportedGdiplusVersion = 17
	GdiplusNotInitialized = 18
	PropertyNotFound = 19
	PropertyNotSupported = 20
	ProfileNotFound = 21
End Enum

Public Enum HistogramFormat
	HistogramFormatARGB = 0
	HistogramFormatPARGB = 1
	HistogramFormatRGB = 2
	HistogramFormatGray = 3
	HistogramFormatB = 4
	HistogramFormatG = 5
	HistogramFormatR = 6
	HistogramFormatA = 7
End Enum

Public Type ColorMatrix
    m(0 To 4, 0 To 4) As Single
End Type

Public Enum ColorMatrixFlags
	ColorMatrixFlagsDefault = 0
	ColorMatrixFlagsSkipGrays = 1
	ColorMatrixFlagsAltGray = 2
End Enum

Public Enum ColorAdjustType
	ColorAdjustTypeDefault = 0
	ColorAdjustTypeBitmap = 1
	ColorAdjustTypeBrush = 2
	ColorAdjustTypePen = 3
	ColorAdjustTypeText = 4
	ColorAdjustTypeCount = 5
	ColorAdjustTypeAny = 6 ' Reserved
End Enum

Public Type ColorPalette
    flags As PaletteFlags
    count As Long
    Entries(0 To 255) As Long
End Type

Public Type GdiplusStartupInput
    GdiplusVersion As Long
    DebugEventCallback As LongPtr
    SuppressBackgroundThread As LongPtr
    SuppressExternalCodecs As LongPtr
End Type

Public Type BitmapData
    Width As Long
    Height As Long
    stride As Long
    PixelFormat As PixelFormat
    scan0 As LongPtr
    Reserved As Long
End Type

Public Type PropertyItem
    id As Long
    length As Long
    Type As Integer
    Value As LongPtr
End Type

' //---------------------------------------------------------------------------
' // Image property types 
' //---------------------------------------------------------------------------
Public Const PropertyTagTypeByte  = 1
Public Const PropertyTagTypeASCII  = 2
Public Const PropertyTagTypeShort  = 3
Public Const PropertyTagTypeLong  = 4
Public Const PropertyTagTypeRational  = 5
Public Const PropertyTagTypeUndefined  = 7
Public Const PropertyTagTypeSLONG  = 9
Public Const PropertyTagTypeSRational  = 10
' ---------------------------------------------------------------------------
'  Image property ID tags
' ---------------------------------------------------------------------------
Public Const PropertyTagExifIFD  = &H8769
Public Const PropertyTagGpsIFD  = &H8825
Public Const PropertyTagNewSubfileType  = &H00FE
Public Const PropertyTagSubfileType  = &H00FF
Public Const PropertyTagImageWidth  = &H0100
Public Const PropertyTagImageHeight  = &H0101
Public Const PropertyTagBitsPerSample  = &H0102
Public Const PropertyTagCompression  = &H0103
Public Const PropertyTagPhotometricInterp  = &H0106
Public Const PropertyTagThreshHolding  = &H0107
Public Const PropertyTagCellWidth  = &H0108
Public Const PropertyTagCellHeight  = &H0109
Public Const PropertyTagFillOrder  = &H010A
Public Const PropertyTagDocumentName  = &H010D
Public Const PropertyTagImageDescription  = &H010E
Public Const PropertyTagEquipMake  = &H010F
Public Const PropertyTagEquipModel  = &H0110
Public Const PropertyTagStripOffsets  = &H0111
Public Const PropertyTagOrientation  = &H0112
Public Const PropertyTagSamplesPerPixel  = &H0115
Public Const PropertyTagRowsPerStrip  = &H0116
Public Const PropertyTagStripBytesCount  = &H0117
Public Const PropertyTagMinSampleValue  = &H0118
Public Const PropertyTagMaxSampleValue  = &H0119
Public Const PropertyTagXResolution  = &H011A  ' Image resolution in width direction
Public Const PropertyTagYResolution  = &H011B  ' Image resolution in height direction
Public Const PropertyTagPlanarConfig  = &H011C  ' Image data arrangement
Public Const PropertyTagPageName  = &H011D
Public Const PropertyTagXPosition  = &H011E
Public Const PropertyTagYPosition  = &H011F
Public Const PropertyTagFreeOffset  = &H0120
Public Const PropertyTagFreeByteCounts  = &H0121
Public Const PropertyTagGrayResponseUnit  = &H0122
Public Const PropertyTagGrayResponseCurve  = &H0123
Public Const PropertyTagT4Option  = &H0124
Public Const PropertyTagT6Option  = &H0125
Public Const PropertyTagResolutionUnit  = &H0128  ' Unit of X and Y resolution
Public Const PropertyTagPageNumber  = &H0129
Public Const PropertyTagTransferFuncition  = &H012D
Public Const PropertyTagSoftwareUsed  = &H0131
Public Const PropertyTagDateTime  = &H0132
Public Const PropertyTagArtist  = &H013B
Public Const PropertyTagHostComputer  = &H013C
Public Const PropertyTagPredictor  = &H013D
Public Const PropertyTagWhitePoint  = &H013E
Public Const PropertyTagPrimaryChromaticities  = &H013F
Public Const PropertyTagColorMap  = &H0140
Public Const PropertyTagHalftoneHints  = &H0141
Public Const PropertyTagTileWidth  = &H0142
Public Const PropertyTagTileLength  = &H0143
Public Const PropertyTagTileOffset  = &H0144
Public Const PropertyTagTileByteCounts  = &H0145
Public Const PropertyTagInkSet  = &H014C
Public Const PropertyTagInkNames  = &H014D
Public Const PropertyTagNumberOfInks  = &H014E
Public Const PropertyTagDotRange  = &H0150
Public Const PropertyTagTargetPrinter  = &H0151
Public Const PropertyTagExtraSamples  = &H0152
Public Const PropertyTagSampleFormat  = &H0153
Public Const PropertyTagSMinSampleValue  = &H0154
Public Const PropertyTagSMaxSampleValue  = &H0155
Public Const PropertyTagTransferRange  = &H0156
Public Const PropertyTagJPEGProc  = &H0200
Public Const PropertyTagJPEGInterFormat  = &H0201
Public Const PropertyTagJPEGInterLength  = &H0202
Public Const PropertyTagJPEGRestartInterval  = &H0203
Public Const PropertyTagJPEGLosslessPredictors  = &H0205
Public Const PropertyTagJPEGPointTransforms  = &H0206
Public Const PropertyTagJPEGQTables  = &H0207
Public Const PropertyTagJPEGDCTables  = &H0208
Public Const PropertyTagJPEGACTables  = &H0209
Public Const PropertyTagYCbCrCoefficients  = &H0211
Public Const PropertyTagYCbCrSubsampling  = &H0212
Public Const PropertyTagYCbCrPositioning  = &H0213
Public Const PropertyTagREFBlackWhite  = &H0214
Public Const PropertyTagICCProfile  = &H8773  ' This TAG is defined by ICC
'  for embedded ICC in TIFF
Public Const PropertyTagGamma  = &H0301
Public Const PropertyTagICCProfileDescriptor  = &H0302
Public Const PropertyTagSRGBRenderingIntent  = &H0303
Public Const PropertyTagImageTitle  = &H0320
Public Const PropertyTagCopyright  = &H8298
'  Extra TAGs (Like Adobe Image Information tags etc.)
Public Const PropertyTagResolutionXUnit  = &H5001
Public Const PropertyTagResolutionYUnit  = &H5002
Public Const PropertyTagResolutionXLengthUnit  = &H5003
Public Const PropertyTagResolutionYLengthUnit  = &H5004
Public Const PropertyTagPrintFlags  = &H5005
Public Const PropertyTagPrintFlagsVersion  = &H5006
Public Const PropertyTagPrintFlagsCrop  = &H5007
Public Const PropertyTagPrintFlagsBleedWidth  = &H5008
Public Const PropertyTagPrintFlagsBleedWidthScale  = &H5009
Public Const PropertyTagHalftoneLPI  = &H500A
Public Const PropertyTagHalftoneLPIUnit  = &H500B
Public Const PropertyTagHalftoneDegree  = &H500C
Public Const PropertyTagHalftoneShape  = &H500D
Public Const PropertyTagHalftoneMisc  = &H500E
Public Const PropertyTagHalftoneScreen  = &H500F
Public Const PropertyTagJPEGQuality  = &H5010
Public Const PropertyTagGridSize  = &H5011
Public Const PropertyTagThumbnailFormat  = &H5012  ' 1 = JPEG, 0 = RAW RGB
Public Const PropertyTagThumbnailWidth  = &H5013
Public Const PropertyTagThumbnailHeight  = &H5014
Public Const PropertyTagThumbnailColorDepth  = &H5015
Public Const PropertyTagThumbnailPlanes  = &H5016
Public Const PropertyTagThumbnailRawBytes  = &H5017
Public Const PropertyTagThumbnailSize  = &H5018
Public Const PropertyTagThumbnailCompressedSize  = &H5019
Public Const PropertyTagColorTransferFunction  = &H501A
Public Const PropertyTagThumbnailData  = &H501B ' RAW thumbnail bits in
'  JPEG format or RGB format
'  depends on
'  PropertyTagThumbnailFormat
'  Thumbnail related TAGs
Public Const PropertyTagThumbnailImageWidth  = &H5020  ' Thumbnail width
Public Const PropertyTagThumbnailImageHeight  = &H5021  ' Thumbnail height
Public Const PropertyTagThumbnailBitsPerSample  = &H5022  ' Number of bits per
'  component
Public Const PropertyTagThumbnailCompression  = &H5023  ' Compression Scheme
Public Const PropertyTagThumbnailPhotometricInterp  = &H5024  ' Pixel composition
Public Const PropertyTagThumbnailImageDescription  = &H5025  ' Image Tile
Public Const PropertyTagThumbnailEquipMake  = &H5026  ' Manufacturer of Image
'  Input equipment
Public Const PropertyTagThumbnailEquipModel  = &H5027  ' Model of Image input
'  equipment
Public Const PropertyTagThumbnailStripOffsets  = &H5028  ' Image data location
Public Const PropertyTagThumbnailOrientation  = &H5029  ' Orientation of image
Public Const PropertyTagThumbnailSamplesPerPixel  = &H502A  ' Number of components
Public Const PropertyTagThumbnailRowsPerStrip  = &H502B  ' Number of rows per strip
Public Const PropertyTagThumbnailStripBytesCount  = &H502C  ' Bytes per compressed
'  strip
Public Const PropertyTagThumbnailResolutionX  = &H502D  ' Resolution in width
'  direction
Public Const PropertyTagThumbnailResolutionY  = &H502E  ' Resolution in height
'  direction
Public Const PropertyTagThumbnailPlanarConfig  = &H502F  ' Image data arrangement
Public Const PropertyTagThumbnailResolutionUnit  = &H5030  ' Unit of X and Y
'  Resolution
Public Const PropertyTagThumbnailTransferFunction  = &H5031  ' Transfer function
Public Const PropertyTagThumbnailSoftwareUsed  = &H5032  ' Software used
Public Const PropertyTagThumbnailDateTime  = &H5033  ' File change date and
'  time
Public Const PropertyTagThumbnailArtist  = &H5034  ' Person who created the
'  image
Public Const PropertyTagThumbnailWhitePoint  = &H5035  ' White point chromaticity
Public Const PropertyTagThumbnailPrimaryChromaticities  = &H5036
'  Chromaticities of
'  primaries
Public Const PropertyTagThumbnailYCbCrCoefficients  = &H5037  ' Color space transforma-
'  tion coefficients
Public Const PropertyTagThumbnailYCbCrSubsampling  = &H5038  ' Subsampling ratio of Y
'  to C
Public Const PropertyTagThumbnailYCbCrPositioning  = &H5039  ' Y and C position
Public Const PropertyTagThumbnailRefBlackWhite  = &H503A  ' Pair of black and white
'  reference values
Public Const PropertyTagThumbnailCopyRight  = &H503B  ' CopyRight holder
Public Const PropertyTagLuminanceTable  = &H5090
Public Const PropertyTagChrominanceTable  = &H5091
Public Const PropertyTagFrameDelay  = &H5100
Public Const PropertyTagLoopCount  = &H5101

Public Const PropertyTagGlobalPalette  = &H5102
Public Const PropertyTagIndexBackground  = &H5103
Public Const PropertyTagIndexTransparent  = &H5104

Public Const PropertyTagPixelUnit  = &H5110  ' Unit specifier for pixel/unit
Public Const PropertyTagPixelPerUnitX  = &H5111  ' Pixels per unit in X
Public Const PropertyTagPixelPerUnitY  = &H5112  ' Pixels per unit in Y
Public Const PropertyTagPaletteHistogram  = &H5113  ' Palette histogram
'  EXIF specific tag
Public Const PropertyTagExifExposureTime  = &H829A
Public Const PropertyTagExifFNumber  = &H829D
Public Const PropertyTagExifExposureProg  = &H8822
Public Const PropertyTagExifSpectralSense  = &H8824
Public Const PropertyTagExifISOSpeed  = &H8827
Public Const PropertyTagExifOECF  = &H8828
Public Const PropertyTagExifVer  = &H9000
Public Const PropertyTagExifDTOrig  = &H9003  ' Date & time of original
Public Const PropertyTagExifDTDigitized  = &H9004  ' Date & time of digital data generation
Public Const PropertyTagExifCompConfig  = &H9101
Public Const PropertyTagExifCompBPP  = &H9102
Public Const PropertyTagExifShutterSpeed  = &H9201
Public Const PropertyTagExifAperture  = &H9202
Public Const PropertyTagExifBrightness  = &H9203
Public Const PropertyTagExifExposureBias  = &H9204
Public Const PropertyTagExifMaxAperture  = &H9205
Public Const PropertyTagExifSubjectDist  = &H9206
Public Const PropertyTagExifMeteringMode  = &H9207
Public Const PropertyTagExifLightSource  = &H9208
Public Const PropertyTagExifFlash  = &H9209
Public Const PropertyTagExifFocalLength  = &H920A
Public Const PropertyTagExifSubjectArea  = &H9214  ' exif 2.2 Subject Area
Public Const PropertyTagExifMakerNote  = &H927C
Public Const PropertyTagExifUserComment  = &H9286
Public Const PropertyTagExifDTSubsec  = &H9290  ' Date & Time subseconds
Public Const PropertyTagExifDTOrigSS  = &H9291  ' Date & Time original subseconds
Public Const PropertyTagExifDTDigSS  = &H9292  ' Date & TIme digitized subseconds
Public Const PropertyTagExifFPXVer  = &HA000
Public Const PropertyTagExifColorSpace  = &HA001
Public Const PropertyTagExifPixXDim  = &HA002
Public Const PropertyTagExifPixYDim  = &HA003
Public Const PropertyTagExifRelatedWav  = &HA004  ' related sound file
Public Const PropertyTagExifInterop  = &HA005
Public Const PropertyTagExifFlashEnergy  = &HA20B
Public Const PropertyTagExifSpatialFR  = &HA20C  ' Spatial Frequency Response
Public Const PropertyTagExifFocalXRes  = &HA20E  ' Focal Plane X Resolution
Public Const PropertyTagExifFocalYRes  = &HA20F  ' Focal Plane Y Resolution
Public Const PropertyTagExifFocalResUnit  = &HA210  ' Focal Plane Resolution Unit
Public Const PropertyTagExifSubjectLoc  = &HA214
Public Const PropertyTagExifExposureIndex  = &HA215
Public Const PropertyTagExifSensingMethod  = &HA217
Public Const PropertyTagExifFileSource  = &HA300
Public Const PropertyTagExifSceneType  = &HA301
Public Const PropertyTagExifCfaPattern  = &HA302
'  New EXIF 2.2 properties
Public Const PropertyTagExifCustomRendered  = &HA401
Public Const PropertyTagExifExposureMode  = &HA402
Public Const PropertyTagExifWhiteBalance  = &HA403
Public Const PropertyTagExifDigitalZoomRatio  = &HA404
Public Const PropertyTagExifFocalLengthIn35mmFilm  = &HA405
Public Const PropertyTagExifSceneCaptureType  = &HA406
Public Const PropertyTagExifGainControl  = &HA407
Public Const PropertyTagExifContrast  = &HA408
Public Const PropertyTagExifSaturation  = &HA409
Public Const PropertyTagExifSharpness  = &HA40A
Public Const PropertyTagExifDeviceSettingDesc  = &HA40B
Public Const PropertyTagExifSubjectDistanceRange  = &HA40C
Public Const PropertyTagExifUniqueImageID  = &HA420
Public Const PropertyTagGpsVer  = &H0000
Public Const PropertyTagGpsLatitudeRef  = &H0001
Public Const PropertyTagGpsLatitude  = &H0002
Public Const PropertyTagGpsLongitudeRef  = &H0003
Public Const PropertyTagGpsLongitude  = &H0004
Public Const PropertyTagGpsAltitudeRef  = &H0005
Public Const PropertyTagGpsAltitude  = &H0006
Public Const PropertyTagGpsGpsTime  = &H0007
Public Const PropertyTagGpsGpsSatellites  = &H0008
Public Const PropertyTagGpsGpsStatus  = &H0009
Public Const PropertyTagGpsGpsMeasureMode  = &H00A
Public Const PropertyTagGpsGpsDop  = &H000B  ' Measurement precision
Public Const PropertyTagGpsSpeedRef  = &H000C
Public Const PropertyTagGpsSpeed  = &H000D
Public Const PropertyTagGpsTrackRef  = &H000E
Public Const PropertyTagGpsTrack  = &H000F
Public Const PropertyTagGpsImgDirRef  = &H0010
Public Const PropertyTagGpsImgDir  = &H0011
Public Const PropertyTagGpsMapDatum  = &H0012
Public Const PropertyTagGpsDestLatRef  = &H0013
Public Const PropertyTagGpsDestLat  = &H0014
Public Const PropertyTagGpsDestLongRef  = &H0015
Public Const PropertyTagGpsDestLong  = &H0016
Public Const PropertyTagGpsDestBearRef  = &H0017
Public Const PropertyTagGpsDestBear  = &H0018
Public Const PropertyTagGpsDestDistRef  = &H0019
Public Const PropertyTagGpsDestDist  = &H001A
Public Const PropertyTagGpsProcessingMethod  = &H001B
Public Const PropertyTagGpsAreaInformation  = &H001C
Public Const PropertyTagGpsDate  = &H001D
Public Const PropertyTagGpsDifferential  = &H001E

Public Enum GpFlushIntention
	FlushIntentionFlush=0 ' Flush all batched rendering operations
	FlushIntentionSync=1 ' Flush all batched rendering operations
	'  and wait for them to complete
End Enum

Public Type ColorMap
    oldColor As Long
    newColor As Long
End Type

Public Enum FillMode
	FillModeAlternate = 0 ' 0
	FillModeWinding = 1 ' 1
End Enum

Public Enum PathPointType
	PathPointTypeStart = 0 ' move
	PathPointTypeLine = 1 ' line
	PathPointTypeBezier = 3 ' default Bezier (= cubic Bezier)
	PathPointTypePathTypeMask = &H07 ' type mask (lowest 3 bits).
	PathPointTypeDashMode = &H10 ' currently in dash mode.
	PathPointTypePathMarker = &H20 ' a marker for the path.
	PathPointTypeCloseSubpath = &H80 ' closed flag
	'  Path types used for advanced path.
	PathPointTypeBezier3 = 3 ' cubic Bezier
End Enum


Public Enum CompositingMode
	CompositingModeSourceOver = 0 ' 0
	CompositingModeSourceCopy = 1 ' 1
End Enum

Public Enum CompositingQuality
	CompositingQualityInvalid=QualityModeInvalid
	CompositingQualityDefault=QualityModeDefault
	CompositingQualityHighSpeed=QualityModeLow
	CompositingQualityHighQuality=QualityModeHigh
	CompositingQualityGammaCorrected = 0
	CompositingQualityAssumeLinear = 1
End Enum


Public enum MetafileType
    MetafileTypeInvalid',            // Invalid metafile
    MetafileTypeWmf',                // Standard WMF
    MetafileTypeWmfPlaceable',       // Placeable WMF
    MetafileTypeEmf',                // EMF (not EMF+)
    MetafileTypeEmfPlusOnly',        // EMF+ without dual, down-level records
    MetafileTypeEmfPlusDual '        // EMF+ with dual, down-level records
End Enum

Public Enum EmfType
	EmfTypeEmfOnly = MetafileTypeEmf ' no EMF+, only EMF
	EmfTypeEmfPlusOnly = MetafileTypeEmfPlusOnly ' no EMF, only EMF+
	EmfTypeEmfPlusDual = MetafileTypeEmfPlusDual ' both EMF+ and EMF
End Enum

Public Enum ObjectType
	ObjectTypeInvalid = 0
	ObjectTypeBrush = 1
	ObjectTypePen = 2
	ObjectTypePath = 3
	ObjectTypeRegion = 4
	ObjectTypeImage = 5
	ObjectTypeFont = 6
	ObjectTypeStringFormat = 7
	ObjectTypeImageAttributes = 8
	ObjectTypeCustomLineCap = 9
	ObjectTypeGraphics = 10
	ObjectTypeMax= ObjectTypeGraphics
	ObjectTypeMin= ObjectTypeBrush
End Enum


Public Type GpPathData
	count As Long
    Points as LongPtr
    Types As LongPtr
End Type
'Public Alias PathData As GpPathData 'One day :)

Public enum GpFillMode
    GpFillModeAlternate '        // 0
    GpFillModeWinding
End Enum

Public enum WarpMode
    WarpModePerspective  '    // 0
    WarpModeBilinear
End Enum

Public Enum GpMatrixOrder
    MatrixOrderPrepend    = 0
    MatrixOrderAppend     = 1
End Enum

Public enum CombineMode
    CombineModeReplace '// 0
    CombineModeIntersect '// 1
    CombineModeUnion '// 2
    CombineModeXor '// 3
    CombineModeExclude '// 4
    CombineModeComplement   '// 5 (Exclude From)
End Enum

Public Enum MetafileFrameUnit
	MetafileFrameUnitPixel=UnitPixel
	MetafileFrameUnitPoint=UnitPoint
	MetafileFrameUnitInch=UnitInch
	MetafileFrameUnitDocument=UnitDocument
	MetafileFrameUnitMillimeter=UnitMillimeter
	MetafileFrameUnitGdi = 0 ' GDI compatible .01 MM units
End Enum

Public Enum GpCoordinateSpace
	CoordinateSpaceWorld = 0 ' 0
	CoordinateSpacePage = 1 ' 1
	CoordinateSpaceDevice = 2 ' 2
End Enum



Public enum GpBrushType
   BrushTypeSolidColor       = 0
   BrushTypeHatchFill        = 1
   BrushTypeTextureFill      = 2
   BrushTypePathGradient     = 3
   BrushTypeLinearGradient   = 4
End Enum

Public enum GpHatchStyle
    HatchStyleHorizontal '                   // 0
    HatchStyleVertical '                     // 1
    HatchStyleForwardDiagonal '              // 2
    HatchStyleBackwardDiagonal '             // 3
    HatchStyleCross '                        // 4
    HatchStyleDiagonalCross '                // 5
    HatchStyle05Percent '                    // 6
    HatchStyle10Percent '                    // 7
    HatchStyle20Percent '                    // 8
    HatchStyle25Percent '                    // 9
    HatchStyle30Percent '                    // 10
    HatchStyle40Percent '                    // 11
    HatchStyle50Percent '                    // 12
    HatchStyle60Percent '                    // 13
    HatchStyle70Percent '                    // 14
    HatchStyle75Percent '                    // 15
    HatchStyle80Percent '                    // 16
    HatchStyle90Percent '                    // 17
    HatchStyleLightDownwardDiagonal '        // 18
    HatchStyleLightUpwardDiagonal '          // 19
    HatchStyleDarkDownwardDiagonal '         // 20
    HatchStyleDarkUpwardDiagonal '           // 21
    HatchStyleWideDownwardDiagonal '         // 22
    HatchStyleWideUpwardDiagonal '           // 23
    HatchStyleLightVertical '                // 24
    HatchStyleLightHorizontal '              // 25
    HatchStyleNarrowVertical '               // 26
    HatchStyleNarrowHorizontal '             // 27
    HatchStyleDarkVertical '                 // 28
    HatchStyleDarkHorizontal '               // 29
    HatchStyleDashedDownwardDiagonal '       // 30
    HatchStyleDashedUpwardDiagonal '         // 31
    HatchStyleDashedHorizontal '             // 32
    HatchStyleDashedVertical '               // 33
    HatchStyleSmallConfetti '                // 34
    HatchStyleLargeConfetti '                // 35
    HatchStyleZigZag '                       // 36
    HatchStyleWave '                         // 37
    HatchStyleDiagonalBrick '                // 38
    HatchStyleHorizontalBrick '              // 39
    HatchStyleWeave '                        // 40
    HatchStylePlaid '                        // 41
    HatchStyleDivot '                        // 42
    HatchStyleDottedGrid '                   // 43
    HatchStyleDottedDiamond '                // 44
    HatchStyleShingle '                      // 45
    HatchStyleTrellis '                      // 46
    HatchStyleSphere '                       // 47
    HatchStyleSmallGrid '                    // 48
    HatchStyleSmallCheckerBoard '            // 49
    HatchStyleLargeCheckerBoard '            // 50
    HatchStyleOutlinedDiamond '              // 51
    HatchStyleSolidDiamond '                 // 52

    HatchStyleTotal '   
    HatchStyleLargeGrid = HatchStyleCross '  // 4

    HatchStyleMin       = HatchStyleHorizontal '
    HatchStyleMax       = HatchStyleTotal - 1 '
End Enum

Public Enum GpWrapMode
    WrapModeTile '        // 0
    WrapModeTileFlipX '   // 1
    WrapModeTileFlipY '   // 2
    WrapModeTileFlipXY '  // 3
    WrapModeClamp     '   // 4
End Enum

Public enum LinearGradientMode
    LinearGradientModeHorizontal '         // 0
    LinearGradientModeVertical '          // 1
    LinearGradientModeForwardDiagonal '    // 2
    LinearGradientModeBackwardDiagonal '   // 3
End Enum

Public Enum GpUnit
    UnitWorld '     // 0 -- World coordinate (non-physical unit)
    UnitDisplay '   // 1 -- Variable -- for PageTransform only
    UnitPixel '     // 2 -- Each unit is one device pixel.
    UnitPoint '     // 3 -- Each unit is a printer's point, or 1/72 inch.
    UnitInch '      // 4 -- Each unit is 1 inch.
    UnitDocument '  // 5 -- Each unit is 1/300 inch.
    UnitMillimeter '// 6 -- Each unit is 1 millimeter.
End Enum

Public Enum GpLineCap
	LineCapFlat = 0
	LineCapSquare = 1
	LineCapRound =2 
	LineCapTriangle = 3
	LineCapNoAnchor = &H10 ' corresponds to flat cap
	LineCapSquareAnchor = &H11 ' corresponds to square cap
	LineCapRoundAnchor = &H12 ' corresponds to round cap
	LineCapDiamondAnchor = &H13 ' corresponds to triangle cap
	LineCapArrowAnchor = &H14 ' no correspondence
	LineCapCustom = &Hff ' custom cap
	LineCapAnchorMask = &Hf0 ' mask to check for anchor or not.
End Enum

Public Enum GpDashCap
	DashCapFlat = 0
	DashCapRound = 2
	DashCapTriangle = 3
End Enum

Public Enum GpLineJoin
	LineJoinMiter = 0
	LineJoinBevel = 1
	LineJoinRound = 2
	LineJoinMiterClipped = 3
End Enum

Public Enum GpPenAlignment
	PenAlignmentCenter = 0
	PenAlignmentInset = 1
End Enum

Public Enum GpPenType
	PenTypeSolidColor = BrushTypeSolidColor
	PenTypeHatchFill = BrushTypeHatchFill
	PenTypeTextureFill = BrushTypeTextureFill
	PenTypePathGradient = BrushTypePathGradient
	PenTypeLinearGradient = BrushTypeLinearGradient
	PenTypeUnknown = -1
End Enum

Public Enum GpDashStyle
    DashStyleSolid '         // 0
    DashStyleDash '          // 1
    DashStyleDot '           // 2
    DashStyleDashDot '       // 3
    DashStyleDashDotDot '    // 4
    DashStyleCustom  '       // 5
End Enum

Public Enum CustomLineCapType
	CustomLineCapTypeDefault = 0
	CustomLineCapTypeAdjustableArrow = 1
End Enum

Public Type EncoderParameter
    Guid As UUID
    NumberOfValues As Long
    Type As Long
    Value As LongPtr
End Type

Public Enum ImageType
	ImageTypeUnknown = 0 ' 0
	ImageTypeBitmap = 1 ' 1
	ImageTypeMetafile = 2 ' 2
End Enum

Public Enum PixelFormat
    PixelFormatIndexed      = &H00010000 '// Indexes into a palette
    PixelFormatGDI          = &H00020000 '// Is a GDI-supported format
    PixelFormatAlpha        = &H00040000 '// Has an alpha component
    PixelFormatPAlpha       = &H00080000 '// Pre-multiplied alpha
    PixelFormatExtended     = &H00100000 '// Extended color 16 bits/channel
    PixelFormatCanonical    = &H00200000 

    PixelFormatUndefined      = 0
    PixelFormatDontCare       = 0

    PixelFormat1bppIndexed    = (1 Or ( 1 << 8) Or PixelFormatIndexed Or PixelFormatGDI)
    PixelFormat4bppIndexed    = (2 Or ( 4 << 8) Or PixelFormatIndexed Or PixelFormatGDI)
    PixelFormat8bppIndexed    = (3 Or ( 8 << 8) Or PixelFormatIndexed Or PixelFormatGDI)
    PixelFormat16bppGrayScale = (4 Or (16 << 8) Or PixelFormatExtended)
    PixelFormat16bppRGB555    = (5 Or (16 << 8) Or PixelFormatGDI)
    PixelFormat16bppRGB565    = (6 Or (16 << 8) Or PixelFormatGDI)
    PixelFormat16bppARGB1555  = (7 Or (16 << 8) Or PixelFormatAlpha Or PixelFormatGDI)
    PixelFormat24bppRGB       = (8 Or (24 << 8) Or PixelFormatGDI)
    PixelFormat32bppRGB       = (9 Or (32 << 8) Or PixelFormatGDI)
    PixelFormat32bppARGB      = (10 Or (32 << 8) Or PixelFormatAlpha Or PixelFormatGDI Or PixelFormatCanonical)
    PixelFormat32bppPARGB     = (11 Or (32 << 8) Or PixelFormatAlpha Or PixelFormatPAlpha Or PixelFormatGDI)
    PixelFormat48bppRGB       = (12 Or (48 << 8) Or PixelFormatExtended)
    PixelFormat64bppARGB      = (13 Or (64 << 8) Or PixelFormatAlpha Or PixelFormatCanonical Or PixelFormatExtended)
    PixelFormat64bppPARGB     = (14 Or (64 << 8) Or PixelFormatAlpha Or PixelFormatPAlpha Or PixelFormatExtended)
    PixelFormat32bppCMYK      = (15 Or (32 << 8))
    PixelFormatMax            = 16
End Enum

Public Enum RotateFlipType
	RotateNoneFlipNone = 0
	Rotate90FlipNone = 1
	Rotate180FlipNone = 2
	Rotate270FlipNone = 3
	RotateNoneFlipX = 4
	Rotate90FlipX = 5
	Rotate180FlipX = 6
	Rotate270FlipX = 7
	RotateNoneFlipY = Rotate180FlipX
	Rotate90FlipY = Rotate270FlipX
	Rotate180FlipY = RotateNoneFlipX
	Rotate270FlipY = Rotate90FlipX
	RotateNoneFlipXY = Rotate180FlipNone
	Rotate90FlipXY = Rotate270FlipNone
	Rotate180FlipXY = RotateNoneFlipNone
	Rotate270FlipXY = Rotate90FlipNone
End Enum

Public Enum ImageFlags
	ImageFlagsNone=0
	'  Low-word: shared with SINKFLAG_x
	ImageFlagsScalable = &H0001
	ImageFlagsHasAlpha = &H0002
	ImageFlagsHasTranslucent = &H0004
	ImageFlagsPartiallyScalable = &H0008
	'  Low-word: color space definition
	ImageFlagsColorSpaceRGB = &H0010
	ImageFlagsColorSpaceCMYK = &H0020
	ImageFlagsColorSpaceGRAY = &H0040
	ImageFlagsColorSpaceYCBCR = &H0080
	ImageFlagsColorSpaceYCCK = &H0100
	'  Low-word: image size info
	ImageFlagsHasRealDPI = &H1000
	ImageFlagsHasRealPixelSize = &H2000
	'  High-word
	ImageFlagsReadOnly = &H00010000
	ImageFlagsCaching = &H00020000
End Enum

Public Enum ImageLockMode
	ImageLockModeRead = &H0001
	ImageLockModeWrite = &H0002
	ImageLockModeUserInputBuf = &H0004
End Enum

Public Enum ImageCodecFlags
	ImageCodecFlagsEncoder = &H00000001
	ImageCodecFlagsDecoder = &H00000002
	ImageCodecFlagsSupportBitmap = &H00000004
	ImageCodecFlagsSupportVector = &H00000008
	ImageCodecFlagsSeekableEncode = &H00000010
	ImageCodecFlagsBlockingDecode = &H00000020
	ImageCodecFlagsBuiltin = &H00010000
	ImageCodecFlagsSystem = &H00020000
	ImageCodecFlagsUser = &H00040000
End Enum

Public Type ImageCodecInfo
	Clsid As UUID
	FormatID As UUID
	CodecName As LongPtr
	DllName As LongPtr
	FormatDescription As LongPtr
	FilenameExtension As LongPtr
	MimeType As LongPtr
	Flags As ImageCodecFlags
	Version As Long
	SigCount As Long
	SigSize As Long
	SigPattern As LongPtr
	SigMask As LongPtr
End Type
    
Public Enum ItemDataPosition
	ItemDataPositionAfterHeader = &H0
	ItemDataPositionAfterPalette = &H1
	ItemDataPositionAfterBits = &H2
End Enum

Public Type ImageItemData
	Size As Long ' size of the structure 
	Position As Long ' flags describing how the data is to be used.
	Desc As LongPtr ' description on how the data is to be saved.
	' it is different for every codec type.
	DescSize As Long ' size memory pointed by Desc
	Data As LongPtr ' pointer to the data that is to be saved in the
	' file, could be anything saved directly.
	DataSize As Long ' size memory pointed by Data
	Cookie As Long ' opaque for the apps data member used during
	' enumeration of image data items.
End Type

Public Enum PaletteType
	'  Arbitrary custom palette provided by caller.
	PaletteTypeCustom = 0
	'  Optimal palette generated using a median-cut algorithm.
	PaletteTypeOptimal = 1
	'  Black and white palette.
	PaletteTypeFixedBW = 2
	'  Symmetric halftone palettes.
	'  Each of these halftone palettes will be a superset of the system palette.
	'  E.g. Halftone8 will have it's 8-color on-off primaries and the 16 system
	'  colors added. With duplicates removed, that leaves 16 colors.
	PaletteTypeFixedHalftone8 = 3 ' 8-color, on-off primaries
	PaletteTypeFixedHalftone27 = 4 ' 3 intensity levels of each color
	PaletteTypeFixedHalftone64 = 5 ' 4 intensity levels of each color
	PaletteTypeFixedHalftone125 = 6 ' 5 intensity levels of each color
	PaletteTypeFixedHalftone216 = 7 ' 6 intensity levels of each color
	'  Assymetric halftone palettes.
	'  These are somewhat less useful than the symmetric ones, but are
	'  included for completeness. These do not include all of the system
	'  colors.
	PaletteTypeFixedHalftone252 = 8 ' 6-red, 7-green, 6-blue intensities
	PaletteTypeFixedHalftone256 = 9 ' 8-red, 8-green, 4-blue intensities
End Enum

Public Enum DitherType
	DitherTypeNone = 0
	'  Solid color - picks the nearest matching color with no attempt to
	'  halftone or dither. May be used on an arbitrary palette.
	DitherTypeSolid = 1
	'  Ordered dithers and spiral dithers must be used with a fixed palette.
	'  NOTE: DitherOrdered4x4 is unique in that it may apply to 16bpp
	'  conversions also.
	DitherTypeOrdered4x4 = 2
	DitherTypeOrdered8x8 = 3
	DitherTypeOrdered16x16 = 4
	DitherTypeSpiral4x4 = 5
	DitherTypeSpiral8x8 = 6
	DitherTypeDualSpiral4x4 = 7
	DitherTypeDualSpiral8x8 = 8
	'  Error diffusion. May be used with any palette.
	DitherTypeErrorDiffusion = 9
	DitherTypeMax = 10
End Enum

Public Enum PaletteFlags
	PaletteFlagsHasAlpha = &H0001
	PaletteFlagsGrayScale = &H0002
	PaletteFlagsHalftone = &H0004
End Enum

Public Type SharpenParams
	radius As Single
	amount As Single
End Type
Public Type BlurParams
	radius As Single
	expandEdge As BOOL
End Type
Public Type BrightnessContrastParams
	brightnessLevel As Long
	contrastLevel As Long
End Type
Public Type RedEyeCorrectionParams
	numberOfAreas As Long
	areas As RECT
End Type
Public Type HueSaturationLightnessParams
	hueLevel As Long
	saturationLevel As Long
	lightnessLevel As Long
End Type
Public Type TintParams
	hue As Long
	amount As Long
End Type
Public Type LevelsParams
	highlight As Long
	midtone As Long
	shadow As Long
End Type
Public Type ColorBalanceParams
	cyanRed As Long
	magentaGreen As Long
	yellowBlue As Long
End Type
Public Type ColorChannelLUT
	b(0 To 255) As Byte
End Type
Public Type ColorLUTParams
	' look up tables for each color channel.
	lutB As ColorChannelLUT
	lutG As ColorChannelLUT
	lutR As ColorChannelLUT
	lutA As ColorChannelLUT
End Type

Public Enum CurveAdjustments
	AdjustExposure = 0
	AdjustDensity = 1
	AdjustContrast = 2
	AdjustHighlight = 3
	AdjustShadow = 4
	AdjustMidtone = 5
	AdjustWhiteSaturation = 6
	AdjustBlackSaturation = 7
End Enum

Public Enum CurveChannel
	CurveChannelAll = 0
	CurveChannelRed = 1
	CurveChannelGreen = 2
	CurveChannelBlue = 3
End Enum

Public Type ColorCurveParams
	adjustment As CurveAdjustments
	channel As CurveChannel
	adjustValue As Long
End Type

Public Enum ColorMode
	ColorModeARGB32 = 0
	ColorModeARGB64 = 1
End Enum

Public Enum ColorChannelFlags
	ColorChannelFlagsC =0
	ColorChannelFlagsM = 1
	ColorChannelFlagsY = 2
	ColorChannelFlagsK = 3
	ColorChannelFlagsLast = 4
End Enum

Public Enum ColorShift
	AlphaShift = 24
	RedShift = 16
	GreenShift = 8
	BlueShift = 0
End Enum
Public Enum ColorMask
	AlphaMask = &Hff000000
	RedMask = &H00ff0000
	GreenMask = &H0000ff00&
	BlueMask = &H000000ff
End Enum


Public Enum GenericFontFamily
	GenericFontFamilySerif = 0
	GenericFontFamilySansSerif = 1
	GenericFontFamilyMonospace = 2
End Enum

Public Enum FontStyle
	FontStyleRegular = 0
	FontStyleBold = 1
	FontStyleItalic = 2
	FontStyleBoldItalic = 3
	FontStyleUnderline = 4
	FontStyleStrikeout = 8
End Enum

Public Enum SmoothingMode
	SmoothingModeInvalid = QualityModeInvalid
	SmoothingModeDefault = QualityModeDefault
	SmoothingModeHighSpeed = QualityModeLow
	SmoothingModeHighQuality = QualityModeHigh
	SmoothingModeNone = 0
	SmoothingModeAntiAlias = 1
	SmoothingModeAntiAlias8x4 = SmoothingModeAntiAlias
	SmoothingModeAntiAlias8x8  =  2
End Enum

Public Enum PixelOffsetMode
	PixelOffsetModeInvalid = QualityModeInvalid
	PixelOffsetModeDefault = QualityModeDefault
	PixelOffsetModeHighSpeed = QualityModeLow
	PixelOffsetModeHighQuality = QualityModeHigh
	PixelOffsetModeNone = 0 ' No pixel offset
	PixelOffsetModeHalf = 1 ' Offset by -0.5, -0.5 for fast anti-alias perf
End Enum

Public Enum TextRenderingHint
	TextRenderingHintSystemDefault = 0 ' Glyph with system default rendering hint
	TextRenderingHintSingleBitPerPixelGridFit = 1 ' Glyph bitmap with hinting
	TextRenderingHintSingleBitPerPixel = 2 ' Glyph bitmap without hinting
	TextRenderingHintAntiAliasGridFit = 3 ' Glyph anti-alias bitmap with hinting
	TextRenderingHintAntiAlias = 4 ' Glyph anti-alias bitmap without hinting
	TextRenderingHintClearTypeGridFit = 5 ' Glyph CT bitmap with hinting
End Enum

Public Const GDIP_EMFPLUS_RECORD_BASE  = &H00004000
Public Const GDIP_WMF_RECORD_BASE  = &H00010000



Public Enum MetafileFunctions
	META_SETBKCOLOR  = &H0201
	META_SETBKMODE  = &H0102
	META_SETMAPMODE  = &H0103
	META_SETROP2  = &H0104
	META_SETRELABS  = &H0105
	META_SETPOLYFILLMODE  = &H0106
	META_SETSTRETCHBLTMODE  = &H0107
	META_SETTEXTCHAREXTRA  = &H0108
	META_SETTEXTCOLOR  = &H0209
	META_SETTEXTJUSTIFICATION  = &H020A
	META_SETWINDOWORG  = &H020B
	META_SETWINDOWEXT  = &H020C
	META_SETVIEWPORTORG  = &H020D
	META_SETVIEWPORTEXT  = &H020E
	META_OFFSETWINDOWORG  = &H020F
	META_SCALEWINDOWEXT  = &H0410
	META_OFFSETVIEWPORTORG  = &H0211
	META_SCALEVIEWPORTEXT  = &H0412
	META_LINETO  = &H0213
	META_MOVETO  = &H0214
	META_EXCLUDECLIPRECT  = &H0415
	META_INTERSECTCLIPRECT  = &H0416
	META_ARC  = &H0817
	META_ELLIPSE  = &H0418
	META_FLOODFILL  = &H0419
	META_PIE  = &H081A
	META_RECTANGLE  = &H041B
	META_ROUNDRECT  = &H061C
	META_PATBLT  = &H061D
	META_SAVEDC  = &H001E
	META_SETPIXEL  = &H041F
	META_OFFSETCLIPRGN  = &H0220
	META_TEXTOUT  = &H0521
	META_BITBLT = &H0922
	META_STRETCHBLT  = &H0B23
	META_POLYGON  = &H0324
	META_POLYLINE  = &H0325
	META_ESCAPE  = &H0626
	META_RESTOREDC  = &H0127
	META_FILLREGION  = &H0228
	META_FRAMEREGION  = &H0429
	META_INVERTREGION  = &H012A
	META_PAINTREGION  = &H012B
	META_SELECTCLIPREGION  = &H012C
	META_SELECTOBJECT  = &H012D
	META_SETTEXTALIGN  = &H012E
	META_CHORD  = &H0830
	META_SETMAPPERFLAGS  = &H0231
	META_EXTTEXTOUT  = &H0a32
	META_SETDIBTODEV  = &H0d33
	META_SELECTPALETTE  = &H0234
	META_REALIZEPALETTE  = &H0035
	META_ANIMATEPALETTE  = &H0436
	META_SETPALENTRIES  = &H0037
	META_POLYPOLYGON  = &H0538
	META_RESIZEPALETTE  = &H0139
	META_DIBBITBLT  = &H0940
	META_DIBSTRETCHBLT  = &H0b41
	META_DIBCREATEPATTERNBRUSH  = &H0142
	META_STRETCHDIB  = &H0f43
	META_EXTFLOODFILL  = &H0548
	META_SETLAYOUT = &H0149
	/*  = WINVER >= &H0500 */
	META_DELETEOBJECT  = &H01f0
	META_CREATEPALETTE  = &H00f7
	META_CREATEPATTERNBRUSH  = &H01F9
	META_CREATEPENINDIRECT  = &H02FA
	META_CREATEFONTINDIRECT  = &H02FB
	META_CREATEBRUSHINDIRECT  = &H02FC
	META_CREATEREGION  = &H06FF
End Enum

Public Enum EmfRecordTypes
	EMR_HEADER  = 1
	EMR_POLYBEZIER  = 2
	EMR_POLYGON  = 3
	EMR_POLYLINE  = 4
	EMR_POLYBEZIERTO  = 5
	EMR_POLYLINETO  = 6
	EMR_POLYPOLYLINE  = 7
	EMR_POLYPOLYGON  = 8
	EMR_SETWINDOWEXTEX  = 9
	EMR_SETWINDOWORGEX  = 10
	EMR_SETVIEWPORTEXTEX  = 11
	EMR_SETVIEWPORTORGEX  = 12
	EMR_SETBRUSHORGEX  = 13
	EMR_EOF  = 14
	EMR_SETPIXELV  = 15
	EMR_SETMAPPERFLAGS  = 16
	EMR_SETMAPMODE  = 17
	EMR_SETBKMODE  = 18
	EMR_SETPOLYFILLMODE  = 19
	EMR_SETROP2  = 20
	EMR_SETSTRETCHBLTMODE  = 21
	EMR_SETTEXTALIGN  = 22
	EMR_SETCOLORADJUSTMENT  = 23
	EMR_SETTEXTCOLOR  = 24
	EMR_SETBKCOLOR  = 25
	EMR_OFFSETCLIPRGN  = 26
	EMR_MOVETOEX  = 27
	EMR_SETMETARGN  = 28
	EMR_EXCLUDECLIPRECT  = 29
	EMR_INTERSECTCLIPRECT  = 30
	EMR_SCALEVIEWPORTEXTEX  = 31
	EMR_SCALEWINDOWEXTEX  = 32
	EMR_SAVEDC  = 33
	EMR_RESTOREDC  = 34
	EMR_SETWORLDTRANSFORM  = 35
	EMR_MODIFYWORLDTRANSFORM  = 36
	EMR_SELECTOBJECT  = 37
	EMR_CREATEPEN  = 38
	EMR_CREATEBRUSHINDIRECT  = 39
	EMR_DELETEOBJECT  = 40
	EMR_ANGLEARC  = 41
	EMR_ELLIPSE  = 42
	EMR_RECTANGLE  = 43
	EMR_ROUNDRECT  = 44
	EMR_ARC  = 45
	EMR_CHORD  = 46
	EMR_PIE  = 47
	EMR_SELECTPALETTE  = 48
	EMR_CREATEPALETTE  = 49
	EMR_SETPALETTEENTRIES  = 50
	EMR_RESIZEPALETTE  = 51
	EMR_REALIZEPALETTE  = 52
	EMR_EXTFLOODFILL  = 53
	EMR_LINETO  = 54
	EMR_ARCTO  = 55
	EMR_POLYDRAW  = 56
	EMR_SETARCDIRECTION  = 57
	EMR_SETMITERLIMIT  = 58
	EMR_BEGINPATH  = 59
	EMR_ENDPATH  = 60
	EMR_CLOSEFIGURE  = 61
	EMR_FILLPATH  = 62
	EMR_STROKEANDFILLPATH  = 63
	EMR_STROKEPATH  = 64
	EMR_FLATTENPATH  = 65
	EMR_WIDENPATH  = 66
	EMR_SELECTCLIPPATH  = 67
	EMR_ABORTPATH  = 68
	EMR_GDICOMMENT  = 70
	EMR_FILLRGN  = 71
	EMR_FRAMERGN  = 72
	EMR_INVERTRGN  = 73
	EMR_PAINTRGN  = 74
	EMR_EXTSELECTCLIPRGN  = 75
	EMR_BITBLT  = 76
	EMR_STRETCHBLT  = 77
	EMR_MASKBLT  = 78
	EMR_PLGBLT  = 79
	EMR_SETDIBITSTODEVICE  = 80
	EMR_STRETCHDIBITS  = 81
	EMR_EXTCREATEFONTINDIRECTW  = 82
	EMR_EXTTEXTOUTA  = 83
	EMR_EXTTEXTOUTW  = 84
	EMR_POLYBEZIER16  = 85
	EMR_POLYGON16  = 86
	EMR_POLYLINE16  = 87
	EMR_POLYBEZIERTO16  = 88
	EMR_POLYLINETO16  = 89
	EMR_POLYPOLYLINE16  = 90
	EMR_POLYPOLYGON16  = 91
	EMR_POLYDRAW16  = 92
	EMR_CREATEMONOBRUSH  = 93
	EMR_CREATEDIBPATTERNBRUSHPT  = 94
	EMR_EXTCREATEPEN  = 95
	EMR_POLYTEXTOUTA  = 96
	EMR_POLYTEXTOUTW  = 97
	EMR_SETICMMODE  = 98
	EMR_CREATECOLORSPACE  = 99
	EMR_SETCOLORSPACE  = 100
	EMR_DELETECOLORSPACE  = 101
	EMR_GLSRECORD = 102
	EMR_GLSBOUNDEDRECORD  = 103
	EMR_PIXELFORMAT  = 104
	EMR_RESERVED_105  = 105
	EMR_RESERVED_106  = 106
	EMR_RESERVED_107 = 107
	EMR_RESERVED_108  = 108
	EMR_RESERVED_109  = 109
	EMR_RESERVED_110  = 110
	EMR_COLORCORRECTPALETTE  = 111
	EMR_SETICMPROFILEA  = 112
	EMR_SETICMPROFILEW  = 113
	EMR_ALPHABLEND  = 114
	EMR_SETLAYOUT  = 115
	EMR_TRANSPARENTBLT  = 116
	EMR_RESERVED_117  = 117
	EMR_GRADIENTFILL = 118
	EMR_RESERVED_119  = 119
	EMR_RESERVED_120  = 120
	EMR_COLORMATCHTOTARGETW = 121
	EMR_CREATECOLORSPACEW  = 122
End Enum

Public Enum EmfPlusRecordType
	'  Since we have to enumerate GDI records right along with GDI+ records,
	'  We list all the GDI records here so that they can be part of the
	'  same enumeration type which is used in the enumeration callback.
	WmfRecordTypeSetBkColor = (GDIP_WMF_RECORD_BASE Or META_SETBKCOLOR)
	WmfRecordTypeSetBkMode = (GDIP_WMF_RECORD_BASE Or META_SETBKMODE)
	WmfRecordTypeSetMapMode = (GDIP_WMF_RECORD_BASE Or META_SETMAPMODE)
	WmfRecordTypeSetROP2 = (GDIP_WMF_RECORD_BASE Or META_SETROP2)
	WmfRecordTypeSetRelAbs = (GDIP_WMF_RECORD_BASE Or META_SETRELABS)
	WmfRecordTypeSetPolyFillMode = (GDIP_WMF_RECORD_BASE Or META_SETPOLYFILLMODE)
	WmfRecordTypeSetStretchBltMode = (GDIP_WMF_RECORD_BASE Or META_SETSTRETCHBLTMODE)
	WmfRecordTypeSetTextCharExtra = (GDIP_WMF_RECORD_BASE Or META_SETTEXTCHAREXTRA)
	WmfRecordTypeSetTextColor = (GDIP_WMF_RECORD_BASE Or META_SETTEXTCOLOR)
	WmfRecordTypeSetTextJustification = (GDIP_WMF_RECORD_BASE Or META_SETTEXTJUSTIFICATION)
	WmfRecordTypeSetWindowOrg = (GDIP_WMF_RECORD_BASE Or META_SETWINDOWORG)
	WmfRecordTypeSetWindowExt = (GDIP_WMF_RECORD_BASE Or META_SETWINDOWEXT)
	WmfRecordTypeSetViewportOrg = (GDIP_WMF_RECORD_BASE Or META_SETVIEWPORTORG)
	WmfRecordTypeSetViewportExt = (GDIP_WMF_RECORD_BASE Or META_SETVIEWPORTEXT)
	WmfRecordTypeOffsetWindowOrg = (GDIP_WMF_RECORD_BASE Or META_OFFSETWINDOWORG)
	WmfRecordTypeScaleWindowExt = (GDIP_WMF_RECORD_BASE Or META_SCALEWINDOWEXT)
	WmfRecordTypeOffsetViewportOrg = (GDIP_WMF_RECORD_BASE Or META_OFFSETVIEWPORTORG)
	WmfRecordTypeScaleViewportExt = (GDIP_WMF_RECORD_BASE Or META_SCALEVIEWPORTEXT)
	WmfRecordTypeLineTo = (GDIP_WMF_RECORD_BASE Or META_LINETO)
	WmfRecordTypeMoveTo = (GDIP_WMF_RECORD_BASE Or META_MOVETO)
	WmfRecordTypeExcludeClipRect = (GDIP_WMF_RECORD_BASE Or META_EXCLUDECLIPRECT)
	WmfRecordTypeIntersectClipRect = (GDIP_WMF_RECORD_BASE Or META_INTERSECTCLIPRECT)
	WmfRecordTypeArc = (GDIP_WMF_RECORD_BASE Or META_ARC)
	WmfRecordTypeEllipse = (GDIP_WMF_RECORD_BASE Or META_ELLIPSE)
	WmfRecordTypeFloodFill = (GDIP_WMF_RECORD_BASE Or META_FLOODFILL)
	WmfRecordTypePie = (GDIP_WMF_RECORD_BASE Or META_PIE)
	WmfRecordTypeRectangle = (GDIP_WMF_RECORD_BASE Or META_RECTANGLE)
	WmfRecordTypeRoundRect = (GDIP_WMF_RECORD_BASE Or META_ROUNDRECT)
	WmfRecordTypePatBlt = (GDIP_WMF_RECORD_BASE Or META_PATBLT)
	WmfRecordTypeSaveDC = (GDIP_WMF_RECORD_BASE Or META_SAVEDC)
	WmfRecordTypeSetPixel = (GDIP_WMF_RECORD_BASE Or META_SETPIXEL)
	WmfRecordTypeOffsetClipRgn = (GDIP_WMF_RECORD_BASE Or META_OFFSETCLIPRGN)
	WmfRecordTypeTextOut = (GDIP_WMF_RECORD_BASE Or META_TEXTOUT)
	WmfRecordTypeBitBlt = (GDIP_WMF_RECORD_BASE Or META_BITBLT)
	WmfRecordTypeStretchBlt = (GDIP_WMF_RECORD_BASE Or META_STRETCHBLT)
	WmfRecordTypePolygon = (GDIP_WMF_RECORD_BASE Or META_POLYGON)
	WmfRecordTypePolyline = (GDIP_WMF_RECORD_BASE Or META_POLYLINE)
	WmfRecordTypeEscape = (GDIP_WMF_RECORD_BASE Or META_ESCAPE)
	WmfRecordTypeRestoreDC = (GDIP_WMF_RECORD_BASE Or META_RESTOREDC)
	WmfRecordTypeFillRegion = (GDIP_WMF_RECORD_BASE Or META_FILLREGION)
	WmfRecordTypeFrameRegion = (GDIP_WMF_RECORD_BASE Or META_FRAMEREGION)
	WmfRecordTypeInvertRegion = (GDIP_WMF_RECORD_BASE Or META_INVERTREGION)
	WmfRecordTypePaintRegion = (GDIP_WMF_RECORD_BASE Or META_PAINTREGION)
	WmfRecordTypeSelectClipRegion = (GDIP_WMF_RECORD_BASE Or META_SELECTCLIPREGION)
	WmfRecordTypeSelectObject = (GDIP_WMF_RECORD_BASE Or META_SELECTOBJECT)
	WmfRecordTypeSetTextAlign  = (GDIP_WMF_RECORD_BASE Or META_SETTEXTALIGN)
	WmfRecordTypeDrawText  = (GDIP_WMF_RECORD_BASE Or &H062F) ' META_DRAWTEXT
	WmfRecordTypeChord = (GDIP_WMF_RECORD_BASE Or META_CHORD)
	WmfRecordTypeSetMapperFlags = (GDIP_WMF_RECORD_BASE Or META_SETMAPPERFLAGS)
	WmfRecordTypeExtTextOut = (GDIP_WMF_RECORD_BASE Or META_EXTTEXTOUT)
	WmfRecordTypeSetDIBToDev = (GDIP_WMF_RECORD_BASE Or META_SETDIBTODEV)
	WmfRecordTypeSelectPalette = (GDIP_WMF_RECORD_BASE Or META_SELECTPALETTE)
	WmfRecordTypeRealizePalette = (GDIP_WMF_RECORD_BASE Or META_REALIZEPALETTE)
	WmfRecordTypeAnimatePalette = (GDIP_WMF_RECORD_BASE Or META_ANIMATEPALETTE)
	WmfRecordTypeSetPalEntries = (GDIP_WMF_RECORD_BASE Or META_SETPALENTRIES)
	WmfRecordTypePolyPolygon = (GDIP_WMF_RECORD_BASE Or META_POLYPOLYGON)
	WmfRecordTypeResizePalette = (GDIP_WMF_RECORD_BASE Or META_RESIZEPALETTE)
	WmfRecordTypeDIBBitBlt  = (GDIP_WMF_RECORD_BASE Or META_DIBBITBLT)
	WmfRecordTypeDIBStretchBlt = (GDIP_WMF_RECORD_BASE Or META_DIBSTRETCHBLT)
	WmfRecordTypeDIBCreatePatternBrush = (GDIP_WMF_RECORD_BASE Or META_DIBCREATEPATTERNBRUSH)
	WmfRecordTypeStretchDIB = (GDIP_WMF_RECORD_BASE Or META_STRETCHDIB)
	WmfRecordTypeExtFloodFill = (GDIP_WMF_RECORD_BASE Or META_EXTFLOODFILL)
	WmfRecordTypeSetLayout  = (GDIP_WMF_RECORD_BASE Or &H0149) ' META_SETLAYOUT
	WmfRecordTypeResetDC = (GDIP_WMF_RECORD_BASE Or &H014C) ' META_RESETDC
	WmfRecordTypeStartDoc = (GDIP_WMF_RECORD_BASE Or &H014D) ' META_STARTDOC
	WmfRecordTypeStartPage = (GDIP_WMF_RECORD_BASE Or &H004F) ' META_STARTPAGE
	WmfRecordTypeEndPage = (GDIP_WMF_RECORD_BASE Or &H0050) ' META_ENDPAGE
	WmfRecordTypeAbortDoc = (GDIP_WMF_RECORD_BASE Or &H0052) ' META_ABORTDOC
	WmfRecordTypeEndDoc = (GDIP_WMF_RECORD_BASE Or &H005E) ' META_ENDDOC
	WmfRecordTypeDeleteObject = (GDIP_WMF_RECORD_BASE Or META_DELETEOBJECT)
	WmfRecordTypeCreatePalette = (GDIP_WMF_RECORD_BASE Or META_CREATEPALETTE)
	WmfRecordTypeCreateBrush = (GDIP_WMF_RECORD_BASE Or &H00F8) ' META_CREATEBRUSH
	WmfRecordTypeCreatePatternBrush = (GDIP_WMF_RECORD_BASE Or META_CREATEPATTERNBRUSH)
	WmfRecordTypeCreatePenIndirect = (GDIP_WMF_RECORD_BASE Or META_CREATEPENINDIRECT)
	WmfRecordTypeCreateFontIndirect = (GDIP_WMF_RECORD_BASE Or META_CREATEFONTINDIRECT)
	WmfRecordTypeCreateBrushIndirect = (GDIP_WMF_RECORD_BASE Or META_CREATEBRUSHINDIRECT)
	WmfRecordTypeCreateBitmapIndirect = (GDIP_WMF_RECORD_BASE Or &H02FD) ' META_CREATEBITMAPINDIRECT
	WmfRecordTypeCreateBitmap = (GDIP_WMF_RECORD_BASE Or &H06FE) ' META_CREATEBITMAP
	WmfRecordTypeCreateRegion = (GDIP_WMF_RECORD_BASE Or META_CREATEREGION)
	EmfRecordTypeHeader = EMR_HEADER
	EmfRecordTypePolyBezier = EMR_POLYBEZIER
	EmfRecordTypePolygon =  EMR_POLYGON
	EmfRecordTypePolyline = EMR_POLYLINE
	EmfRecordTypePolyBezierTo = EMR_POLYBEZIERTO
	EmfRecordTypePolyLineTo = EMR_POLYLINETO
	EmfRecordTypePolyPolyline = EMR_POLYPOLYLINE
	EmfRecordTypePolyPolygon = EMR_POLYPOLYGON
	EmfRecordTypeSetWindowExtEx = EMR_SETWINDOWEXTEX
	EmfRecordTypeSetWindowOrgEx = EMR_SETWINDOWORGEX
	EmfRecordTypeSetViewportExtEx = EMR_SETVIEWPORTEXTEX
	EmfRecordTypeSetViewportOrgEx = EMR_SETVIEWPORTORGEX
	EmfRecordTypeSetBrushOrgEx = EMR_SETBRUSHORGEX
	EmfRecordTypeEOF = EMR_EOF
	EmfRecordTypeSetPixelV = EMR_SETPIXELV
	EmfRecordTypeSetMapperFlags = EMR_SETMAPPERFLAGS
	EmfRecordTypeSetMapMode = EMR_SETMAPMODE
	EmfRecordTypeSetBkMode = EMR_SETBKMODE
	EmfRecordTypeSetPolyFillMode = EMR_SETPOLYFILLMODE
	EmfRecordTypeSetROP2 = EMR_SETROP2
	EmfRecordTypeSetStretchBltMode = EMR_SETSTRETCHBLTMODE
	EmfRecordTypeSetTextAlign = EMR_SETTEXTALIGN
	EmfRecordTypeSetColorAdjustment = EMR_SETCOLORADJUSTMENT
	EmfRecordTypeSetTextColor = EMR_SETTEXTCOLOR
	EmfRecordTypeSetBkColor = EMR_SETBKCOLOR
	EmfRecordTypeOffsetClipRgn = EMR_OFFSETCLIPRGN
	EmfRecordTypeMoveToEx = EMR_MOVETOEX
	EmfRecordTypeSetMetaRgn = EMR_SETMETARGN
	EmfRecordTypeExcludeClipRect = EMR_EXCLUDECLIPRECT
	EmfRecordTypeIntersectClipRect = EMR_INTERSECTCLIPRECT
	EmfRecordTypeScaleViewportExtEx = EMR_SCALEVIEWPORTEXTEX
	EmfRecordTypeScaleWindowExtEx = EMR_SCALEWINDOWEXTEX
	EmfRecordTypeSaveDC = EMR_SAVEDC
	EmfRecordTypeRestoreDC = EMR_RESTOREDC
	EmfRecordTypeSetWorldTransform = EMR_SETWORLDTRANSFORM
	EmfRecordTypeModifyWorldTransform = EMR_MODIFYWORLDTRANSFORM
	EmfRecordTypeSelectObject = EMR_SELECTOBJECT
	EmfRecordTypeCreatePen = EMR_CREATEPEN
	EmfRecordTypeCreateBrushIndirect = EMR_CREATEBRUSHINDIRECT
	EmfRecordTypeDeleteObject = EMR_DELETEOBJECT
	EmfRecordTypeAngleArc = EMR_ANGLEARC
	EmfRecordTypeEllipse = EMR_ELLIPSE
	EmfRecordTypeRectangle = EMR_RECTANGLE
	EmfRecordTypeRoundRect = EMR_ROUNDRECT
	EmfRecordTypeArc = EMR_ARC
	EmfRecordTypeChord = EMR_CHORD
	EmfRecordTypePie = EMR_PIE
	EmfRecordTypeSelectPalette = EMR_SELECTPALETTE
	EmfRecordTypeCreatePalette = EMR_CREATEPALETTE
	EmfRecordTypeSetPaletteEntries = EMR_SETPALETTEENTRIES
	EmfRecordTypeResizePalette = EMR_RESIZEPALETTE
	EmfRecordTypeRealizePalette = EMR_REALIZEPALETTE
	EmfRecordTypeExtFloodFill = EMR_EXTFLOODFILL
	EmfRecordTypeLineTo = EMR_LINETO
	EmfRecordTypeArcTo = EMR_ARCTO
	EmfRecordTypePolyDraw = EMR_POLYDRAW
	EmfRecordTypeSetArcDirection = EMR_SETARCDIRECTION
	EmfRecordTypeSetMiterLimit = EMR_SETMITERLIMIT
	EmfRecordTypeBeginPath = EMR_BEGINPATH
	EmfRecordTypeEndPath = EMR_ENDPATH
	EmfRecordTypeCloseFigure = EMR_CLOSEFIGURE
	EmfRecordTypeFillPath = EMR_FILLPATH
	EmfRecordTypeStrokeAndFillPath = EMR_STROKEANDFILLPATH
	EmfRecordTypeStrokePath = EMR_STROKEPATH
	EmfRecordTypeFlattenPath = EMR_FLATTENPATH
	EmfRecordTypeWidenPath = EMR_WIDENPATH
	EmfRecordTypeSelectClipPath = EMR_SELECTCLIPPATH
	EmfRecordTypeAbortPath = EMR_ABORTPATH
	EmfRecordTypeReserved_069 = 69 ' Not Used
	EmfRecordTypeGdiComment = EMR_GDICOMMENT
	EmfRecordTypeFillRgn = EMR_FILLRGN
	EmfRecordTypeFrameRgn =  EMR_FRAMERGN
	EmfRecordTypeInvertRgn = EMR_INVERTRGN
	EmfRecordTypePaintRgn = EMR_PAINTRGN
	EmfRecordTypeExtSelectClipRgn = EMR_EXTSELECTCLIPRGN
	EmfRecordTypeBitBlt = EMR_BITBLT
	EmfRecordTypeStretchBlt = EMR_STRETCHBLT
	EmfRecordTypeMaskBlt = EMR_MASKBLT
	EmfRecordTypePlgBlt = EMR_PLGBLT
	EmfRecordTypeSetDIBitsToDevice = EMR_SETDIBITSTODEVICE
	EmfRecordTypeStretchDIBits = EMR_STRETCHDIBITS
	EmfRecordTypeExtCreateFontIndirect = EMR_EXTCREATEFONTINDIRECTW
	EmfRecordTypeExtTextOutA = EMR_EXTTEXTOUTA
	EmfRecordTypeExtTextOutW = EMR_EXTTEXTOUTW
	EmfRecordTypePolyBezier16 = EMR_POLYBEZIER16
	EmfRecordTypePolygon16 = EMR_POLYGON16
	EmfRecordTypePolyline16 = EMR_POLYLINE16
	EmfRecordTypePolyBezierTo16 = EMR_POLYBEZIERTO16
	EmfRecordTypePolylineTo16 = EMR_POLYLINETO16
	EmfRecordTypePolyPolyline16 = EMR_POLYPOLYLINE16
	EmfRecordTypePolyPolygon16 = EMR_POLYPOLYGON16
	EmfRecordTypePolyDraw16 = EMR_POLYDRAW16
	EmfRecordTypeCreateMonoBrush = EMR_CREATEMONOBRUSH
	EmfRecordTypeCreateDIBPatternBrushPt = EMR_CREATEDIBPATTERNBRUSHPT
	EmfRecordTypeExtCreatePen = EMR_EXTCREATEPEN
	EmfRecordTypePolyTextOutA = EMR_POLYTEXTOUTA
	EmfRecordTypePolyTextOutW = EMR_POLYTEXTOUTW
	EmfRecordTypeSetICMMode = 98 ' EMR_SETICMMODE,
	EmfRecordTypeCreateColorSpace = 99 ' EMR_CREATECOLORSPACE,
	EmfRecordTypeSetColorSpace = 100 ' EMR_SETCOLORSPACE,
	EmfRecordTypeDeleteColorSpace = 101 ' EMR_DELETECOLORSPACE,
	EmfRecordTypeGLSRecord = 102 ' EMR_GLSRECORD,
	EmfRecordTypeGLSBoundedRecord = 103 ' EMR_GLSBOUNDEDRECORD,
	EmfRecordTypePixelFormat = 104 ' EMR_PIXELFORMAT,
	EmfRecordTypeDrawEscape = 105 ' EMR_RESERVED_105,
	EmfRecordTypeExtEscape = 106 ' EMR_RESERVED_106,
	EmfRecordTypeStartDoc = 107 ' EMR_RESERVED_107,
	EmfRecordTypeSmallTextOut = 108 ' EMR_RESERVED_108,
	EmfRecordTypeForceUFIMapping = 109 ' EMR_RESERVED_109,
	EmfRecordTypeNamedEscape = 110 ' EMR_RESERVED_110,
	EmfRecordTypeColorCorrectPalette = 111 ' EMR_COLORCORRECTPALETTE,
	EmfRecordTypeSetICMProfileA = 112 ' EMR_SETICMPROFILEA,
	EmfRecordTypeSetICMProfileW = 113 ' EMR_SETICMPROFILEW,
	EmfRecordTypeAlphaBlend = 114 ' EMR_ALPHABLEND,
	EmfRecordTypeSetLayout = 115 ' EMR_SETLAYOUT,
	EmfRecordTypeTransparentBlt = 116 ' EMR_TRANSPARENTBLT,
	EmfRecordTypeReserved_117 = 117 ' Not Used
	EmfRecordTypeGradientFill = 118 ' EMR_GRADIENTFILL,
	EmfRecordTypeSetLinkedUFIs = 119 ' EMR_RESERVED_119,
	EmfRecordTypeSetTextJustification = 120 ' EMR_RESERVED_120,
	EmfRecordTypeColorMatchToTargetW = 121 ' EMR_COLORMATCHTOTARGETW,
	EmfRecordTypeCreateColorSpaceW = 122 ' EMR_CREATECOLORSPACEW,
	EmfRecordTypeMax = 122
	EmfRecordTypeMin = 1
	'  That is the END of the GDI EMF records.
	'  Now we start the list of EMF+ records.  We leave quite
	'  a bit of room here for the addition of any new GDI
	'  records that may be added later.
	EmfPlusRecordTypeInvalid = GDIP_EMFPLUS_RECORD_BASE
	EmfPlusRecordTypeHeader
	EmfPlusRecordTypeEndOfFile
	EmfPlusRecordTypeComment
	EmfPlusRecordTypeGetDC
	EmfPlusRecordTypeMultiFormatStart
	EmfPlusRecordTypeMultiFormatSection
	EmfPlusRecordTypeMultiFormatEnd
	'  For all persistent objects
	EmfPlusRecordTypeObject
	'  Drawing Records
	EmfPlusRecordTypeClear
	EmfPlusRecordTypeFillRects
	EmfPlusRecordTypeDrawRects
	EmfPlusRecordTypeFillPolygon
	EmfPlusRecordTypeDrawLines
	EmfPlusRecordTypeFillEllipse
	EmfPlusRecordTypeDrawEllipse
	EmfPlusRecordTypeFillPie 
	EmfPlusRecordTypeDrawPie
	EmfPlusRecordTypeDrawArc
	EmfPlusRecordTypeFillRegion
	EmfPlusRecordTypeFillPath
	EmfPlusRecordTypeDrawPath
	EmfPlusRecordTypeFillClosedCurve
	EmfPlusRecordTypeDrawClosedCurve
	EmfPlusRecordTypeDrawCurve
	EmfPlusRecordTypeDrawBeziers
	EmfPlusRecordTypeDrawImage
	EmfPlusRecordTypeDrawImagePoints
	EmfPlusRecordTypeDrawString
	'  Graphics State Records
	EmfPlusRecordTypeSetRenderingOrigin
	EmfPlusRecordTypeSetAntiAliasMode
	EmfPlusRecordTypeSetTextRenderingHint
	EmfPlusRecordTypeSetTextContrast
	EmfPlusRecordTypeSetInterpolationMode
	EmfPlusRecordTypeSetPixelOffsetMode
	EmfPlusRecordTypeSetCompositingMode
	EmfPlusRecordTypeSetCompositingQuality
	EmfPlusRecordTypeSave
	EmfPlusRecordTypeRestore
	EmfPlusRecordTypeBeginContainer
	EmfPlusRecordTypeBeginContainerNoParams 
	EmfPlusRecordTypeEndContainer
	EmfPlusRecordTypeSetWorldTransform
	EmfPlusRecordTypeResetWorldTransform
	EmfPlusRecordTypeMultiplyWorldTransform
	EmfPlusRecordTypeTranslateWorldTransform
	EmfPlusRecordTypeScaleWorldTransform 
	EmfPlusRecordTypeRotateWorldTransform
	EmfPlusRecordTypeSetPageTransform
	EmfPlusRecordTypeResetClip
	EmfPlusRecordTypeSetClipRect
	EmfPlusRecordTypeSetClipPath
	EmfPlusRecordTypeSetClipRegion
	EmfPlusRecordTypeOffsetClip
	EmfPlusRecordTypeDrawDriverString
	'#if(GDIPVER> = &H0110)
	EmfPlusRecordTypeStrokeFillPath
	EmfPlusRecordTypeSerializableObject
	EmfPlusRecordTypeSetTSGraphics
	EmfPlusRecordTypeSetTSClip
	'#endif = 60
	'  NOTE: New records *must* be added immediately before this line.
	EmfPlusRecordTotal
	EmfPlusRecordTypeMax = EmfPlusRecordTotal-1
	EmfPlusRecordTypeMin = EmfPlusRecordTypeHeader
End Enum

Public Enum StringFormatFlags
	StringFormatFlagsDirectionRightToLeft = &H00000001
	StringFormatFlagsDirectionVertical = &H00000002
	StringFormatFlagsNoFitBlackBox = &H00000004
	StringFormatFlagsDisplayFormatControl = &H00000020
	StringFormatFlagsNoFontFallback = &H00000400
	StringFormatFlagsMeasureTrailingSpaces = &H00000800
	StringFormatFlagsNoWrap = &H00001000
	StringFormatFlagsLineLimit = &H00002000
	StringFormatFlagsNoClip = &H00004000
	StringFormatFlagsBypassGDI = &H80000000
End Enum

Public Enum StringTrimming
	StringTrimmingNone = 0
	StringTrimmingCharacter = 1
	StringTrimmingWord = 2
	StringTrimmingEllipsisCharacter = 3
	StringTrimmingEllipsisWord = 4
	StringTrimmingEllipsisPath = 5
End Enum

Public Enum StringDigitSubstitute
	StringDigitSubstituteUser = 0 ' As NLS setting
	StringDigitSubstituteNone = 1
	StringDigitSubstituteNational = 2
	StringDigitSubstituteTraditional = 3
End Enum

Public Enum HotkeyPrefix
	HotkeyPrefixNone = 0
	HotkeyPrefixShow = 1
	HotkeyPrefixHide = 2
End Enum

Public Enum StringAlignment
	'  Left edge for left-to-right text,
	'  right for right-to-left text,
	'  and top for vertical
	StringAlignmentNear = 0
	StringAlignmentCenter = 1
	StringAlignmentFar = 2
End Enum

Public Enum DriverStringOptions
	DriverStringOptionsCmapLookup = 1
	DriverStringOptionsVertical = 2
	DriverStringOptionsRealizedAdvance = 4
	DriverStringOptionsLimitSubpixel = 8
End Enum

Public Enum EncoderParameterValueType
	EncoderParameterValueTypeByte   ' 8-bit unsigned int
	EncoderParameterValueTypeASCII  ' 8-bit byte containing one 7-bit ASCII
	'  code. NULL terminated.
	EncoderParameterValueTypeShort ' 16-bit unsigned int
	EncoderParameterValueTypeLong  ' 32-bit unsigned int
	EncoderParameterValueTypeRational  ' Two Longs. The first Long is the
	'  numerator, the second Long expresses the
	'  denomintor.
	EncoderParameterValueTypeLongRange  ' Two longs which specify a range of
	'  integer values. The first Long specifies
	'  the lower end and the second one
	'  specifies the higher end. All values
	'  are inclusive at both ends
	EncoderParameterValueTypeUndefined ' 8-bit byte that can take any value
	'  depending on field definition
	EncoderParameterValueTypeRationalRange  ' Two Rationals. The first Rational
	'  specifies the lower end and the second
	'  specifies the higher end. All values
	'  are inclusive at both ends
	'#if(GDIPVER> = &H0110)
	EncoderParameterValueTypePointer ' a pointer to a parameter defined data.
	'#endif = 2 '(GDIPVER >= &H0110)
End Enum

Public enum EncoderValue
    EncoderValueColorTypeCMYK
    EncoderValueColorTypeYCCK
    EncoderValueCompressionLZW
    EncoderValueCompressionCCITT3
    EncoderValueCompressionCCITT4
    EncoderValueCompressionRle
    EncoderValueCompressionNone
    EncoderValueScanMethodInterlaced
    EncoderValueScanMethodNonInterlaced
    EncoderValueVersionGif87
    EncoderValueVersionGif89
    EncoderValueRenderProgressive
    EncoderValueRenderNonProgressive
    EncoderValueTransformRotate90
    EncoderValueTransformRotate180
    EncoderValueTransformRotate270
    EncoderValueTransformFlipHorizontal
    EncoderValueTransformFlipVertical
    EncoderValueMultiFrame
    EncoderValueLastFrame
    EncoderValueFlush
    EncoderValueFrameDimensionTime
    EncoderValueFrameDimensionResolution
    EncoderValueFrameDimensionPage
'#if (GDIPVER >= &H0110)
    EncoderValueColorTypeGray
    EncoderValueColorTypeRGB
'#endif
End Enum

Public Enum EmfToWmfBitsFlags
	EmfToWmfBitsFlagsDefault = &H00000000
	EmfToWmfBitsFlagsEmbedEmf = &H00000001
	EmfToWmfBitsFlagsIncludePlaceable = &H00000002
	EmfToWmfBitsFlagsNoXORClip = &H00000004
End Enum

Public Enum ConvertToEmfPlusFlags
	ConvertToEmfPlusFlagsDefault = &H00000000
	ConvertToEmfPlusFlagsRopUsed = &H00000001
	ConvertToEmfPlusFlagsText = &H00000002
	ConvertToEmfPlusFlagsInvalidRecord = &H00000004
End Enum

Public Enum GpTestControlEnum
	TestControlForceBilinear=0
	TestControlNoICM=1
	TestControlGetBuildNumber=2
End Enum

Public Type ENHMETAHEADER3
	iType As Long ' Record type EMR_HEADER
	nSize As Long ' Record size in bytes.  This may be greater
	' than the sizeof(ENHMETAHEADER).
	rclBounds As RECT ' Inclusive-inclusive bounds in device units
	rclFrame As RECT ' Inclusive-inclusive Picture Frame .01mm unit
	dSignature As Long ' Signature.  Must be ENHMETA_SIGNATURE.
	nVersion As Long ' Version number
	nBytes As Long ' Size of the metafile in bytes
	nRecords As Long ' Number of records in the metafile
	nHandles As Integer ' Number of handles in the handle table
	' Handle index zero is reserved.
	sReserved As Integer ' Reserved.  Must be zero.
	nDescription As Long ' Number of chars in the unicode desc string
	' This is 0 if there is no description string
	offDescription As Long ' Offset to the metafile description record.
	' This is 0 if there is no description string
	nPalEntries As Long ' Number of entries in the metafile palette.
	szlDevice As SIZE ' Size of the reference device in pels
	szlMillimeters As SIZE ' Size of the reference device in millimeters
End Type

Public Type PWMFRect16
	Left As Integer
	Top As Integer
	Right As Integer
	Bottom As Integer
End Type

[ PackingAlignment(2) ]
Public Type WmfPlaceableFileHeader
	Key As Long ' GDIP_WMF_PLACEABLEKEY
	Hmf As Integer ' Metafile HANDLE number (always 0)
	BoundingBox As PWMFRect16 ' Coordinates in metafile units
	Inch As Integer ' Number of metafile units per inch
	Reserved As Long ' Reserved (always 0)
	Checksum As Integer ' Checksum value for previous 10 WORDs
End Type

Public Const GDIP_EMFPLUSFLAGS_DISPLAY = &H00000001


Public Type CharacterRange
	first As Long
    length As Long
End Type


#If Win64 Then
	Public Declare PtrSafe Function GdipCreateEffect Lib "gdiplus" (guid As UUID, effect As LongPtr) As GpStatus
#Else
    Public Declare PtrSafe Function GdipCreateEffect Lib "gdiplus" (ByVal guid1 As LongLong, ByVal guid2 As LongLong, effect As LongPtr) As GpStatus
#End If
Public Declare PtrSafe Function GdipDeleteEffect Lib "gdiplus" (ByVal effect As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetEffectParameterSize Lib "gdiplus" (ByVal effect As LongPtr, size As Long) As GpStatus
Public Declare PtrSafe Function GdipSetEffectParameters Lib "gdiplus" (ByVal effect As LongPtr, params As Any, ByVal size As Long) As GpStatus
Public Declare PtrSafe Function GdipGetEffectParameters Lib "gdiplus" (ByVal effect As LongPtr, size As Long, params As Any) As GpStatus
Public Declare PtrSafe Function GdipPrivateAddMemoryFont Lib "gdiplus" (ByVal fontCollection As LongPtr, memory As Any, ByVal length As Long) As GpStatus
Public Declare PtrSafe Function GdipNewInstalledFontCollection Lib "gdiplus" (fontCollection As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetEmHeight Lib "gdiplus" (ByVal family As LongPtr, ByVal style As Long, EmHeight As Integer) As GpStatus
Public Declare PtrSafe Function GdipGetCellAscent Lib "gdiplus" (ByVal family As LongPtr, ByVal style As Long, CellAscent As Integer) As GpStatus
Public Declare PtrSafe Function GdipGetCellDescent Lib "gdiplus" (ByVal family As LongPtr, ByVal style As Long, CellDescent As Integer) As GpStatus
Public Declare PtrSafe Function GdipGetLineSpacing Lib "gdiplus" (ByVal family As LongPtr, ByVal style As Long, LineSpacing As Integer) As GpStatus
Public Declare PtrSafe Function GdipGetFamily Lib "gdiplus" (ByVal font As LongPtr, family As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetFontStyle Lib "gdiplus" (ByVal font As LongPtr, style As Long) As GpStatus
Public Declare PtrSafe Function GdipGetFontSize Lib "gdiplus" (ByVal font As LongPtr, size As Single) As GpStatus
Public Declare PtrSafe Function GdipGetFontUnit Lib "gdiplus" (ByVal font As LongPtr, unit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipGetFontHeight Lib "gdiplus" (ByVal font As LongPtr, ByVal Graphics As LongPtr, height As Single) As GpStatus
Public Declare PtrSafe Function GdipGetFontHeightGivenDPI Lib "gdiplus" (ByVal font As LongPtr, ByVal dpi As Single, height As Single) As GpStatus
Public Declare PtrSafe Function GdipGetLogFontA Lib "gdiplus" (ByVal font As LongPtr, ByVal Graphics As LongPtr, logfontA As LOGFONTA) As GpStatus
Public Declare PtrSafe Function GdipGetLogFontW Lib "gdiplus" (ByVal font As LongPtr, ByVal Graphics As LongPtr, logfontA As LOGFONTW) As GpStatus
Public Declare PtrSafe Function GdipGetFamilyName Lib "gdiplus" (ByVal family As LongPtr, ByVal Name As LongPtr, ByVal language As Integer) As GpStatus
Public Declare PtrSafe Function GdipIsStyleAvailable Lib "gdiplus" (ByVal family As LongPtr, ByVal style As Long, IsStyleAvailable As BOOL) As GpStatus
Public Declare PtrSafe Function GdipFontCollectionEnumerable Lib "gdiplus" (ByVal fontCollection As LongPtr, ByVal graphics As LongPtr, numFound As Long) As GpStatus
Public Declare PtrSafe Function GdipFontCollectionEnumerate Lib "gdiplus" (ByVal fontCollection As LongPtr, ByVal numSought As Long, gpfamilies As LongPtr, numFound As Long, ByVal Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetFontCollectionFamilyCount Lib "gdiplus" (ByVal fontCollection As LongPtr, numFound As Long) As GpStatus
Public Declare PtrSafe Function GdipGetFontCollectionFamilyList Lib "gdiplus" (ByVal fontCollection As LongPtr, ByVal numSought As Long, gpfamilies As LongPtr, numFound As Long) As GpStatus
Public Declare PtrSafe Function GdipNewPrivateFontCollection Lib "gdiplus" (fontCollection As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipPrivateAddFontFile Lib "gdiplus" (ByVal fontCollection As LongPtr, ByVal FileName As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeletePrivateFontCollection Lib "gdiplus" (fontCollection As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetPenBrushFill Lib "gdiplus" (ByVal pen As LongPtr, ByVal Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPenBrushFill Lib "gdiplus" (ByVal pen As LongPtr, Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateTexture Lib "gdiplus" (ByVal Image As LongPtr, ByVal wrapMode As GpWrapMode, texture As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateTexture2 Lib "gdiplus" (ByVal Image As LongPtr, ByVal wrapMode As GpWrapMode, ByVal x As Single, ByVal y As Single, ByVal width As Single, ByVal height As Single, texture As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateTexture2I Lib "gdiplus" (ByVal Image As LongPtr, ByVal wrapMode As GpWrapMode, ByVal x As Long, ByVal y As Long, ByVal width As Long, ByVal height As Long, texture As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateTextureIA Lib "gdiplus" (ByVal Image As LongPtr, ByVal imageAttributes As LongPtr, ByVal x As Single, ByVal y As Single, ByVal width As Single, ByVal height As Single, texture As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateTextureIAI Lib "gdiplus" (ByVal Image As LongPtr, ByVal imageAttributes As LongPtr, ByVal x As Long, ByVal y As Long, ByVal width As Long, ByVal height As Long, texture As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetTextureWrapMode Lib "gdiplus" (ByVal Brush As LongPtr, ByVal wrapMode As GpWrapMode) As GpStatus
Public Declare PtrSafe Function GdipGetTextureWrapMode Lib "gdiplus" (ByVal Brush As LongPtr, wrapMode As GpWrapMode) As GpStatus
Public Declare PtrSafe Function GdipGetTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMultiplyTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr, ByVal matrix As LongPtr, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipScaleTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr, ByVal sx As Single, ByVal sy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipRotateTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr, ByVal angle As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipTranslateTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr, ByVal Dx As Single, ByVal Dy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipResetTextureTransform Lib "gdiplus" (ByVal Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetTextureImage Lib "gdiplus" (ByVal Brush As LongPtr, Image As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetCompositingMode Lib "gdiplus" (ByVal Graphics As LongPtr, compositingMode As CompositingMode) As GpStatus
Public Declare PtrSafe Function GdipSetCompositingMode Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal compositingMode As CompositingMode) As GpStatus
Public Declare PtrSafe Function GdipSetRenderingOrigin Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal x As Long, ByVal y As Long) As GpStatus
Public Declare PtrSafe Function GdipGetRenderingOrigin Lib "gdiplus" (ByVal Graphics As LongPtr, x As Long, y As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPixelOffsetMode Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pixelOffsetMode As PixelOffsetMode) As GpStatus
Public Declare PtrSafe Function GdipGetPixelOffsetMode Lib "gdiplus" (ByVal Graphics As LongPtr, pixelOffsetMode As PixelOffsetMode) As GpStatus
Public Declare PtrSafe Function GdipSetCompositingQuality Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal compositingQuality As CompositingQuality) As GpStatus
Public Declare PtrSafe Function GdipGetCompositingQuality Lib "gdiplus" (ByVal Graphics As LongPtr, compositingQuality As CompositingQuality) As GpStatus
Public Declare PtrSafe Function GdipSetClipGraphics Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal srcgraphics As LongPtr, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipSetClipRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal x As Single, ByVal y As Single, ByVal width As Single, ByVal height As Single, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipSetClipRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal x As Long, ByVal y As Long, ByVal width As Long, ByVal height As Long, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipSetClipPath Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal path As LongPtr, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipSetClipRegion Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Region As LongPtr, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipSetClipHrgn Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal hRgn As LongPtr, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipResetClip Lib "gdiplus" (ByVal Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipTranslateClip Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal dx As Single, ByVal dy As Single) As GpStatus
Public Declare PtrSafe Function GdipTranslateClipI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal dx As Long, ByVal dy As Long) As GpStatus
Public Declare PtrSafe Function GdipGetClip Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetClipBounds Lib "gdiplus" (ByVal Graphics As LongPtr, rect As RECTF) As GpStatus
Public Declare PtrSafe Function GdipGetClipBoundsI Lib "gdiplus" (ByVal Graphics As LongPtr, rect As RECT) As GpStatus
Public Declare PtrSafe Function GdipIsClipEmpty Lib "gdiplus" (ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetVisibleClipBounds Lib "gdiplus" (ByVal Graphics As LongPtr, rect As RECTF) As GpStatus
Public Declare PtrSafe Function GdipGetVisibleClipBoundsI Lib "gdiplus" (ByVal Graphics As LongPtr, rect As RECT) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleClipEmpty Lib "gdiplus" (ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipCreateRegion Lib "gdiplus" (Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetEmpty Lib "gdiplus" (ByVal Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipTranslateRegion Lib "gdiplus" (ByVal Region As LongPtr, ByVal dx As Single, ByVal dy As Single) As GpStatus
Public Declare PtrSafe Function GdipTranslateRegionI Lib "gdiplus" (ByVal Region As LongPtr, ByVal dx As Long, ByVal dy As Long) As GpStatus
Public Declare PtrSafe Function GdipSetInfinite Lib "gdiplus" (ByVal Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetRegionScansCount Lib "gdiplus" (ByVal Region As LongPtr, count As Long, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetRegionScans Lib "gdiplus" (ByVal Region As LongPtr, rects As RECTF, count As Long, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetRegionScansI Lib "gdiplus" (ByVal Region As LongPtr, rects As RECT, count As Long, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetRegionDataSize Lib "gdiplus" (ByVal Region As LongPtr, bufferSize As Long) As GpStatus
Public Declare PtrSafe Function GdipGetRegionData Lib "gdiplus" (ByVal Region As LongPtr, buffer As Byte, ByVal bufferSize As Long, sizeFilled As Long) As GpStatus
Public Declare PtrSafe Function GdipCloneBrush Lib "gdiplus" (ByVal brush As LongPtr, cloneBrush as LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetBrushType Lib "gdiplus" (ByVal brush As LongPtr, type As GpBrushType) As GpStatus
Public Declare PtrSafe Function GdipSetPenMode Lib "gdiplus" (ByVal pen As LongPtr, ByVal penMode As GpPenAlignment) As GpStatus
Public Declare PtrSafe Function GdipGetPenMode Lib "gdiplus" (ByVal pen As LongPtr, penMode As GpPenAlignment) As GpStatus
Public Declare PtrSafe Function GdipCombineRegionRect Lib "gdiplus" (ByVal Region As LongPtr, Rect As RECTF, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipCombineRegionRectI Lib "gdiplus" (ByVal Region As LongPtr, Rect As RECT, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipCombineRegionRegion Lib "gdiplus" (ByVal Region As LongPtr, ByVal region2 As LongPtr, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipGetRegionHRgn Lib "gdiplus" (ByVal Region As LongPtr, ByVal Graphics As LongPtr, hRgn As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipIsEmptyRegion Lib "gdiplus" (ByVal Region As LongPtr, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsInfiniteRegion Lib "gdiplus" (ByVal Region As LongPtr, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsEqualRegion Lib "gdiplus" (ByVal Region As LongPtr, ByVal region2 As LongPtr, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipDeleteRegion Lib "gdiplus" (ByVal Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCombineRegionPath Lib "gdiplus" (ByVal Region As LongPtr, ByVal Path As LongPtr, ByVal combineMode As CombineMode) As GpStatus
Public Declare PtrSafe Function GdipCreateRegionPath Lib "gdiplus" (ByVal Path As LongPtr, Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateRegionRgnData Lib "gdiplus" (regionData As Byte, ByVal size As Long, Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateRegionHrgn Lib "gdiplus" (ByVal hRgn As LongPtr, Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMatrix Lib "gdiplus" (matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMatrix2 Lib "gdiplus" (ByVal m11 As Single, ByVal m12 As Single, ByVal m21 As Single, ByVal m22 As Single, ByVal Dx As Single, ByVal Dy As Single, matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMatrix3 Lib "gdiplus" (rect As RECTF, dstplg As POINTF, matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMatrix3I Lib "gdiplus" (rect As RECT, dstplg As POINT, matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipInvertMatrix Lib "gdiplus" (ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetMatrixElements Lib "gdiplus" (ByVal matrix As LongPtr, ByVal m11 As Single, ByVal m12 As Single, ByVal m21 As Single, ByVal m22 As Single, ByVal Dx As Single, ByVal Dy As Single) As GpStatus
Public Declare PtrSafe Function GdipGetMatrixElements Lib "gdiplus" (ByVal matrix As LongPtr, matrixOut As Single) As GpStatus
Public Declare PtrSafe Function GdipCloneMatrix Lib "gdiplus" (ByVal matrix As LongPtr, cloneMatrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMultiplyMatrix Lib "gdiplus" (ByVal matrix As LongPtr, ByVal matrix2 As LongPtr, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipTranslateMatrix Lib "gdiplus" (ByVal matrix As LongPtr, ByVal offsetX As Single, ByVal offsetY As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipRotateMatrix Lib "gdiplus" (ByVal matrix As LongPtr, ByVal angle As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipScaleMatrix Lib "gdiplus" (ByVal matrix As LongPtr, ByVal scaleX As Single, ByVal scaleY As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipShearMatrix Lib "gdiplus" (ByVal matrix As LongPtr, ByVal shearX As Single, ByVal shearY As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipIsMatrixInvertible Lib "gdiplus" (ByVal matrix As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsMatrixIdentity Lib "gdiplus" (ByVal matrix As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsMatrixEqual Lib "gdiplus" (ByVal matrix1 As LongPtr, ByVal matrix2 As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipDeleteMatrix Lib "gdiplus" (ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDrawPath Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipClonePath Lib "gdiplus" (ByVal Path As LongPtr, clonePath As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPathData Lib "gdiplus" (ByVal Path As LongPtr, pathData As GpPathData) As GpStatus
Public Declare PtrSafe Function GdipCloneRegion Lib "gdiplus" (ByVal Region As LongPtr, cloneRegion As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipTransformPath Lib "gdiplus" (ByVal Path As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipTransformRegion Lib "gdiplus" (ByVal Region As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipFillPath Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipFillRegion Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipIsVisiblePoint Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal X As Single, ByVal Y As Single, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisiblePointI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal X As Long, ByVal Y As Long, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal width As Single, ByVal height As Single, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal width As Long, ByVal y As Long, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisiblePathPoint Lib "gdiplus" (ByVal Region As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleRegionPoint Lib "gdiplus" (ByVal Region As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleRegionPointI Lib "gdiplus" (ByVal Region As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleRegionRect Lib "gdiplus" (ByVal Region As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal width As Single, ByVal height As Single, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsVisibleRegionRectI Lib "gdiplus" (ByVal Region As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal width As Long, ByVal height As Long, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipCreatePath Lib "gdiplus" (ByVal brushmode As GpFillMode, Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePath2 Lib "gdiplus" (pt as POINTF, bt As Byte, int As Long, ByVal fillmode As GpFillMode, Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePath2I Lib "gdiplus" (pt As POINT, bt As Byte, int As Long, ByVal fillmode As GpFillMode, Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePathIter Lib "gdiplus" (iterator As LongPtr,ByVal  Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeletePath Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeletePathIter Lib "gdiplus" (ByVal iterator As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipResetPath Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPathLastPoint Lib "gdiplus" (ByVal Path As LongPtr, lastPoint As POINTF) As GpStatus
Public Declare PtrSafe Function GdipCreatePathGradient Lib "gdiplus" (points As POINTF, ByVal count As Long, ByVal wrapMode As GpWrapMode, polyGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePathGradientI Lib "gdiplus" (points As POINT, ByVal count As Long, ByVal wrapMode As GpWrapMode, polyGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePathGradientFromPath Lib "gdiplus" (ByVal Path As LongPtr, polyGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientCenterColor Lib "gdiplus" (ByVal brush As LongPtr, colors As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientCenterColor Lib "gdiplus" (ByVal brush As LongPtr, ByVal colors As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientSurroundColorsWithCount Lib "gdiplus" (ByVal brush As LongPtr, colors As Long, count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientSurroundColorsWithCount Lib "gdiplus" (ByVal brush As LongPtr, colors As Long, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientPath Lib "gdiplus" (ByVal brush As LongPtr, ByVal path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientPath Lib "gdiplus" (ByVal brush As LongPtr, ByVal path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPathFillMode Lib "gdiplus" (ByVal Path As LongPtr, fillmode As GpFillMode) As GpStatus
Public Declare PtrSafe Function GdipSetPathFillMode Lib "gdiplus" (ByVal Path As LongPtr, ByVal fillmode As GpFillMode) As GpStatus
Public Declare PtrSafe Function GdipStartPathFigure Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetPathMarker Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipClearPathMarkers Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipReversePath Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipWarpPath Lib "gdiplus" (ByVal Path As LongPtr, byval matrix as LongLong, points as POINTF, byval count as Long, byval srcx as Single, ByVal srcy As Single, ByVal srcwidth As Single, byval srcheight As Single, byval warpMode as WarpMode, ByVal flatness As Single) As GpStatus
Public Declare PtrSafe Function GdipClosePathFigure Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipClosePathFigures Lib "gdiplus" (ByVal Path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipAddPathPath Lib "gdiplus" (ByVal Path As LongPtr, ByVal addingPath As LongPtr, ByVal bConnect As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathString Lib "gdiplus" (ByVal Path As LongPtr, ByVal str As LongPtr, ByVal length As Long, ByVal family As LongPtr, ByVal style As Long, ByVal emSize As Single, layoutRect As RECTF, ByVal StringFormat As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipPathIterNextSubpath Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, startIndex As Long, endIndex As Long, isClosed As BOOL) As GpStatus
Public Declare PtrSafe Function GdipPathIterNextSubpatPath Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, Byval path As LongPtr, isClosed As BOOL) As GpStatus
Public Declare PtrSafe Function GdipPathIterNextPathType Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, pathType As Byte, startIndex As Long, endIndex As Long) As GpStatus
Public Declare PtrSafe Function GdipPathIterNextMarker Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, startIndex As Long, endIndex As Long) As GpStatus
Public Declare PtrSafe Function GdipPathIterNextMarkerPath Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, startIndex As Long, endIndex As Long, ByVal path As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipPathIterGetCount Lib "gdiplus" (ByVal iterator As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipPathIterGetSubpathCount Lib "gdiplus" (ByVal iterator As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipPathIterIsValid Lib "gdiplus" (ByVal iterator As LongPtr, valid As BOOL) As GpStatus
Public Declare PtrSafe Function GdipPathIterHasCurve Lib "gdiplus" (ByVal iterator As LongPtr, hasCurve As BOOL) As GpStatus
Public Declare PtrSafe Function GdipPathIterRewind Lib "gdiplus" (ByVal iterator As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipPathIterEnumerate Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, points As POINTF, types As Byte, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipPathIterCopyData Lib "gdiplus" (ByVal iterator As LongPtr, resultCount As Long, points As POINTF, types As Byte, ByVal startIndex As Long, ByVal endIndex As Long) As GpStatus
Public Declare PtrSafe Function GdipFillPolygon Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, Points As POINTF, ByVal count As Long, ByVal fillMode As GpFillMode) As GpStatus
Public Declare PtrSafe Function GdipFillPolygonI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, Points As POINT, ByVal count As Long, ByVal fillMode As GpFillMode) As GpStatus
Public Declare PtrSafe Function GdipFillPolygon2 Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipFillPolygon2I Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipFillPie Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipFillPieI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawPolygon Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawPolygonI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawCurve Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawCurveI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawCurve2 Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawCurve2I Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawCurve3 Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long, ByVal offset As Long, ByVal numberOfSegments As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawCurve3I Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long, ByVal offset As Long, ByVal numberOfSegments As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawClosedCurve Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawClosedCurveI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawClosedCurve2 Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawClosedCurve2I Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipFillClosedCurve Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal brush As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipFillClosedCurveI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal brush As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipFillClosedCurve2 Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal brush As LongPtr, Points As POINTF, ByVal count As Long, ByVal fillMode As GpFillMode) As GpStatus
Public Declare PtrSafe Function GdipFillClosedCurve2I Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal brush As LongPtr, Points As POINT, ByVal count As Long, ByVal fillMode As GpFillMode) As GpStatus
Public Declare PtrSafe Function GdipDrawBezier Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal x1 As Single, ByVal y1 As Single, ByVal x2 As Single, ByVal y2 As Single, ByVal x3 As Single, ByVal y3 As Single, ByVal x4 As Single, ByVal y4 As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawBezierI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long, ByVal x3 As Long, ByVal y3 As Long, ByVal x4 As Long, ByVal y4 As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawBeziers Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawBeziersI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipBitmapGetPixel Lib "gdiplus" (ByVal bitmap As LongPtr, ByVal X As Long, ByVal Y As Long, Color As Long) As GpStatus
Public Declare PtrSafe Function GdipGraphicsClear Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal color As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageRawFormat Lib "gdiplus" (ByVal Image As LongPtr, Format As UUID) As GpStatus
Public Declare PtrSafe Function GdipGetDC Lib "gdiplus" (ByVal Graphics As LongPtr, hDC As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipReleaseDC Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal hDC As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipLoadImageFromFile Lib "gdiplus" (ByVal FileName As LongPtr, ByRef Image As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipLoadImageFromFileICM Lib "gdiplus" (ByVal FileName As LongPtr, ByRef Image As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromScan0 Lib "gdiplus" (ByVal Width As Long, ByVal Height As Long, ByVal stride As Long, ByVal format As PixelFormat, scan0 As Any, bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetPenDashStyle Lib "gdiplus" (ByVal pen As LongPtr, ByVal dashStyle As GpDashStyle) As GpStatus
Public Declare PtrSafe Function GdipGetPenDashStyle Lib "gdiplus" (ByVal pen As LongPtr, dashStyle As GpDashStyle) As GpStatus
Public Declare PtrSafe Function GdipGetPenDashCount Lib "gdiplus" (ByVal pen As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPenDashArray Lib "gdiplus" (ByVal pen As LongPtr, dash As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPenDashArray Lib "gdiplus" (ByVal pen As LongPtr, dash As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPenCompoundCount Lib "gdiplus" (ByVal pen As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPenCompoundArray Lib "gdiplus" (ByVal pen As LongPtr, dash As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPenCompoundArray Lib "gdiplus" (ByVal pen As LongPtr, dash As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPenWidth Lib "gdiplus" (ByVal pen As LongPtr, ByVal width As Single) As GpStatus
Public Declare PtrSafe Function GdipGetPenWidth Lib "gdiplus" (ByVal pen As LongPtr, width As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPenDashOffset Lib "gdiplus" (ByVal pen As LongPtr, ByVal offset As Single) As GpStatus
Public Declare PtrSafe Function GdipGetPenDashOffset Lib "gdiplus" (ByVal pen As LongPtr, offset As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPenUnit Lib "gdiplus" (ByVal pen As LongPtr, ByVal unit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipGetPenUnit Lib "gdiplus" (ByVal pen As LongPtr, unit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipGetPenFillType Lib "gdiplus" (ByVal pen As LongPtr, type As GpPenType) As GpStatus
Public Declare PtrSafe Function GdipCreateHatchBrush Lib "gdiplus" (ByVal style As GpHatchStyle, ByVal forecolr As Long, ByVal backcolr As Long, Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetHatchStyle Lib "gdiplus" (ByVal brush As LongPtr, style As GpHatchStyle) As GpStatus
Public Declare PtrSafe Function GdipGetHatchForegroundColor Lib "gdiplus" (ByVal brush As LongPtr, forecol As Long) As GpStatus
Public Declare PtrSafe Function GdipGetHatchBackgroundColor Lib "gdiplus" (ByVal brush As LongPtr, backcol As Long) As GpStatus
Public Declare PtrSafe Function GdipBitmapSetResolution Lib "gdiplus" (ByVal bitmap As LongPtr, ByVal xdpi As Single, ByVal ydpi As Single) As GpStatus
Public Declare PtrSafe Function GdipCreateFromHDC Lib "gdiplus" (ByVal hDC As LongPtr, Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFromHDC2 Lib "gdiplus" (ByVal hDC As LongPtr, ByVal hDevice As LongPtr, Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFromHWND Lib "gdiplus" (ByVal hwnd As LongPtr, Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFromHWNDICM Lib "gdiplus" (ByVal hwnd As LongPtr, Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromDirectDrawSurface Lib "gdiplus" (surface As Any, bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromGraphics Lib "gdiplus" (ByVal Width As Long, ByVal Height As Long, ByVal Graphics As LongPtr, bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromGdiDib Lib "gdiplus" (gdiBitmapInfo As BitmapInfo, ByVal gdiBitmapData As LongPtr, bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCloneImage Lib "gdiplus" (ByVal Image As LongPtr, cloneImage As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetImagePixelFormat Lib "gdiplus" (ByVal Image As LongPtr, format As PixelFormat) As GpStatus
Public Declare PtrSafe Function GdipGetImageThumbnail Lib "gdiplus" (ByVal Image As LongPtr, ByVal thumbWidth As Long, ByVal thumbHeight As Long, thumbImage As LongPtr, ByVal callback As LongPtr, callbackData As Any) As GpStatus
Public Declare PtrSafe Function GdipGetEncoderParameterListSize Lib "gdiplus" (ByVal Image As LongPtr, clsidEncoder As UUID, size As Long) As GpStatus
Public Declare PtrSafe Function GdipGetEncoderParameterList Lib "gdiplus" (ByVal Image As LongPtr, clsidEncoder As UUID, ByVal size As Long, buffer As Any) As GpStatus
Public Declare PtrSafe Function GdipImageGetFrameDimensionsCount Lib "gdiplus" (ByVal Image As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipImageGetFrameDimensionsList Lib "gdiplus" (ByVal Image As LongPtr, dimensionIDs As UUID, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipImageGetFrameCount Lib "gdiplus" (ByVal Image As LongPtr, dimensionID As UUID, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPropertySize Lib "gdiplus" (ByVal Image As LongPtr, totalBufferSize As Long, numProperties As Long) As GpStatus
Public Declare PtrSafe Function GdipGetAllPropertyItems Lib "gdiplus" (ByVal Image As LongPtr, ByVal totalBufferSize As Long, ByVal numProperties As Long, allItems As Any) As GpStatus
Public Declare PtrSafe Function GdipRemovePropertyItem Lib "gdiplus" (ByVal Image As LongPtr, ByVal propId As Long) As GpStatus
Public Declare PtrSafe Function GdipAlloc Lib "gdiplus.dll" (ByVal Size As LongPtr) As LongPtr
Public Declare PtrSafe Function GdipFree Lib "gdiplus.dll" (ByVal Ptr As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSaveImageToStream Lib "gdiplus" (ByVal Image As LongPtr, ByVal stream As IStream, clsidEncoder As UUID, encoderParams As Any) As GpStatus
Public Declare PtrSafe Function GdipSaveImageToFile Lib "gdiplus" (ByVal Image As LongPtr, ByVal FileName As LongPtr, clsidEncoder As UUID, encoderParams As Any) As GpStatus
Public Declare PtrSafe Function GdipSaveAdd Lib "gdiplus" (ByVal Image As LongPtr, encoderParams As Any) As GpStatus
Public Declare PtrSafe Function GdipSaveAddImage Lib "gdiplus" (ByVal Image As LongPtr, ByVal newImage As LongPtr, encoderParams As Any) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromFile Lib "gdiplus" (ByVal FileName As LongPtr, ByRef bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromFileICM Lib "gdiplus" (ByVal FileName As LongPtr, ByRef bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromStream Lib "gdiplus" (ByVal stream As IStream, ByRef bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromStreamICM Lib "gdiplus" (ByVal stream As IStream, ByRef bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromResource Lib "gdiplus" (ByVal hInstance As LongPtr, ByVal lpBitmapName As LongPtr, ByRef bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPropertyItem Lib "gdiplus" (ByVal Image As LongPtr, ByVal propId As Long, ByVal propSize As Long, ByRef buffer As Any) As GpStatus
Public Declare PtrSafe Function GdipGetPropertyItemSize Lib "gdiplus" (ByVal Image As LongPtr, ByVal propId As Long, ByRef Size As Long) As GpStatus
Public Declare PtrSafe Function GdipDisposeImage Lib "gdiplus" (ByVal Image As LongPtr) As GpStatus
[Description("NOTE: This API is a placeholder until tB supports no-vtable interfaces") ]
Public Declare PtrSafe Function GdipImageSetAbort Lib "gdiplus" (ByVal pImage As LongPtr, pIAbort As Any /*GdiplusAbort*/) As GpStatus
[Description("NOTE: This API is a placeholder until tB supports no-vtable interfaces") ]
Public Declare PtrSafe Function GdipGraphicsSetAbort Lib "gdiplus" (ByVal pGraphics As LongPtr, pIAbort As Any /*GdiplusAbort*/) As GpStatus
Public Declare PtrSafe Function GdiplusStartup Lib "gdiplus" (token As LongPtr, LInput As GdiplusStartupInput, Optional ByVal lOutPut As LongPtr = 0) As GpStatus
Public Declare PtrSafe Function GdiplusShutdown Lib "gdiplus" (ByVal token As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipFindFirstImageItem Lib "gdiplus" (ByVal Image As LongPtr, item As ImageItemData) As GpStatus
Public Declare PtrSafe Function GdipFindNextImageItem Lib "gdiplus" (ByVal Image As LongPtr, item As ImageItemData) As GpStatus
Public Declare PtrSafe Function GdipGetImageItemData Lib "gdiplus" (ByVal Image As LongPtr, item As ImageItemData) As GpStatus
Public Declare PtrSafe Function GdipImageForceValidation Lib "gdiplus" (ByVal Image As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateHBITMAPFromBitmap Lib "gdiplus" (ByVal bitmap As LongPtr, ByRef hbmReturn As LongPtr, ByVal Background As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromHBITMAP Lib "gdiplus" (ByVal hbm As LongPtr, ByVal hpal As LongPtr, bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateHICONFromBitmap Lib "gdiplus" (ByVal bitmap As LongPtr, hbmReturn As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateBitmapFromHICON Lib "gdiplus" (ByVal hicon As LongPtr, bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipImageRotateFlip Lib "gdiplus" (ByVal Image As LongPtr, ByVal rfType As RotateFlipType) As GpStatus
Public Declare PtrSafe Function GdipImageSelectActiveFrame Lib "gdiplus" (ByVal Image As LongPtr, ByRef dimensionID As UUID, ByVal frameIndex As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageBounds Lib "gdiplus" (ByVal Image As LongPtr, srcRect As RECTF, srcUnit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipGetImageDimension Lib "gdiplus" (ByVal Image As LongPtr, ByRef Width As Single, ByRef Height As Single) As GpStatus
Public Declare PtrSafe Function GdipGetImageType Lib "gdiplus" (ByVal Image As LongPtr, type As ImageType) As GpStatus
Public Declare PtrSafe Function GdipSetPropertyItem Lib "gdiplus" (ByVal nImage As LongPtr, item As PropertyItem) As GpStatus
Public Declare PtrSafe Function GdipGetImageHorizontalResolution Lib "gdiplus" (ByVal Image As LongPtr, resolution As Single) As GpStatus
Public Declare PtrSafe Function GdipGetImageVerticalResolution Lib "gdiplus" (ByVal Image As LongPtr, resolution As Single) As GpStatus
Public Declare PtrSafe Function GdipGetImageFlags Lib "gdiplus" (ByVal Image As LongPtr, flags As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImagePalette Lib "gdiplus" (ByVal Image As LongPtr, palette As ColorPalette, ByVal size As Long) As GpStatus
Public Declare PtrSafe Function GdipSetImagePalette Lib "gdiplus" (ByVal Image As LongPtr, palette As ColorPalette) As GpStatus
Public Declare PtrSafe Function GdipGetImagePaletteSize Lib "gdiplus" (ByVal Image As LongPtr, size As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPropertyCount Lib "gdiplus" (ByVal Image As LongPtr, numOfProperty As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPropertyIdList Lib "gdiplus" (ByVal Image As LongPtr, ByVal numOfProperty As Long, list As Long) As GpStatus
Public Declare PtrSafe Function GdipLoadImageFromStream Lib "gdiplus" (ByVal stream As IStream, ByRef Image As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipLoadImageFromStreamICM Lib "gdiplus" (ByVal stream As IStream, ByRef Image As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetImageHeight Lib "gdiplus" (ByVal Image As LongPtr, Height As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageWidth Lib "gdiplus" (ByVal Image As LongPtr, Width As Long) As GpStatus
Public Declare PtrSafe Function GdipCloneBitmapArea Lib "gdiplus" (ByVal x As Single, ByVal y As Single, ByVal width As Single, ByVal height As Single, ByVal format As PixelFormat, ByVal srcBitmap As LongPtr, dstBitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCloneBitmapAreaI Lib "gdiplus" (ByVal x As Long, ByVal y As Long, ByVal width As Long, ByVal height As Long, ByVal format As PixelFormat, ByVal srcBitmap As LongPtr, dstBitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipBitmapLockBits Lib "gdiplus" (ByVal bitmap As LongPtr, Rect As RECT, ByVal flags As Long, ByVal format As PixelFormat, lockedBitmapData As BitmapData) As GpStatus
Public Declare PtrSafe Function GdipBitmapUnlockBits Lib "gdiplus" (ByVal bitmap As LongPtr, lockedBitmapData As BitmapData) As GpStatus
Public Declare PtrSafe Function GdipResetWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMultiplyWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal matrix As LongPtr, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipScaleWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal sx As Single, ByVal sy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipTranslateWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Dx As Single, ByVal Dy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipRotateWorldTransform Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal angle As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipResetPageTransform Lib "gdiplus" (ByVal Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPageUnit Lib "gdiplus" (ByVal Graphics As LongPtr, unit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipGetPageScale Lib "gdiplus" (ByVal Graphics As LongPtr, scale As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPageUnit Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal unit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipSetPageScale Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal scale As Single) As GpStatus
Public Declare PtrSafe Function GdipGetDpiX Lib "gdiplus" (ByVal Graphics As LongPtr, dpi As Single) As GpStatus
Public Declare PtrSafe Function GdipGetDpiY Lib "gdiplus" (ByVal Graphics As LongPtr, dpi As Single) As GpStatus
Public Declare PtrSafe Function GdipTransformPoints Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal destSpace As GpCoordinateSpace, ByVal srcSpace As GpCoordinateSpace, points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipTransformPointsI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal destSpace As GpCoordinateSpace, ByVal srcSpace As GpCoordinateSpace, points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetNearestColor Lib "gdiplus" (ByVal Graphics As LongPtr, argb As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateStringFormat Lib "gdiplus" (ByVal formatAttributes As Long, ByVal language As Integer, format As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipStringFormatGetGenericDefault Lib "gdiplus" (format As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipStringFormatGetGenericTypographic Lib "gdiplus" (format As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCloneStringFormat Lib "gdiplus" (ByVal format As LongPtr, newFormat As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeleteStringFormat Lib "gdiplus" (ByVal format As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatFlags Lib "gdiplus" (ByVal format As LongPtr, ByVal flags As Long) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatFlags Lib "gdiplus" (ByVal format As LongPtr, flags As Long) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatAlign Lib "gdiplus" (ByVal format As LongPtr, ByVal align As StringAlignment) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatAlign Lib "gdiplus" (ByVal format As LongPtr, ByVal align As StringAlignment) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatLineAlign Lib "gdiplus" (ByVal format As LongPtr, ByVal align As StringAlignment) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatLineAlign Lib "gdiplus" (ByVal format As LongPtr, align As StringAlignment) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatTrimming Lib "gdiplus" (ByVal format As LongPtr, ByVal trimming As StringTrimming) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatTrimming Lib "gdiplus" (ByVal format As LongPtr, trimming As StringTrimming) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatHotkeyPrefix Lib "gdiplus" (ByVal format As LongPtr, ByVal hotkeyPrefix As Long) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatHotkeyPrefix Lib "gdiplus" (ByVal format As LongPtr, hotkeyPrefix As Long) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatTabStops Lib "gdiplus" (ByVal format As LongPtr, ByVal firstTabOffset As Single, ByVal count As Long, tabStops As Single) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatTabStops Lib "gdiplus" (ByVal format As LongPtr, ByVal count As Long, firstTabOffset As Single, tabStops As Single) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatTabStopCount Lib "gdiplus" (ByVal format As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatDigitSubstitution Lib "gdiplus" (ByVal format As LongPtr, ByVal language As Integer, ByVal substitute As StringDigitSubstitute) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatDigitSubstitution Lib "gdiplus" (ByVal format As LongPtr, language As Integer, substitute As StringDigitSubstitute) As GpStatus
Public Declare PtrSafe Function GdipGetStringFormatMeasurableCharacterRangeCount Lib "gdiplus" (ByVal format As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetStringFormatMeasurableCharacterRanges Lib "gdiplus" (ByVal format As LongPtr, ByVal rangeCount As Long, ranges As CharacterRange) As GpStatus
Public Declare PtrSafe Function GdipMeasureString Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal str As LongPtr, ByVal length As Long, ByVal font As LongPtr, layoutRect As RECTF, ByVal StringFormat As LongPtr, boundingBox As RECTF, codepointsFitted As Long, linesFilled As Long) As GpStatus
Public Declare PtrSafe Function GdipMeasureCharacterRanges Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal str As LongPtr, ByVal length As Long, ByVal font As LongPtr, layoutRect As RECTF, ByVal StringFormat As LongPtr, ByVal regionCount As Long, regions As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetTextRenderingHint Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal mode As TextRenderingHint) As GpStatus
Public Declare PtrSafe Function GdipGetTextRenderingHint Lib "gdiplus" (ByVal Graphics As LongPtr, mode As TextRenderingHint) As GpStatus
Public Declare PtrSafe Function GdipSetTextContrast Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal contrast As Long) As GpStatus
Public Declare PtrSafe Function GdipGetTextContrast Lib "gdiplus" (ByVal Graphics As LongPtr, contrast As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawString Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal str As LongPtr, ByVal length As Long, ByVal font As LongPtr, layoutRect As RECTF, ByVal StringFormat As LongPtr, ByVal Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDrawDriverString Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal str As LongPtr, ByVal length As Long, ByVal font As LongPtr, ByVal Brush As LongPtr, positions As POINTF, ByVal flags As Long, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMeasureDriverString Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal str As LongPtr, ByVal length As Long, ByVal font As LongPtr, positions As POINTF, ByVal flags As Long, ByVal matrix As LongPtr, boundingBox As RECTF) As GpStatus
Public Declare PtrSafe Function GdipCreateFont Lib "gdiplus" (ByVal fontFamily As LongPtr, ByVal emSize As Single, ByVal style As Long, ByVal unit As GpUnit, font As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFontFromDC Lib "gdiplus" (ByVal hdc As LongPtr, font As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFontFromLogfontA Lib "gdiplus" (ByVal hdc As LongPtr, logfont As LOGFONTA, font As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFontFromLogfontW Lib "gdiplus" (ByVal hdc As LongPtr, logfont As LOGFONTW, font As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCloneFont Lib "gdiplus" (ByVal font As LongPtr, cloneFont As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeleteFont Lib "gdiplus" (ByVal font As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetGenericFontFamilySerif Lib "gdiplus" (nativeFamily As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetGenericFontFamilySansSerif Lib "gdiplus" (nativeFamily As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetGenericFontFamilyMonospace Lib "gdiplus" (nativeFamily As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateFontFamilyFromName Lib "gdiplus" (ByVal Name As LongPtr, ByVal fontCollection As LongPtr, fontFamily As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeleteFontFamily Lib "gdiplus" (ByVal fontFamily As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeleteGraphics Lib "gdiplus" (ByVal Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSaveGraphics Lib "gdiplus" (ByVal Graphics As LongPtr, state As Long) As GpStatus
Public Declare PtrSafe Function GdipRestoreGraphics Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal state As Long) As GpStatus
Public Declare PtrSafe Function GdipFlush Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal intetion As GpFlushIntention) As GpStatus
Public Declare PtrSafe Function GdipCreateHalftonePalette Lib "gdiplus" () As LongPtr
Public Declare PtrSafe Function GdipGetInterpolationMode Lib "gdiplus" (ByVal Graphics As LongPtr, interpolation As InterpolationMode) As GpStatus
Public Declare PtrSafe Function GdipSetInterpolationMode Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal interpolation As InterpolationMode) As GpStatus
Public Declare PtrSafe Function GdipSetSmoothingMode Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal smoothingMode As SmoothingMode) As GpStatus
Public Declare PtrSafe Function GdipGetSmoothingMode Lib "gdiplus" (ByVal Graphics As LongPtr, smoothingMode As SmoothingMode) As GpStatus
Public Declare PtrSafe Function GdipDrawLine Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X1 As Single, ByVal Y1 As Single, ByVal X2 As Single, ByVal Y2 As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawLineI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawLines Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawLinesI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawPie Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal x As Single, ByVal y As Single, ByVal width As Single, ByVal height As Single, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawPieI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal x As Long, ByVal y As Long, ByVal width As Long, ByVal height As Long, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPenStartCap Lib "gdiplus" (ByVal pen As LongPtr, ByVal startCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipSetPenEndCap Lib "gdiplus" (ByVal pen As LongPtr, ByVal endCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipGetPenStartCap Lib "gdiplus" (ByVal pen As LongPtr, startCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipGetPenEndCap Lib "gdiplus" (ByVal pen As LongPtr, endCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipGetPenCustomStartCap Lib "gdiplus" (ByVal pen As LongPtr, customCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPenCustomEndCap Lib "gdiplus" (ByVal pen As LongPtr, customCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetPenLineJoin Lib "gdiplus" (ByVal pen As LongPtr, ByVal lineJoin As GpLineJoin) As GpStatus
Public Declare PtrSafe Function GdipGetPenLineJoin Lib "gdiplus" (ByVal pen As LongPtr, lineJoin As GpLineJoin) As GpStatus
Public Declare PtrSafe Function GdipSetPenLineCap197819 Lib "gdiplus" (ByVal pen As LongPtr, ByVal startCap As GpLineCap, ByVal endCap As GpLineCap, ByVal dashCap As GpDashCap) As GpStatus
Public Declare PtrSafe Function GdipSetPenDashCap197819 Lib "gdiplus" (ByVal pen As LongPtr, ByVal dashCap As GpDashCap) As GpStatus
Public Declare PtrSafe Function GdipGetPenDashCap197819 Lib "gdiplus" (ByVal pen As LongPtr, dashCap As GpDashCap) As GpStatus
Public Declare PtrSafe Function GdipSetPenMiterLimit Lib "gdiplus" (ByVal pen As LongPtr, ByVal miterLimit As Single) As GpStatus
Public Declare PtrSafe Function GdipGetPenMiterLimit Lib "gdiplus" (ByVal pen As LongPtr, miterLimit As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPenColor Lib "gdiplus" (ByVal pen As LongPtr, ByVal argb as Long) As GpStatus
Public Declare PtrSafe Function GdipGetPenColor Lib "gdiplus" (ByVal pen As LongPtr, argb As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageGraphicsContext Lib "gdiplus" (ByVal Image As LongPtr, Graphics As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePen1 Lib "gdiplus" (ByVal Color As Long, ByVal Width As Single, ByVal unit As GpUnit, pen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreatePen2 Lib "gdiplus" (ByVal brush As LongPtr, ByVal Width As Single, ByVal unit As GpUnit, pen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipClonePen Lib "gdiplus" (ByVal pen As LongPtr, clonepen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeletePen Lib "gdiplus" (ByVal pen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipBitmapSetPixel Lib "gdiplus" (ByVal bitmap As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Color As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateImageAttributes Lib "gdiplus" (imageattr As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCloneImageAttributes Lib "gdiplus" (ByVal imageattr As LongPtr, cloneImageattr As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesColorMatrix Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, colourMatrix As ColorMatrix, grayMatrix As ColorMatrix, ByVal flags As ColorMatrixFlags) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesToIdentity Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType) As GpStatus
Public Declare PtrSafe Function GdipDisposeImageAttributes Lib "gdiplus" (ByVal imageattr As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesThreshold Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, ByVal threshold As Single) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesGamma Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, ByVal gamma As Single) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributeNoOp Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesColorKeys Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, ByVal colorLow As Long, ByVal colorHigh As Long) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesOutputChannel Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, ByVal channelFlags As ColorChannelFlags) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesOutputChannelColorProfile Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, ByVal colorProfileFilename As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesRemapTable Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType, ByVal enableFlag As BOOL, ByVal mapSize As Long, map As ColorMap) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesWrapMode Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal wrap As GpWrapMode, ByVal argb As Long, ByVal bClamp As Long) As GpStatus
Public Declare PtrSafe Function GdipSetImageAttributesICMMode Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal on As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetImageAttributesAdjustedPalette Lib "gdiplus" (ByVal imageattr As LongPtr, colorPalette As ColorPalette, ByVal colorAdjustType As ColorAdjustType) As GpStatus
Public Declare PtrSafe Function GdipResetImageAttributes Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal type As ColorAdjustType) As GpStatus
Public Declare PtrSafe Function GdipCreateSolidFill Lib "gdiplus" (ByVal argb As Long, Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetSolidFillColor Lib "gdiplus" (ByVal Brush As LongPtr, ByVal color As Long) As GpStatus
Public Declare PtrSafe Function GdipGetSolidFillColor Lib "gdiplus" (ByVal Brush As LongPtr, color As Long) As GpStatus
Public Declare PtrSafe Function GdipDeleteBrush Lib "gdiplus" (ByVal Brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDrawRectangle Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawRectangleI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawRectangles Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, rects As RECTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawRectanglesI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, rects As RECT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawEllipse Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawEllipseI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawArc Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawArcI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal pen As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipFillEllipse Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipFillEllipseI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateAdjustableArrowCap Lib "gdiplus" (ByVal Height As Single, ByVal Width As Single, ByVal isFilled As Long, cap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetAdjustableArrowCapHeight Lib "gdiplus" (ByVal cap As LongPtr, ByVal height As Single) As GpStatus
Public Declare PtrSafe Function GdipGetAdjustableArrowCapHeight Lib "gdiplus" (ByVal cap As LongPtr, height As Single) As GpStatus
Public Declare PtrSafe Function GdipSetAdjustableArrowCapWidth Lib "gdiplus" (ByVal cap As LongPtr, ByVal width As Single) As GpStatus
Public Declare PtrSafe Function GdipGetAdjustableArrowCapWidth Lib "gdiplus" (ByVal cap As LongPtr, width As Single) As GpStatus
Public Declare PtrSafe Function GdipSetAdjustableArrowCapMiddleInset Lib "gdiplus" (ByVal cap As LongPtr, ByVal middleInset As Single) As GpStatus
Public Declare PtrSafe Function GdipGetAdjustableArrowCapMiddleInset Lib "gdiplus" (ByVal cap As LongPtr, middleInset As Single) As GpStatus
Public Declare PtrSafe Function GdipSetAdjustableArrowCapFillState Lib "gdiplus" (ByVal cap As LongPtr, ByVal fillState As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetAdjustableArrowCapFillState Lib "gdiplus" (ByVal cap As LongPtr, fillState As BOOL) As GpStatus
Public Declare PtrSafe Function GdipSetPenCustomStartCap Lib "gdiplus" (ByVal pen As LongPtr, ByVal customCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetPenCustomEndCap Lib "gdiplus" (ByVal pen As LongPtr, ByVal customCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateCustomLineCap Lib "gdiplus" (ByVal fillPath As LongPtr, ByVal strokePath As LongPtr, ByVal baseCap As GpLineCap, ByVal baseInset As Single, customCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeleteCustomLineCap Lib "gdiplus" (ByVal customCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCloneCustomLineCap Lib "gdiplus" (ByVal customCap As LongPtr, clonedCap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetCustomLineCapType Lib "gdiplus" (ByVal customCap As LongPtr, capType As CustomLineCapType) As GpStatus
Public Declare PtrSafe Function GdipSetCustomLineCapStrokeCaps Lib "gdiplus" (ByVal customCap As LongPtr, ByVal startCap As GpLineCap, ByVal endCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipGetCustomLineCapStrokeCaps Lib "gdiplus" (ByVal customCap As LongPtr, startCap As GpLineCap, endCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipSetCustomLineCapStrokeJoin Lib "gdiplus" (ByVal customCap As LongPtr, ByVal lineJoin As GpLineJoin) As GpStatus
Public Declare PtrSafe Function GdipGetCustomLineCapStrokeJoin Lib "gdiplus" (ByVal customCap As LongPtr, lineJoin As GpLineJoin) As GpStatus
Public Declare PtrSafe Function GdipSetCustomLineCapBaseCap Lib "gdiplus" (ByVal customCap As LongPtr, ByVal baseCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipGetCustomLineCapBaseCap Lib "gdiplus" (ByVal customCap As LongPtr, baseCap As GpLineCap) As GpStatus
Public Declare PtrSafe Function GdipSetCustomLineCapBaseInset Lib "gdiplus" (ByVal customCap As LongPtr, ByVal inset As Single) As GpStatus
Public Declare PtrSafe Function GdipGetCustomLineCapBaseInset Lib "gdiplus" (ByVal customCap As LongPtr, inset As Single) As GpStatus
Public Declare PtrSafe Function GdipSetCustomLineCapWidthScale Lib "gdiplus" (ByVal customCap As LongPtr, ByVal widthScale As Single) As GpStatus
Public Declare PtrSafe Function GdipGetCustomLineCapWidthScale Lib "gdiplus" (ByVal customCap As LongPtr, widthScale As Single) As GpStatus
Public Declare PtrSafe Function GdipFlattenPath Lib "gdiplus" (ByVal Path As LongPtr, Optional ByVal matrix As LongPtr = 0, Optional ByVal flatness As Single = 0.25) As GpStatus
Public Declare PtrSafe Function GdipWindingModeOutline Lib "gdiplus" (ByVal Path As LongPtr, Optional ByVal matrix As LongPtr = 0, Optional ByVal flatness As Single = 0.25) As GpStatus
Public Declare PtrSafe Function GdipWidenPath Lib "gdiplus" (ByVal Path As LongPtr, Optional ByVal pen As LongPtr = 0, Optional ByVal matrix As LongPtr = 0, Optional ByVal flatness As Single = 0.25) As GpStatus
Public Declare PtrSafe Function GdipGetPointCount Lib "gdiplus" (ByVal Path As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathPoints Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathPointsI Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathTypes Lib "gdiplus" (ByVal Path As LongPtr, types As Any, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientRect Lib "gdiplus" (ByVal brush As LongPtr, rect As RECTF) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientRectI Lib "gdiplus" (ByVal brush As LongPtr, rect As RECT) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientPointCount Lib "gdiplus" (ByVal brush As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientSurroundColorCount Lib "gdiplus" (ByVal brush As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientGammaCorrection Lib "gdiplus" (ByVal brush As LongPtr, ByVal useGammaCorrection As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientGammaCorrection Lib "gdiplus" (ByVal brush As LongPtr, useGammaCorrection As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientBlendCount Lib "gdiplus" (ByVal brush As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Single, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Single, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientPresetBlendCount Lib "gdiplus" (ByVal brush As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientPresetBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Long, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientPresetBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Long, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientSigmaBlend Lib "gdiplus" (ByVal brush As LongPtr, ByVal focus As Single, ByVal scale As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientLinearBlend Lib "gdiplus" (ByVal brush As LongPtr, ByVal focus As Single, ByVal scale As Single) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientWrapMode Lib "gdiplus" (ByVal brush As LongPtr, ByVal wrapMode As GpWrapMode) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientWrapMode Lib "gdiplus" (ByVal brush As LongPtr, wrapMode As GpWrapMode) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipResetPathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMultiplyPathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal matrix As LongPtr, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipTranslatePathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal dx As Single, ByVal dy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipScalePathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal sx As Single, ByVal sy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipRotatePathGradientTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal angle As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientFocusScales Lib "gdiplus" (ByVal brush As LongPtr, ByVal xScale As Single, ByVal yScale As Single) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientFocusScales Lib "gdiplus" (ByVal brush As LongPtr, xScale As Single, yScale As Single) As GpStatus
Public Declare PtrSafe Function GdipBitmapConvertFormat Lib "gdiplus" (ByVal pInputBitmap As LongPtr, ByVal format As PixelFormat, ByVal dithertype As DitherType, ByVal palettetype As PaletteType, palette As ColorPalette, ByVal alphaThresholdPercent As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathLine Lib "gdiplus" (ByVal Path As LongPtr, ByVal X1 As Single, ByVal Y1 As Single, ByVal X2 As Single, ByVal Y2 As Single) As GpStatus
Public Declare PtrSafe Function GdipCreateLineBrush Lib "gdiplus" (point1 As POINTF, point2 As POINTF, ByVal color1 As Long, ByVal color2 As Long, ByVal wrapMode As GpWrapMode, lineGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateLineBrushI Lib "gdiplus" (point1 As POINT, point2 As POINT, ByVal color1 As Long, ByVal color2 As Long, ByVal wrapMode As GpWrapMode, lineGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateLineBrushFromRect Lib "gdiplus" (Rect As RECTF, ByVal color1 As Long, ByVal color2 As Long, ByVal mode As LinearGradientMode, ByVal wrapMode As GpWrapMode, lineGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateLineBrushFromRectWithAngle Lib "gdiplus" (Rect As RECTF, ByVal color1 As Long, ByVal color2 As Long, ByVal angle As Single, ByVal isAngleScalable As BOOL, ByVal wrapMode As GpWrapMode, lineGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateLineBrushFromRectWithAngleI Lib "gdiplus" (Rect As RECT, ByVal color1 As Long, ByVal color2 As Long, ByVal angle As Single, ByVal isAngleScalable As BOOL, ByVal wrapMode As GpWrapMode, lineGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetLineColors Lib "gdiplus" (ByVal brush As LongPtr, ByVal color1 As Long, ByVal color2 As Long) As GpStatus
Public Declare PtrSafe Function GdipGetLineColors Lib "gdiplus" (ByVal brush As LongPtr, color1 As Long, color2 As Long) As GpStatus
Public Declare PtrSafe Function GdipGetLineRect Lib "gdiplus" (ByVal brush As LongPtr, rect As RECTF) As GpStatus
Public Declare PtrSafe Function GdipGetLineRectI Lib "gdiplus" (ByVal brush As LongPtr, rect As RECT) As GpStatus
Public Declare PtrSafe Function GdipSetLineGammaCorrection Lib "gdiplus" (ByVal brush As LongPtr, ByVal useGammaCorrection As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetLineGammaCorrection Lib "gdiplus" (ByVal brush As LongPtr, useGammaCorrection As BOOL) As GpStatus
Public Declare PtrSafe Function GdipGetLineBlendCount Lib "gdiplus" (ByVal brush As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetLineBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Single, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetLineBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Single, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetLinePresetBlendCount Lib "gdiplus" (ByVal brush As LongPtr, count As Long) As GpStatus
Public Declare PtrSafe Function GdipGetLinePresetBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Long, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetLinePresetBlend Lib "gdiplus" (ByVal brush As LongPtr, blend As Long, positions As Single, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipSetLineSigmaBlend Lib "gdiplus" (ByVal brush As LongPtr, ByVal focus As Single, ByVal scale As Single) As GpStatus
Public Declare PtrSafe Function GdipSetLineLinearBlend Lib "gdiplus" (ByVal brush As LongPtr, ByVal focus As Single, ByVal scale As Single) As GpStatus
Public Declare PtrSafe Function GdipSetLineWrapMode Lib "gdiplus" (ByVal brush As LongPtr, ByVal wrapMode As GpWrapMode) As GpStatus
Public Declare PtrSafe Function GdipGetLineWrapMode Lib "gdiplus" (ByVal brush As LongPtr, wrapMode As GpWrapMode) As GpStatus
Public Declare PtrSafe Function GdipSetLineTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetLineTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipResetLineTransform Lib "gdiplus" (ByVal brush As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMultiplyLineTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal matrix As LongPtr, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipTranslateLineTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal dx As Single, ByVal dy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipScaleLineTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal sx As Single, ByVal sy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipRotateLineTransform Lib "gdiplus" (ByVal brush As LongPtr, ByVal angle as Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipSetPenTransform Lib "gdiplus" (ByVal pen As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetPenTransform Lib "gdiplus" (ByVal pen As LongPtr, ByVal matrix As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipResetPenTransform Lib "gdiplus" (ByVal pen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipMultiplyPenTransform Lib "gdiplus" (ByVal pen As LongPtr, ByVal matrix As LongPtr, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipTranslatePenTransform Lib "gdiplus" (ByVal pen As LongPtr, ByVal dx As Single, ByVal dy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipScalePenTransform Lib "gdiplus" (ByVal pen As LongPtr, ByVal sx As Single, ByVal sy As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipRotatePenTransform Lib "gdiplus" (ByVal pen As LongPtr, ByVal angle As Single, ByVal order As GpMatrixOrder) As GpStatus
Public Declare PtrSafe Function GdipIsOutlineVisiblePathPoint Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal pen As LongPtr, ByVal Graphics As LongPtr, result As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathWorldBounds Lib "gdiplus" (ByVal Path As LongPtr, bounds As RECTF, ByVal matrix As LongPtr, ByVal pen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetRegionBounds Lib "gdiplus" (ByVal Region As LongPtr, ByVal Graphics As LongPtr, Rect As RECTF) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientCenterPoint Lib "gdiplus" (ByVal Brush As LongPtr, Points As POINTF) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientCenterPoint Lib "gdiplus" (ByVal Brush As LongPtr, Points As POINTF) As GpStatus
Public Declare PtrSafe Function GdipAddPathRectangle Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathRectangles Lib "gdiplus" (ByVal Path As LongPtr, rects As RECTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathArc Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathPolygon Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathBezier Lib "gdiplus" (ByVal Path As LongPtr, ByVal x1 As Single, ByVal y1 As Single, ByVal x2 As Single, ByVal y2 As Single, ByVal x3 As Single, ByVal y3 As Single, ByVal x4 As Single, ByVal y4 As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathBeziers Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathCurve Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathCurve2 Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathCurve3 Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long, ByVal offset As Long, ByVal numberOfSegments As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathClosedCurve Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathClosedCurve2 Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathLine2 Lib "gdiplus" (ByVal Path As LongPtr, Points As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathEllipse Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathPie Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Single, ByVal Y As Single,  ByVal Width As Single, ByVal Height As Single, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipFillRectangle Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipFillRectangles Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, rects As RECTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateRegionRect Lib "gdiplus" (Rect As RECTF, Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipTransformMatrixPoints Lib "gdiplus" (ByVal matrix As LongPtr, pts As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipVectorTransformMatrixPoints Lib "gdiplus" (ByVal matrix As LongPtr, pts As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawImage Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal X As Single, ByVal Y As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawImageI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal X As Long, ByVal Y As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawImageRectFX Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, source As RECTF, ByVal xFrom As LongPtr, ByVal effect As LongPtr, ByVal imageAttributes As LongPtr, ByVal srcUnit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipDrawImageRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal Width As Single, ByVal Height As Single) As GpStatus
Public Declare PtrSafe Function GdipDrawImageRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawImagePoints Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, dstpoints As POINTF, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawImagePointsI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, dstpoints As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipDrawImagePointRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal X As Single, ByVal Y As Single, ByVal srcx As Single, ByVal srcy As Single, ByVal srcwidth As Single, ByVal srcheight As Single, ByVal srcUnit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipDrawImagePointRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal srcx As Long, ByVal srcy As Long, ByVal srcwidth As Long, ByVal srcheight As Long, ByVal srcUnit As GpUnit) As GpStatus
Public Declare PtrSafe Function GdipDrawImageRectRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal dstx As Long, _
                                                               ByVal dsty As Long, ByVal dstwidth As Long, ByVal dstheight As Long, _
                                                               ByVal srcx As Long, ByVal srcy As Long, ByVal SrcWidth As Long, ByVal SrcHeight As Long, _
                                                               ByVal srcUnit As GpUnit, Optional ByVal imageAttributes As LongPtr = 0, _
                                                               Optional ByVal CallBack As LongPtr = 0, Optional callbackData As Any) As GpStatus
Public Declare PtrSafe Function GdipDrawImageRectRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Image As LongPtr, ByVal dstx As Single, _
                                                               ByVal dsty As Single, ByVal dstwidth As Single, ByVal dstheight As Single, _
                                                               ByVal srcx As Single, ByVal srcy As Single, ByVal SrcWidth As Single, ByVal SrcHeight As Single, _
                                                               ByVal srcUnit As GpUnit, Optional ByVal imageAttributes As LongPtr = 0, _
                                                               Optional ByVal CallBack As LongPtr = 0, Optional callbackData As Any) As GpStatus
Public Declare PtrSafe Function GdipDrawImagePointsRect Lib "gdiplus" (ByVal Graphics As Long, ByVal Image As LongPtr, points As POINTF, ByVal count As Long, ByVal srcx As Single, ByVal srcy As Single, ByVal srcwidth As Single, ByVal srcheight As Single, ByVal srcUnit As GpUnit, Optional ByVal imageAttributes As LongPtr = 0, Optional ByVal callback As LongPtr = 0, Optional callbackData As Any) As GpStatus
Public Declare PtrSafe Function GdipDrawImagePointsRectI Lib "gdiplus" (ByVal Graphics As Long, ByVal Image As LongPtr, dstpoints As POINT, ByVal count As Long, ByVal srcx As Long, ByVal srcy As Long, ByVal srcwidth As Long, ByVal srcheight As Long, ByVal srcUnit As GpUnit, Optional ByVal imageAttributes As LongPtr = 0, Optional ByVal callback As LongPtr = 0, Optional callbackData As Any) As GpStatus
Public Declare PtrSafe Function GdipInitializePalette Lib "gdiplus" (palette As ColorPalette, ByVal paletteType As PaletteType, ByVal optimalColors As Long, ByVal useTransparentColor As BOOL, ByVal bitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipBitmapApplyEffect Lib "gdiplus" (ByVal bitmap As LongPtr, ByVal numInputs As Long, ByVal effect As LongPtr, roi As RECT, ByVal useAuxData As BOOL, auxData As Any, auxDataSize As Long) As GpStatus
Public Declare PtrSafe Function GdipBitmapCreateApplyEffect Lib "gdiplus" (inputBitmaps As Any, ByVal effect As LongPtr, roi As RECT, outputRect As RECT, outputBitmap As LongPtr, ByVal useAuxData As BOOL, auxData As Any, auxDataSize As Long) As GpStatus
Public Declare PtrSafe Function GdipBitmapGetHistogram Lib "gdiplus" (ByVal bitmap As LongPtr, ByVal format As HistogramFormat, ByVal NumberOfEntries As Long, channel0 As Long, channel1 As Long, channel2 As Long, channel3 As Long) As GpStatus
Public Declare PtrSafe Function GdipBitmapGetHistogramSize Lib "gdiplus" (ByVal format As HistogramFormat, NumberOfEntries As Long) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileDestPoint Lib "gdiplus" (ByVal Graphics As Long, ByVal metafile As LongPtr, destPoint As POINTF, ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileDestPointI Lib "gdiplus" (ByVal Graphics As Long, ByVal metafile As LongPtr, destPoint As POINT, ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileDestRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destRect As RECTF, callback As LongPtr, callbackData As Any, imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileDestRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destRect As RECT, callback As LongPtr, callbackData As Any, imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileDestPoints Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destPoint As POINTF, ByVal count As Long, callback As LongPtr, callbackData As Any, imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileDestPointsI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destPoint As POINT, ByVal count As Long, callback As LongPtr, callbackData As Any, imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileSrcRectDestPoint Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destPoint As POINTF, srcRECT As RECTF, ByVal srcUnit As GpUnit, _
                     ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileSrcRectDestPointI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destPoint As POINT, srcRECT As RECT, ByVal srcUnit As GpUnit, _
                     ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileSrcRectDestRect Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destRect As RECTF, srcRECT As RECTF, ByVal srcUnit As GpUnit, _
                     ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileSrcRectDestRectI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destRect As RECT, srcRECT As RECT, ByVal srcUnit As GpUnit, _
                     ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileSrcRectDestPoints Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destPoints As POINTF, ByVal count As Long, srcRECT As RECTF, ByVal srcUnit As GpUnit, _
                     ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipEnumerateMetafileSrcRectDestPointsI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal metafile As LongPtr, destPoints As POINT, ByVal count As Long, srcRECT As RECT, ByVal srcUnit As GpUnit, _
                     ByVal callback As LongPtr, callbackData As Any, ByVal imageAttributes As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipPlayMetafileRecord  Lib "gdiplus" (ByVal metafile As LongPtr, ByVal recordType As EmfPlusRecordType, ByVal flags As Long, ByVal dataSize As Long, data As Byte) As GpStatus
Public Declare PtrSafe Function GdipRecordMetafile Lib "gdiplus" (ByVal referenceHdc As LongPtr, ByVal type As EmfType, frameRect As RECTF, ByVal frameUnit As MetafileFrameUnit, ByVal Description As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipRecordMetafileI Lib "gdiplus" (ByVal referenceHdc As LongPtr, ByVal type As EmfType, frameRect As RECT, ByVal frameUnit As MetafileFrameUnit, ByVal Description As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipRecordMetafileFileName Lib "gdiplus" (ByVal FileName As LongPtr, ByVal referenceHdc As LongPtr, ByVal type As EmfType, frameRect As RECTF, ByVal frameUnit As MetafileFrameUnit, ByVal Description As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipRecordMetafileFileNameI Lib "gdiplus" (ByVal FileName As LongPtr, ByVal referenceHdc As LongPtr, ByVal type As EmfType, frameRect As RECT, ByVal frameUnit As MetafileFrameUnit, ByVal Description As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipRecordMetafileStream Lib "gdiplus" (ByVal stream As IStream, ByVal referenceHdc As LongPtr, ByVal type As EmfType, frameRect As RECTF, ByVal frameUnit As MetafileFrameUnit, ByVal Description As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipRecordMetafileStreamI Lib "gdiplus" (ByVal stream As IStream, ByVal referenceHdc As LongPtr, ByVal type As EmfType, frameRect As RECT, ByVal frameUnit As MetafileFrameUnit, ByVal Description As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetHemfFromMetafile Lib "gdiplus" (ByVal metafile As LongPtr, hemf As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipSetMetafileDownLevelRasterizationLimit Lib "gdiplus" (ByVal metafile As LongPtr, ByVal metafileRasterizationLimitDpi As Long) As GpStatus
Public Declare PtrSafe Function GdipGetMetafileDownLevelRasterizationLimit Lib "gdiplus" (ByVal metafile As LongPtr, metafileRasterizationLimitDpi As Long) As GpStatus
Public Declare PtrSafe Function GdipGetMetafileHeaderFromWmf Lib "gdiplus" (ByVal hWmf As LongPtr, wmfPlaceableFileHeader As WmfPlaceableFileHeader, ByVal header As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetMetafileHeaderFromEmf Lib "gdiplus" (ByVal hEmf As LongPtr, ByVal header As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetMetafileHeaderFromFile Lib "gdiplus" (ByVal filename As LongPtr, ByVal header As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetMetafileHeaderFromStream Lib "gdiplus" (ByVal stream As IStream, ByVal header As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetMetafileHeaderFromMetafile Lib "gdiplus" (ByVal metafile As LongPtr, ByVal header As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateStreamOnFile Lib "gdiplus" (ByVal filename As LongPtr, ByVal access As Long, stream As IStream) As GpStatus
Public Declare PtrSafe Function GdipCreateMetafileFromWmf Lib "gdiplus" (ByVal hWnf As LongPtr, ByVal deleteWmf As BOOL, wmfPlaceableFileHeader As WmfPlaceableFileHeader, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMetafileFromEmf Lib "gdiplus" (ByVal hEnf As LongPtr, ByVal deleteEmf As BOOL, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMetafileFromFile Lib "gdiplus" (ByVal filename As LongPtr, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMetafileFromWmfFile Lib "gdiplus" (ByVal filename As LongPtr, wmfPlaceableFileHeader As WmfPlaceableFileHeader, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipCreateMetafileFromStream Lib "gdiplus" (ByVal stream As IStream, metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipAddPathLineI Lib "gdiplus" (ByVal Path As LongPtr, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateLineBrushFromRectI Lib "gdiplus" (Rect As RECT, ByVal color1 As Long, ByVal color2 As Long, ByVal mode As LinearGradientMode, ByVal wrapMode As GpWrapMode, lineGradient As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipIsVisiblePathPointI Lib "gdiplus" (ByVal Region As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Graphics As LongPtr, result As BOOL) As GpStatus
Public Declare PtrSafe Function GdipIsOutlineVisiblePathPointI Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal pen As LongPtr, ByVal Graphics As LongPtr, result As Long) As GpStatus
Public Declare PtrSafe Function GdipGetPathWorldBoundsI Lib "gdiplus"  (ByVal Path As LongPtr, bounds As RECT, ByVal matrix As LongPtr, ByVal pen As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipGetRegionBoundsI Lib "gdiplus"   (ByVal Region As LongPtr, ByVal Graphics As LongPtr, Rect As RECT) As GpStatus
Public Declare PtrSafe Function GdipGetPathGradientCenterPointI Lib "gdiplus" (ByVal Brush As LongPtr, Points As POINT) As GpStatus
Public Declare PtrSafe Function GdipSetPathGradientCenterPointI Lib "gdiplus" (ByVal Brush As LongPtr, Points As POINT) As GpStatus
Public Declare PtrSafe Function GdipAddPathRectangleI Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathRectanglesI Lib "gdiplus" (ByVal Path As LongPtr, rects As RECT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathArcI Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathPolygonI Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathBezierI Lib "gdiplus" (ByVal Path As LongPtr, ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long, ByVal x3 As Long, ByVal y3 As Long, ByVal x4 As Long, ByVal y4 As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathBeziersI Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathCurveI Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathCurve2I Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathCurve3I Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long, ByVal offset As Long, ByVal numberOfSegments As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathClosedCurveI Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathClosedCurve2I Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long, ByVal tension As Single) As GpStatus
Public Declare PtrSafe Function GdipAddPathLine2I Lib "gdiplus" (ByVal Path As LongPtr, Points As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathEllipseI Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipAddPathPieI Lib "gdiplus" (ByVal Path As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long, ByVal startAngle As Single, ByVal sweepAngle As Single) As GpStatus
Public Declare PtrSafe Function GdipFillRectangleI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal Width As Long, ByVal Height As Long) As GpStatus
Public Declare PtrSafe Function GdipFillRectanglesI Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal Brush As LongPtr, rects As RECT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipCreateRegionRectI Lib "gdiplus" (Rect As RECT, Region As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipTransformMatrixPointsI Lib "gdiplus" (ByVal matrix As LongPtr, pts As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipVectorTransformMatrixPointsI Lib "gdiplus" (ByVal matrix As LongPtr, pts As POINT, ByVal count As Long) As GpStatus
Public Declare PtrSafe Function GdipBeginContainer Lib "gdiplus" (ByVal Graphics As LongPtr, dstrect As RECTF, srcrect As RECTF, ByVal unit As GpUnit, state As Long) As GpStatus
Public Declare PtrSafe Function GdipBeginContainerI Lib "gdiplus" (ByVal Graphics As LongPtr, dstrect As RECT, srcrect As RECT, ByVal unit As GpUnit, state As Long) As GpStatus
Public Declare PtrSafe Function GdipBeginContainer2 Lib "gdiplus" (ByVal Graphics As LongPtr, state As Long) As GpStatus
Public Declare PtrSafe Function GdipEndContainer Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal state As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageDecodersSize Lib "gdiplus" (numDecoders As Long, size As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageDecoders Lib "gdiplus" (ByVal numDecoders As Long, ByVal size As Long, decoders As ImageCodecInfo) As GpStatus
Public Declare PtrSafe Function GdipGetImageEncodersSize Lib "gdiplus" (numEncoders As Long, size As Long) As GpStatus
Public Declare PtrSafe Function GdipGetImageEncoders Lib "gdiplus" (ByVal numEncoders As Long, ByVal size As Long, encoders As ImageCodecInfo) As GpStatus
Public declare Ptrsafe function GdipConvertToEmfPlusToStream lib "gdiplus" (byval refGraphics as LongPtr, Byval metafile as LongPtr, conversionFailureFlag As Long, byval stream as IStream, byval emfType as EmfType, byval description As LongPtr, out_metafile As LongPtr) As GpStatus
Public declare Ptrsafe function GdipConvertToEmfPlusToFile lib "gdiplus" (byval refGraphics as LongPtr, Byval metafile as LongPtr, conversionFailureFlag As Long, byval filename As LongPtr, byval emfType as EmfType, byval description as LongPtr, out_metafile As LongPtr) As GpStatus
Public declare Ptrsafe function GdipConvertToEmfPlus lib "gdiplus" (byval refGraphics as LongPtr, Byval metafile as LongPtr, conversionFailureFlag As Long, byval emfType as EmfType, byval description as LongPtr, out_metafile As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipComment Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal sizeData As Long, data As Byte) As GpStatus
Public Declare PtrSafe Function GdipCreateCachedBitmap Lib "gdiplus" (ByVal bitmap As LongPtr, ByVal Graphics As LongPtr, cachedBitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDeleteCachedBitmap Lib "gdiplus" (ByVal cachedBitmap As LongPtr) As GpStatus
Public Declare PtrSafe Function GdipDrawCachedBitmap Lib "gdiplus" (ByVal Graphics As LongPtr, ByVal cachedBitmap As LongPtr, ByVal x As Long, ByVal y As Long) As GpStatus
Public Declare PtrSafe Function GdipEmfToWmfBits Lib "gdiplus" (ByVal hemf As LongPtr, ByVal cbData16 As Long, pData16 As Byte, ByVal iMapMode As Long, ByVal eFlags As Long) As Long
Public Declare PtrSafe Function GdipSetImageAttributesCachedBackground Lib "gdiplus" (ByVal imageattr As LongPtr, ByVal enableFlag As BOOL) As GpStatus
Public Declare PtrSafe Function GdipTestControl Lib "gdiplus" (ByVal control As GpTestControlEnum, param As Any) As GpStatus
Public Declare PtrSafe Function GdiplusNotificationHook Lib "gdiplus" (token As LongPtr) As GpStatus
Public Declare PtrSafe Sub GdiplusNotificationUnhook Lib "gdiplus" (ByVal token As LongPtr)


Public Function MakeARGB(ByVal a As Byte, ByVal r As Byte, ByVal g As Byte, ByVal b As Byte) As Long
	return ((b) << BlueShift) Or _
                ((g) << GreenShift) Or _
                ((r) <<   RedShift) Or _
                ((a) << AlphaShift)
End Function

Public Function ImageFormatUndefined() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3ca9,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3, &H2e)
ImageFormatUndefined = iid
End Function
Public Function ImageFormatMemoryBMP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3caa,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatMemoryBMP = iid
End Function
Public Function ImageFormatBMP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cab,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatBMP = iid
End Function
Public Function ImageFormatEMF() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cac,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatEMF = iid
End Function
Public Function ImageFormatWMF() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cad,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatWMF = iid
End Function
Public Function ImageFormatJPEG() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cae,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatJPEG = iid
End Function
Public Function ImageFormatPNG() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3caf,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatPNG = iid
End Function
Public Function ImageFormatGIF() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cb0,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatGIF = iid
End Function
Public Function ImageFormatTIFF() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cb1,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatTIFF = iid
End Function
Public Function ImageFormatEXIF() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cb2,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatEXIF = iid
End Function
Public Function ImageFormatIcon() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cb5,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatIcon = iid
End Function
Public Function ImageFormatHEIF() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cb6,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatHEIF = iid
End Function
Public Function ImageFormatWEBP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb96b3cb7,&H0728,&H11d3,&H9d,&H7b,&H00,&H00,&Hf8,&H1e,&Hf3,&H2e)
ImageFormatWEBP = iid
End Function
Public Function FrameDimensionTime() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6aedbd6d,&H3fb5,&H418a,&H83,&Ha6,&H7f,&H45,&H22,&H9d,&Hc8,&H72)
FrameDimensionTime = iid
End Function
Public Function FrameDimensionResolution() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H84236f7b,&H3bd3,&H428f,&H8d,&Hab,&H4e,&Ha1,&H43,&H9c,&Ha3,&H15)
FrameDimensionResolution = iid
End Function
Public Function FrameDimensionPage() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7462dc86,&H6180,&H4c7e,&H8e,&H3f,&Hee,&H73,&H33,&Ha7,&Ha4,&H83)
FrameDimensionPage = iid
End Function
Public Function FormatIDImageInformation() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He5836cbe,&H5eef,&H4f1d,&Hac,&Hde,&Hae,&H4c,&H43,&Hb6,&H08,&Hce)
FormatIDImageInformation = iid
End Function
Public Function FormatIDJpegAppHeaders() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1c4afdcd,&H6177,&H43cf,&Hab,&Hc7,&H5f,&H51,&Haf,&H39,&Hee,&H85)
FormatIDJpegAppHeaders = iid
End Function
Public Function EncoderCompression() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He09d739d,&Hccd4,&H44ee,&H8e,&Hba,&H3f,&Hbf,&H8b,&He4,&Hfc,&H58)
EncoderCompression = iid
End Function
Public Function EncoderColorDepth() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66087055,&Had66,&H4c7c,&H9a,&H18,&H38,&Ha2,&H31,&H0b,&H83,&H37)
EncoderColorDepth = iid
End Function
Public Function EncoderScanMethod() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3a4e2661,&H3109,&H4e56,&H85,&H36,&H42,&Hc1,&H56,&He7,&Hdc,&Hfa)
EncoderScanMethod = iid
End Function
Public Function EncoderVersion() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H24d18c76,&H814a,&H41a4,&Hbf,&H53,&H1c,&H21,&H9c,&Hcc,&Hf7,&H97)
EncoderVersion = iid
End Function
Public Function EncoderRenderMethod() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6d42c53a,&H229a,&H4825,&H8b,&Hb7,&H5c,&H99,&He2,&Hb9,&Ha8,&Hb8)
EncoderRenderMethod = iid
End Function
Public Function EncoderQuality() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1d5be4b5,&Hfa4a,&H452d,&H9c,&Hdd,&H5d,&Hb3,&H51,&H05,&He7,&Heb)
EncoderQuality = iid
End Function
Public Function EncoderTransformation() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&H8d0eb2d1,&Ha58e,&H4ea8,&Haa,&H14,&H10,&H80,&H74,&Hb7,&Hb6, &Hf9)
EncoderTransformation = iid
End Function
Public Function EncoderLuminanceTable() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&Hedb33bce,&H0266,&H4a77,&Hb9,&H04,&H27,&H21,&H60,&H99,&He7,&H17)
EncoderLuminanceTable = iid
End Function
Public Function EncoderChrominanceTable() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&Hf2e455dc,&H09b3,&H4316,&H82,&H60,&H67,&H6a,&Hda,&H32,&H48,&H1c)
EncoderChrominanceTable = iid
End Function
Public Function EncoderSaveFlag() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&H292266fc,&Hac40,&H47bf, &H8c, &Hfc, &Ha8, &H5b, &H89, &Ha6, &H55, &Hde)
EncoderSaveFlag = iid
End Function
Public Function EncoderColorSpace() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&Hae7a62a0,&Hee2c,&H49d8,&H9d,&H7,&H1b,&Ha8,&Ha9,&H27,&H59,&H6e)
EncoderColorSpace = iid
End Function
Public Function EncoderImageItems() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&H63875e13,&H1f1d,&H45ab, &H91, &H95, &Ha2, &H9b, &H60, &H66, &Ha6, &H50)
EncoderImageItems = iid
End Function
Public Function EncoderSaveAsCMYK() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&Ha219bbc9, &Ha9d, &H4005, &Ha3, &Hee, &H3a, &H42, &H1b, &H8b, &Hb0, &H6c)
EncoderSaveAsCMYK = iid
End Function
Public Function CodecIImageBytes() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,&H025d1823,&H6c7d,&H447b,&Hbb, &Hdb, &Ha3, &Hcb, &Hc3, &Hdf, &Ha2, &Hfc)
CodecIImageBytes = iid
End Function
Public Function BlurEffectGuid() As UUID
'{633C80A4-1843-482b-9EF2-BE2834C5FDD4}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H633C80A4, CInt(&H1843), CInt(&H482b), &H9E, &HF2, &HBE, &H28, &H34, &HC5, &HFD, &HD4)
 BlurEffectGuid = iid
End Function
Public Function SharpenEffectGuid() As UUID
'{63CBF3EE-C526-402c-8F71-62C540BF5142}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H63CBF3EE, CInt(&HC526), CInt(&H402c), &H8F, &H71, &H62, &HC5, &H40, &HBF, &H51, &H42)
 SharpenEffectGuid = iid
End Function
Public Function ColorMatrixEffectGuid() As UUID
'{718F2615-7933-40e3-A511-5F68FE14DD74}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H718F2615, CInt(&H7933), CInt(&H40e3), &HA5, &H11, &H5F, &H68, &HFE, &H14, &HDD, &H74)
 ColorMatrixEffectGuid = iid
End Function
Public Function ColorLUTEffectGuid() As UUID
'{A7CE72A9-0F7F-40d7-B3CC-D0C02D5C3212}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA7CE72A9, CInt(&H0F7F), CInt(&H40d7), &HB3, &HCC, &HD0, &HC0, &H2D, &H5C, &H32, &H12)
 ColorLUTEffectGuid = iid
End Function
Public Function BrightnessContrastEffectGuid() As UUID
'{D3A1DBE1-8EC4-4c17-9F4C-EA97AD1C343D}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HD3A1DBE1, CInt(&H8EC4), CInt(&H4c17), &H9F, &H4C, &HEA, &H97, &HAD, &H1C, &H34, &H3D)
 BrightnessContrastEffectGuid = iid
End Function
Public Function HueSaturationLightnessEffectGuid() As UUID
'{8B2DD6C3-EB07-4d87-A5F0-7108E26A9C5F}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8B2DD6C3, CInt(&HEB07), CInt(&H4d87), &HA5, &HF0, &H71, &H08, &HE2, &H6A, &H9C, &H5F)
 HueSaturationLightnessEffectGuid = iid
End Function
Public Function LevelsEffectGuid() As UUID
'{99C354EC-2A31-4f3a-8C34-17A803B33A25}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H99C354EC, CInt(&H2A31), CInt(&H4f3a), &H8C, &H34, &H17, &HA8, &H03, &HB3, &H3A, &H25)
 LevelsEffectGuid = iid
End Function
Public Function TintEffectGuid() As UUID
'{1077AF00-2848-4441-9489-44AD4C2D7A2C}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1077AF00, CInt(&H2848), CInt(&H4441), &H94, &H89, &H44, &HAD, &H4C, &H2D, &H7A, &H2C)
 TintEffectGuid = iid
End Function
Public Function ColorBalanceEffectGuid() As UUID
'{537E597D-251E-48da-9664-29CA496B70F8}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H537E597D, CInt(&H251E), CInt(&H48da), &H96, &H64, &H29, &HCA, &H49, &H6B, &H70, &HF8)
 ColorBalanceEffectGuid = iid
End Function
Public Function RedEyeCorrectionEffectGuid() As UUID
'{74D29D05-69A4-4266-9549-3CC52836B632}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H74D29D05, CInt(&H69A4), CInt(&H4266), &H95, &H49, &H3C, &HC5, &H28, &H36, &HB6, &H32)
 RedEyeCorrectionEffectGuid = iid
End Function
Public Function ColorCurveEffectGuid() As UUID
'{DD6A0022-58E4-4a67-9D9B-D48EB881A53D}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HDD6A0022, CInt(&H58E4), CInt(&H4a67), &H9D, &H9B, &HD4, &H8E, &HB8, &H81, &HA5, &H3D)
 ColorCurveEffectGuid = iid
End Function

#End Region 'gdip


#Region "gdi32"

Public Enum GdiObjects
    OBJ_PEN  = 1
    OBJ_BRUSH  = 2
    OBJ_DC  = 3
    OBJ_METADC  = 4
    OBJ_PAL  = 5
    OBJ_FONT  = 6
    OBJ_BITMAP  = 7
    OBJ_REGION  = 8
    OBJ_METAFILE  = 9
    OBJ_MEMDC  = 10
    OBJ_EXTPEN  = 11
    OBJ_ENHMETADC  = 12
    OBJ_ENHMETAFILE  = 13
    OBJ_COLORSPACE  = 14
    GDI_OBJ_LAST  = OBJ_COLORSPACE
End Enum


Public Enum GdiHatchStyles
	HS_HORIZONTAL  = 0 /* ----- */
	HS_VERTICAL  = 1 /*  Or  Or  Or  Or  Or  */
	HS_FDIAGONAL  = 2 /* \\\\\ */
	HS_BDIAGONAL  = 3 /*  '/// */
	HS_CROSS  = 4 /* +++++ */
	HS_DIAGCROSS  = 5 /* xxxxx */
	HS_API_MAX  = 12
End Enum

Public Enum GdiPenStyles
	PS_SOLID  = 0
	PS_DASH  = 1 /* ------- */
	PS_DOT  = 2 /* ....... */
	PS_DASHDOT  = 3 /* _._._._ */
	PS_DASHDOTDOT = 4 /* _.._.._ */
	PS_NULL  = 5
	PS_INSIDEFRAME  = 6
	PS_USERSTYLE  = 7
	PS_ALTERNATE  = 8
	PS_STYLE_MASK  = &H0000000F
	PS_ENDCAP_ROUND  = &H00000000
	PS_ENDCAP_SQUARE  = &H00000100
	PS_ENDCAP_FLAT  = &H00000200
	PS_ENDCAP_MASK  = &H00000F00
	PS_JOIN_ROUND  = &H00000000
	PS_JOIN_BEVEL  = &H00001000
	PS_JOIN_MITER  = &H00002000
	PS_JOIN_MASK  = &H0000F000&
	PS_COSMETIC  = &H00000000
	PS_GEOMETRIC  = &H00010000
	PS_TYPE_MASK  = &H000F0000
End Enum

Public Enum GdiRegionTypes
	RGN_ERROR  = 0
	NULLREGION  = 1
	SIMPLEREGION  = 2
	COMPLEXREGION  = 3
End Enum

Public Type TEXTMETRICA
    tmHeight As LONG
    tmAscent As LONG
    tmDescent As LONG
    tmInternalLeading As LONG
    tmExternalLeading As LONG
    tmAveCharWidth As LONG
    tmMaxCharWidth As LONG
    tmWeight As LONG
    tmOverhang As LONG
    tmDigitizedAspectX As LONG
    tmDigitizedAspectY As LONG
    tmFirstChar As BYTE
    tmLastChar As BYTE
    tmDefaultChar As BYTE
    tmBreakChar As BYTE
    tmItalic As BYTE
    tmUnderlined As BYTE
    tmStruckOut As BYTE
    tmPitchAndFamily As BYTE
    tmCharSet As BYTE
End Type
Public Type TEXTMETRICW
    tmHeight As LONG
    tmAscent As LONG
    tmDescent As LONG
    tmInternalLeading As LONG
    tmExternalLeading As LONG
    tmAveCharWidth As LONG
    tmMaxCharWidth As LONG
    tmWeight As LONG
    tmOverhang As LONG
    tmDigitizedAspectX As LONG
    tmDigitizedAspectY As LONG
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As BYTE
    tmUnderlined As BYTE
    tmStruckOut As BYTE
    tmPitchAndFamily As BYTE
    tmCharSet As BYTE
End Type
Public Type TEXTMETRIC
    tmHeight As LONG
    tmAscent As LONG
    tmDescent As LONG
    tmInternalLeading As LONG
    tmExternalLeading As LONG
    tmAveCharWidth As LONG
    tmMaxCharWidth As LONG
    tmWeight As LONG
    tmOverhang As LONG
    tmDigitizedAspectX As LONG
    tmDigitizedAspectY As LONG
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As BYTE
    tmUnderlined As BYTE
    tmStruckOut As BYTE
    tmPitchAndFamily As BYTE
    tmCharSet As BYTE
End Type
Public Type NEWTEXTMETRICW
    tmHeight As LONG
    tmAscent As LONG
    tmDescent As LONG
    tmInternalLeading As LONG
    tmExternalLeading As LONG
    tmAveCharWidth As LONG
    tmMaxCharWidth As LONG
    tmWeight As LONG
    tmOverhang As LONG
    tmDigitizedAspectX As LONG
    tmDigitizedAspectY As LONG
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As BYTE
    tmUnderlined As BYTE
    tmStruckOut As BYTE
    tmPitchAndFamily As BYTE
    tmCharSet As BYTE
    ntmFlags As NewTextMetricsFlags
    ntmSizeEM As Long
    ntmCellHeight As Long
    ntmAvgWidth As Long
End Type
Public Type NEWTEXTMETRIC
    tmHeight As LONG
    tmAscent As LONG
    tmDescent As LONG
    tmInternalLeading As LONG
    tmExternalLeading As LONG
    tmAveCharWidth As LONG
    tmMaxCharWidth As LONG
    tmWeight As LONG
    tmOverhang As LONG
    tmDigitizedAspectX As LONG
    tmDigitizedAspectY As LONG
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As BYTE
    tmUnderlined As BYTE
    tmStruckOut As BYTE
    tmPitchAndFamily As BYTE
    tmCharSet As BYTE
    ntmFlags As NewTextMetricsFlags
    ntmSizeEM As Long
    ntmCellHeight As Long
    ntmAvgWidth As Long
End Type
Public Enum NewTextMetricsFlags
	NTM_REGULAR  = &H00000040
	NTM_BOLD  = &H00000020
	NTM_ITALIC  = &H00000001
	NTM_NONNEGATIVE_AC  = &H00010000
	NTM_PS_OPENTYPE  = &H00020000
	NTM_TT_OPENTYPE  = &H00040000
	NTM_MULTIPLEMASTER  = &H00080000
	NTM_TYPE1  = &H00100000
	NTM_DSIG  = &H00200000
End Enum


Public Enum GdiTextAlign
	TA_NOUPDATECP  = 0
	TA_UPDATECP  = 1
	TA_LEFT  = 0
	TA_RIGHT  = 2
	TA_CENTER  = 6
	TA_TOP  = 0
	TA_BOTTOM  = 8
	TA_BASELINE  = 24
	TA_RTLREADING  = 256
	TA_MASK  = (TA_BASELINE+TA_CENTER+TA_UPDATECP+TA_RTLREADING)
	VTA_BASELINE  = TA_BASELINE
	VTA_LEFT  = TA_BOTTOM
	VTA_RIGHT  = TA_TOP
	VTA_CENTER  = TA_CENTER
	VTA_BOTTOM  = TA_RIGHT
	VTA_TOP = TA_LEFT
End Enum

Public Enum GdiExtTextOutOpts
	ETO_OPAQUE  = &H0002
	ETO_CLIPPED  = &H0004
	ETO_GLYPH_INDEX  = &H0010
	ETO_RTLREADING  = &H0080
	ETO_NUMERICSLOCAL  = &H0400
	ETO_NUMERICSLATIN  = &H0800
	ETO_IGNORELANGUAGE  = &H1000
	ETO_PDY  = &H2000
	ETO_REVERSE_INDEX_MAP  = &H10000
End Enum

Public Enum GdiExtFloodFillType
	FLOODFILLBORDER  = 0
	FLOODFILLSURFACE  = 1
End Enum

Public Enum GdiObjectTypes
	OBJ_PEN  = 1
	OBJ_BRUSH  = 2
	OBJ_DC  = 3
	OBJ_METADC  = 4
	OBJ_PAL  = 5
	OBJ_FONT  = 6
	OBJ_BITMAP  = 7
	OBJ_REGION  = 8
	OBJ_METAFILE  = 9
	OBJ_MEMDC  = 10
	OBJ_EXTPEN  = 11
	OBJ_ENHMETADC  = 12
	OBJ_ENHMETAFILE  = 13
	OBJ_COLORSPACE  = 14
End Enum

Public Enum GdiDIBitsColorUse
	DIB_RGB_COLORS = 0 /* color table in RGBs */
	DIB_PAL_COLORS  = 1 /* color table in palette indices */
End Enum

Public Enum AddFontFlags
    FR_PRIVATE    = &H10
    FR_NOT_ENUM   = &H20
End Enum

Public Type ENUMLOGFONTEXDVW
    elfEnumLogfontEx As ENUMLOGFONTEXW
    elfDesignVector As DESIGNVECTOR
End Type
'Alias ENUMLOGFONTEXDV As ENUMLOGFONTEXDVW
Public Type ENUMLOGFONTEXDV
    elfEnumLogfontEx As ENUMLOGFONTEXW
    elfDesignVector As DESIGNVECTOR
End Type

Public Type ENUMLOGFONTEXW
    elfLogFont As LOGFONTW
    elfFullName(1 To LF_FULLFACESIZE) As Integer
    elfStyle(1 To LF_FACESIZE) As Integer
    elfScript(1 To LF_FACESIZE) As Integer
End Type

Public Const MM_MAX_NUMAXES As Long = 16

Public Type DESIGNVECTOR
    dvReserved As Long
    dvNumAxes As Long
    dvValues(1 To MM_MAX_NUMAXES) As Long
End Type
Public Enum GetGlyphIndiciesFlags
	GGI_MARK_NONEXISTING_GLYPHS = &H0001
End Enum

Public Enum GlyphSetFlags
    GS_8BIT_INDICES     = &H00000001
End Enum
Public Type WCRANGE
    wcLow As Integer
    cGlyphs As Integer
End Type
[Description("WARNING: This structure is not meant to be used directly, as the API returns a C-style array. This is meant to be filled from a raw byte array by copying the fixed part and then the variable part.")]
Public Type GLYPHSET
    cbThis As Long
    flAccel As GlyphSetFlags
    cGlyphsSupported As Long
    cRanges As Long
    ranges() As WCRANGE
End Type

Public Enum GlyphOutlineFormats
	GGO_METRICS  = 0	
	GGO_BITMAP = 1
	GGO_NATIVE  = 2
	GGO_BEZIER  = 3
	GGO_GRAY2_BITMAP  = 4
	GGO_GRAY4_BITMAP = 5
	GGO_GRAY8_BITMAP  = 6
	GGO_GLYPH_INDEX  = &H0080
	GGO_UNHINTED  = &H0100
End Enum

Public Type FIXED
    fract As Integer
    value As Integer
End Type

Public Type MAT2
    eM11 As FIXED
    eM12 As FIXED
    eM21 As FIXED
    eM22 As FIXED
End Type

Public Type GLYPHMETRICS
    gmBlackBoxX As Long
    gmBlackBoxY As Long
    gmptGlyphOrigin As POINT
    gmCellIncX As Integer
    gmCellIncY As Integer
End Type

Public Type POINTFX
	x As FIXED
	y As FIXED
End Type

Public Enum TTPOLYCURVETYPES
	TT_PRIM_LINE = 1
	TT_PRIM_QSPLINE  = 2
	TT_PRIM_CSPLINE  = 3
End Enum
[Description("WARNING: This structure is not meant to be used directly, as the API returns a C-style array. This is meant to be filled from a raw byte array by copying the fixed part and then the variable part.")]
Public Type TTPOLYCURVE
	/*[TypeHint(TTPOLYCURVETYPES)]*/ wType As Integer
	cpfx As Integer
	apfx() As POINTFX
End Type

Public Enum TTPOLYGONTYPE
    TT_POLYGON_TYPE  = 24
End Enum
Public Type TTPOLYGONHEADER
	cb As Long
	dwType As TTPOLYGONTYPE
	pfxStart As POINTFX
End Type

Public Enum PANOSE_Values
	PAN_ANY  = 0 /* Any */
	PAN_NO_FIT  = 1 /* No Fit */
	PAN_FAMILY_TEXT_DISPLAY  = 2 /* Text and Display */
	PAN_FAMILY_SCRIPT  = 3 /* Script */
	PAN_FAMILY_DECORATIVE  = 4 /* Decorative */
	PAN_FAMILY_PICTORIAL  = 5 /* Pictorial */
	PAN_SERIF_COVE  = 2 /* Cove */
	PAN_SERIF_OBTUSE_COVE  = 3 /* Obtuse Cove */
	PAN_SERIF_SQUARE_COVE  = 4 /* Square Cove */
	PAN_SERIF_OBTUSE_SQUARE_COVE  = 5 /* Obtuse Square Cove */
	PAN_SERIF_SQUARE  = 6 /* Square */
	PAN_SERIF_THIN  = 7 /* Thin */
	PAN_SERIF_BONE  = 8 /* Bone */
	PAN_SERIF_EXAGGERATED  = 9 /* Exaggerated */
	PAN_SERIF_TRIANGLE  = 10 /* Triangle */
	PAN_SERIF_NORMAL_SANS  = 11 /* Normal Sans */
	PAN_SERIF_OBTUSE_SANS  = 12 /* Obtuse Sans */
	PAN_SERIF_PERP_SANS  = 13 /* Prep Sans */
	PAN_SERIF_FLARED  = 14 /* Flared */
	PAN_SERIF_ROUNDED  = 15 /* Rounded */
	PAN_WEIGHT_VERY_LIGHT  = 2 /* Very Light */
	PAN_WEIGHT_LIGHT  = 3 /* Light */
	PAN_WEIGHT_THIN  = 4 /* Thin */
	PAN_WEIGHT_BOOK  = 5 /* Book */
	PAN_WEIGHT_MEDIUM  = 6 /* Medium */
	PAN_WEIGHT_DEMI  = 7 /* Demi */
	PAN_WEIGHT_BOLD  = 8 /* Bold */
	PAN_WEIGHT_HEAVY  = 9 /* Heavy */
	PAN_WEIGHT_BLACK  = 10 /* Black */
	PAN_WEIGHT_NORD  = 11 /* Nord */
	PAN_PROP_OLD_STYLE  = 2 /* Old Style */
	PAN_PROP_MODERN  = 3 /* Modern */
	PAN_PROP_EVEN_WIDTH  = 4 /* Even Width */
	PAN_PROP_EXPANDED  = 5 /* Expanded */
	PAN_PROP_CONDENSED  = 6 /* Condensed */
	PAN_PROP_VERY_EXPANDED  = 7 /* Very Expanded */
	PAN_PROP_VERY_CONDENSED  = 8 /* Very Condensed */
	PAN_PROP_MONOSPACED  = 9 /* Monospaced */
	PAN_CONTRAST_NONE  = 2 /* None */
	PAN_CONTRAST_VERY_LOW  = 3 /* Very Low */
	PAN_CONTRAST_LOW  = 4 /* Low */
	PAN_CONTRAST_MEDIUM_LOW  = 5 /* Medium Low */
	PAN_CONTRAST_MEDIUM  = 6 /* Medium */
	PAN_CONTRAST_MEDIUM_HIGH  = 7 /* Mediim High */
	PAN_CONTRAST_HIGH  = 8 /* High */
	PAN_CONTRAST_VERY_HIGH  = 9 /* Very High */
	PAN_STROKE_GRADUAL_DIAG  = 2 /* Gradual/Diagonal */
	PAN_STROKE_GRADUAL_TRAN  = 3 /* Gradual/Transitional */
	PAN_STROKE_GRADUAL_VERT  = 4 /* Gradual/Vertical */
	PAN_STROKE_GRADUAL_HORZ  = 5 /* Gradual/Horizontal */
	PAN_STROKE_RAPID_VERT  = 6 /* Rapid/Vertical */
	PAN_STROKE_RAPID_HORZ  = 7 /* Rapid/Horizontal */
	PAN_STROKE_INSTANT_VERT  = 8 /* Instant/Vertical */
	PAN_STRAIGHT_ARMS_HORZ  = 2 /* Straight Arms/Horizontal */
	PAN_STRAIGHT_ARMS_WEDGE  = 3 /* Straight Arms/Wedge */
	PAN_STRAIGHT_ARMS_VERT  = 4 /* Straight Arms/Vertical */
	PAN_STRAIGHT_ARMS_SINGLE_SERIF  = 5 /* Straight Arms/Single-Serif */
	PAN_STRAIGHT_ARMS_DOUBLE_SERIF  = 6 /* Straight Arms/Double-Serif */
	PAN_BENT_ARMS_HORZ  = 7 /* Non-Straight Arms/Horizontal */
	PAN_BENT_ARMS_WEDGE  = 8 /* Non-Straight Arms/Wedge */
	PAN_BENT_ARMS_VERT  = 9 /* Non-Straight Arms/Vertical */
	PAN_BENT_ARMS_SINGLE_SERIF  = 10 /* Non-Straight Arms/Single-Serif */
	PAN_BENT_ARMS_DOUBLE_SERIF  = 11 /* Non-Straight Arms/Double-Serif */
	PAN_LETT_NORMAL_CONTACT  = 2 /* Normal/Contact */
	PAN_LETT_NORMAL_WEIGHTED  = 3 /* Normal/Weighted */
	PAN_LETT_NORMAL_BOXED  = 4 /* Normal/Boxed */
	PAN_LETT_NORMAL_FLATTENED  = 5 /* Normal/Flattened */
	PAN_LETT_NORMAL_ROUNDED  = 6 /* Normal/Rounded */
	PAN_LETT_NORMAL_OFF_CENTER  = 7 /* Normal/Off Center */
	PAN_LETT_NORMAL_SQUARE  = 8 /* Normal/Square */
	PAN_LETT_OBLIQUE_CONTACT  = 9 /* Oblique/Contact */
	PAN_LETT_OBLIQUE_WEIGHTED  = 10 /* Oblique/Weighted */
	PAN_LETT_OBLIQUE_BOXED  = 11 /* Oblique/Boxed */
	PAN_LETT_OBLIQUE_FLATTENED  = 12 /* Oblique/Flattened */
	PAN_LETT_OBLIQUE_ROUNDED  = 13 /* Oblique/Rounded */
	PAN_LETT_OBLIQUE_OFF_CENTER  = 14 /* Oblique/Off Center */
	PAN_LETT_OBLIQUE_SQUARE  = 15 /* Oblique/Square */
	PAN_MIDLINE_STANDARD_TRIMMED  = 2 /* Standard/Trimmed */
	PAN_MIDLINE_STANDARD_POINTED  = 3 /* Standard/Pointed */
	PAN_MIDLINE_STANDARD_SERIFED  = 4 /* Standard/Serifed */
	PAN_MIDLINE_HIGH_TRIMMED  = 5 /* High/Trimmed */
	PAN_MIDLINE_HIGH_POINTED  = 6 /* High/Pointed */
	PAN_MIDLINE_HIGH_SERIFED  = 7 /* High/Serifed */
	PAN_MIDLINE_CONSTANT_TRIMMED  = 8 /* Constant/Trimmed */
	PAN_MIDLINE_CONSTANT_POINTED  = 9 /* Constant/Pointed */
	PAN_MIDLINE_CONSTANT_SERIFED  = 10 /* Constant/Serifed */
	PAN_MIDLINE_LOW_TRIMMED  = 11 /* Low/Trimmed */
	PAN_MIDLINE_LOW_POINTED  = 12 /* Low/Pointed */
	PAN_MIDLINE_LOW_SERIFED  = 13 /* Low/Serifed */
	PAN_XHEIGHT_CONSTANT_SMALL  = 2 /* Constant/Small */
	PAN_XHEIGHT_CONSTANT_STD  = 3 /* Constant/Standard */
	PAN_XHEIGHT_CONSTANT_LARGE  = 4 /* Constant/Large */
	PAN_XHEIGHT_DUCKING_SMALL  = 5 /* Ducking/Small */
	PAN_XHEIGHT_DUCKING_STD  = 6 /* Ducking/Standard */
	PAN_XHEIGHT_DUCKING_LARGE  = 7 /* Ducking/Large */
End Enum
Public Type PANOSE
	bFamilyType As BYTE
	bSerifStyle As BYTE
	bWeight As BYTE
	bProportion As BYTE
	bContrast As BYTE
	bStrokeVariation As BYTE
	bArmStyle As BYTE
	bLetterform As BYTE
	bMidline As BYTE
	bXHeight As BYTE
End Type

Public Type OUTLINETEXTMETRICW
	otmSize As Long
	otmTextMetrics As TEXTMETRICW
	otmFiller As BYTE
	otmPanoseNumber As PANOSE
	otmfsSelection As Long
	otmfsType As Long
	otmsCharSlopeRise As Long
	otmsCharSlopeRun As Long
	otmItalicAngle As Long
	otmEMSquare As Long
	otmAscent As Long
	otmDescent As Long
	otmLineGap As Long
	otmsCapEmHeight As Long
	otmsXHeight As Long
	otmrcFontBox As RECT
	otmMacAscent As Long
	otmMacDescent As Long
	otmMacLineGap As Long
	otmusMinimumPPEM As Long
	otmptSubscriptSize As POINT
	otmptSubscriptOffset As POINT
	otmptSuperscriptSize As POINT
	otmptSuperscriptOffset As POINT
	otmsStrikeoutSize As Long
	otmsStrikeoutPosition As Long
	otmsUnderscoreSize As Long
	otmsUnderscorePosition As Long
	otmpFamilyName As LongPtr
	otmpFaceName As LongPtr
	otmpStyleName As LongPtr
	otmpFullName As LongPtr
End Type
'Alias OUTLINETEXTMETRIC As OUTLINETEXTMETRICW
Public Type OUTLINETEXTMETRIC
    otmSize As Long
    otmTextMetrics As TEXTMETRICW
    otmFiller As BYTE
    otmPanoseNumber As PANOSE
    otmfsSelection As Long
    otmfsType As Long
    otmsCharSlopeRise As Long
    otmsCharSlopeRun As Long
    otmItalicAngle As Long
    otmEMSquare As Long
    otmAscent As Long
    otmDescent As Long
    otmLineGap As Long
    otmsCapEmHeight As Long
    otmsXHeight As Long
    otmrcFontBox As RECT
    otmMacAscent As Long
    otmMacDescent As Long
    otmMacLineGap As Long
    otmusMinimumPPEM As Long
    otmptSubscriptSize As POINT
    otmptSubscriptOffset As POINT
    otmptSuperscriptSize As POINT
    otmptSuperscriptOffset As POINT
    otmsStrikeoutSize As Long
    otmsStrikeoutPosition As Long
    otmsUnderscoreSize As Long
    otmsUnderscorePosition As Long
    otmpFamilyName As LongPtr
    otmpFaceName As LongPtr
    otmpStyleName As LongPtr
    otmpFullName As LongPtr
End Type

Public Type FONTSIGNATURE
	fsUsb(0 To 3) As Long
	fsCsb(0 To 1) As Long
End Type

Public Type CHARSETINFO
	ciCharset As Long
	ciACP As Long
	fs As FONTSIGNATURE
End Type

Public Type NEWTEXTMETRICEXW
	ntmTm As NEWTEXTMETRICW
	ntmFontSig As FONTSIGNATURE
End Type
Public Type NEWTEXTMETRICEX
	ntmTm As NEWTEXTMETRIC
	ntmFontSig As FONTSIGNATURE
End Type

Public Const MM_MAX_AXES_NAMELEN = 16
Public Type AXISINFOW
	axMinValue As LONG
	axMaxValue As LONG
	axAxisName(0 To (MM_MAX_AXES_NAMELEN - 1)) As Integer
End Type
'Alias AXISINFO As AXISINFOW
Public Type AXISINFO
	axMinValue As LONG
	axMaxValue As LONG
	axAxisName(0 To (MM_MAX_AXES_NAMELEN - 1)) As Integer
End Type
Public Type AXESLISTW
	axlReserved As Long
	axlNumAxes As Long
	axlAxisInfo(0 To (MM_MAX_NUMAXES - 1)) As AXISINFOW
End Type
Public Type AXESLIST
	axlReserved As Long
	axlNumAxes As Long
	axlAxisInfo(0 To (MM_MAX_NUMAXES - 1)) As AXISINFO
End Type
Public Type ENUMTEXTMETRICW
	etmNewTextMetricEx As NEWTEXTMETRICEXW
	etmAxesList As AXESLISTW
End Type
Public Type ENUMTEXTMETRIC
	etmNewTextMetricEx As NEWTEXTMETRICEX
	etmAxesList As AXESLIST
End Type

Public Enum PixelFormatDescriptionTypes
	PFD_TYPE_RGBA  = 0
	PFD_TYPE_COLORINDEX = 1
End Enum
Public Enum PixelFormatLayerTypes
	PFD_MAIN_PLANE = 0
	PFD_OVERLAY_PLANE  = 1
	PFD_UNDERLAY_PLANE  = (-1)
End Enum

Public Enum PixelFormatDescriptorsFlags
	PFD_DOUBLEBUFFER = &H00000001
	PFD_STEREO  = &H00000002
	PFD_DRAW_TO_WINDOW  = &H00000004
	PFD_DRAW_TO_BITMAP  = &H00000008
	PFD_SUPPORT_GDI  = &H00000010
	PFD_SUPPORT_OPENGL  = &H00000020
	PFD_GENERIC_FORMAT  = &H00000040
	PFD_NEED_PALETTE  = &H00000080
	PFD_NEED_SYSTEM_PALETTE  = &H00000100
	PFD_SWAP_EXCHANGE  = &H00000200
	PFD_SWAP_COPY  = &H00000400
	PFD_SWAP_LAYER_BUFFERS  = &H00000800
	PFD_GENERIC_ACCELERATED  = &H00001000
	PFD_SUPPORT_DIRECTDRAW  = &H00002000
	PFD_DIRECT3D_ACCELERATED  = &H00004000
	PFD_SUPPORT_COMPOSITION  = &H00008000&
	' flags for use in ChoosePixelFormat only */
	PFD_DEPTH_DONTCARE = &H20000000
	PFD_DOUBLEBUFFER_DONTCARE  = &H40000000
	PFD_STEREO_DONTCARE  = &H80000000
End Enum
Public Type PIXELFORMATDESCRIPTOR
	nSize As Integer
	nVersion As Integer
	dwFlags As PixelFormatDescriptorsFlags
	iPixelType As BYTE
	cColorBits As BYTE
	cRedBits As BYTE
	cRedShift As BYTE
	cGreenBits As BYTE
	cGreenShift As BYTE
	cBlueBits As BYTE
	cBlueShift As BYTE
	cAlphaBits As BYTE
	cAlphaShift As BYTE
	cAccumBits As BYTE
	cAccumRedBits As BYTE
	cAccumGreenBits As BYTE
	cAccumBlueBits As BYTE
	cAccumAlphaBits As BYTE
	cDepthBits As BYTE
	cStencilBits As BYTE
	cAuxBuffers As BYTE
	iLayerType As BYTE
	bReserved As BYTE
	dwLayerMask As Long
	dwVisibleMask As Long
	dwDamageMask As Long
End Type

Public Enum BinaryRasterOps
	R2_BLACK  = 1 /* 0 */
	R2_NOTMERGEPEN  = 2 /* DPon */
	R2_MASKNOTPEN  = 3 /* DPna */
	R2_NOTCOPYPEN  = 4 /* PN */
	R2_MASKPENNOT  = 5 /* PDna */
	R2_NOT  = 6 /* Dn */
	R2_XORPEN  = 7 /* DPx */
	R2_NOTMASKPEN  = 8 /* DPan */
	R2_MASKPEN  = 9 /* DPa */
	R2_NOTXORPEN  = 10 /* DPxn */
	R2_NOP  = 11 /* D */
	R2_MERGENOTPEN  = 12 /* DPno */
	R2_COPYPEN  = 13 /* P */
	R2_MERGEPENNOT  = 14 /* PDno */
	R2_MERGEPEN  = 15 /* DPo */
	R2_WHITE  = 16 /* 1 */
	R2_LAST  = 16
End Enum


Public Type POLYTEXTA
	x As Long
	y As Long
	n As Long
	lpstr As String
	uiFlags As GdiExtTextOutOpts
	rcl As RECT
	pdx As LongPtr
End Type
Public Type POLYTEXTW
    x As Long
    y As Long
    n As Long
    lpstr As LongPtr
    uiFlags As GdiExtTextOutOpts
    rcl As RECT
    pdx As LongPtr
End Type
Public Type POLYTEXT
    x As Long
    y As Long
    n As Long
    lpstr As LongPtr
    uiFlags As GdiExtTextOutOpts
    rcl As RECT
    pdx As LongPtr
End Type

Public Enum StretchBltModes
	BLACKONWHITE  = 1
	WHITEONBLACK  = 2
	COLORONCOLOR  = 3
	HALFTONE  = 4
	MAXSTRETCHBLTMODE  = 4
	STRETCH_ANDSCANS = BLACKONWHITE
	STRETCH_ORSCANS  = WHITEONBLACK
	STRETCH_DELETESCANS  = COLORONCOLOR
	STRETCH_HALFTONE  = HALFTONE
End Enum

Public Enum BoundsAccumFlags
	DCB_RESET  = &H0001
	DCB_ACCUMULATE  = &H0002
	DCB_DIRTY  = DCB_ACCUMULATE
	DCB_SET  = (DCB_RESET  Or  DCB_ACCUMULATE)
	DCB_ENABLE  = &H0004
	DCB_DISABLE  = &H0008
End Enum

Public Enum PolyFillModes
	ALTERNATE  = 1
	WINDING  = 2
End Enum

Public Enum CombineRegionStyles
	RGN_AND  = 1
	RGN_OR  = 2
	RGN_XOR  = 3
	RGN_DIFF  = 4
	RGN_COPY  = 5
End Enum

Public Enum GdiArcDirections
    AD_COUNTERCLOCKWISE = 1
    AD_CLOCKWISE = 2
End Enum

Public Enum RgnHeaderTypeValues
    RDH_RECTANGLES = 1
End Enum
Public Type RGNDATAHEADER
	dwSize As Long
	iType As RgnHeaderTypeValues
	nCount As Long
	nRgnSize As Long
	rcBound As RECT
End Type

[Description("WARNING: This structure is not meant to be used directly, as the APIs that use it require C-style arrays. You must copy the header and data separate, and this can only be used to receive, not send, this data.")]
Public Type RGNDATA
    rdh As RGNDATAHEADER
    Buffer() As Byte
End Type

Public Type XFORM
	eM11 As Single
	eM12 As Single
	eM21 As Single
	eM22 As Single
	eDx As Single
	eDy As Single
End Type

Public Type LOGPEN
    lopnStyle As GdiPenStyles
    lopnWidth As POINT
    lopnColor As Long
End Type

Public Type BITMAP
    BMType As Long
    BMWidth As Long
    BMHeight As Long
    BMWidthBytes As Long
    BMPlanes As Integer
    BMBitsPixel As Integer
    BMBits As LongPtr
End Type

Public Enum LayoutOrientationOptions
	LAYOUT_RTL  = &H00000001  ' Right to left
	LAYOUT_BTT  = &H00000002  ' Bottom to top
	LAYOUT_VBH  = &H00000004  ' Vertical before horizontal
	LAYOUT_ORIENTATIONMASK  = (LAYOUT_RTL Or LAYOUT_BTT Or LAYOUT_VBH)
	LAYOUT_BITMAPORIENTATIONPRESERVED  = &H00000008
End Enum

Public Enum MappingModes
	MM_TEXT  = 1
	MM_LOMETRIC  = 2
	MM_HIMETRIC  = 3
	MM_LOENGLISH  = 4
	MM_HIENGLISH  = 5
	MM_TWIPS  = 6
	MM_ISOTROPIC = 7
	MM_ANISOTROPIC  = 8
End Enum

[Description("lpProc is Function EnumObjectsProc(ByVal lpLogObject As LongPtr, ByVal lpData As LongPtr) As Long. Return 0 to stop, non-zero to continue.") ]
Public Declare PtrSafe Function EnumObjects Lib "gdi32" (ByVal hDC As LongPtr, ByVal nType As GdiObjects, ByVal lpProc As LongPtr, lParam As Any) As Long

Public Declare PtrSafe Function GetLayout Lib "gdi32" (ByVal hDC As LongPtr) As LayoutOrientationOptions
Public Declare PtrSafe Function SetLayout Lib "gdi32" (ByVal hDC As LongPtr, ByVal l As LayoutOrientationOptions) As LayoutOrientationOptions
Public Declare PtrSafe Function SetMapMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal iMode As MappingModes) As MappingModes
Public Declare PtrSafe Function GetMapMode Lib "gdi32" (ByVal hDC As LongPtr) As MappingModes
Public Declare PtrSafe Function SetMapperFlags Lib "gdi32" (ByVal hDC As LongPtr, ByVal flags As Long) As Long

Public Declare PtrSafe Function GetStockObject Lib "gdi32.dll" (ByVal nIndex As StockObjects) As LongPtr
Public Declare PtrSafe Function SelectObject Lib "gdi32" (ByVal hDC As LongPtr, ByVal hObject As LongPtr) As LongPtr
Public Declare PtrSafe Function SetBkColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal crColor As Long) As Long
Public Declare PtrSafe Function GetBkColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function SetBkMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal nBkMode As GdiBackgroundModes) As Long
Public Declare PtrSafe Function GetBkMode Lib "gdi32" (ByVal hDC As LongPtr) As GdiBackgroundModes
Public Declare PtrSafe Function SetTextColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal crColor As Long) As Long
Public Declare PtrSafe Function GetTextColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function SetDCPenColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal color As Long) As Long
Public Declare PtrSafe Function SetDCBrushColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal color As Long) As Long
Public Declare PtrSafe Function GetDCPenColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function GetDCBrushColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function GetPixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function SetPixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ByVal format As Long, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function ChoosePixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function SetPolyFillMode Lib "gdi32" (ByVal hdc As LongPtr, ByVal mode As PolyFillModes) As Long
Public Declare PtrSafe Function GetPolyFillMode Lib "gdi32" (ByVal hdc As LongPtr) As PolyFillModes

Public Declare PtrSafe Function BitBlt Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As LongPtr, ByVal XSrc As Long, ByVal YSrc As Long, ByVal dwRop As RASTEROPFLAGS) As Long
Public Declare PtrSafe Function PatBlt Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal dwRop As RASTEROPFLAGS) As BOOL
Public Declare PtrSafe Function MaskBlt Lib "gdi32" (ByVal hdc As LongPtr, ByVal xDest As Long, ByVal yDest As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hdcSrc As LongPtr, ByVal xSrc As Long, ByVal ySrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal dwRop As RASTEROPFLAGS) As BOOL
Public Declare PtrSafe Function PlgBlt Lib "gdi32" (ByVal hdc As LongPtr, lpPoint As POINT, ByVal hdcSrc As LongPtr, ByVal xSrc As Long, ByVal ySrc As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hbmMask As LongPtr, ByVal xMask As Long, ByVal yMask As Long) As BOOL
Public Declare PtrSafe Function StretchBlt Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal xDest As Long, ByVal yDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xSrc As Long, ByVal ySrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal rop As RASTEROPFLAGS) As BOOL

Public Declare PtrSafe Function PtInRegion Lib "gdi32" (ByVal hRgn As LongPtr, ByVal x As Long, ByVal y As Long) As BOOL
Public Declare PtrSafe Function RectInRegion Lib "gdi32" (ByVal hRgn As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function CreateRectRgn Lib "gdi32" (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As LongPtr
Public Declare PtrSafe Function CreateRectRgnIndirect Lib "gdi32" (lprect As RECT) As LongPtr
Public Declare PtrSafe Function CreateRoundRectRgn Lib "gdi32" (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal width As Long, ByVal height As Long) As LongPtr
Public Declare PtrSafe Function CreatePolygonRgn Lib "gdi32" (pptl As POINT, ByVal cPoint As Long, ByVal iMode As PolyFillModes) As LongPtr
Public Declare PtrSafe Function CreatePolyPolygonRgn Lib "gdi32" (pptl As POINT, pc As Long, ByVal cPoly As Long, ByVal iMode As PolyFillModes) As LongPtr
Public Declare PtrSafe Function CombineRgn Lib "gdi32" (ByVal hRgnDsr As LongPtr, ByVal hrgnSrc1 As LongPtr, ByVal hrgnSc2 As LongPtr, ByVal iMode As CombineRegionStyles) As WindowRegionTypes
Public Declare PtrSafe Function SelectClipRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr) As GdiRegionTypes
Public Declare PtrSafe Function CreateEllipticRgn Lib "gdi32" (ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long) As LongPtr
Public Declare PtrSafe Function ExtCreateRegion Lib "gdi32" (lpx As XFORM, ByVal nCount As Long, lpData As Any) As LongPtr
Public DeclareWide PtrSafe Function GetCurrentPositionEx Lib "gdi32" (ByVal hdc As LongPtr, ByRef lppt As POINT) As Long
Public DeclareWide PtrSafe Function ExtSelectClipRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr, ByVal fnMode As CombineRegionStyles) As WindowRegionTypes
Public Declare PtrSafe Function FrameRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr, ByVal hBrush As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public Declare PtrSafe Function PaintRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr) As BOOL
Public Declare PtrSafe Function FillRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr, ByVal hbr As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetRegionData Lib "gdi32" (ByVal hRgn As LongPtr, ByVal nCount As Long, lpRgnData As Any) As BOOL
Public DeclareWide PtrSafe Function SetRectRgn Lib "gdi32" (ByVal hRgn As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As BOOL
Public DeclareWide PtrSafe Function SetMetaRgn Lib "gdi32" (ByVal hDC As LongPtr) As WindowRegionTypes
Public DeclareWide PtrSafe Function GetMetaRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr) As Long
Public DeclareWide PtrSafe Function OffsetRgn Lib "gdi32" (ByVal hRgn As LongPtr, ByVal x As Long, ByVal y As Long) As WindowRegionTypes
Public DeclareWide PtrSafe Function OffsetClipRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long) As WindowRegionTypes
Public DeclareWide PtrSafe Function PathToRegion Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function InvertRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetRgnBox Lib "gdi32" (ByVal hRgn As LongPtr, lprc As RECT) As WindowRegionTypes
Public DeclareWide PtrSafe Function EqualRgn Lib "gdi32" (ByVal hRgn1 As LongPtr, ByVal hRgn2 As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetClipRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr) As Long

Public Declare PtrSafe Function SetROP2 Lib "gdi32" (ByVal hdc As LongPtr, ByVal nDrawMode As BinaryRasterOps) As BinaryRasterOps
Public Declare PtrSafe Function Rectangle Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As BOOL
Public Declare PtrSafe Function Ellipse Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As BOOL
Public Declare PtrSafe Function MoveToEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lpPoint As Any) As Long
Public Declare PtrSafe Function LineTo Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long) As Long
Public Declare PtrSafe Function StretchDIBits Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal dx As Long, ByVal dy As Long, ByVal srcX As Long, ByVal srcY As Long, ByVal wSrcWidth As Long, ByVal wSrcHeight As Long, lpBits As Any, lpBitsInfo As BITMAPINFO, ByVal wUsage As GdiDIBitsColorUse, ByVal dwRop As RASTEROPFLAGS) As Long
Public Declare PtrSafe Function SetStretchBltMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal nStretchMode As StretchBltModes) As Long
Public Declare PtrSafe Function GetPixel Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long) As Long
Public Declare PtrSafe Function SetPixel Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As Long
Public Declare PtrSafe Function SetPixelV Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As BOOL
Public Declare PtrSafe Function RoundRect Lib "gdi32" (ByVal hDC As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long, ByVal width As Long, ByVal height As Long) As BOOL
Public Declare PtrSafe Function PtVisible Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long) As BOOL
Public Declare PtrSafe Function SetBoundsRect Lib "gdi32" (ByVal hDC As LongPtr, lpRect As RECT, ByVal flags As BoundsAccumFlags) as BoundsAccumFlags
Public Declare PtrSafe Function Pie Lib "gdi32" (ByVal hDC As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long, ByVal xr1 As Long, ByVal yr1 As Long, ByVal xr2 As Long, ByVal yr2 As Long) As BOOL
Public Declare PtrSafe Function Arc Lib "gdi32" (ByVal hDC As LongPtr, ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long, ByVal x3 As Long, ByVal y3 As Long, ByVal x4 As Long, ByVal y4 As Long) As BOOL
Public Declare PtrSafe Function ArcTo Lib "gdi32" (ByVal hDC As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long, ByVal xr1 As Long, ByVal yr1 As Long, ByVal xr2 As Long, ByVal yr2 As Long) As BOOL
Public Declare PtrSafe Function AngleArc Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal r As Long, ByVal StartAngle As Single, ByVal SweepAngle As Single) As BOOL
Public Declare PtrSafe Function SetArcDirection Lib "gdi32" (ByVal hDC As LongPtr, ByVal direction As GdiArcDirections) As GdiArcDirections
Public Declare PtrSafe Function GetArcDirection Lib "gdi32" (ByVal hDC As LongPtr) As GdiArcDirections
Public Declare PtrSafe Function Chord Lib "gdi32" (ByVal hDC As LongPtr, ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long, ByVal x3 As Long, ByVal y3 As Long, ByVal x4 As Long, ByVal y4 As Long) As BOOL
Public Declare PtrSafe Function PolyBezier Lib "gdi32" (ByVal hDC As LongPtr, apt As POINT, ByVal cpt As Long) As BOOL
Public Declare PtrSafe Function PolyBezierTo Lib "gdi32" (ByVal hDC As LongPtr, apt As POINT, ByVal cpt As Long) As BOOL
Public Declare PtrSafe Function Polyline Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, ByVal nCount As Long) As BOOL
Public Declare PtrSafe Function Polygon Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, ByVal nCount As Long) As BOOL
Public Declare PtrSafe Function PolyPolyline Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, asz As Long, ByVal csz As Long) As BOOL
Public Declare PtrSafe Function PolyPolygon Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, asz As Long, ByVal csz As Long) As BOOL



Public Declare PtrSafe Function SetDIBColorTable Lib "gdi32" (ByVal hDC As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, lpRGBQuad As Any) As Long
Public Declare PtrSafe Function GetDIBColorTable Lib "gdi32" (ByVal hDC As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, lpRGBQuad As Any) As Long
Public Declare PtrSafe Function CreatePalette Lib "gdi32" (plpal As Any) As LongPtr
Public Declare PtrSafe Function CreateHalftonePalette Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Function SelectPalette Lib "gdi32" (ByVal hDC As LongPtr, ByVal hPal As LongPtr, ByVal bForceBkgd As BOOL) As LongPtr
Public Declare PtrSafe Function RealizePalette Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function GetDeviceCaps Lib "gdi32" (ByVal hDC As LongPtr, ByVal nIndex As GetDevCaps_Index) As Long
Public Declare PtrSafe Function GetDIBits Lib "gdi32" (ByVal hdc As LongPtr, ByVal hbm As LongPtr, ByVal start As Long, ByVal cLines As Long, ByRef lpvBits As Any, ByRef lpbmi As BITMAPINFO, ByVal usage As GdiDIBitsColorUse) As Long
Public Declare PtrSafe Function SetDIBits Lib "gdi32" (ByVal hdc As LongPtr, ByVal hbm As LongPtr, ByVal start As Long, ByVal cLines As Long, ByRef lpBits As Any, ByRef lpbmi As BITMAPINFO, ByVal ColorUse As GdiDIBitsColorUse) As Long
Public DeclareWide PtrSafe Function GetObject Lib "gdi32" Alias "GetObjectW" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public DeclareWide PtrSafe Function GetObjectAPI Lib "gdi32" Alias "GetObjectW" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public DeclareWide PtrSafe Function GetObjectW Lib "gdi32" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public Declare PtrSafe Function GetObjectA Lib "gdi32" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public DeclareWide PtrSafe Function GetObjectType Lib "gdi32" (ByVal h As LongPtr) As GdiObjectTypes
Public Declare PtrSafe Function CreateFontW Lib "gdi32" (ByVal cHeight As Long, ByVal cWidth As Long, ByVal cEscapement As Long, ByVal cOrientation As Long, ByVal cWeight As FontWeight, ByVal bItalic As Long, ByVal bUnderline As Long, ByVal bStrikeOut As Long, ByVal iCharset As FontCharset, ByVal iOutPrecision As FontOutPrecis, ByVal iClipPrecision As FontClipPrecis, ByVal iQuality As Long, ByVal iPitchAndFamily As Long, ByVal pszFaceName As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateCompatibleBitmap Lib "gdi32" (ByVal hDC As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long) As LongPtr
Public Declare PtrSafe Function CreateCompatibleDC Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateDCA Lib "gdi32" (ByVal pwszDriver As String, ByVal pwszDevice As String, ByVal pszPort As String, pdm As DEVMODEA) As LongPtr
Public DeclareWide PtrSafe Function CreateDCW Lib "gdi32" (ByVal pwszDriver As LongPtr, ByVal pwszDevice As LongPtr, ByVal pszPort As LongPtr, pdm As DEVMODEW) As LongPtr
Public DeclareWide PtrSafe Function CreateDC Lib "gdi32" Alias "CreateDCW" (ByVal pwszDriver As String, ByVal pwszDevice As String, ByVal pszPort As String, pdm As DEVMODE) As LongPtr
Public Declare PtrSafe Function ResetDCA Lib "gdi32" (ByVal hDC As LongPtr, pdm As DEVMODEA) As LongPtr
Public DeclareWide PtrSafe Function ResetDCW Lib "gdi32" (ByVal hDC As LongPtr, pdm As DEVMODEW) As LongPtr
Public DeclareWide PtrSafe Function ResetDC Lib "gdi32" Alias "ResetDCW" (ByVal hDC As LongPtr, pdm As DEVMODE) As LongPtr
Public Declare PtrSafe Function CreateBitmapIndirect Lib "gdi32" (ByRef lpBitmap As BITMAP) As LongPtr

Public Declare PtrSafe Function CreateDIBSection Lib "gdi32" (ByVal hDC As LongPtr, pbmi As BITMAPINFO, ByVal usage As Long, ByRef ppvBits As Any, ByVal hSection As LongPtr, ByVal offset As Long) As LongPtr
Public Declare PtrSafe Function DeleteObject Lib "gdi32" (ByVal hObject As LongPtr) As Long
Public Declare PtrSafe Function DeleteDC Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function D3DKMTSetProcessSchedulingPriorityClass Lib "gdi32" (ByVal hProcess As LongPtr, ByVal lPriority As D3DKMT_SCHEDULINGPRIORITYCLASS) As Long
Public Declare PtrSafe Function CreateSolidBrush Lib "gdi32" (ByVal crColor As Long) As LongPtr
Public Declare PtrSafe Function CreatePatternBrush Lib "gdi32" (ByVal hBitmap As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateHatchBrush Lib "gdi32" (ByVal iHatch As GdiHatchStyles, ByVal crColor As Long) As LongPtr
Public Declare PtrSafe Function CreatePen Lib "gdi32" (ByVal iStyle As GdiPenStyles, ByVal cWidth As Long, ByVal crColor As Long) As LongPtr
Public Declare PtrSafe Function CreatePenIndirect Lib "gdi32" (lopn As LOGPEN) As LongPtr

Public Declare PtrSafe Function SetWindowExtEx Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function GetWindowExtEx Lib "gdi32" (ByVal hDC As LongPtr, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function SetWindowOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL
Public Declare PtrSafe Function GetWindowOrgEx Lib "gdi32" (ByVal hdc As LongPtr, lppoint As POINT) As BOOL
Public Declare PtrSafe Function SetViewportOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL
Public Declare PtrSafe Function GetViewportOrgEx Lib "gdi32" (ByVal hdc As LongPtr, lppoint As POINT) As BOOL
Public Declare PtrSafe Function SetViewportExtEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function GetViewportExtEx Lib "gdi32" (ByVal hdc As LongPtr, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function SetBrushOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL
Public Declare PtrSafe Function GetBrushOrgEx Lib "gdi32" (ByVal hdc As LongPtr, lppoint As POINT) As BOOL
Public Declare PtrSafe Function GetBitmapDimensionEx Lib "gdi32" (ByVal hbit As LongPtr, lpsize As SIZE) As BOOL
Public Declare PtrSafe Function SetBitmapDimensionEx Lib "gdi32" (ByVal hbit As LongPtr, ByVal w As Long, ByVal h As Long, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function IntersectClipRect Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As GdiRegionTypes
Public Declare PtrSafe Function ExcludeClipRect Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As GdiRegionTypes
Public Declare PtrSafe Function SetWorldTransform Lib "gdi32" (ByVal hdc As LongPtr, lpxf As XFORM) As BOOL
Public Declare PtrSafe Function GetWorldTransform Lib "gdi32" (ByVal hdc As LongPtr, lpxf As XFORM) As BOOL
Public Declare PtrSafe Function ScaleWindowExtEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal nXnum As Long, ByVal nXdenom As Long, ByVal nYnum As Long, ByVal nYdenom As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function ScaleViewportExtEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal nXnum As Long, ByVal nXdenom As Long, ByVal nYnum As Long, ByVal nYdenom As Long, lpSize As SIZE) As BOOL

Public Declare PtrSafe Function CreateFontIndirectA Lib "gdi32" (ByRef lpLogFont As LOGFONTA) As LongPtr
Public DeclareWide PtrSafe Function CreateFontIndirectW Lib "gdi32" (ByRef lpLogFont As LOGFONTW) As LongPtr
Public DeclareWide PtrSafe Function CreateFontIndirect Lib "gdi32" Alias "CreateFontIndirectW" (ByRef lpLogFont As LOGFONTW) As LongPtr
Public DeclareWide PtrSafe Function CreateFontIndirectExW Lib "gdi32" (ByRef lpLogFont As ENUMLOGFONTEXDVW) As LongPtr
Public DeclareWide PtrSafe Function CreateFontIndirectEx Lib "gdi32" Alias "CreateFontIndirectExW" (ByRef lpLogFont As ENUMLOGFONTEXDV) As LongPtr
Public DeclareWide PtrSafe Function AddFontResourceW Lib "gdi32" (ByVal lpszFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function AddFontResource Lib "gdi32" Alias "AddFontResourceW" (ByVal lpszFileName As String) As Long
Public DeclareWide PtrSafe Function AddFontResourceExW Lib "gdi32" (ByVal lpszFileName As LongPtr, ByVal fl As AddFontFlags, Optional ByVal res As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function AddFontResourceEx Lib "gdi32" Alias "AddFontResourceExW" (ByVal lpszFileName As String, ByVal fl As AddFontFlags, Optional ByVal res As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function RemoveFontResourceW Lib "gdi32" (ByVal lpszFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveFontResource Lib "gdi32" Alias "RemoveFontResourceW" (ByVal lpszFileName As String) As BOOL
Public DeclareWide PtrSafe Function RemoveFontResourceExW Lib "gdi32" (ByVal lpszFileName As LongPtr, ByVal fl As AddFontFlags, Optional ByVal pdv As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function RemoveFontResourceEx Lib "gdi32" Alias "RemoveFontResourceExW" (ByVal lpszFileName As String, ByVal fl As AddFontFlags, Optional ByVal pdv As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function EnumFontsW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpLogfont As LongPtr, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFonts Lib "gdi32" Alias "EnumFontsW" (ByVal hdc As LongPtr, ByVal lpLogfont As String, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFontFamiliesW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpLogfont As LongPtr, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFontFamilies Lib "gdi32" Alias "EnumFontFamiliesW" (ByVal hdc As LongPtr, ByVal lpLogfont As String, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFontFamiliesExW Lib "gdi32" (ByVal hdc As LongPtr, lpLogfont As LOGFONTW, ByVal lpProc As LongPtr, lParam As Any, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function EnumFontFamiliesEx Lib "gdi32" Alias "EnumFontFamiliesExW" (ByVal hdc As LongPtr, lpLogfont As LOGFONT, ByVal lpProc As LongPtr, lParam As Any, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function GetGlyphIndicesW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpstr As LongPtr, ByVal c As LongPtr, pgi As Long, ByVal fl As GetGlyphIndiciesFlags) As Long
Public DeclareWide PtrSafe Function GetGlyphIndices Lib "gdi32" Alias "GetGlyphIndicesW" (ByVal hdc As LongPtr, ByVal lpstr As LongPtr, ByVal c As LongPtr, pgi As Long, ByVal fl As  GetGlyphIndiciesFlags) As Long
[Description("Note: First pass ByVal 0 to get the required size; then use a byte array, then fill a GLYPHSET in two steps, copy fixed, redim and copy WCRANGE bytes.")]
Public DeclareWide PtrSafe Function GetFontUnicodeRanges Lib "gdi32" (ByVal hdc As LongPtr, lpgs As Any) As Long
Public DeclareWide PtrSafe Function GetGlyphOutlineW Lib "gdi32" (ByVal hdc As LongPtr, ByVal uChar As Long, ByVal fuFormat As GlyphOutlineFormats, lpgm As GLYPHMETRICS, ByVal cjBuffer As Long, pvBuffer As Any, lpmat2 As MAT2) As Long
Public DeclareWide PtrSafe Function GetGlyphOutline Lib "gdi32" Alias "GetGlyphOutlineW" (ByVal hdc As LongPtr, ByVal uChar As Long, ByVal fuFormat As GlyphOutlineFormats, lpgm As GLYPHMETRICS, ByVal cjBuffer As Long, pvBuffer As Any, lpmat2 As MAT2) As Long

Public Declare PtrSafe Function GetTextExtentPoint32W Lib "gdi32" (ByVal hDC As LongPtr, ByVal lpsz As LongPtr, ByVal cbString As Long, lpSize As SIZE) As Long
Public DeclareWide PtrSafe Function GetTextExtentPoint32 Lib "gdi32" (ByVal hDC As LongPtr, ByVal lpsz As String, ByVal cbString As Long, lpSize As SIZE) As Long
Public DeclareWide PtrSafe Function GetTabbedTextExtentW Lib "user32" (ByVal HDC As LongPtr, ByVal lpString As LongPtr, ByVal StringLen As Long, ByVal nTabPositions As Long, ByRef arrayOfPositions As Long) As Long  ' we only pass 1 value to arrayOfPositions, so this definition is OK for our needs    
Public DeclareWide PtrSafe Function GetTabbedTextExtent Lib "user32" Alias "GetTabbedTextExtentW" (ByVal HDC As LongPtr, ByVal lpString As String, ByVal StringLen As Long, ByVal nTabPositions As Long, ByRef arrayOfPositions As Long) As Long  ' we only pass 1 value to arrayOfPositions, so this definition is OK for our needs    
Public DeclareWide PtrSafe Function GetTextMetricsW Lib "gdi32" (ByVal hdc As LongPtr, lptm As TEXTMETRICW) As BOOL
Public Declare PtrSafe Function GetTextMetricsA Lib "gdi32" (ByVal hdc As LongPtr, lptm As TEXTMETRICA) As BOOL
Public DeclareWide PtrSafe Function GetTextMetrics Lib "gdi32" Alias "GetTextMetricsW" (ByVal hdc As LongPtr, lptm As TEXTMETRIC) As BOOL
Public DeclareWide PtrSafe Function GetOutlineTextMetricsW Lib "gdi32" (ByVal hdc As LongPtr, ByVal cjCopy As Long, potm As OUTLINETEXTMETRICW) As Long
Public DeclareWide PtrSafe Function GetOutlineTextMetrics Lib "gdi32" Alias "GetOutlineTextMetricsW" (ByVal hdc As LongPtr, ByVal cjCopy As Long, potm As OUTLINETEXTMETRIC) As Long
Public Declare PtrSafe Function TextOutA Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal c As Long) As BOOL
Public DeclareWide PtrSafe Function TextOutW Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As LongPtr, ByVal c As Long) As BOOL
Public DeclareWide PtrSafe Function TextOut Lib "gdi32" Alias "TextOutW" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal c As Long) As BOOL
Public Declare PtrSafe Function SetTextAlign Lib "gdi32" (ByVal hDC As LongPtr, ByVal align As GdiTextAlign) As GdiTextAlign
Public Declare PtrSafe Function GetTextAlign Lib "gdi32" (ByVal hDC As LongPtr) As GdiTextAlign
Public Declare PtrSafe Function ExtTextOutA Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal options As GdiExtTextOutOpts, lprect As RECT, ByVal lpString As String, ByVal c As Long, Optional lpDx As Long) As BOOL
Public DeclareWide PtrSafe Function ExtTextOutW Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal options As GdiExtTextOutOpts, lprect As RECT, ByVal lpString As LongPtr, ByVal c As Long, Optional lpDx As Long) As BOOL
Public DeclareWide PtrSafe Function ExtTextOut Lib "gdi32" Alias "ExtTextOutW" (ByVal hdc As LongPtr, ByVal x As Long, ByVal options As GdiExtTextOutOpts, lprect As RECT, ByVal y As Long, ByVal lpString As String, ByVal c As Long, Optional lpDx As Long) As BOOL
Public Declare PtrSafe Function FloodFill Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal color As Long) As BOOL
Public Declare PtrSafe Function ExtFloodFill Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal color As Long, ByVal type As GdiExtFloodFillType) As BOOL
Public Declare PtrSafe Function PolyTextOutA Lib "gdi32" (ByVal hdc As LongPtr, ppt As POLYTEXTA, ByVal nStrings As Long) As BOOL
Public DeclareWide PtrSafe Function PolyTextOutW Lib "gdi32" (ByVal hdc As LongPtr, ppt As POLYTEXTW, ByVal nStrings As Long) As BOOL
Public DeclareWide PtrSafe Function PolyTextOut Lib "gdi32" Alias "PolyTextOutW" (ByVal hdc As LongPtr, ppt As POLYTEXT, ByVal nStrings As Long) As BOOL
Public DeclareWide PtrSafe Function SetTextJustification Lib "gdi32" (ByVal hdc As LongPtr, ByVal extra As Long, ByVal count As Long) As BOOL

Public Declare PtrSafe Function LPtoDP Lib "gdi32" (ByVal hdc As LongPtr, lppt As POINT, ByVal c As Long) As BOOL
Public Declare PtrSafe Function DPtoLP Lib "gdi32" (ByVal hdc As LongPtr, lppt As POINT, ByVal c As Long) As BOOL

Public Declare PtrSafe Function CloseEnhMetaFile Lib "gdi32" (ByVal hdc As LongPtr) As LongPtr
Public Declare PtrSafe Function CopyEnhMetaFileA Lib "gdi32" (ByVal hEnh As LongPtr, ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function CopyEnhMetaFileW Lib "gdi32" (ByVal hEnh As LongPtr, ByVal lpFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CopyEnhMetaFile Lib "gdi32" Alias "CopyEnhMetaFileW" (ByVal hEnh As LongPtr, ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function CreateEnhMetaFileA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpFilename As String, lprc As RECT, ByVal lpDesc As String) As LongPtr
Public Declare PtrSafe Function CreateEnhMetaFileW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpFilename As LongPtr, lprc As RECT, ByVal lpDesc As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateEnhMetaFile Lib "gdi32" Alias "CreateEnhMetaFileW" (ByVal hdc As LongPtr, ByVal lpFilename As String, lprc As RECT, ByVal lpDesc As String) As LongPtr
Public Declare PtrSafe Function DeleteEnhMetaFile Lib "gdi32" (ByVal hmf As LongPtr) As Boolean
Public Declare PtrSafe Function EnumEnhMetaFile Lib "gdi32" (ByVal hdc As LongPtr, ByVal hmf As LongPtr, ByVal proc As LongPtr, param As Any, lprc As RECT) As Boolean
Public Declare PtrSafe Function GetEnhMetaFileA Lib "gdi32" (ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function GetEnhMetaFileW Lib "gdi32" (ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetEnhMetaFile Lib "gdi32" Alias "GetEnhMetaFileW" (ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function GetEnhMetaFileBits Lib "gdi32" (ByVal hEMF As LongPtr, ByVal nSize As Long, ByVal lpData As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFileDescriptionA Lib "gdi32" (ByVal hemf As LongPtr, ByVal cchBuffer As Long, ByVal lpDescription As String) As Long
Public Declare PtrSafe Function GetEnhMetaFileDescriptionW Lib "gdi32" (ByVal hemf As LongPtr, ByVal cchBuffer As Long, ByVal lpDescription As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFileHeader Lib "gdi32" (ByVal hemf As LongPtr, ByVal nSize As Long, ByVal lpEnhMetaHeader As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFilePaletteEntries Lib "gdi32" (ByVal hemf As LongPtr, ByVal nNumEntries As Long, ByVal lpPaletteEntries As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFilePixelFormat Lib "gdi32" (ByVal hemf As LongPtr, ByVal cbBuffer As Long, ByRef ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function GetWinMetaFileBits Lib "gdi32" (ByVal hemf As LongPtr, ByVal cbData16 As Long, ByVal pData16 As LongPtr, ByVal iMapMode As Long, ByVal hdcRef As LongPtr) As Long
Public Declare PtrSafe Function PlayEnhMetaFile Lib "gdi32" (ByVal hdc As LongPtr, ByVal hmf As LongPtr, ByRef lprect As RECT) As Long
Public Declare PtrSafe Function PlayEnhMetaFileRecord Lib "gdi32" (ByVal hdc As LongPtr, ByVal pht As LongPtr, ByVal pmr As LongPtr, ByVal cht As Long) As Long
Public Declare PtrSafe Function SetEnhMetaFileBits Lib "gdi32" (ByVal nSize As Long, ByVal pb As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWinMetaFileBits Lib "gdi32" (ByVal nSize As Long, ByVal lpMeta16Data As LongPtr, ByVal hdcRef As LongPtr, ByRef lpMFP As METAFILEPICT) As LongPtr
Public Declare PtrSafe Function GdiComment Lib "gdi32" (ByVal hdc As LongPtr, ByVal nSize As Long, ByVal lpData As LongPtr) As Long

Public Const ENHMETA_SIGNATURE       = &H20454D46
Public Type ENHMETAHEADER
    iType As Long ' Record typeEMR_HEADER
    nSize As Long ' Record size in bytes.  This may be greater
    ' than the sizeof(ENHMETAHEADER).
    rclBounds As RECT ' Inclusive-inclusive bounds in device units
    rclFrame As RECT ' Inclusive-inclusive Picture Frame of metafile in .01 mm units
    dSignature As Long ' Signature.  Must be ENHMETA_SIGNATURE.
    nVersion As Long ' Version number
    nBytes As Long ' Size of the metafile in bytes
    nRecords As Long ' Number of records in the metafile
    nHandles As Integer ' Number of handles in the handle table
    ' Handle index zero is reserved.
    sReserved As Integer ' Reserved.  Must be zero.
    nDescription As Long ' Number of chars in the unicode description string
    ' This is 0 if there is no description string
    offDescription As Long ' Offset to the metafile description record.
    ' This is 0 if there is no description string
    nPalEntries As Long ' Number of entries in the metafile palette.
    szlDevice As SIZE ' Size of the reference device in pels
    szlMillimeters As SIZE ' Size of the reference device in millimeters
    '#if(WINVER >= 0x0400)
    cbPixelFormat As Long ' Size of PIXELFORMATDESCRIPTOR information
    ' This is 0 if no pixel format is set
    offPixelFormat As Long ' Offset to PIXELFORMATDESCRIPTOR
    ' This is 0 if no pixel format is set
    bOpenGL As Long ' TRUE if OpenGL commands are present in
    ' the metafile, otherwise FALSE
    '#endif /* WINVER >= 0x0400 */
    '#if(WINVER >= 0x0500)
    szlMicrometers As SIZE ' Size of the reference device in micrometers
    '#endif /* WINVER >= 0x0500 */
End Type
Public Type METAFILEPICT
    mm As MappingModes
    xExt As LONG
    yExt As LONG
    hMF As LongPtr
End Type


Public Type GRADIENT_TRIANGLE
	Vertex1 As Long
	Vertex2 As Long
	Vertex3 As Long
End Type
Public Type GRADIENT_RECT
	UpperLeft As Long
	LowerRight As Long
End Type

[Description("NOTE: The last param of this API is ByVal BLENDFUNCTION; copy that 4-byte UDT to a Long, then pass that long. Do not pass a pointer.")]
Public Declare PtrSafe Function GdiAlphaBlend Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal ftn As Long) As BOOL
Public Declare PtrSafe Function GdiTransparentBlt Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal crTransparent As Long) As BOOL
Public Declare PtrSafe Function GdiGradientFill Lib "gdi32" (ByVal hdc As LongPtr, pVertex As TRIVERTEX, ByVal nVertex As Long, pMesh As Any, ByVal nMesh As Long, ByVal ulMode As GradientDrawingMode) As BOOL


Public Declare PtrSafe Function StartDocA Lib "gdi32" (ByVal hDC As LongPtr, lpdi As DOCINFOA) As Long
Public DeclareWide PtrSafe Function StartDocW Lib "gdi32" (ByVal hDC As LongPtr, lpdi As DOCINFOW) As Long
Public DeclareWide PtrSafe Function StartDoc Lib "gdi32" Alias "StartDocW" (ByVal hDC As LongPtr, lpdi As DOCINFO) As Long
Public Declare PtrSafe Function EndDoc Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function StartPage Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function EndPage Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function AbortDoc Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function SetAbortProc Lib "gdi32" (ByVal hDC As LongPtr, ByVal proc As LongPtr) As Long


Public Enum DocInfoTypes
	DI_APPBANDING  = &H00000001
	DI_ROPS_READ_DESTINATION  = &H00000002
End Enum
Public Type DOCINFOA
	cbSize As Long
	lpszDocName As String
	lpszOutput As String
	lpszDatatype As String
	fwType As DocInfoTypes
End Type
Public Type DOCINFOW
    cbSize As Long
    lpszDocName As LongPtr
    lpszOutput As LongPtr
    lpszDatatype As LongPtr
    fwType As DocInfoTypes
End Type
Public Type DOCINFO
    cbSize As Long
    lpszDocName As LongPtr
    lpszOutput As LongPtr
    lpszDatatype As LongPtr
    fwType As DocInfoTypes
End Type
Public Enum D3DKMT_SCHEDULINGPRIORITYCLASS
	D3DKMT_SCHEDULINGPRIORITYCLASS_IDLE = 0
	D3DKMT_SCHEDULINGPRIORITYCLASS_BELOW_NORMAL = 1
	D3DKMT_SCHEDULINGPRIORITYCLASS_NORMAL = 2
	D3DKMT_SCHEDULINGPRIORITYCLASS_ABOVE_NORMAL = 3
	D3DKMT_SCHEDULINGPRIORITYCLASS_HIGH = 4
	D3DKMT_SCHEDULINGPRIORITYCLASS_REALTIME = 5
End Enum


Public Enum GetDevCaps_Index
	DRIVERVERSION  = 0  ' Device driver version                    */
	TECHNOLOGY  = 2  ' Device classification                    */
	HORZSIZE  = 4  ' Horizontal size in millimeters           */
	VERTSIZE  = 6  ' Vertical size in millimeters             */
	HORZRES  = 8  ' Horizontal width in pixels               */
	VERTRES  = 10  ' Vertical height in pixels                */
	BITSPIXEL  = 12  ' Number of bits per pixel                 */
	PLANES  = 14  ' Number of planes                         */
	NUMBRUSHES  = 16  ' Number of brushes the device has         */
	NUMPENS  = 18  ' Number of pens the device has            */
	NUMMARKERS  = 20  ' Number of markers the device has         */
	NUMFONTS  = 22  ' Number of fonts the device has           */
	NUMCOLORS  = 24  ' Number of colors the device supports     */
	PDEVICESIZE  = 26  ' Size required for device descriptor      */
	CURVECAPS  = 28  ' Curve capabilities                       */
	LINECAPS  = 30  ' Line capabilities                        */
	POLYGONALCAPS  = 32  ' Polygonal capabilities                   */
	TEXTCAPS  = 34  ' Text capabilities                        */
	CLIPCAPS  = 36  ' Clipping capabilities                    */
	RASTERCAPS = 38  ' Bitblt capabilities                      */
	ASPECTX  = 40  ' Length of the X leg                      */
	ASPECTY  = 42  ' Length of the Y leg                      */
	ASPECTXY  = 44  ' Length of the hypotenuse                 */
	LOGPIXELSX  = 88  ' Logical pixels/inch in X                 */
	LOGPIXELSY  = 90  ' Logical pixels/inch in Y                 */
	SIZEPALETTE  = 104  ' Number of entries in physical palette    */
	NUMRESERVED  = 106  ' Number of reserved entries in palette    */
	COLORRES  = 108  ' Actual color resolution                  */
'  Printing related DeviceCaps. These replace the appropriate Escapes
	PHYSICALWIDTH  = 110  ' Physical Width in device units           */
	PHYSICALHEIGHT  = 111  ' Physical Height in device units          */
	PHYSICALOFFSETX  = 112  ' Physical Printable Area x margin         */
	PHYSICALOFFSETY  = 113  ' Physical Printable Area y margin         */
	SCALINGFACTORX  = 114  ' Scaling factor x                         */
	SCALINGFACTORY  = 115  ' Scaling factor y                         */
'  Display driver specific
	VREFRESH  = 116  ' Current vertical refresh rate of the    */
'  display device (for displays only) in Hz*/
	DESKTOPVERTRES  = 117  ' Horizontal width of entire desktop in   */
'  pixels                                  */
	DESKTOPHORZRES  = 118  ' Vertical height of entire desktop in    */
'  pixels                                  */
	BLTALIGNMENT  = 119  ' Preferred blt alignment                 */
	SHADEBLENDCAPS  = 120  ' Shading and blending caps               */
	COLORMGMTCAPS  = 121  ' Color Management caps                   */
End Enum
'  Device Capability Masks: */
'  Device Technologies */
Public Enum DeviceTechnologies
	DT_PLOTTER  = 0  ' Vector plotter                   */
	DT_RASDISPLAY  = 1  ' Raster display                   */
	DT_RASPRINTER  = 2  ' Raster printer                   */
	DT_RASCAMERA  = 3  ' Raster camera                    */
	DT_CHARSTREAM = 4  ' Character-stream, PLP            */
	DT_METAFILE  = 5  ' Metafile, VDM                    */
	DT_DISPFILE  = 6  ' Display-file                     */
End Enum

'  Curve Capabilities */
Public Enum CurveCapabilities
	CC_NONE  = 0  ' Curves not supported             */
	CC_CIRCLES  = 1  ' Can do circles                   */
	CC_PIE  = 2  ' Can do pie wedges                */
	CC_CHORD  = 4  ' Can do chord arcs                */
	CC_ELLIPSES = 8  ' Can do ellipese                  */
	CC_WIDE  = 16  ' Can do wide lines                */
	CC_STYLED  = 32  ' Can do styled lines              */
	CC_WIDESTYLED  = 64  ' Can do wide styled lines         */
	CC_INTERIORS  = 128  ' Can do interiors                 */
	CC_ROUNDRECT  = 256  '                                  */
End Enum
'  Line Capabilities */
Public Enum LineCapabilities
	LC_NONE  = 0  ' Lines not supported              */
	LC_POLYLINE  = 2  ' Can do polylines                 */
	LC_MARKER  = 4  ' Can do markers                   */
	LC_POLYMARKER = 8  ' Can do polymarkers               */
	LC_WIDE  = 16  ' Can do wide lines                */
	LC_STYLED  = 32  ' Can do styled lines              */
	LC_WIDESTYLED  = 64  ' Can do wide styled lines         */
	LC_INTERIORS  = 128  ' Can do interiors                 */
End Enum
'  Polygonal Capabilities */
Public Enum PolygonCapabilities
	PC_NONE  = 0  ' Polygonals not supported         */
	PC_POLYGON  = 1  ' Can do polygons                  */
	PC_RECTANGLE  = 2  ' Can do rectangles                */
	PC_WINDPOLYGON  = 4  ' Can do winding polygons          */
	PC_TRAPEZOID  = 4  ' Can do trapezoids                */
	PC_SCANLINE = 8  ' Can do scanlines                 */
	PC_WIDE  = 16  ' Can do wide borders              */
	PC_STYLED  = 32  ' Can do styled borders            */
	PC_WIDESTYLED  = 64  ' Can do wide styled borders       */
	PC_INTERIORS  = 128  ' Can do interiors                 */
	PC_POLYPOLYGON  = 256  ' Can do polypolygons              */
	PC_PATHS = 512  ' Can do paths                     */
End Enum
'  Clipping Capabilities */
Public Enum ClippingCapabilities
	CP_NONE  = 0  ' No clipping of output            */
	CP_RECTANGLE  = 1  ' Output clipped to rects          */
	CP_REGION  = 2  ' obsolete                         */
End Enum
'  Text Capabilities */
Public Enum TextCapabilities
	TC_OP_CHARACTER  = &H00000001  ' Can do OutputPrecision   CHARACTER      */
	TC_OP_STROKE  = &H00000002  ' Can do OutputPrecision   STROKE         */
	TC_CP_STROKE  = &H00000004  ' Can do ClipPrecision     STROKE         */
	TC_CR_90  = &H00000008  ' Can do CharRotAbility    90             */
	TC_CR_ANY  = &H00000010  ' Can do CharRotAbility    ANY            */
	TC_SF_X_YINDEP  = &H00000020  ' Can do ScaleFreedom      X_YINDEPENDENT */
	TC_SA_DOUBLE  = &H00000040  ' Can do ScaleAbility      DOUBLE         */
	TC_SA_INTEGER = &H00000080  ' Can do ScaleAbility      INTEGER        */
	TC_SA_CONTIN  = &H00000100  ' Can do ScaleAbility      CONTINUOUS     */
	TC_EA_DOUBLE  = &H00000200  ' Can do EmboldenAbility   DOUBLE         */
	TC_IA_ABLE  = &H00000400  ' Can do ItalisizeAbility  ABLE           */
	TC_UA_ABLE  = &H00000800  ' Can do UnderlineAbility  ABLE           */
	TC_SO_ABLE  = &H00001000  ' Can do StrikeOutAbility  ABLE           */
	TC_RA_ABLE  = &H00002000  ' Can do RasterFontAble    ABLE           */
	TC_VA_ABLE  = &H00004000  ' Can do VectorFontAble    ABLE           */
	TC_RESERVED = &H00008000&
	TC_SCROLLBLT  = &H00010000  ' Don't do text scroll with blt           */
End Enum

'  Raster Capabilities */
Public Enum RasterCapabilities
	RC_NONE = 0
	RC_BITBLT  = 1  ' Can do standard BLT.             */
	RC_BANDING  = 2  ' Device requires banding support  */
	RC_SCALING  = 4  ' Device requires scaling support  */
	RC_BITMAP64  = 8  ' Device can support >64K bitmap   */
	RC_GDI20_OUTPUT  = &H0010  ' has 2.0 output calls         */
	RC_GDI20_STATE  = &H0020
	RC_SAVEBITMAP  = &H0040
	RC_DI_BITMAP = &H0080  ' supports DIB to memory       */
	RC_PALETTE  = &H0100  ' supports a palette           */
	RC_DIBTODEV = &H0200  ' supports DIBitsToDevice      */
	RC_BIGFONT  = &H0400  ' supports >64K fonts          */
	RC_STRETCHBLT  = &H0800  ' supports StretchBlt          */
	RC_FLOODFILL  = &H1000  ' supports FloodFill           */
	RC_STRETCHDIB  = &H2000  ' supports StretchDIBits       */
	RC_OP_DX_OUTPUT  = &H4000
	RC_DEVBITS = &H8000&
End Enum

'  Shading and blending caps */
Public Enum ShadeBlendCapabilities
	SB_NONE  = &H00000000
	SB_CONST_ALPHA = &H00000001
	SB_PIXEL_ALPHA  = &H00000002
	SB_PREMULT_ALPHA  = &H00000004
	SB_GRAD_RECT  = &H00000010
	SB_GRAD_TRI  = &H00000020
End Enum
'  Color Management caps */
Public Enum ColorManagementCapabilities
	CM_NONE  = &H00000000
	CM_DEVICE_ICM  = &H00000001
	CM_GAMMA_RAMP = &H00000002
	CM_CMYK_COLOR  = &H00000004
End Enum
Public Enum SystemPaletteUses
'  constants for Get/SetSystemPaletteUse() */
	SYSPAL_ERROR = 0
	SYSPAL_STATIC  = 1
	SYSPAL_NOSTATIC  = 2
	SYSPAL_NOSTATIC256  = 3
End Enum
'  constants for CreateDIBitmap */
Public Enum CreateDIBitmapFlags
	CBM_INIT = &H04  ' initialize bitmap */
End Enum

Public Enum GdiBackgroundModes
    TRANSPARENT = 1&
    OPAQUE = 2&
End Enum

Public Enum StockObjects
    WHITE_BRUSH = 0
    LTGRAY_BRUSH = 1
    GRAY_BRUSH = 2
    DKGRAY_BRUSH = 3
    BLACK_BRUSH = 4
    NULL_BRUSH = 5
    HOLLOW_BRUSH = NULL_BRUSH
    WHITE_PEN = 6
    BLACK_PEN = 7
    NULL_PEN = 8
    OEM_FIXED_FONT = 10
    ANSI_FIXED_FONT = 11
    ANSI_VAR_FONT = 12
    SYSTEM_FONT = 13
    DEVICE_DEFAULT_FONT = 14
    DEFAULT_PALETTE = 15
    SYSTEM_FIXED_FONT = 16
    DEFAULT_GUI_FONT = 17
    DC_BRUSH = 18
    DC_PEN = 19
End Enum

Public Enum FontWeight
    FW_DONTCARE = 0
    FW_THIN = 100
    FW_EXTRALIGHT = 200
    FW_LIGHT = 300
    FW_NORMAL = 400
    FW_MEDIUM = 500
    FW_SEMIBOLD = 600
    FW_BOLD = 700
    FW_EXTRABOLD = 800
    FW_HEAVY = 900
    FW_ULTRALIGHT = FW_EXTRALIGHT
    FW_REGULAR = FW_NORMAL
    FW_DEMIBOLD = FW_SEMIBOLD
    FW_ULTRABOLD = FW_EXTRABOLD
    FW_BLACK = FW_HEAVY
End Enum

Public Enum FontCharset
     ANSI_CHARSET = 0
     DEFAULT_CHARSET = 1
     SYMBOL_CHARSET = 2
     SHIFTJIS_CHARSET = 128
     HANGEUL_CHARSET = 129
     HANGUL_CHARSET = 129
     GB2312_CHARSET = 134
     CHINESEBIG5_CHARSET = 136
     OEM_CHARSET = 255
     JOHAB_CHARSET = 130
     HEBREW_CHARSET = 177
     ARABIC_CHARSET = 178
     GREEK_CHARSET = 161
     TURKISH_CHARSET = 162
     VIETNAMESE_CHARSET = 163
     THAI_CHARSET = 222
     EASTEUROPE_CHARSET = 238
     RUSSIAN_CHARSET = 204

     MAC_CHARSET = 77
     BALTIC_CHARSET = 186
End Enum

Public Const DEFAULT_PITCH = 0
Public Const FIXED_PITCH = 1
Public Const VARIABLE_PITCH  = 2
Public Const MONO_FONT  = 8

Public Enum FontFamily
    FF_DONTCARE = 0
    FF_ROMAN = 16
    FF_SWISS = 32
    FF_MODERN = 48
    FF_SCRIPT = 64
    FF_DECORATIVE = 80
End Enum

Public Enum FontOutPrecis
    OUT_DEFAULT_PRECIS = 0
    OUT_STRING_PRECIS = 1
    OUT_CHARACTER_PRECIS = 2
    OUT_STROKE_PRECIS = 3
    OUT_TT_PRECIS = 4
    OUT_DEVICE_PRECIS = 5
    OUT_RASTER_PRECIS = 6
    OUT_TT_ONLY_PRECIS = 7
    OUT_OUTLINE_PRECIS = 8
    OUT_SCREEN_OUTLINE_PRECIS = 9
    OUT_PS_ONLY_PRECIS = 10
End Enum

Public Enum FontClipPrecis
    CLIP_DEFAULT_PRECIS = 0
    CLIP_CHARACTER_PRECIS = 1
    CLIP_STROKE_PRECIS = 2
    CLIP_MASK = &Hf
    CLIP_LH_ANGLES = (1 << 4)
    CLIP_TT_ALWAYS = (2 << 4)
    CLIP_DFA_DISABLE = (4 << 4)
    CLIP_EMBEDDED = (8 << 4)
End Enum
    

Public Const DEFAULT_QUALITY As Byte = (0)
Public Const DRAFT_QUALITY As Byte = (1)
Public Const PROOF_QUALITY As Byte = (2)
Public Const NONANTIALIASED_QUALITY As Byte = (3)
Public Const ANTIALIASED_QUALITY As Byte = (4)
Public Const CLEARTYPE_QUALITY As Byte = (5)
Public Const CLEARTYPE_NATURAL_QUALITY As Byte = (6)

#End Region

#Region "propsys"

Public Enum PKA_FLAGS
	PKA_SET=0
	PKA_APPEND = 1
	PKA_DELETE = 2
End Enum

Public Enum PROPVAR_COMPARE_UNIT
	PVCU_DEFAULT=0
	PVCU_SECOND=1
	PVCU_MINUTE=2
	PVCU_HOUR=3
	PVCU_DAY=4
	PVCU_MONTH=5
	PVCU_YEAR=6
End Enum

Public Enum PROPVAR_COMPARE_FLAGS
	PVCF_DEFAULT = &H00000000 ' When comparing strings, use StrCmpLogical
	PVCF_TREATEMPTYASGREATERTHAN = &H00000001 ' Empty/null values are greater-than non-empty values
	PVCF_USESTRCMP = &H00000002 ' When comparing strings, use StrCmp
	PVCF_USESTRCMPC = &H00000004 ' When comparing strings, use StrCmpC
	PVCF_USESTRCMPI = &H00000008 ' When comparing strings, use StrCmpI
	PVCF_USESTRCMPIC = &H00000010 ' When comparing strings, use StrCmpIC
	PVCF_DIGITSASNUMBERS_CASESENSITIVE = &H00000020 ' When comparing strings, use CompareStringEx with LOCALE_NAME_USER_DEFAULT and SORT_DIGITSASNUMBERS.  This corresponds to the linguistically correct order for UI lists.
End Enum

Public Enum PROPVAR_CHANGE_FLAGS
	PVCHF_DEFAULT = &H00000000
	PVCHF_NOVALUEPROP = &H00000001 ' Maps to VARIANT_NOVALUEPROP for VariantChangeType
	PVCHF_ALPHABOOL = &H00000002 ' Maps to VARIANT_ALPHABOOL for VariantChangeType
	PVCHF_NOUSEROVERRIDE = &H00000004 ' Maps to VARIANT_NOUSEROVERRIDE for VariantChangeType
	PVCHF_LOCALBOOL = &H00000008 ' Maps to VARIANT_LOCALBOOL for VariantChangeType
	PVCHF_NOHEXSTRING = &H00000010 ' Don't convert a string that looks like hexadecimal (0xABCD) to the numerical equivalent
End Enum

Public Enum PSTIME_FLAGS
    PSTF_UTC = &H00000000
    PSTF_LOCAL = &H00000001
End Enum

Public Declare PtrSafe Function PropVariantChangeType Lib "propsys" (ByRef ppropvarDest As Any, ByRef propvarSrc As Any, ByVal Flags As PROPVAR_CHANGE_FLAGS, [ TypeHint (VARENUM) ] ByVal vt As Integer) As Long
Public Declare PtrSafe Function PropVariantCompareEx Lib "propsys" (ByRef propvar1 As Any, ByRef propvar2 As Any, ByVal unit As PROPVAR_COMPARE_UNIT, ByVal Flags As PROPVAR_COMPARE_FLAGS) As Long
Public DeclareWide PtrSafe Function PropVariantToBSTR Lib "propsys" (ByRef propvar1 As Any, pbstrOut As String) As Long
[Description("String must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToStringAlloc Lib "propsys" (ByRef propvar1 As Any, ppszOut As LongPtr) As Long
Public Declare PtrSafe Function InitPropVariantFromFileTime Lib "propsys" (ft As FILETIME, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromFileTimeVector Lib "propsys" (prgft As FILETIME, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromCLSID Lib "propsys" (clsid As UUID, ppropvar As Variant) As Long
Public Declare PtrSafe Function VariantToFileTime Lib "propsys" (varIn As Variant, ByVal stfOut As Long, pftOut As FILETIME) As Long
Public Declare PtrSafe Function PropVariantToVariant Lib "propsys" (ByRef propvar As Any, ByRef var As Variant) As Long
Public Declare PtrSafe Function VariantToPropVariant Lib "propsys" (ByRef pvar As Variant, ByRef ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function InitVariantFromString Lib "propsys" (ByVal psz As String, pvar As Variant) As Long
Public DeclareWide PtrSafe Function StgSerializePropVariant Lib "propsys" (ByRef ppropvar As Variant, pprop As LongPtr, pcb As Long) As Long
Public DeclareWide PtrSafe Function StgDeserializePropVariant Lib "propsys" (ByRef pprop As Any, ByVal cbMax As Long, ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function PropVariantToBoolean Lib "propsys" (ByRef propvar As Variant, plRet As BOOL) As Long
Public DeclareWide PtrSafe Function PropVariantToInt16 Lib "propsys" (ByRef propvar As Variant, piRet As Integer) As Long
Public DeclareWide PtrSafe Function PropVariantToInt32 Lib "propsys" (ByRef propvar As Variant, plRet As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToInt64 Lib "propsys" (ByRef propvar As Variant, pllRet As LongLong) As Long
Public DeclareWide PtrSafe Function PropVariantToDouble Lib "propsys" (ByRef propvar As Variant, pdbRet As Double) As Long
Public DeclareWide PtrSafe Function PropVariantToString Lib "propsys" (ByRef propvar As Variant, ByVal psz As String, ByVal cch As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToBuffer Lib "propsys" (ByRef propvar As Variant, pvRet As Any, ByVal cb As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToGUID Lib "propsys" (ByRef propvar As Variant, pguid As UUID) As Long
Public DeclareWide PtrSafe Function PropVariantToFileTime Lib "propsys" (ByRef propvar As Variant, ByVal psftOut As PSTIME_FLAGS, pftOut As FILETIME) As Long
Public DeclareWide PtrSafe Function PropVariantToBooleanWithDefault Lib "propsys" (ByRef propvar As Variant, ByVal lDefault As BOOL) As BOOL
Public DeclareWide PtrSafe Function PropVariantToInt16WithDefault Lib "propsys" (ByRef propvar As Variant, ByVal iDefault As Integer) As Integer
Public DeclareWide PtrSafe Function PropVariantToInt32WithDefault Lib "propsys" (ByRef propvar As Variant, ByVal lDefault As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToInt64WithDefault Lib "propsys" (ByRef propvar As Variant, ByVal llDefault As LongLong) As LongLong
Public DeclareWide PtrSafe Function PropVariantToDoubleWithDefault Lib "propsys" (ByRef propvar As Variant, ByVal dbDefault As Double) As Double
Public DeclareWide PtrSafe Function PropVariantToStringWithDefault Lib "propsys" (ByRef propvar As Variant, ByVal psz As String) As LongPtr
Public DeclareWide PtrSafe Function PropVariantToBooleanVector Lib "propsys" (ByRef propvar As Variant, prgn As BOOL, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToInt16Vector Lib "propsys" (ByRef propvar As Variant, prgn As Integer, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToInt32Vector Lib "propsys" (ByRef propvar As Variant, prgn As Long, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToInt64Vector Lib "propsys" (ByRef propvar As Variant, prgn As LongLong, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToDoubleVector Lib "propsys" (ByRef propvar As Variant, prgn As Double, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToStringVector Lib "propsys" (ByRef propvar As Variant, prgsz As LongPtr, ByVal crgsz As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToFileTimeVector Lib "propsys" (ByRef propvar As Variant, prgft As FILETIME, ByVal crgft As Long, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToInt16VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToInt32VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToInt64VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToDoubleVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToBooleanVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgft must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToFileTimeVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgft As LongPtr, pcElem As Long) As Long
[Description("pprgsz must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function PropVariantToStringVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgsz As LongPtr, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToBoolean Lib "propsys" (ByRef pvar As Variant, plRet As BOOL) As Long
Public DeclareWide PtrSafe Function VariantToInt16 Lib "propsys" (ByRef pvar As Variant, piRet As Integer) As Long
Public DeclareWide PtrSafe Function VariantToInt32 Lib "propsys" (ByRef pvar As Variant, plRet As Long) As Long
Public DeclareWide PtrSafe Function VariantToInt64 Lib "propsys" (ByRef pvar As Variant, pllRet As LongLong) As Long
Public DeclareWide PtrSafe Function VariantToDouble Lib "propsys" (ByRef pvar As Variant, pdbRet As Double) As Long
Public DeclareWide PtrSafe Function VariantToString Lib "propsys" (ByRef pvar As Variant, ByVal psz As String, ByVal cch As Long) As Long
Public DeclareWide PtrSafe Function VariantToBuffer Lib "propsys" (ByRef pvar As Variant, pvRet As Any, ByVal cb As Long) As Long
Public DeclareWide PtrSafe Function VariantToGUID Lib "propsys" (ByRef pvar As Variant, pguid As UUID) As Long
Public DeclareWide PtrSafe Function VariantToBooleanWithDefault Lib "propsys" (ByRef pvar As Variant, ByVal lDefault As BOOL) As BOOL
Public DeclareWide PtrSafe Function VariantToInt16WithDefault Lib "propsys" (ByRef pvar As Variant, ByVal iDefault As Integer) As Integer
Public DeclareWide PtrSafe Function VariantToInt32WithDefault Lib "propsys" (ByRef pvar As Variant, ByVal lDefault As Long) As Long
Public DeclareWide PtrSafe Function VariantToInt64WithDefault Lib "propsys" (ByRef pvar As Variant, ByVal llDefault As LongLong) As LongLong
Public DeclareWide PtrSafe Function VariantToDoubleWithDefault Lib "propsys" (ByRef pvar As Variant, ByVal dbDefault As Double) As Double
Public DeclareWide PtrSafe Function VariantToStringWithDefault Lib "propsys" (ByRef pvar As Variant, ByVal psz As String) As LongPtr
Public DeclareWide PtrSafe Function VariantToBooleanArray Lib "propsys" (ByRef pvar As Variant, prgn As BOOL, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToInt16Array Lib "propsys" (ByRef pvar As Variant, prgn As Integer, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToInt32Array Lib "propsys" (ByRef pvar As Variant, prgn As Long, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToInt64Array Lib "propsys" (ByRef pvar As Variant, prgn As LongLong, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToDoubleArray Lib "propsys" (ByRef pvar As Variant, prgn As Double, ByVal crgn As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToStringArray Lib "propsys" (ByRef pvar As Variant, prgsz As LongPtr, ByVal crgsz As Long, pcElem As Long) As Long
Public DeclareWide PtrSafe Function VariantToFileTimeArray Lib "propsys" (ByRef pvar As Variant, prgft As FILETIME, ByVal crgft As Long, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToInt16ArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToInt32ArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToInt64ArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToDoubleArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToBooleanArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgft must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToFileTimeArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgft As LongPtr, pcElem As Long) As Long
[Description("pprgsz must be freed with CoTaskMemFree") ]
Public DeclareWide PtrSafe Function VariantToStringArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgsz As LongPtr, pcElem As Long) As Long

Public Declare PtrSafe Function PSFormatPropertyValue Lib "propsys" (ByVal pps As LongPtr, ByVal ppd As LongPtr, ByVal pdff As PROPDESC_FORMAT_FLAGS, ppszDisplay As LongPtr) As Long
Public Declare PtrSafe Function PSGetNameFromPropertyKey Lib "propsys" (PropKey As PROPERTYKEY, ppszCanonicalName As LongPtr) As Long
Public Declare PtrSafe Function PSGetPropertyDescription Lib "propsys" (PropKey As PROPERTYKEY, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSGetPropertyDescriptionByName Lib "propsys" (pszCanonicalName As String, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetPropertyDescriptionListFromString Lib "propsys" (ByVal pszPropList As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetPropertyKeyFromName Lib "propsys" (ByVal pszName As LongPtr, ppropkey As PROPERTYKEY) As Long
Public Declare PtrSafe Function PSGetPropertySystem Lib "propsys" (riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSFormatForDisplay Lib "propsys" (propkey As PROPERTYKEY, propvar As Variant, ByVal pdfFlags As PROPDESC_FORMAT_FLAGS, ByVal pwszText As LongPtr, ByVal cchText As Long) As Long
Public Declare PtrSafe Function PSFormatForDisplayAlloc Lib "propsys" (propkey As PROPERTYKEY, propvar As Variant, ByVal pdfFlags As PROPDESC_FORMAT_FLAGS, pwszText As LongPtr) As Long
Public DeclareWide PtrSafe Function PSLookupPropertyHandlerCLSID Lib "propsys" (ByVal pszFilePath As String, pclsid As UUID) As Long
Public DeclareWide PtrSafe Function PSCreateMemoryPropertyStore  Lib "propsys" (riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCoerceToCanonicalValue Lib "propsys" (key As PROPERTYKEY, ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function PSCreateAdapterFromPropertyStore Lib "propsys" (ByVal pps As IPropertyStore, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreateDelayedMultiplexPropertyStore Lib "propsys" (ByVal flags As GETPROPERTYSTOREFLAGS, ByVal pdpsf As IDelayedPropertyStoreFactory, rgStoreIds As DPSF_StoreIDs, ByVal cStores As Long, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreateMultiplexPropertyStore Lib "propsys" (prgpunkStores As IUnknown, ByVal cStores As Long, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreatePropertyChangeArray Lib "propsys" (rgpropkey As PROPERTYKEY, rgflags As PKA_FLAGS, rgpropvar As Variant, ByVal cChanges As Long, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreatePropertyStoreFromObject Lib "propsys" (ByVal punk As IUnknown, ByVal grfMode As STGM, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSGetPropertyValue Lib "propsys" (ByVal pps As IPropertyStore, ByVal ppd As IPropertyDescription, ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function PSEnumeratePropertyDescriptions Lib "propsys" (ByVal filterOn As PROPDESC_ENUMFILTER, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSRefreshPropertySchema Lib "propsys" () As Long
Public DeclareWide PtrSafe Function PSRegisterPropertySchema Lib "propsys" (ByVal pszPath As String) As Long
Public DeclareWide PtrSafe Function PSUnregisterPropertySchema Lib "propsys" (ByVal pszPath As String) As Long
Public DeclareWide PtrSafe Function PSGetItemPropertyHandler Lib "propsys" (ByVal punkItem As IUnknown, ByVal fReadWrite As BOOL, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSGetItemPropertyHandlerWithCreateObject Lib "propsys" (ByVal punkItem As IUnknown, ByVal fReadWrite As BOOL, ByVal punkCreateObject As IUnknown, riid As UUID, ppv As Any) As Long

#End Region

#Region "advapi32"

Public Type STARTUPINFOW
   cbSize As Long
   lpReserved As LongPtr
   lpDesktop As LongPtr
   lpTitle As LongPtr
   dwX As Long
   dwY As Long
   dwXSize As Long
   dwYSize As Long
   dwXCountChars As Long
   dwYCountChars As Long
   dwFillAttribute As Long
   dwFlags As STARTUP_FLAGS
   wShowWindow As Integer
   cbReserved2 As Integer
   lpReserved2 As LongPtr
   hStdInput As LongPtr
   hStdOutput As LongPtr
   hStdError As LongPtr
End Type


Public Enum SE_PRIVILEGE_ATTR
	SE_PRIVILEGE_ENABLED_BY_DEFAULT  = (&H00000001)
	SE_PRIVILEGE_ENABLED  = (&H00000002)
	SE_PRIVILEGE_REMOVED  = (&H00000004)
	SE_PRIVILEGE_USED_FOR_ACCESS  = (&H80000000)
End Enum



Public Type LUID_AND_ATTRIBUTES
    pLuid       As LUID
    Attributes  As SE_PRIVILEGE_ATTR
End Type

Public Type TOKEN_PRIVILEGES
    PrivilegeCount      As Long
    Privileges(0 To 1)  As LUID_AND_ATTRIBUTES
End Type

Public Enum TOKEN_TYPE
    TokenPrimary = 1
    TokenImpersonation
End Enum

Public Type PROCESS_INFORMATION
   hProcess As LongPtr
   hThread As LongPtr
   dwProcessId As Long
   dwThreadId As Long
End Type


Public Enum RegKeyspace
    HKEY_CLASSES_ROOT = &H80000000
    HKEY_CURRENT_USER = &H80000001
    HKEY_LOCAL_MACHINE = &H80000002
    HKEY_USERS = &H80000003
    HKEY_PERFORMANCE_DATA = &H80000004
    HKEY_PERFORMANCE_TEXT = &H80000050
    HKEY_PERFORMANCE_NLSTEXT = &H80000060
    HKEY_CURRENT_CONFIG = &H80000005
    HKEY_DYN_DATA = &H80000006
    HKEY_CURRENT_USER_LOCAL_SETTINGS = &H80000007
End Enum

Public Enum RegOptions
    REG_OPTION_RESERVED        = &H00000000 
    REG_OPTION_NON_VOLATILE    = &H00000000
    REG_OPTION_VOLATILE        = &H00000001
    REG_OPTION_CREATE_LINK     = &H00000002
    REG_OPTION_BACKUP_RESTORE  = &H00000004
    REG_OPTION_OPEN_LINK       = &H00000008
End Enum

Public Enum PROCESS_LOGON_FLAGS
    LOGON_WITH_PROFILE = 1
	LOGON_NETCREDENTIALS_ONLY = 2
End Enum

Public Enum AlgorithmClasses
	ALG_CLASS_ANY  = (0)
	ALG_CLASS_SIGNATURE  = (1 << 13)
	ALG_CLASS_MSG_ENCRYPT  = (2 << 13)
	ALG_CLASS_DATA_ENCRYPT  = (3 << 13)
	ALG_CLASS_HASH  = (4 << 13)
	ALG_CLASS_KEY_EXCHANGE  = (5 << 13)
	ALG_CLASS_ALL  = (7 << 13)
End Enum

Public Enum AlgorithmTypes
	ALG_TYPE_ANY  = (0)
	ALG_TYPE_DSS = (1 << 9)
	ALG_TYPE_RSA = (2 << 9)
	ALG_TYPE_BLOCK = (3 << 9)
	ALG_TYPE_STREAM = (4 << 9)
	ALG_TYPE_DH = (5 << 9)
	ALG_TYPE_SECURECHANNEL = (6 << 9)
	ALG_TYPE_ECDH = (7 << 9)
	ALG_TYPE_THIRDPARTY = (8 << 9)
End Enum

Public Enum AlgorithmSubIDs
	ALG_SID_ANY = (0)
' Generic ThirdParty sub-ids
	ALG_SID_THIRDPARTY_ANY = (0)
' Some RSA sub-ids
	ALG_SID_RSA_ANY = 0
	ALG_SID_RSA_PKCS = 1
	ALG_SID_RSA_MSATWORK = 2
	ALG_SID_RSA_ENTRUST = 3
	ALG_SID_RSA_PGP = 4
' Some DSS sub-ids
	ALG_SID_DSS_ANY = 0
	ALG_SID_DSS_PKCS = 1
	ALG_SID_DSS_DMS = 2
	ALG_SID_ECDSA = 3
' Block cipher sub ids
' DES sub_ids
	ALG_SID_DES = 1
	ALG_SID_3DES = 3
	ALG_SID_DESX = 4
	ALG_SID_IDEA = 5
	ALG_SID_CAST = 6
	ALG_SID_SAFERSK64 = 7
	ALG_SID_SAFERSK128 = 8
	ALG_SID_3DES_112 = 9
	ALG_SID_CYLINK_MEK = 12
	ALG_SID_RC5 = 13
	ALG_SID_AES_128 = 14
	ALG_SID_AES_192 = 15
	ALG_SID_AES_256 = 16
	ALG_SID_AES = 17
' Fortezza sub-ids
	ALG_SID_SKIPJACK = 10
	ALG_SID_TEK = 11
' RC2 sub-ids
	ALG_SID_RC2 = 2
' Stream cipher sub-ids
	ALG_SID_RC4 = 1
	ALG_SID_SEAL = 2
' Diffie-Hellman sub-ids
	ALG_SID_DH_SANDF = 1
	ALG_SID_DH_EPHEM = 2
	ALG_SID_AGREED_KEY_ANY = 3
	ALG_SID_KEA = 4
	ALG_SID_ECDH = 5
	ALG_SID_ECDH_EPHEM = 6
' Hash sub ids
	ALG_SID_MD2 = 1
	ALG_SID_MD4 = 2
	ALG_SID_MD5 = 3
	ALG_SID_SHA = 4
	ALG_SID_SHA1 = 4
	ALG_SID_MAC = 5
	ALG_SID_RIPEMD = 6
	ALG_SID_RIPEMD160 = 7
	ALG_SID_SSL3SHAMD5 = 8
	ALG_SID_HMAC = 9
	ALG_SID_TLS1PRF = 10
	ALG_SID_HASH_REPLACE_OWF = 11
	ALG_SID_SHA_256 = 12
	ALG_SID_SHA_384 = 13
	ALG_SID_SHA_512 = 14
' secure channel sub ids
	ALG_SID_SSL3_MASTER = 1
	ALG_SID_SCHANNEL_MASTER_HASH = 2
	ALG_SID_SCHANNEL_MAC_KEY = 3
	ALG_SID_PCT1_MASTER = 4
	ALG_SID_SSL2_MASTER = 5
	ALG_SID_TLS1_MASTER = 6
	ALG_SID_SCHANNEL_ENC_KEY = 7
	ALG_SID_ECMQV = 1
	ALG_SID_EXAMPLE = 80
End Enum

Public Enum Crypt_KP_Mode
	CRYPT_MODE_CBCI = 6 ' ANSI CBC Interleaved
	CRYPT_MODE_CFBP = 7 ' ANSI CFB Pipelined
	CRYPT_MODE_OFBP = 8 ' ANSI OFB Pipelined
	CRYPT_MODE_CBCOFM = 9 ' ANSI CBC + OF Masking
	CRYPT_MODE_CBCOFMI = 10 ' ANSI CBC + OFM Interleaved
End Enum

Public Enum ALG_ID
	CALG_MD2 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD2)
	CALG_MD4 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD4)
	CALG_MD5 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD5)
	CALG_SHA = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA)
	CALG_SHA1 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA1)
	CALG_MAC = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MAC) ' Deprecated. Don't use.
	CALG_RSA_SIGN = (ALG_CLASS_SIGNATURE Or ALG_TYPE_RSA Or ALG_SID_RSA_ANY)
	CALG_DSS_SIGN = (ALG_CLASS_SIGNATURE Or ALG_TYPE_DSS Or ALG_SID_DSS_ANY)
	CALG_NO_SIGN = (ALG_CLASS_SIGNATURE Or ALG_TYPE_ANY Or ALG_SID_ANY)
	CALG_RSA_KEYX = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_RSA Or ALG_SID_RSA_ANY)
	CALG_DES = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_DES)
	CALG_3DES_112 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_3DES_112)
	CALG_3DES = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_3DES)
	CALG_DESX = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_DESX)
	CALG_RC2 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_RC2)
	CALG_RC4 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_STREAM Or ALG_SID_RC4)
	CALG_SEAL = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_STREAM Or ALG_SID_SEAL)
	CALG_DH_SF = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_DH Or ALG_SID_DH_SANDF)
	CALG_DH_EPHEM = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_DH Or ALG_SID_DH_EPHEM)
	CALG_AGREEDKEY_ANY = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_DH Or ALG_SID_AGREED_KEY_ANY)
	CALG_KEA_KEYX = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_DH Or ALG_SID_KEA)
	CALG_HUGHES_MD5 = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_ANY Or ALG_SID_MD5)
	CALG_SKIPJACK = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_SKIPJACK)
	CALG_TEK = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_TEK)
	CALG_CYLINK_MEK = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_CYLINK_MEK) ' Deprecated. Do not use
	CALG_SSL3_SHAMD5 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SSL3SHAMD5)
	CALG_SSL3_MASTER = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_SSL3_MASTER)
	CALG_SCHANNEL_MASTER_HASH = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_SCHANNEL_MASTER_HASH)
	CALG_SCHANNEL_MAC_KEY = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_SCHANNEL_MAC_KEY)
	CALG_SCHANNEL_ENC_KEY = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_SCHANNEL_ENC_KEY)
	CALG_PCT1_MASTER = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_PCT1_MASTER)
	CALG_SSL2_MASTER = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_SSL2_MASTER)
	CALG_TLS1_MASTER = (ALG_CLASS_MSG_ENCRYPT Or ALG_TYPE_SECURECHANNEL Or ALG_SID_TLS1_MASTER)
	CALG_RC5 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_RC5)
	CALG_HMAC = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_HMAC)
	CALG_TLS1PRF = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_TLS1PRF)
	CALG_HASH_REPLACE_OWF = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_HASH_REPLACE_OWF)
	CALG_AES_128 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_AES_128)
	CALG_AES_192 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_AES_192)
	CALG_AES_256 = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_AES_256)
	CALG_AES = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK Or ALG_SID_AES)
	CALG_SHA_256 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_256)
	CALG_SHA_384 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_384)
	CALG_SHA_512 = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_512)
	CALG_ECDH = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_DH Or ALG_SID_ECDH)
	CALG_ECDH_EPHEM = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_ECDH Or ALG_SID_ECDH_EPHEM)
	CALG_ECMQV = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_ANY Or ALG_SID_ECMQV)
	CALG_ECDSA = (ALG_CLASS_SIGNATURE Or ALG_TYPE_DSS Or ALG_SID_ECDSA)
	CALG_NULLCIPHER = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_ANY Or 0)
	CALG_THIRDPARTY_KEY_EXCHANGE = (ALG_CLASS_KEY_EXCHANGE Or ALG_TYPE_THIRDPARTY Or ALG_SID_THIRDPARTY_ANY)
	CALG_THIRDPARTY_SIGNATURE = (ALG_CLASS_SIGNATURE Or ALG_TYPE_THIRDPARTY Or ALG_SID_THIRDPARTY_ANY)
	CALG_THIRDPARTY_CIPHER = (ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_THIRDPARTY Or ALG_SID_THIRDPARTY_ANY)
	CALG_THIRDPARTY_HASH = (ALG_CLASS_HASH Or ALG_TYPE_THIRDPARTY Or ALG_SID_THIRDPARTY_ANY)
End Enum

Public Enum Crypt_Providers
	PROV_RSA_FULL  = 1
	PROV_RSA_SIG  = 2
	PROV_DSS  = 3
	PROV_FORTEZZA  = 4
	PROV_MS_EXCHANGE  = 5
	PROV_SSL  = 6
	PROV_STT_MER  = 7
	PROV_STT_ACQ  = 8
	PROV_STT_BRND  = 9
	PROV_STT_ROOT  = 10
	PROV_STT_ISS  = 11
	PROV_RSA_SCHANNEL  = 12
	PROV_DSS_DH  = 13
	PROV_EC_ECDSA_SIG  = 14
	PROV_EC_ECNRA_SIG  = 15
	PROV_EC_ECDSA_FULL  = 16
	PROV_EC_ECNRA_FULL  = 17
	PROV_DH_SCHANNEL  = 18
	PROV_SPYRUS_LYNKS  = 20
	PROV_RNG  = 21
	PROV_INTEL_SEC  = 22
	PROV_REPLACE_OWF  = 23
	PROV_RSA_AES  = 24
End Enum

Public Enum Crypt_AC_Flags
	CRYPT_VERIFYCONTEXT  = &HF0000000
	CRYPT_NEWKEYSET  = &H00000008
	CRYPT_DELETEKEYSET  = &H00000010
	CRYPT_MACHINE_KEYSET  = &H00000020
	CRYPT_SILENT  = &H00000040
End Enum

Public Enum CryptKeyFlags
	CRYPT_EXPORTABLE  = &H00000001
	CRYPT_USER_PROTECTED  = &H00000002
	CRYPT_CREATE_SALT  = &H00000004
	CRYPT_UPDATE_KEY  = &H00000008
	CRYPT_NO_SALT  = &H00000010
	CRYPT_PREGEN  = &H00000040
	CRYPT_RECIPIENT  = &H00000010
	CRYPT_INITIATOR = &H00000040
	CRYPT_ONLINE  = &H00000080
	CRYPT_SF  = &H00000100
	CRYPT_CREATE_IV  = &H00000200
	CRYPT_KEK  = &H00000400
	CRYPT_DATA_KEY  = &H00000800
	CRYPT_VOLATILE  = &H00001000
	CRYPT_SGCKEY  = &H00002000
	CRYPT_USER_PROTECTED_STRONG  = &H00100000
	CRYPT_ARCHIVABLE = &H00004000
	CRYPT_FORCE_KEY_PROTECTION_HIGH = &H00008000&
	RSA1024BIT_KEY  = &H0400000
    CRYPT_IPSEC_HMAC_KEY   = &H00000100
End Enum

Public Enum CryptCreateHashFlags
	CRYPT_SECRETDIGEST = &H00000001
End Enum
    
Public Enum CryptHashDataFlags
	CRYPT_OWF_REPL_LM_HASH = &H00000001
    CRYPT_USERDATA = &H1
End Enum

Public Enum CryptHashParams
	HP_ALGID  = &H0001  ' Hash algorithm
	HP_HASHVAL  = &H0002  ' Hash value
	HP_HASHSIZE  = &H0004  ' Hash value size
	HP_HMAC_INFO  = &H0005  ' information for creating an HMAC
	HP_TLS1PRF_LABEL  = &H0006  ' label for TLS1 PRF
	HP_TLS1PRF_SEED  = &H0007  ' seed for TLS1 PRF
End Enum

Public Enum CryptProvParams
	PP_ENUMALGS  = 1
	PP_ENUMCONTAINERS  = 2
	PP_IMPTYPE  = 3
	PP_NAME  = 4
	PP_VERSION  = 5
	PP_CONTAINER  = 6
	PP_CHANGE_PASSWORD  = 7
	PP_KEYSET_SEC_DESCR  = 8  ' get/set security descriptor of keyset
	PP_CERTCHAIN  = 9  ' for retrieving certificates from tokens
	PP_KEY_TYPE_SUBTYPE  = 10
	PP_PROVTYPE  = 16
	PP_KEYSTORAGE  = 17
	PP_APPLI_CERT  = 18
	PP_SYM_KEYSIZE  = 19
	PP_SESSION_KEYSIZE  = 20
	PP_UI_PROMPT  = 21
	PP_ENUMALGS_EX  = 22
	PP_ENUMMANDROOTS  = 25
	PP_ENUMELECTROOTS  = 26
	PP_KEYSET_TYPE  = 27
	PP_ADMIN_PIN  = 31
	PP_KEYEXCHANGE_PIN  = 32
	PP_SIGNATURE_PIN  = 33
	PP_SIG_KEYSIZE_INC  = 34
	PP_KEYX_KEYSIZE_INC  = 35
	PP_UNIQUE_CONTAINER  = 36
	PP_SGC_INFO  = 37
	PP_USE_HARDWARE_RNG  = 38
	PP_KEYSPEC  = 39
	PP_ENUMEX_SIGNING_PROT  = 40
	PP_CRYPT_COUNT_KEY_USE  = 41
	PP_USER_CERTSTORE  = 42
	PP_SMARTCARD_READER  = 43
	PP_SMARTCARD_GUID  = 45
	PP_ROOT_CERTSTORE  = 46
	PP_SMARTCARD_READER_ICON  = 47
End Enum

Public Enum CryptKeyBlobTypes
	SIMPLEBLOB  = &H1
	PUBLICKEYBLOB  = &H6
	PRIVATEKEYBLOB  = &H7
	PLAINTEXTKEYBLOB  = &H8
	OPAQUEKEYBLOB  = &H9
	PUBLICKEYBLOBEX  = &HA
	SYMMETRICWRAPKEYBLOB  = &HB
	KEYSTATEBLOB = &HC
End Enum

Public Type SID_IDENTIFIER_AUTHORITY
	Value(0 To 5) As BYTE
End Type
[Description("NOTE: You may need to use this as a header for a custom structure with additional subauthorities appended.")]
Public Type SID
	Revision As BYTE
	SubAuthorityCount As BYTE
	IdentifierAuthority As SID_IDENTIFIER_AUTHORITY
	SubAuthority(0) As Long
End Type
Public Const SID_REVISION  = (1)  ' Current revision level
Public Const SID_MAX_SUB_AUTHORITIES  = (15)
Public Const SID_RECOMMENDED_SUB_AUTHORITIES  = (1)
Public Const SECURITY_MAX_SID_SIZE = (60) '(sizeof(SID) - sizeof(DWORD) + (SID_MAX_SUB_AUTHORITIES * sizeof(DWORD)))
Public Enum SID_NAME_USE
	SidTypeUser=1
	SidTypeGroup = 2
	SidTypeDomain = 3
	SidTypeAlias = 4
	SidTypeWellKnownGroup = 5
	SidTypeDeletedAccount = 6
	SidTypeInvalid = 7
	SidTypeUnknown = 8
	SidTypeComputer = 9
	SidTypeLabel = 10
	SidTypeLogonSession = 11
End Enum
Public Type SID_AND_ATTRIBUTES
    Sid As LongPtr
    Attributes As Long
End Type
Public Const SID_HASH_SIZE = 32

Public Type SID_AND_ATTRIBUTES_HASH
    SidCount As Long
    SidAttr As LongPtr
    Hash(0 To (SID_HASH_SIZE - 1)) As LongPtr
End Type


Public Enum SystemShutdownFlags
	SHUTDOWN_FORCE_OTHERS  = &H00000001
	SHUTDOWN_FORCE_SELF  = &H00000002
	SHUTDOWN_RESTART  = &H00000004
	SHUTDOWN_POWEROFF  = &H00000008
	SHUTDOWN_NOREBOOT  = &H00000010
	SHUTDOWN_GRACE_OVERRIDE  = &H00000020
	SHUTDOWN_INSTALL_UPDATES  = &H00000040
	SHUTDOWN_RESTARTAPPS  = &H00000080
	SHUTDOWN_SKIP_SVC_PRESHUTDOWN  = &H00000100
	SHUTDOWN_HYBRID  = &H00000200
	SHUTDOWN_RESTART_BOOTOPTIONS  = &H00000400
	SHUTDOWN_SOFT_REBOOT  = &H00000800
	SHUTDOWN_MOBILE_UI  = &H00001000
	SHUTDOWN_ARSO  = &H00002000
	SHUTDOWN_CHECK_SAFE_FOR_SERVER  = &H00004000
	SHUTDOWN_VAIL_CONTAINER = &H00008000&
	SHUTDOWN_SYSTEM_INITIATED  = &H00010000
End Enum

Public DeclareWide PtrSafe Function GetUserName Lib "advapi32" Alias "GetUserNameW" (ByVal lpBuffer As String, nSize As Long) As Long
Public DeclareWide PtrSafe Function GetUserNameW Lib "advapi32" (ByVal lpBuffer As LongPtr, nSize As Long) As Long
Public DeclareWide PtrSafe Function CreateProcessWithTokenW Lib "advapi32" (ByVal hToken As LongPtr, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, ByVal dwCreationFlags As CreateProcessFlags, ByVal lpEnvironment As LongPtr, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public DeclareWide PtrSafe Function CreateProcessWithLogonW Lib "advapi32" (ByVal lpUsername As LongPtr, ByVal lpDomain As LongPtr, ByVal lpPassword As LongPtr, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public DeclareWide PtrSafe Function CreateProcessWithToken Lib "advapi32" Alias "CreateProcessWithTokenW" (ByVal hToken As LongPtr, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long
Public DeclareWide PtrSafe Function CreateProcessWithLogon Lib "advapi32" Alias "CreateProcessWithLogonW" (ByVal lpUsername As String, ByVal lpDomain As String, ByVal lpPassword As String, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As Long

Public DeclareWide PtrSafe Function InitiateShutdownW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpMessage As LongPtr, ByVal dwGracePeriod As Long, ByVal dwShutdownFlags As SystemShutdownFlags, ByVal dwReason As SystemShutdownReasons) As Long
Public DeclareWide PtrSafe Function InitiateShutdown Lib "advapi32" Alias "InitiateShutdownW" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwGracePeriod As Long, ByVal dwShutdownFlags As SystemShutdownFlags, ByVal dwReason As SystemShutdownReasons) As Long
Public DeclareWide PtrSafe Function InitiateSystemShutdownW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpMessage As LongPtr, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL) As BOOL
Public DeclareWide PtrSafe Function InitiateSystemShutdown Lib "advapi32" Alias "InitiateShutdownW" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL) As BOOL
Public DeclareWide PtrSafe Function InitiateSystemShutdownExW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpMessage As LongPtr, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL, ByVal dwReason As SystemShutdownReasons) As BOOL
Public DeclareWide PtrSafe Function InitiateSystemShutdownEx Lib "advapi32" Alias "InitiateShutdownExW" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL, ByVal dwReason As SystemShutdownReasons) As BOOL
Public DeclareWide PtrSafe Function AbortSystemShutdownW Lib "advapi32" (ByVal lpMachineName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AbortSystemShutdown Lib "advapi32" Alias "AbortSystemShutdownW" (ByVal lpMachineName As String) As BOOL

Public DeclareWide PtrSafe Function EnumDynamicTimeZoneInformation Lib "advapi32" (ByVal dwIndex As Long, lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As Long
Public DeclareWide PtrSafe Function GetDynamicTimeZoneInformationEffectiveYears Lib "advapi32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, FirstYear As Long, LastYear As Long) As Long

Public Declare PtrSafe Function CloseServiceHandle Lib "advapi32" (ByVal hSCObject As LongPtr) As BOOL
Public Declare PtrSafe Function ControlService Lib "advapi32" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, lpServiceStatus As SERVICE_STATUS) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfigW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwServiceType As ServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As LongPtr, Optional ByVal lpLoadOrderGroup As LongPtr, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As LongPtr, Optional ByVal lpServiceStartName As LongPtr, Optional ByVal lpPassword As LongPtr, Optional ByVal lpDisplayName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfig Lib "advapi32" Alias "ChangeServiceConfigW" (ByVal hService As LongPtr, ByVal dwServiceType As ServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As String, Optional ByVal lpLoadOrderGroup As String, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As String, Optional ByVal lpServiceStartName As String, Optional ByVal lpPassword As String, Optional ByVal lpDisplayName As String) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfig2W Lib "advapi32" (ByVal hService As LongPtr, ByVal dwInfoLevel As ServiceConfigInfoLevels, Optional lpInfo As Any) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfig2 Lib "advapi32" Alias "ChangeServiceConfig2W" (ByVal hService As LongPtr, ByVal dwInfoLevel As ServiceConfigInfoLevels, Optional lpInfo As Any) As BOOL
Public DeclareWide PtrSafe Function CreateServiceW Lib "advapi32" (ByVal hService As LongPtr, ByVal lpServiceName As LongPtr, ByVal lpDisplayName As LongPtr, ByVal dwDesiredAccess As Long, ByVal dwServiceType As ServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As String, Optional ByVal lpLoadOrderGroup As String, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As String, Optional ByVal lpServiceStartName As String, Optional ByVal lpPassword As String) As BOOL
Public DeclareWide PtrSafe Function CreateService Lib "advapi32" Alias "CreateServiceW" (ByVal hService As LongPtr, ByVal lpServiceName As LongPtr, ByVal lpDisplayName As LongPtr, ByVal dwDesiredAccess As Long, ByVal dwServiceType As ServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As LongPtr, Optional ByVal lpLoadOrderGroup As LongPtr, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As LongPtr, Optional ByVal lpServiceStartName As LongPtr, Optional ByVal lpPassword As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteService Lib "advapi32" (ByVal hService As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumDependentServicesW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumDependentServices Lib "advapi32" Alias "EnumDependentServicesW" (ByVal hService As LongPtr, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumServicesStatusW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal dwServiceType As ServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long) As BOOL
Public DeclareWide PtrSafe Function EnumServicesStatus Lib "advapi32" Alias "EnumServicesStatusW" (ByVal hSCManager As LongPtr, ByVal dwServiceType As ServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long) As BOOL
Public DeclareWide PtrSafe Function EnumServicesStatusExW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal InfoLevel As SC_ENUM_TYPE, ByVal dwServiceType As ServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long, Optional ByVal pszGroupName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumServicesStatusEx Lib "advapi32" Alias "EnumServicesStatusW" (ByVal hSCManager As LongPtr, ByVal InfoLevel As SC_ENUM_TYPE, ByVal dwServiceType As ServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long, Optional ByVal pszGroupName As String) As BOOL
Public DeclareWide PtrSafe Function GetServiceKeyNameW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpDisplayName As LongPtr, ByVal lpServiceName As LongPtr, lpcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetServiceKeyName Lib "advapi32" Alias "GetServiceKeyNameW" (ByVal hSCManager As LongPtr, ByVal lpDisplayName As String, ByVal lpServiceName As String, lpcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetServiceDisplayNameW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpServiceName As LongPtr, ByVal lpDisplayName As LongPtr, lpcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetServiceDisplayName Lib "advapi32" Alias "GetServiceKeyNameW" (ByVal hSCManager As LongPtr, ByVal lpServiceName As String, ByVal lpDisplayeName As String, lpcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function LockServiceDatabase Lib "advapi32" (ByVal hSCManager As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function UnlockServiceDatabase Lib "advapi32" (ByVal ScLock As LongPtr) As BOOL
Public DeclareWide PtrSafe Function NotifyBootConfigStatus Lib "advapi32" (ByVal BootAcceptable As BOOL) As BOOL
Public DeclareWide PtrSafe Function OpenSCManagerW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpDatabaseName As LongPtr, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public DeclareWide PtrSafe Function OpenSCManager Lib "advapi32" Alias "OpenSCManagerW" (ByVal lpMachineName As String, ByVal lpDatabaseName As String, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public DeclareWide PtrSafe Function OpenService Lib "advapi32" Alias "OpenServiceW" (ByVal hSCManager As LongPtr, ByVal lpServiceName As String, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public DeclareWide PtrSafe Function OpenServiceW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpServiceName As LongPtr, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public DeclareWide PtrSafe Function QueryServiceConfigW Lib "advapi32" (ByVal hService As LongPtr, lpServiceConfig As QUERY_SERVICE_CONFIGW, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceConfig Lib "advapi32" Alias "QueryServiceConfigW" (ByVal hService As LongPtr, lpServiceConfig As QUERY_SERVICE_CONFIG, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceConfig2W Lib "advapi32" (ByVal hService As LongPtr, ByVal InfoLevel As ServiceConfigInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceConfig2 Lib "advapi32" Alias "QueryServiceConfig2W" (ByVal hService As LongPtr, ByVal InfoLevel As ServiceConfigInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceLockStatusW Lib "advapi32" (ByVal hSCManager As LongPtr, lpLockStatus As QUERY_SERVICE_LOCK_STATUSW, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceLockStatus Lib "advapi32" Alias "QueryServiceLockStatusW" (ByVal hSCManager As LongPtr, lpLockStatus As QUERY_SERVICE_LOCK_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceObjectSecurity Lib "advapi32" (ByVal hService As LongPtr, ByVal dwSecurityInformation As SECURITY_INFORMATION, lpSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceStatus Lib "advapi32" (ByVal hService As LongPtr, lpServiceStatus As SERVICE_STATUS) As BOOL
Public DeclareWide PtrSafe Function QueryServiceStatusEx Lib "advapi32" (ByVal hService As LongPtr, ByVal InfoLevel As Long, lpBuffer As SERVICE_STATUS_PROCESS, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As Long
Public DeclareWide PtrSafe Function RegisterServiceCtrlHandlerW Lib "advapi32" (ByVal lpServiceName As LongPtr, ByVal lpHandlerProc As LongPtr) As Long
Public DeclareWide PtrSafe Function RegisterServiceCtrlHandler Lib "advapi32" Alias "RegisterServiceCtrlHandlerW" (ByVal lpServiceName As String, ByVal lpHandlerProc As LongPtr) As Long
Public DeclareWide PtrSafe Function RegisterServiceCtrlHandlerExW Lib "advapi32" (ByVal lpServiceName As LongPtr, ByVal lpHandlerProc As LongPtr, Optional lpContext As Any) As Long
Public DeclareWide PtrSafe Function RegisterServiceCtrlHandlerEx Lib "advapi32" Alias "RegisterServiceCtrlHandlerW" (ByVal lpServiceName As String, ByVal lpHandlerProc As LongPtr, Optional lpContext As Any) As Long
Public DeclareWide PtrSafe Function SetServiceObjectSecurity Lib "advapi32" (ByVal hService As LongPtr, ByVal dwSecurityInformation As SECURITY_INFORMATION, lpSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
Public DeclareWide PtrSafe Function QueryServiceStatusEx Lib "advapi32" (ByVal hServiceStatus As Long, lpServiceStatus As SERVICE_STATUS) As BOOL
Public DeclareWide PtrSafe Function StartServiceCtrlDispatcherW Lib "advapi32" (lpServiceStartTable As SERVICE_TABLE_ENTRYW) As BOOL
Public DeclareWide PtrSafe Function StartServiceCtrlDispatcher Lib "advapi32" Alias "StartServiceCtrlDispatcherW" (lpServiceStartTable As SERVICE_TABLE_ENTRY) As BOOL
Public DeclareWide PtrSafe Function StartServiceW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwNumServiceArgs As Long, ByVal lpServiceArgVectors As LongPtr) As Long
Public DeclareWide PtrSafe Function StartService Lib "advapi32" Alias "StartServiceW" (ByVal hService As LongPtr, ByVal dwNumServiceArgs As Long, ByVal lpServiceArgVectors As String) As Long
Public DeclareWide PtrSafe Function NotifyServiceStatusChangeW Lib "advapi32" (ByVal hService As LongPtr, dwNotifyMask As ServiceNotifyMask, pNotifyBuffer As SERVICE_NOTIFYW) As Long
Public DeclareWide PtrSafe Function NotifyServiceStatusChange Lib "advapi32" Alias "NotifyServiceStatusChangeW" (ByVal hService As LongPtr, dwNotifyMask As ServiceNotifyMask, pNotifyBuffer As SERVICE_NOTIFYW) As Long
Public DeclareWide PtrSafe Function ControlServiceExW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, ByVal dwInfoLevel As ServiceControlInfoLevels, pControlParams As Any) As BOOL
Public DeclareWide PtrSafe Function ControlServiceEx Lib "advapi32" Alias "ControlServiceExW" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, ByVal dwInfoLevel As ServiceControlInfoLevels, pControlParams As Any) As BOOL
Public DeclareWide PtrSafe Function QueryServiceDynamicInformation Lib "advapi32" (ByVal hServiceStatus As Long, ByVal dwInfoLevel As ServiceDynamicInfoLevels, ppDynamicInfo As Any) As BOOL
Public DeclareWide PtrSafe Function SubscribeServiceChangeNotifications Lib "advapi32" (ByVal hService As LongPtr, ByVal eEventType As SC_EVENT_TYPE, ByVal pCallback As LongPtr, pCallbackContext As Any, pSubscription As LongPtr) As Long
Public DeclareWide PtrSafe Sub UnsubscribeServiceChangeNotifications Lib "advapi32" (ByVal pSubscription As LongPtr) 
Public DeclareWide PtrSafe Function WaitServiceState Lib "advapi32" (ByVal hService As LongPtr, ByVal dwNotify As ServiceNotifyMask, Optional ByVal dwTimeout As Long, Optional ByVal hCancelEvent As LongPtr) As Long
[Description("Windows 10 Redstone 4 and newer only.") ]
Public DeclareWide PtrSafe Function GetServiceRegistryStateKey Lib "advapi32" (ByVal ServiceStatusHandle As Long, ByVal StateType As SERVICE_REGISTRY_STATE_TYPE, ByVal dwAccessMask As Long, ServiceStateKey As LongPtr) As Long
[Description("Windows 10 Redstone 5 and newer only.") ]
Public DeclareWide PtrSafe Function GetServiceDirectory Lib "advapi32" (ByVal hServiceStatus As Long, ByVal eDirectoryType As SERVICE_DIRECTORY_TYPE, ByVal lpPathBuffer As LongPtr, ByVal cchPathBufferLength As Long, lpcchRequiredBufferLength As Long) As Long
[Description("Windows 10 20H2 and newer only.") ]
Public DeclareWide PtrSafe Function GetSharedServiceRegistryStateKey Lib "advapi32" (ByVal ServiceHandle As LongPtr, ByVal StateType As SERVICE_SHARED_REGISTRY_STATE_TYPE, ByVal dwAccessMask As Long, ServiceStateKey As LongPtr) As Long
Public DeclareWide PtrSafe Function GetSharedServiceDirectory Lib "advapi32" (ByVal ServiceHandle As Long, ByVal DirectoryType As SERVICE_SHARED_DIRECTORY_TYPE, ByVal lpPathBuffer As LongPtr, ByVal PathBufferLength As Long, RequiredBufferLength As Long) As Long



Public Const SERVICES_ACTIVE_DATABASEW  = "ServicesActive"
Public Const SERVICES_FAILED_DATABASEW  = "ServicesFailed"
Public Const SERVICES_ACTIVE_DATABASE  = "ServicesActive"
Public Const SERVICES_FAILED_DATABASE  = "ServicesFailed"
Public Const SC_GROUP_IDENTIFIERW = "+"
Public Const SC_GROUP_IDENTIFIER = "+"

Public Enum SERVICE_SHARED_DIRECTORY_TYPE
	ServiceSharedDirectoryPersistentState=0
End Enum

Public Enum SERVICE_SHARED_REGISTRY_STATE_TYPE
	ServiceSharedRegistryPersistentState=0
End Enum

Public Enum SERVICE_DIRECTORY_TYPE
	ServiceDirectoryPersistentState = 0
	ServiceDirectoryTypeMax = 1
End Enum

Public Enum SERVICE_REGISTRY_STATE_TYPE
	ServiceRegistryStateParameters = 0
	ServiceRegistryStatePersistent = 1
	MaxServiceRegistryStateType = 2
End Enum

Public Enum SC_EVENT_TYPE
	SC_EVENT_DATABASE_CHANGE = 0
	SC_EVENT_PROPERTY_CHANGE = 1
	SC_EVENT_STATUS_CHANGE = 2
End Enum


Public Enum ServiceStateBitmask
	SERVICE_ACTIVE  = &H00000001
	SERVICE_INACTIVE  = &H00000002
	SERVICE_STATE_ALL  = (SERVICE_ACTIVE Or SERVICE_INACTIVE)
End Enum

Public Const SERVICE_NO_CHANGE = &Hffffffff

Public Type SERVICE_STATUS
	dwServiceType As ServiceType
	dwCurrentState As ServiceState
	dwControlsAccepted As SERVICE_CONTROL_ACCEPT
	dwWin32ExitCode As Long
	dwServiceSpecificExitCode As Long
	dwCheckPoint As Long
	dwWaitHint As Long
End Type
Public Type SERVICE_STATUS_PROCESS
    dwServiceType As ServiceType
    dwCurrentState As ServiceState
    dwControlsAccepted As SERVICE_CONTROL_ACCEPT
    dwWin32ExitCode As Long
    dwServiceSpecificExitCode As Long
    dwCheckPoint As Long
    dwWaitHint As Long
    dwProcessId As Long
    dwServiceFlags As Long
End Type

Public Enum ServiceState
    SERVICE_STOPPED = &H1
    SERVICE_START_PENDING = &H2
    SERVICE_STOP_PENDING = &H3
    SERVICE_RUNNING = &H4
    SERVICE_CONTINUE_PENDING = &H5
    SERVICE_PAUSE_PENDING = &H6
    SERVICE_PAUSED = &H7
End Enum
Public Enum ServiceType
	SERVICE_KERNEL_DRIVER = &H00000001
	SERVICE_FILE_SYSTEM_DRIVER  = &H00000002
	SERVICE_ADAPTER  = &H00000004
	SERVICE_RECOGNIZER_DRIVER  = &H00000008
	SERVICE_DRIVER  = (SERVICE_KERNEL_DRIVER Or SERVICE_FILE_SYSTEM_DRIVER Or SERVICE_RECOGNIZER_DRIVER)
	SERVICE_WIN32_OWN_PROCESS  = &H00000010
	SERVICE_WIN32_SHARE_PROCESS  = &H00000020
	SERVICE_WIN32  = (SERVICE_WIN32_OWN_PROCESS Or SERVICE_WIN32_SHARE_PROCESS)
	SERVICE_USER_SERVICE  = &H00000040
	SERVICE_USERSERVICE_INSTANCE  = &H00000080
	SERVICE_USER_SHARE_PROCESS  = (SERVICE_USER_SERVICE Or SERVICE_WIN32_SHARE_PROCESS)
	SERVICE_USER_OWN_PROCESS  = (SERVICE_USER_SERVICE Or SERVICE_WIN32_OWN_PROCESS)
	SERVICE_INTERACTIVE_PROCESS  = &H00000100
	SERVICE_PKG_SERVICE = &H00000200
	SERVICE_TYPE_ALL  = (SERVICE_WIN32 Or SERVICE_ADAPTER Or SERVICE_DRIVER Or SERVICE_INTERACTIVE_PROCESS Or SERVICE_USER_SERVICE Or SERVICE_USERSERVICE_INSTANCE Or SERVICE_PKG_SERVICE)
    SERVICETYPE_NO_CHANGE = SERVICE_NO_CHANGE
End Enum

Public Enum ServiceControlManagerAccess
    SC_MANAGER_CONNECT = &H1
    SC_MANAGER_CREATE_SERVICE = &H2
    SC_MANAGER_ENUMERATE_SERVICE = &H4
    SC_MANAGER_LOCK = &H8
    SC_MANAGER_QUERY_LOCK_STATUS = &H10
    SC_MANAGER_MODIFY_BOOT_CONFIG = &H20
    SC_MANAGER_ALL_ACCESS = &HF003F
End Enum
Public Enum ACCESS_TYPE
    SERVICE_QUERY_CONFIG = &H1
    SERVICE_CHANGE_CONFIG = &H2
    SERVICE_QUERY_STATUS = &H4
    SERVICE_ENUMERATE_DEPENDENTS = &H8
    SERVICE_START = &H10
    SERVICE_STOP = &H20
    SERVICE_PAUSE_CONTINUE = &H40
    SERVICE_INTERROGATE = &H80
    SERVICE_USER_DEFINED_CONTROL = &H100
    SERVICE_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED + SERVICE_QUERY_CONFIG + SERVICE_CHANGE_CONFIG + SERVICE_QUERY_STATUS + SERVICE_ENUMERATE_DEPENDENTS + SERVICE_START + SERVICE_STOP + SERVICE_PAUSE_CONTINUE + SERVICE_INTERROGATE + SERVICE_USER_DEFINED_CONTROL)
End Enum

Public Const SERVICE_RUNS_IN_SYSTEM_PROCESS = &H1

Public Enum SERVICE_CONTROL
	SERVICE_CONTROL_STOP  = &H00000001
	SERVICE_CONTROL_PAUSE  = &H00000002
	SERVICE_CONTROL_CONTINUE  = &H00000003
	SERVICE_CONTROL_INTERROGATE  = &H00000004
	SERVICE_CONTROL_SHUTDOWN  = &H00000005
	SERVICE_CONTROL_PARAMCHANGE  = &H00000006
	SERVICE_CONTROL_NETBINDADD  = &H00000007
	SERVICE_CONTROL_NETBINDREMOVE  = &H00000008
	SERVICE_CONTROL_NETBINDENABLE  = &H00000009
	SERVICE_CONTROL_NETBINDDISABLE  = &H0000000A
	SERVICE_CONTROL_DEVICEEVENT  = &H0000000B
	SERVICE_CONTROL_HARDWAREPROFILECHANGE  = &H0000000C
	SERVICE_CONTROL_POWEREVENT  = &H0000000D
	SERVICE_CONTROL_SESSIONCHANGE  = &H0000000E
	SERVICE_CONTROL_PRESHUTDOWN  = &H0000000F
	SERVICE_CONTROL_TIMECHANGE  = &H00000010
	SERVICE_CONTROL_USER_LOGOFF  = &H00000011
	SERVICE_CONTROL_TRIGGEREVENT  = &H00000020
' reserved for internal use                    0x00000021
' reserved for internal use                    0x00000050
	SERVICE_CONTROL_LOWRESOURCES  = &H00000060
	SERVICE_CONTROL_SYSTEMLOWRESOURCES  = &H00000061
End Enum
Public Enum SERVICE_CONTROL_ACCEPT
	SERVICE_ACCEPT_STOP = &H00000001
	SERVICE_ACCEPT_PAUSE_CONTINUE  = &H00000002
	SERVICE_ACCEPT_SHUTDOWN  = &H00000004
	SERVICE_ACCEPT_PARAMCHANGE  = &H00000008
	SERVICE_ACCEPT_NETBINDCHANGE  = &H00000010
	SERVICE_ACCEPT_HARDWAREPROFILECHANGE  = &H00000020
	SERVICE_ACCEPT_POWEREVENT  = &H00000040
	SERVICE_ACCEPT_SESSIONCHANGE  = &H00000080
	SERVICE_ACCEPT_PRESHUTDOWN  = &H00000100
	SERVICE_ACCEPT_TIMECHANGE  = &H00000200
	SERVICE_ACCEPT_TRIGGEREVENT  = &H00000400
	SERVICE_ACCEPT_USER_LOGOFF  = &H00000800
'  reserved for internal use                   0x00001000
	SERVICE_ACCEPT_LOWRESOURCES  = &H00002000
	SERVICE_ACCEPT_SYSTEMLOWRESOURCES  = &H00004000
End Enum
Public Enum ServiceAccessTypes
	SC_MANAGER_CONNECT  = &H0001
	SC_MANAGER_CREATE_SERVICE  = &H0002
	SC_MANAGER_ENUMERATE_SERVICE  = &H0004
	SC_MANAGER_LOCK  = &H0008
	SC_MANAGER_QUERY_LOCK_STATUS  = &H0010
	SC_MANAGER_MODIFY_BOOT_CONFIG  = &H0020
End Enum
Public Enum ServiceConfigInfoLevels
	SERVICE_CONFIG_DESCRIPTION  = 1
	SERVICE_CONFIG_FAILURE_ACTIONS  = 2
	SERVICE_CONFIG_DELAYED_AUTO_START_INFO  = 3
	SERVICE_CONFIG_FAILURE_ACTIONS_FLAG  = 4
	SERVICE_CONFIG_SERVICE_SID_INFO  = 5
	SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO  = 6
	SERVICE_CONFIG_PRESHUTDOWN_INFO  = 7
	SERVICE_CONFIG_TRIGGER_INFO  = 8
	SERVICE_CONFIG_PREFERRED_NODE  = 9
'  reserved                                     10
'  reserved                                     11
	SERVICE_CONFIG_LAUNCH_PROTECTED  = 12
End Enum
Public Enum ServiceNotifyInfoLevels
	SERVICE_NOTIFY_STATUS_CHANGE_1  = 1
	SERVICE_NOTIFY_STATUS_CHANGE_2  = 2
	SERVICE_NOTIFY_STATUS_CHANGE  = SERVICE_NOTIFY_STATUS_CHANGE_2
End Enum

Public Enum ServiceNotifyMask
	SERVICE_NOTIFY_STOPPED  = &H00000001
	SERVICE_NOTIFY_START_PENDING  = &H00000002
	SERVICE_NOTIFY_STOP_PENDING  = &H00000004
	SERVICE_NOTIFY_RUNNING  = &H00000008
	SERVICE_NOTIFY_CONTINUE_PENDING  = &H00000010
	SERVICE_NOTIFY_PAUSE_PENDING  = &H00000020
	SERVICE_NOTIFY_PAUSED  = &H00000040
	SERVICE_NOTIFY_CREATED  = &H00000080
	SERVICE_NOTIFY_DELETED  = &H00000100
	SERVICE_NOTIFY_DELETE_PENDING  = &H00000200
End Enum

Public Enum ServiceStopReasons
	SERVICE_STOP_REASON_FLAG_MIN  = &H00000000
	SERVICE_STOP_REASON_FLAG_UNPLANNED  = &H10000000
	SERVICE_STOP_REASON_FLAG_CUSTOM  = &H20000000
	SERVICE_STOP_REASON_FLAG_PLANNED  = &H40000000
	SERVICE_STOP_REASON_FLAG_MAX  = &H80000000
'  Microsoft major reasons. Update SERVICE_STOP_REASON_MAJOR_MAX when
'  new codes are added.
	SERVICE_STOP_REASON_MAJOR_MIN  = &H00000000
	SERVICE_STOP_REASON_MAJOR_OTHER  = &H00010000
	SERVICE_STOP_REASON_MAJOR_HARDWARE  = &H00020000
	SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM  = &H00030000
	SERVICE_STOP_REASON_MAJOR_SOFTWARE  = &H00040000
	SERVICE_STOP_REASON_MAJOR_APPLICATION  = &H00050000
	SERVICE_STOP_REASON_MAJOR_NONE  = &H00060000
	SERVICE_STOP_REASON_MAJOR_MAX  = &H00070000
	SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM  = &H00400000
	SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM  = &H00ff0000
'  Microsoft minor reasons. Update SERVICE_STOP_REASON_MINOR_MAX when
'  new codes are added.
	SERVICE_STOP_REASON_MINOR_MIN  = &H00000000
	SERVICE_STOP_REASON_MINOR_OTHER  = &H00000001
	SERVICE_STOP_REASON_MINOR_MAINTENANCE  = &H00000002
	SERVICE_STOP_REASON_MINOR_INSTALLATION  = &H00000003
	SERVICE_STOP_REASON_MINOR_UPGRADE  = &H00000004
	SERVICE_STOP_REASON_MINOR_RECONFIG  = &H00000005
	SERVICE_STOP_REASON_MINOR_HUNG  = &H00000006
	SERVICE_STOP_REASON_MINOR_UNSTABLE  = &H00000007
	SERVICE_STOP_REASON_MINOR_DISK  = &H00000008
	SERVICE_STOP_REASON_MINOR_NETWORKCARD  = &H00000009
	SERVICE_STOP_REASON_MINOR_ENVIRONMENT  = &H0000000a
	SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER  = &H0000000b
	SERVICE_STOP_REASON_MINOR_OTHERDRIVER  = &H0000000c
	SERVICE_STOP_REASON_MINOR_SERVICEPACK  = &H0000000d
	SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE  = &H0000000e
	SERVICE_STOP_REASON_MINOR_SECURITYFIX  = &H0000000f
	SERVICE_STOP_REASON_MINOR_SECURITY  = &H00000010
	SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY  = &H00000011
	SERVICE_STOP_REASON_MINOR_WMI  = &H00000012
	SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL  = &H00000013
	SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL  = &H00000014
	SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL  = &H00000015
	SERVICE_STOP_REASON_MINOR_MMC  = &H00000016
	SERVICE_STOP_REASON_MINOR_NONE  = &H00000017
	SERVICE_STOP_REASON_MINOR_MEMOTYLIMIT  = &H00000018
	SERVICE_STOP_REASON_MINOR_MAX  = &H00000019
	SERVICE_STOP_REASON_MINOR_MIN_CUSTOM  = &H00000100
	SERVICE_STOP_REASON_MINOR_MAX_CUSTOM = &H0000FFFF&
End Enum

Public Enum ServiceControlInfoLevels
    SERVICE_CONTROL_STATUS_REASON_INFO     = 1
End Enum

Public Enum ServiceSidTypes
	SERVICE_SID_TYPE_NONE  = &H00000000
	SERVICE_SID_TYPE_UNRESTRICTED  = &H00000001
	SERVICE_SID_TYPE_RESTRICTED  = ( &H00000002 Or SERVICE_SID_TYPE_UNRESTRICTED )
End Enum

Public Enum ServiceTriggerTypes
	SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL  = 1
	SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY  = 2
	SERVICE_TRIGGER_TYPE_DOMAIN_JOIN  = 3
	SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT  = 4
	SERVICE_TRIGGER_TYPE_GROUP_POLICY  = 5
	SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT  = 6
	SERVICE_TRIGGER_TYPE_CUSTOM_SYSTEM_STATE_CHANGE  = 7
	SERVICE_TRIGGER_TYPE_CUSTOM  = 20
	SERVICE_TRIGGER_TYPE_AGGREGATE  = 30
End Enum
Public Enum ServiceTriggerDataTypes
	SERVICE_TRIGGER_DATA_TYPE_BINARY  = 1
	SERVICE_TRIGGER_DATA_TYPE_STRING  = 2
	SERVICE_TRIGGER_DATA_TYPE_LEVEL  = 3
	SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY  = 4
	SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL  = 5
End Enum

Public Enum ServiceStartReasons
	SERVICE_START_REASON_DEMAND  = &H00000001
	SERVICE_START_REASON_AUTO  = &H00000002
	SERVICE_START_REASON_TRIGGER  = &H00000004
	SERVICE_START_REASON_RESTART_ON_FAILURE  = &H00000008
	SERVICE_START_REASON_DELAYEDAUTO  = &H00000010
End Enum

Public Enum ServiceDynamicInfoLevels
    SERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON              = 1
End Enum

Public Enum ServiceLaunchProtectionTypes
	SERVICE_LAUNCH_PROTECTED_NONE  = 0
	SERVICE_LAUNCH_PROTECTED_WINDOWS  = 1
	SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT  = 2
	SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT  = 3
End Enum

Public Type SERVICE_TRIGGER_CUSTOM_STATE_ID
	Data(0 To 1) As Long
End Type

[Description("This type is a union of either DataOffset/Data or SERVICE_TRIGGER_CUSTOM_STATE_ID.")]
Public Type SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM
    u(7) As Byte
End Type

Public Enum ServiceTriggerActions
    SERVICE_TRIGGER_ACTION_SERVICE_START  = 1	
    SERVICE_TRIGGER_ACTION_SERVICE_STOP = 2
End Enum
'  argv[1] passed into ServiceMain of trigger started services
Public Const SERVICE_TRIGGER_STARTED_ARGUMENT  = "TriggerStarted"

Public Type SERVICE_DESCRIPTIONW
    lpDescription As LongPtr
End Type
'Alias SERVICE_DESCRIPTION As SERVICE_DESCRIPTIONW
Public Type SERVICE_DESCRIPTION
    lpDescription As LongPtr
End Type

Public Enum SC_ACTION_TYPE
	SC_ACTION_NONE=0
	SC_ACTION_RESTART=1
	SC_ACTION_REBOOT=2
	SC_ACTION_RUN_COMMAND=3
	SC_ACTION_OWN_RESTART=4
End Enum

Public Type SC_ACTION
	Type As SC_ACTION_TYPE
	Delay As Long
End Type

Public Type SERVICE_FAILURE_ACTIONSW
	dwResetPeriod As Long
	lpRebootMsg As LongPtr
	lpCommand As LongPtr
	cActions As Long
	lpsaActions As LongPtr 
End Type
'Alias SERVICE_FAILURE_ACTIONS As SERVICE_FAILURE_ACTIONSW
Public Type SERVICE_FAILURE_ACTIONS
    dwResetPeriod As Long
    lpRebootMsg As LongPtr
    lpCommand As LongPtr
    cActions As Long
    lpsaActions As LongPtr 
End Type

Public Type SERVICE_DELAYED_AUTO_START_INFO
	fDelayedAutostart As BOOL
End Type
Public Type SERVICE_FAILURE_ACTIONS_FLAG
	fFailureActionsOnNonCrashFailures As BOOL
End Type
Public Type SERVICE_SID_INFO
	dwServiceSidType As Long
End Type
Public Type SERVICE_REQUIRED_PRIVILEGES_INFOW
	pmszRequiredPrivileges As Long ' Required privileges multi-sz
End Type
Public Type SERVICE_REQUIRED_PRIVILEGES_INFO
	pmszRequiredPrivileges As Long ' Required privileges multi-sz
End Type
Public Type SERVICE_PRESHUTDOWN_INFO
	dwPreshutdownTimeout As Long ' Timeout in msecs
End Type
Public Type SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
    dwDataType As ServiceTriggerDataTypes
    cbData As Long
    pData As LongPtr
End Type
Public Type SERVICE_TRIGGER
    dwTriggerType As ServiceTriggerTypes
    dwAction As ServiceTriggerActions
    pTriggerSubtype As UUID
    cDataItems As Long
    pDataItems As LongPtr
End Type
Public Type SERVICE_TRIGGER_INFO
    cTriggers As Long
    pTriggers As LongPtr
    pReserved As LongPtr
End Type

Public Type SERVICE_PREFERRED_NODE_INFO
	usPreferredNode As Integer ' Preferred node
	fDelete As Byte ' Delete the preferred node setting
End Type

Public Type SERVICE_LAUNCH_PROTECTED_INFO
	dwLaunchProtected As Long ' Service launch protected
End Type

Public Enum SC_STATUS_TYPE
	SC_STATUS_PROCESS_INFO=0
End Enum

Public Enum SC_ENUM_TYPE
	SC_ENUM_PROCESS_INFO=0
End Enum

Public Type ENUM_SERVICE_STATUS
	lpServiceName As LongPtr
	lpDisplayName As LongPtr
	ServiceStatus As SERVICE_STATUS
End Type
Public Type ENUM_SERVICE_STATUS_PROCESS
    lpServiceName As LongPtr
    lpDisplayName As LongPtr
    ServiceStatus As SERVICE_STATUS_PROCESS
End Type

Public Type QUERY_SERVICE_LOCK_STATUSW
	fIsLocked As Long
	lpLockOwner As LongPtr
	dwLockDuration As Long
End Type
Public Type QUERY_SERVICE_LOCK_STATUS
    fIsLocked As Long
    lpLockOwner As LongPtr
    dwLockDuration As Long
End Type

Public Enum ServiceStartType
	SERVICE_BOOT_START  = &H00000000
	SERVICE_SYSTEM_START  = &H00000001
	SERVICE_AUTO_START  = &H00000002
	SERVICE_DEMAND_START  = &H00000003
	SERVICE_DISABLED  = &H00000004
End Enum

Public Enum ServiceErrorControlType
	SERVICE_ERROR_IGNORE = &H00000000
	SERVICE_ERROR_NORMAL  = &H00000001
	SERVICE_ERROR_SEVERE  = &H00000002
	SERVICE_ERROR_CRITICAL  = &H00000003
End Enum

Public Type QUERY_SERVICE_CONFIGW
	dwServiceType As ServiceType
	dwStartType As ServiceStartType
	dwErrorControl As ServiceErrorControlType
	lpBinaryPathName As LongPtr
	lpLoadOrderGroup As LongPtr
	dwTagId As Long
	lpDependencies As LongPtr
	lpServiceStartName As LongPtr
	lpDisplayName As LongPtr
End Type
Public Type QUERY_SERVICE_CONFIG
    dwServiceType As ServiceType
    dwStartType As ServiceStartType
    dwErrorControl As ServiceErrorControlType
    lpBinaryPathName As LongPtr
    lpLoadOrderGroup As LongPtr
    dwTagId As Long
    lpDependencies As LongPtr
    lpServiceStartName As LongPtr
    lpDisplayName As LongPtr
End Type

Public Enum ServiceNodeFlags
	CM_SERVICE_NETWORK_BOOT_LOAD  = &H00000001
	CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD  = &H00000002
	CM_SERVICE_USB_DISK_BOOT_LOAD  = &H00000004
	CM_SERVICE_SD_DISK_BOOT_LOAD  = &H00000008
	CM_SERVICE_USB3_DISK_BOOT_LOAD  = &H00000010
	CM_SERVICE_MEASURED_BOOT_LOAD  = &H00000020
	CM_SERVICE_VERIFIER_BOOT_LOAD  = &H00000040
	CM_SERVICE_WINPE_BOOT_LOAD  = &H00000080
	CM_SERVICE_RAM_DISK_BOOT_LOAD  = &H00000100
End Enum

Public Type SERVICE_MAIN_FUNCTIONW
	dwNumServicesArgs As Long
    lpServiceArgVectors As LongPtr
End Type
Public Type SERVICE_MAIN_FUNCTION
    dwNumServicesArgs As Long
    lpServiceArgVectors As LongPtr
End Type

Public Type SERVICE_TABLE_ENTRYW
    lpServiceName As LongPtr
    lpServiceProc As LongPtr
End Type
Public Type SERVICE_TABLE_ENTRY
    lpServiceName As LongPtr
    lpServiceProc As LongPtr
End Type

Public Type SERVICE_NOTIFY_1
	dwVersion As Long
	pfnNotifyCallback As LongPtr
	pContext As LongPtr
	dwNotificationStatus As Long
	ServiceStatus As SERVICE_STATUS_PROCESS
End Type
Public Type SERVICE_NOTIFY_2W
	dwVersion As Long
	pfnNotifyCallback As LongPtr
	pContext As LongPtr
	dwNotificationStatus As Long
	ServiceStatus As SERVICE_STATUS_PROCESS
	dwNotificationTriggered As Long
	pszServiceNames As LongPtr
End Type
Public Type SERVICE_NOTIFYW
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As LongPtr
End Type
Public Type SERVICE_NOTIFY_2
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As LongPtr
End Type

Public Type SERVICE_CONTROL_STATUS_REASON_PARAMSW
	dwReason As ServiceStopReasons
	pszComment As LongPtr
	ServiceStatus As SERVICE_STATUS_PROCESS
End Type
Public Type SERVICE_CONTROL_STATUS_REASON_PARAMS
    dwReason As ServiceStopReasons
    pszComment As LongPtr
    ServiceStatus As SERVICE_STATUS_PROCESS
End Type

Public Type SERVICE_START_REASON
	dwReason As ServiceStartReasons
End Type

Public Enum RegNotifyChangeValues
	REG_NOTIFY_CHANGE_NAME  = (&H00000001)  ' Create or delete (child)
	REG_NOTIFY_CHANGE_ATTRIBUTES  = (&H00000002)
	REG_NOTIFY_CHANGE_LAST_SET  = (&H00000004)  ' time stamp
	REG_NOTIFY_CHANGE_SECURITY  = (&H00000008)
	REG_NOTIFY_THREAD_AGNOSTIC = (&H10000000)  ' Not associated with a calling thread, can only be used
'  for async user event based notification
End Enum

Public Enum RegSaveKeyFlags
	REG_STANDARD_FORMAT  = 1
	REG_LATEST_FORMAT  = 2
	REG_NO_COMPRESSION  = 4
End Enum

Public Enum RegKeyRestoreAndLoadHiveFlags
	REG_WHOLE_HIVE_VOLATILE  = (&H00000001) ' Restore whole hive volatile
	REG_REFRESH_HIVE  = (&H00000002) ' Unwind changes to last flush
	REG_NO_LAZY_FLUSH  = (&H00000004) ' Never lazy flush this hive
	REG_FORCE_RESTORE  = (&H00000008) ' Force the restore process even when we have open handles on subkeys
	REG_APP_HIVE  = (&H00000010) ' Loads the hive visible to the calling process
	REG_PROCESS_PRIVATE  = (&H00000020) ' Hive cannot be mounted by any other process while in use
	REG_START_JOURNAL  = (&H00000040) ' Starts Hive Journal
	REG_HIVE_EXACT_FILE_GROWTH  = (&H00000080) ' Grow hive file in exact 4k increments
	REG_HIVE_NO_RM  = (&H00000100) ' No RM is started for this hive (no transactions)
	REG_HIVE_SINGLE_LOG  = (&H00000200) ' Legacy single logging is used for this hive
	REG_BOOT_HIVE  = (&H00000400) ' This hive might be used by the OS loader
	REG_LOAD_HIVE_OPEN_HANDLE  = (&H00000800) ' Load the hive and return a handle to its root kcb
	REG_FLUSH_HIVE_FILE_GROWTH  = (&H00001000) ' Flush changes to primary hive file size as part of all flushes
	REG_OPEN_READ_ONLY  = (&H00002000) ' Open a hive's files in read-only mode
	REG_IMMUTABLE  = (&H00004000) ' Load the hive, but don't allow any modification of it
	REG_NO_IMPERSONATION_FALLBACK = (&H00008000&) ' Do not fall back to impersonating the caller if hive file access fails
	REG_APP_HIVE_OPEN_READ_ONLY  = (REG_OPEN_READ_ONLY)  ' Open an app hive's files in read-only mode (if the hive was not previously loaded)
End Enum

Public Enum RegKeySecurity
	KEY_QUERY_VALUE  = (&H0001)
	KEY_SET_VALUE  = (&H0002)
	KEY_CREATE_SUB_KEY  = (&H0004)
	KEY_ENUMERATE_SUB_KEYS  = (&H0008)
	KEY_NOTIFY = (&H0010)
	KEY_CREATE_LINK  = (&H0020)
	KEY_WOW64_32KEY  = (&H0200)
	KEY_WOW64_64KEY  = (&H0100)
	KEY_WOW64_RES  = (&H0300)
    KEY_READ = ((STANDARD_RIGHTS_READ Or KEY_QUERY_VALUE Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY) And (Not SYNCHRONIZE))
    KEY_WRITE = ((STANDARD_RIGHTS_WRITE Or KEY_SET_VALUE Or KEY_CREATE_SUB_KEY) And (Not SYNCHRONIZE))
    KEY_EXECUTE = ((KEY_READ) And (Not SYNCHRONIZE))
    KEY_ALL_ACCESS = ((STANDARD_RIGHTS_ALL Or KEY_QUERY_VALUE Or KEY_SET_VALUE Or KEY_CREATE_SUB_KEY Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY Or KEY_CREATE_LINK) And (Not SYNCHRONIZE))                                                                                                  
End Enum

Public Enum LogonOperations
    LOGON32_LOGON_INTERACTIVE  = 2
    LOGON32_LOGON_NETWORK = 3
    LOGON32_LOGON_BATCH  = 4
    LOGON32_LOGON_SERVICE  = 5
    LOGON32_LOGON_UNLOCK  = 7
    LOGON32_LOGON_NETWORK_CLEARTEXT  = 8
    LOGON32_LOGON_NEW_CREDENTIALS = 9
End Enum
Public Enum LogonProviders
    LOGON32_PROVIDER_DEFAULT  = 0
    LOGON32_PROVIDER_WINNT35  = 1
    LOGON32_PROVIDER_WINNT40  = 2
    LOGON32_PROVIDER_WINNT50  = 3
    '#if(_WIN32_WINNT >= 0x0600)
    LOGON32_PROVIDER_VIRTUAL  = 4
End Enum

Public Enum FileEncryptionStatus
    FILE_ENCRYPTABLE  = 0
    FILE_IS_ENCRYPTED  = 1
    FILE_SYSTEM_ATTR  = 2
    FILE_ROOT_DIR  = 3
    FILE_SYSTEM_DIR  = 4
    FILE_UNKNOWN  = 5
    FILE_SYSTEM_NOT_SUPPORT  = 6
    FILE_USER_DISALLOWED  = 7
    FILE_READ_ONLY  = 8
    FILE_DIR_DISALLOWED  = 9
End Enum

Public DeclareWide PtrSafe Function RegOpenKeyEx Lib "advapi32" Alias "RegOpenKeyExW" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr) As Long
Public DeclareWide PtrSafe Function RegOpenKeyExW Lib "advapi32" ([TypeHint(RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr) As Long
Public DeclareWide PtrSafe Function RegCreateKeyEx Lib "advapi32" Alias "RegCreateKeyExW" ([TypeHint(RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal Reserved As LongPtr, ByVal lpClass As String, ByVal dwOptions As Long, ByVal samDesired As REGSAM, ByVal lpSecurityAttributes As LongPtr, phkResult As LongPtr, lpdwDisposition As Long) As Long
Public DeclareWide PtrSafe Function RegCreateKeyExW Lib "advapi32" ([TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal Reserved As LongPtr, ByVal lpClass As LongPtr, ByVal dwOptions As Long, ByVal samDesired As REGSAM, ByVal lpSecurityAttributes As LongPtr, phkResult As LongPtr, lpdwDisposition As Long) As Long
Public DeclareWide PtrSafe Function RegSetValueEx Lib "advapi32" Alias "RegSetValueExW" ([TypeHint(RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSetValueExW Lib "advapi32" ([TypeHint(RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpValueName As LongPtr, ByVal Reserved As Long, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegQueryValueEx Lib "advapi32" Alias "RegQueryValueExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Any, lpcbData As LongPtr) As Long
Public DeclareWide PtrSafe Function RegQueryValueExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As LongPtr, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Any, lpcbData As LongPtr) As Long
Public DeclareWide PtrSafe Function RegEnumKey Lib "advapi32" Alias "RegEnumKeyW" ([TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As String, ByVal cchName As Long) As Long
Public DeclareWide PtrSafe Function RegEnumKeyW Lib "advapi32" ([TypeHint(RegKeyspace) ] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As LongPtr, ByVal cchName As Long) As Long
Public DeclareWide PtrSafe Function RegEnumKeyExW Lib "advapi32" ([TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As LongPtr, lpcchName As Long, lpReserved As Long, ByVal lpClass As LongPtr, lpcchClass As Long, lpftLastWriteTime As FILETIME) As Long
Public DeclareWide PtrSafe Function RegEnumKeyEx Lib "advapi32" Alias "RegEnumKeyExW" ([TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As String, lpcchName As Long, lpReserved As Long, ByVal lpClass As String, lpcchClass As Long, lpftLastWriteTime As FILETIME) As Long
Public DeclareWide PtrSafe Function RegEnumValue Lib "advapi32" Alias "RegEnumValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpValueName As String, lpcbValueName As Long, lpReserved As Long, lpType As REGTYPES, lpData As Byte, lpcbData As Long) As Long
Public DeclareWide PtrSafe Function RegEnumValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpValueName As LongPtr, lpcbValueName As Long, lpReserved As Long, lpType As REGTYPES, lpData As Byte, lpcbData As Long) As Long
Public DeclareWide PtrSafe Function RegFlushKey Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr) As Long
Public DeclareWide PtrSafe Function RegQueryInfoKeyW Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, Optional ByVal lpClass As LongPtr, Optional lpcchClass As Long, Optional lpReserved As Long = 0, Optional lpcSubKeys As Long, Optional lpcbMaxSubKeyLen As Long, Optional lpcbMaxClassLen As Long, Optional lpcValues As Long, Optional lpcbMaxValueNameLen As Long, Optional lpcbMaxValueLen As Long, Optional lpcbSecurityDescriptor As Long, Optional ByVal lpftLastWriteTime As LongPtr) As Long 
Public DeclareWide PtrSafe Function RegQueryInfoKey Lib "advapi32" Alias "RegQueryInfoKeyW" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, Optional ByVal lpClass As String, Optional lpcchClass As Long, Optional lpReserved As Long = 0, Optional lpcSubKeys As Long, Optional lpcbMaxSubKeyLen As Long, Optional lpcbMaxClassLen As Long, Optional lpcValues As Long, Optional lpcbMaxValueNameLen As Long, Optional lpcbMaxValueLen As Long, Optional lpcbSecurityDescriptor As Long, Optional ByVal lpftLastWriteTime As LongPtr) As Long 
Public DeclareWide PtrSafe Function RegDeleteValueW Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpValueName As LongPtr) As Long
Public DeclareWide PtrSafe Function RegDeleteValue Lib "advapi32" Alias "RegDeleteValueW" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpValueName As String) As Long
Public DeclareWide PtrSafe Function RegNotifyChangeKeyValue Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As RegNotifyChangeValues, ByVal hEvent As LongPtr, ByVal fAsynchronous As BOOL) As Long
Public DeclareWide PtrSafe Function RegSetKeyValueW Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpSubkey As LongPtr, ByVal lpValueName As LongPtr, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSetKeyValue Lib "advapi32" Alias "RegSetKeyValueW" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpSubkey As String, ByVal lpValueName As String, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSaveKeyExW Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpFile As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal Flags As RegSaveKeyFlags) As Long
Public DeclareWide PtrSafe Function RegSaveKeyEx Lib "advapi32" Alias "RegSaveKeyExW" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpFile As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal Flags As RegSaveKeyFlags) As Long
Public DeclareWide PtrSafe Function RegRestoreKeyW Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpFile As LongPtr, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As Long
Public DeclareWide PtrSafe Function RegRestoreKey Lib "advapi32" Alias "RegRestoreKeyW" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal lpFile As String, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As Long
Public DeclareWide PtrSafe Function RegCloseKey Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr) As Long
Public DeclareWide PtrSafe Function RegGetKeySecurity Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public DeclareWide PtrSafe Function RegSetKeySecurity Lib "advapi32" ([ TypeHint (RegKeyspace) ] ByVal hKey As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, lpcbSecurityDescriptor As Long) As Long

Public DeclareWide PtrSafe Function OpenThreadToken Lib "advapi32" (ByVal hThread As LongPtr, ByVal dwDesiredAccess As Long, ByVal bOpenAsSelf As Long, phToken As LongPtr) As Boolean
Public DeclareWide PtrSafe Function OpenProcessToken Lib "advapi32" (ByVal ProcessHandle As LongPtr, ByVal DesiredAccess As Long, TokenHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function DuplicateToken Lib "advapi32" (ByVal ExistingTokenHandle As LongPtr, ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL, DuplicateTokenHandle As LongPtr) As Boolean
Public DeclareWide PtrSafe Function DuplicateTokenEx Lib "advapi32" (ByVal hExistingToken As LongPtr, ByVal dwDesiredAccess As Long, lpTokenAttributes As SECURITY_ATTRIBUTES, ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL, ByVal TokenType As TOKEN_TYPE, phNewToken As LongPtr) As Boolean
Public DeclareWide PtrSafe Function ImpersonateLoggedOnUser Lib "advapi32" (ByVal hToken As LongPtr) As Long
Public DeclareWide PtrSafe Function ImpersonateSelf Lib "advapi32" (ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL) As BOOL
Public DeclareWide PtrSafe Function RevertToSelf Lib "advapi32" () As BOOL
Public DeclareWide PtrSafe Function AdjustTokenGroups Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal ResetToDefault As BOOL, NewState As Any, ByVal BufferLength As Long, PreviousState As Any, ReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function AdjustTokenPrivileges Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal DisableAllPrivileges As Long, ByRef NewState As Any, ByVal BufferLength As Long, ByRef PreviousState As Any, ByRef ReturnLength As Long) As Long
Public DeclareWide PtrSafe Function CheckTokenCapability Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal CapabilitySidToCheck As LongPtr, HasCapability As BOOL) As BOOL
Public DeclareWide PtrSafe Function GetTokenInformation Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long, ReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function SetTokenInformation Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long) As BOOL
Public DeclareWide PtrSafe Function CheckTokenMembership Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal SidToCheck As LongPtr, IsMember As BOOL) As BOOL
Public DeclareWide PtrSafe Function CheckTokenMembershipEx Lib "kernel32" (ByVal TokenHandle As LongPtr, ByVal SidToCheck As LongPtr, ByVal Flags As CheckTokenMembershipExFlags, IsMember As BOOL) As BOOL
Public DeclareWide PtrSafe Function CreateRestrictedToken Lib "kernel32" (ByVal ExistingTokenHandle As LongPtr, ByVal Flags As RestrictedTokenFlags, ByVal DisableSidCount As Long, SidsToDisable As SID_AND_ATTRIBUTES, ByVal DeletePrivilegeCount As Long, PrivilegesToDelete As LUID_AND_ATTRIBUTES, ByVal RestrictedSidCount As Long, SidsToRestrict As SID_AND_ATTRIBUTES, NewTokenHandle As LongPtr) As BOOL


Public Enum RestrictedTokenFlags
    DISABLE_MAX_PRIVILEGE  = &H1
    SANDBOX_INERT  = &H2
    LUA_TOKEN  = &H4
    WRITE_RESTRICTED  = &H8
End Enum

Public Type QUOTA_LIMITS
    PagedPoolLimit As LongPtr
    NonPagedPoolLimit As LongPtr
    MinimumWorkingSetSize As LongPtr
    MaximumWorkingSetSize As LongPtr
    PagefileLimit As LongPtr
    TimeLimit As LARGE_INTEGER
End Type

Public Declare PtrSafe Function LogonUserA Lib "advapi32" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public Declare PtrSafe Function LogonUserW Lib "advapi32" (ByVal lpszUsername As LongPtr, ByVal lpszDomain As LongPtr, ByVal lpszPassword As LongPtr, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LogonUser Lib "advapi32" Alias "LogonUserW" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public Declare PtrSafe Function LogonUserExA Lib "advapi32" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public Declare PtrSafe Function LogonUserExW Lib "advapi32" (ByVal lpszUsername As LongPtr, ByVal lpszDomain As LongPtr, ByVal lpszPassword As LongPtr, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LogonUserEx Lib "advapi32" Alias "LogonUserExW" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, Optional phToken As LongPtr, Optional ppLogonSid As LongPtr, Optional ppProfileBuffer As LongPtr, Optional pdwProfileLength As Long, Optional pQuotaLimits As Any) As BOOL
Public Declare PtrSafe Function LookupAccountNameA Lib "advapi32" (ByVal lpSystemName As String, ByVal lpAccountName As String, ByVal Sid As LongPtr, cbSid As Long, ByVal ReferencedDomainName As String, ByVal cchReferencedDomainName, peUse As SID_NAME_USE) As BOOL
Public Declare PtrSafe Function LookupAccountNameW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal lpAccountName As LongPtr, ByVal Sid As LongPtr, cbSid As Long, ByVal ReferencedDomainName As LongPtr, ByVal cchReferencedDomainName, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountName Lib "advapi32" Alias "LookupAccountNameW" (ByVal lpSystemName As String, ByVal lpAccountName As String, ByVal Sid As LongPtr, cbSid As Long, ByVal ReferencedDomainName As String, ByVal cchReferencedDomainName, peUse As SID_NAME_USE) As BOOL
Public Declare PtrSafe Function LookupAccountSidA Lib "advapi32" (ByVal lpSystemName As String, ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountSidW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal sid As LongPtr, ByVal Name As LongPtr, cchName As Long, ByVal ReferencedDomainName As LongPtr, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountSid Lib "advapi32" Alias "LookupAccountSidW" (ByVal lpSystemName As String, ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public Declare PtrSafe Function LookupAccountSidLocalA Lib "advapi32" (ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountSidLocalW Lib "advapi32" (ByVal sid As LongPtr, ByVal Name As LongPtr, cchName As Long, ByVal ReferencedDomainName As LongPtr, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountSidLocal Lib "advapi32" Alias "LookupAccountSidW" (ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL


Public Declare PtrSafe Function InitializeSecurityDescriptor Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal dwRevision As Long) As Long
Public Declare PtrSafe Function SetSecurityDescriptorDacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal bDaclPresent As Long, pDacl As Any, ByVal bDaclDefaulted As Long) As Long
Public Declare PtrSafe Function GetSecurityDescriptorDacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, lpbDaclPresent As Long, pDacl As Any, pbDaclDefaulted As Long) As Long
Public Declare PtrSafe Function SetSecurityDescriptorGroup Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal pGroup As LongPtr, ByVal bGroupDefauled As BOOL) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorGroup Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, pGroup As LongPtr, lpbGroupDefauled As BOOL) As BOOL
Public Declare PtrSafe Function SetSecurityDescriptorOwner Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal pOwner As LongPtr, ByVal bOwnerDefauled As BOOL) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorOwner Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, pOwner As LongPtr, lpbOwnerDefauled As BOOL) As BOOL
Public Declare PtrSafe Function SetSecurityDescriptorRMControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, Optional RMControl As Byte) As Long
Public Declare PtrSafe Function GetSecurityDescriptorRMControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, Optional RMControl As Byte) As Long
Public Declare PtrSafe Function SetSecurityDescriptorSacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal bSaclPresent As Long, pSacl As Any, ByVal bSaclDefaulted As Long) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorSacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, lpbSaclPresent As Long, pSacl As Any, pbSaclDefaulted As Long) As BOOL
Public Declare PtrSafe Function SetSecurityDescriptorControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, [TypeHint(SECURITY_DESCRIPTOR_CONTROL ) ] ByVal ControlBitsOfInterest As Integer, [TypeHint(SECURITY_DESCRIPTOR_CONTROL ) ] ByVal ControlBitsToSet As Integer) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, [TypeHint(SECURITY_DESCRIPTOR_CONTROL) ] pControl As Integer, lpdwRevision As Long) As BOOL


Public Declare PtrSafe Function EncryptFileA Lib "advapi32" (ByVal lpFileName As String) As Long
Public Declare PtrSafe Function DecryptFileA Lib "advapi32" (ByVal lpFileName As String, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function EncryptFileW Lib "advapi32" (ByVal lpFileName As LongPtr) As Long
Public Declare PtrSafe Function DecryptFileW Lib "advapi32" (ByVal lpFileName As LongPtr, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function EncryptFile Lib "advapi32" Alias "EncryptFileW" (ByVal lpFileName As String) As Long
Public DeclareWide PtrSafe Function DecryptFile Lib "advapi32" Alias "DecryptFileW" (ByVal lpFileName As String, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function FileEncryptionStatusA Lib "advapi32" (ByVal lpFileName As String, lpStatus As FileEncryptionStatus) As BOOL
Public Declare PtrSafe Function FileEncryptionStatusW Lib "advapi32" (ByVal lpFileName As LongPtr, lpStatus As FileEncryptionStatus) As BOOL
Public DeclareWide PtrSafe Function FileEncryptionStatus Lib "advapi32" Alias "FileEncryptionStatusW" (ByVal lpFileName As String, lpStatus As FileEncryptionStatus) As BOOL

Public DeclareWide PtrSafe Function IsValidSid Lib "advapi32" (ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function InitializeSid Lib "advapi32" (psid As LongPtr, pIdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal nSubAuthorityCount As Byte) As BOOL
Public DeclareWide PtrSafe Function AllocateAndInitializeSid Lib "advapi32" (pIdentifierAuthority As SID_IDENTIFIER_AUTHORITY,ByVal nSubAuthorityCount As Byte, ByVal nSubAuthority0 As Long, ByVal nSubAuthority1 As Long, ByVal nSubAuthority2 As Long, ByVal nSubAuthority3 As Long, ByVal nSubAuthority4 As Long, ByVal nSubAuthority5 As Long, ByVal nSubAuthority6 As Long, ByVal nSubAuthority7 As Long, psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetLengthSid Lib "advapi32" (ByVal psid As LongPtr) As Long
Public DeclareWide PtrSafe Function EqualSid Lib "advapi32" (ByVal pSid1 As LongPtr, ByVal pSid2 As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EqualDomainSid Lib "advapi32" (ByVal pSid1 As LongPtr, ByVal pSid2 As LongPtr, pfEqual As BOOL) As BOOL
Public DeclareWide PtrSafe Function EqualPrefixSid Lib "advapi32" (ByVal pSid1 As LongPtr, ByVal pSid2 As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FreeSid Lib "advapi32" (ByVal psid As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CopySid Lib "advapi32" (ByVal nDestinationSidLength As Long, ByVal pDestinationSid As LongPtr, ByVal pSourceSid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertSidToStringSidW Lib "advapi32" (ByVal psid As LongPtr, StringSid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertSidToStringSid Lib "advapi32" Alias "ConvertSidToStringSidW" (ByVal psid As LongPtr, StringSid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertStringSidToSidW Lib "advapi32" (ByVal StringSid As LongPtr, psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertStringSidToSid Lib "advapi32" Alias "ConvertSidToStringSidW" (ByVal StringSid As String, psid As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertStringSidToSidA Lib "advapi32" (ByVal StringSid As String, psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertStringSecurityDescriptorToSecurityDescriptorW Lib "advapi32" (ByVal StringSecurityDescriptor As LongPtr, ByVal StringSDRevision As Long, SecurityDescriptor As SECURITY_DESCRIPTOR, SecurityDescriptorSize As Long) As BOOL
Public DeclareWide PtrSafe Function ConvertStringSecurityDescriptorToSecurityDescriptor Lib "advapi32" Alias "ConvertStringSecurityDescriptorToSecurityDescriptorW" (ByVal StringSecurityDescriptor As String, ByVal StringSDRevision As Long, SecurityDescriptor As SECURITY_DESCRIPTOR, SecurityDescriptorSize As Long) As BOOL
Public DeclareWide PtrSafe Function ConvertSecurityDescriptorToStringSecurityDescriptorW Lib "advapi32" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal RequestedStringSDRevision As Long, ByVal SecurityInformation As SECURITY_INFORMATION, StringSecurityDescriptor As LongPtr, StringSecurityDescriptorLen As Long) As BOOL
Public DeclareWide PtrSafe Function ConvertSecurityDescriptorToStringSecurityDescriptor Lib "advapi32" Alias "ConvertSecurityDescriptorToStringSecurityDescriptorW" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal RequestedStringSDRevision As Long, ByVal SecurityInformation As SECURITY_INFORMATION, StringSecurityDescriptor As LongPtr, StringSecurityDescriptorLen As Long) As BOOL
Public DeclareWide PtrSafe Function CreateWellKnownSid Lib "advapi32" (ByVal WellKnownSidType As WELL_KNOWN_SID_TYPE, ByVal DomainSid As LongPtr, pSid As LongPtr, cbSid As Long) As BOOL
Public DeclareWide PtrSafe Function GetSidLengthRequired Lib "advapi32" (ByVal nSubAuthorityCount As Byte) As Long
Public DeclareWide PtrSafe Function GetSidIdentifierAuthority Lib "advapi32" (ByVal psid As LongPtr) As SID_IDENTIFIER_AUTHORITY
Public DeclareWide PtrSafe Function GetSidSubAuthority Lib "advapi32" (ByVal psid As LongPtr, ByVal nSubAuthority As Long) As LongPtr
Public DeclareWide PtrSafe Function GetSidSubAuthorityCount Lib "advapi32" (ByVal psid As LongPtr) As LongPtr

Public Declare PtrSafe Function PrivilegeCheck Lib "advapi32" (ByVal ClientToken As LongPtr, RequiredPrivileges As PRIVILEGE_SET, pfResult As BOOL) As BOOL
Public DeclareWide PtrSafe Function LookupPrivilegeValueW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal lpName As LongPtr, lpLuid As LUID) As Long
Public DeclareWide PtrSafe Function LookupPrivilegeNameW Lib "advapi32" (ByVal lpSystemName As LongPtr, lpLuid As LUID, ByVal lpName As LongPtr, cbName As Long) As Long
Public DeclareWide PtrSafe Function LookupPrivilegeValue Lib "advapi32" Alias "LookupPrivilegeValueW" (ByVal lpSystemName As String, ByVal lpName As LongPtr, lpLuid As LUID) As Long
Public DeclareWide PtrSafe Function LookupPrivilegeName Lib "advapi32" Alias "LookupPrivilegeNameW" (ByVal lpSystemName As String, lpLuid As LUID, ByVal lpName As LongPtr, cbName As Long) As Long
Public DeclareWide PtrSafe Function LookupPrivilegeDisplayNameW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal lpName As LongPtr, ByVal lpDisplayName As LongPtr, cchDisplayName As Long, lpLanguageId As Long) As BOOL
Public DeclareWide PtrSafe Function LookupPrivilegeDisplayName Lib "advapi32" Alias "LookupPrivilegeDisplayNameW" (ByVal lpSystemName As String, ByVal lpName As String, ByVal lpDisplayName As String, cchDisplayName As Long, lpLanguageId As Long) As BOOL
Public DeclareWide PtrSafe Function AddAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, pAceList As Any, ByVal nAceListLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceIndex As Long, pAce As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceIndex As Long) As BOOL
Public DeclareWide PtrSafe Function FindFirstFreeAce Lib "advapi32" (ByVal pAcl As LongPtr, pAce As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MapGenericMask Lib "advapi32" (AccessMask As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING) As BOOL
Public DeclareWide PtrSafe Function AccessCheck Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal ClientToken As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, PrivilegeSet As PRIVILEGE_SET, PrivilegeSetLength As Long, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckAndAuditAlarmA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckAndAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckAndAuditAlarm Lib "advapi32" Alias "AccessCheckAndAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByType Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal ClientToken As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, PrivilegeSet As PRIVILEGE_SET, PrivilegeSetLength As Long, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeAndAuditAlarmA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeAndAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeAndAuditAlarm Lib "advapi32" Alias "AccessCheckByTypeAndAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultList Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal ClientToken As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, PrivilegeSet As PRIVILEGE_SET, PrivilegeSetLength As Long, GrantedAccess As LM_ACCESS_FLAGS, AccessStatusList As Long) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmByHandleA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmByHandleW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmByHandle Lib "advapi32" Alias "AccessCheckByTypeResultListAndAuditAlarmByHandleW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultListAndAuditAlarm Lib "advapi32" Alias "AccessCheckByTypeResultListAndAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AddAccessAllowedAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddAccessDeniedAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddAccessAllowedAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddAccessDeniedAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddAccessAllowedObjectAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ObjectTypeGuid As UUID, InheritedObjectTypeGuid As UUID, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddAccessDeniedObjectAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ObjectTypeGuid As UUID, InheritedObjectTypeGuid As UUID, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddAuditAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AccessMask As Long, ByVal psid As LongPtr, ByVal bAuditSuccess As BOOL, Byval bAuditFailure As BOOL) As BOOL
Public DeclareWide PtrSafe Function AddAuditAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
Public DeclareWide PtrSafe Function AddAuditAccessObjectAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ObjectTypeGuid As UUID, InheritedObjectTypeGuid As UUID, ByVal psid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
Public DeclareWide PtrSafe Function AddMandatoryAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal MandatoryPolicy As AceMandatoryPolicy, ByVal pLabelSid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddResourceAttributeAce Lib "kernel32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, pAttributeInfo As CLAIM_SECURITY_ATTRIBUTES_INFORMATION, pReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function AddScopedPolicyIDAce Lib "kernel32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddConditionalAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, [ TypeHint(AceTypes) ] ByVal AceType As Byte, ByVal AccessMask As Long, ByVal pSid As LongPtr, ReturnLength As Long) As BOOL

Public DeclareWide PtrSafe Function AreAllAccessesGranted Lib "advapi32" (ByVal GrantedAccess As Long, ByVal DesiredAccess As Long) As BOOL
Public DeclareWide PtrSafe Function AreAnyAccessesGranted Lib "advapi32" (ByVal GrantedAccess As Long, ByVal DesiredAccess As Long) As BOOL

Public DeclareWide PtrSafe Function CreatePrivateObjectSecurity Lib "advapi32" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ByVal IsDirectoryObject As BOOL, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As BOOL
Public DeclareWide PtrSafe Function CreatePrivateObjectSecurityEx Lib "advapi32" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ObjectType As UUID, ByVal IsContainerObject As BOOL, ByVal AutoInheritFlags As SEF_FLAGS, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As BOOL
Public DeclareWide PtrSafe Function DestroyPrivateObjectSecurity Lib "advapi32" (ObjectDescriptor As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetPrivateObjectSecurity Lib "advapi32" (ObjectDescriptor As SECURITY_DESCRIPTOR, ByVal SecurityInformation As SECURITY_INFORMATION, ResultantDescriptor As SECURITY_DESCRIPTOR, ByVal DescriptorLength As Long, ReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function SetPrivateObjectSecurity Lib "advapi32" (ByVal SecurityInformation As SECURITY_INFORMATION, ModificationDescriptor As SECURITY_DESCRIPTOR, ObjectSecurityDescriptor As LongPtr, GenericMapping As GENERIC_MAPPING, Optional ByVal Token As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetPrivateObjectSecurityEx Lib "advapi32" (ByVal SecurityInformation As SECURITY_INFORMATION, ModificationDescriptor As SECURITY_DESCRIPTOR, ObjectSecurityDescriptor As LongPtr, ByVal AutoInheritFlags As SEF_FLAGS, GenericMapping As GENERIC_MAPPING, Optional ByVal Token As LongPtr) As BOOL



Public DeclareWide PtrSafe Function InitializeAcl Lib "advapi32" (ByVal pAcl As LongPtr, ByVal nAclLength As Long, ByVal dwAceRevision As AclRevision) As BOOL
Public DeclareWide PtrSafe Function GetKernelObjectSecurity Lib "advapi32" (ByVal Handle As LongPtr, ByVal RequestedInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function SetKernelObjectSecurity Lib "advapi32" (ByVal Handle As LongPtr, ByVal RequestedInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
Public DeclareWide PtrSafe Function AllocateLocallyUniqueId Lib "advapi32" (pLUID as LUID) As BOOL
Public DeclareWide PtrSafe Function GetAclInformation Lib "advapi32" (ByVal pAcl As LongPtr, pAclInformation As Any, ByVal nAclInformationLength As Long, ByVal dwAclInformationClass As ACL_INFORMATION_CLASS) As BOOL
Public DeclareWide PtrSafe Function SetAclInformation Lib "advapi32" (ByVal pAcl As LongPtr, pAclInformation As Any, ByVal nAclInformationLength As Long, ByVal dwAclInformationClass As ACL_INFORMATION_CLASS) As BOOL
Public DeclareWide PtrSafe Function IsValidAcl Lib "advapi32" (ByVal pAcl As LongPtr) As BOOL

Public Enum SEF_FLAGS
    SEF_DACL_AUTO_INHERIT  = &H01
    SEF_SACL_AUTO_INHERIT  = &H02
    SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT  = &H04
    SEF_AVOID_PRIVILEGE_CHECK  = &H08
    SEF_AVOID_OWNER_CHECK  = &H10
    SEF_DEFAULT_OWNER_FROM_PARENT  = &H20
    SEF_DEFAULT_GROUP_FROM_PARENT  = &H40
    SEF_MACL_NO_WRITE_UP  = &H100
    SEF_MACL_NO_READ_UP  = &H200
    SEF_MACL_NO_EXECUTE_UP  = &H400
    SEF_AI_USE_EXTRA_PARAMS  = &H800
    SEF_AVOID_OWNER_RESTRICTION  = &H1000
    SEF_FORCE_USER_MODE  = &H2000
    SEF_NORMALIZE_OUTPUT_DESCRIPTOR  = &H4000
    SEF_MACL_VALID_FLAGS  = (SEF_MACL_NO_WRITE_UP  Or  SEF_MACL_NO_READ_UP  Or  SEF_MACL_NO_EXECUTE_UP)
End Enum

Public Enum CLAIM_SECURITY_ATTRIBUTE_TYPES
    CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID  = &H00
    CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64  = &H01
    CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64  = &H02
'   Case insensitive attribute value string by default.
'   Unless the flag CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE
'   is set indicating otherwise.
    CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING  = &H03
    CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN  = &H04
    CLAIM_SECURITY_ATTRIBUTE_TYPE_SID  = &H05
    CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN  = &H06
    CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING  = &H10
End Enum
Public Type CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
    Version As LongLong
    Name As LongPtr
End Type
Public Type CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    pValue As LongPtr '  Pointer is BYTE aligned.
    ValueLength As Long '  In bytes
End Type
Public Enum CLAIM_SECURITY_ATTRIBUTES
    CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE  = &H0001
'   Attribute value is compared in a case sensitive way. It is valid with string value
'   or composite type containing string value. For other types of value, this flag
'   will be ignored. Currently, it is valid with the two types:
'   CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING and CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN.
    CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE  = &H0002
'  Attribute is considered only for Deny Aces.
    CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY  = &H0004
'  Attribute is disabled by default.
    CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT  = &H0008
'  Attribute is disabled.
    CLAIM_SECURITY_ATTRIBUTE_DISABLED  = &H0010
'  Attribute is mandatory.
    CLAIM_SECURITY_ATTRIBUTE_MANDATORY  = &H0020
    CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS  = ( CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE  Or  CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE  Or  CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY  Or  CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT  Or  CLAIM_SECURITY_ATTRIBUTE_DISABLED  Or  CLAIM_SECURITY_ATTRIBUTE_MANDATORY )
'  Reserve upper 16 bits for custom flags. These should be preserved but not
'  validated as they do not affect security in any way.
    CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS  = &HFFFF0000
End Enum
Public Type CLAIM_SECURITY_ATTRIBUTE_V1
    '  Name of the attribute. Case insensitive Unicode string.
    Name As LongPtr
    '  Data type of attribute.
    /*[ TypeHint(CLAIM_SECURITY_ATTRIBUTE_TYPES) ]*/ ValueType As Integer
    '  Pass 0 in a set operation and check for 0 in a get operation.
    Reserved As Integer
    ' Attribute Flags
    Flags As CLAIM_SECURITY_ATTRIBUTES
    '  Number of values.
    ValueCount As Long
    Values As LongPtr
    '  The actual value itself.
    'union {
    ' pInt64 As LongLong
    ' pUint64 As LongLong
    ' ppString As PWSTR
    ' pFqbn As PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
    ' pOctetString As PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    ' } Values;
End Type
Public Type CLAIM_SECURITY_ATTRIBUTES_INFORMATION
    '  MUST BE first.
    Version As Integer
    '  Pass 0 in set operations and ignore on get operations.
    Reserved As Integer
    AttributeCount As Long
    'union {
    pAttributeV1 As LongPtr 'PCLAIM_SECURITY_ATTRIBUTE_V1
    '} Attribute;
End Type

Public Enum AceMandatoryPolicy
    SYSTEM_MANDATORY_LABEL_NO_WRITE_UP  = &H1
    SYSTEM_MANDATORY_LABEL_NO_READ_UP  = &H2
    SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP  = &H4
    SYSTEM_MANDATORY_LABEL_VALID_MASK  = (SYSTEM_MANDATORY_LABEL_NO_WRITE_UP  Or  SYSTEM_MANDATORY_LABEL_NO_READ_UP  Or  SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP)
End Enum

Public Type ACCESS_ALLOWED_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type ACCESS_DENIED_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type ACCESS_ALLOWED_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type ACCESS_DENIED_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Enum OBJECT_ACE_FLAGS
    ACE_OBJECT_TYPE_PRESENT  = &H1
    ACE_INHERITED_OBJECT_TYPE_PRESENT  = &H2
End Enum
Public Type ACCESS_ALLOWED_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type ACCESS_DENIED_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type ACCESS_DENIED_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Enum ADS_RIGHTS_ENUM
    ADS_RIGHT_DELETE = &H10000
    ADS_RIGHT_READ_CONTROL = &H20000
    ADS_RIGHT_WRITE_DAC = &H40000
    ADS_RIGHT_WRITE_OWNER = &H80000
    ADS_RIGHT_SYNCHRONIZE = &H100000
    ADS_RIGHT_ACCESS_SYSTEM_SECURITY = &H1000000
    ADS_RIGHT_GENERIC_READ = &H80000000
    ADS_RIGHT_GENERIC_WRITE = &H40000000
    ADS_RIGHT_GENERIC_EXECUTE = &H20000000
    ADS_RIGHT_GENERIC_ALL = &H10000000
    ADS_RIGHT_DS_CREATE_CHILD = &H1
    ADS_RIGHT_DS_DELETE_CHILD = &H2
    ADS_RIGHT_ACTRL_DS_LIST = &H4
    ADS_RIGHT_DS_SELF = &H8
    ADS_RIGHT_DS_READ_PROP = &H10
    ADS_RIGHT_DS_WRITE_PROP = &H20
    ADS_RIGHT_DS_DELETE_TREE = &H40
    ADS_RIGHT_DS_LIST_OBJECT = &H80
    ADS_RIGHT_DS_CONTROL_ACCESS = &H100
End Enum

Public Type SYSTEM_ALARM_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_ALARM_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_ALARM_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_ALARM_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_RESOURCE_ATTRIBUTE_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_SCOPED_POLICY_ID_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_MANDATORY_LABEL_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_PROCESS_TRUST_LABEL_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_ACCESS_FILTER_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type

Public Enum SECURITY_RIDS
    SECURITY_NULL_RID = (&H00000000)
    SECURITY_WORLD_RID  = (&H00000000)
    SECURITY_LOCAL_RID  = (&H00000000)
    SECURITY_LOCAL_LOGON_RID  = (&H00000001)
    SECURITY_CREATOR_OWNER_RID  = (&H00000000)
    SECURITY_CREATOR_GROUP_RID  = (&H00000001)
    SECURITY_CREATOR_OWNER_SERVER_RID  = (&H00000002)
    SECURITY_CREATOR_GROUP_SERVER_RID  = (&H00000003)
    SECURITY_CREATOR_OWNER_RIGHTS_RID  = (&H00000004)
    SECURITY_DIALUP_RID  = (&H00000001)
    SECURITY_NETWORK_RID  = (&H00000002)
    SECURITY_BATCH_RID  = (&H00000003)
    SECURITY_INTERACTIVE_RID  = (&H00000004)
    SECURITY_LOGON_IDS_RID  = (&H00000005)
    SECURITY_LOGON_IDS_RID_COUNT  = (3)
    SECURITY_SERVICE_RID  = (&H00000006)
    SECURITY_ANONYMOUS_LOGON_RID  = (&H00000007)
    SECURITY_PROXY_RID  = (&H00000008)
    SECURITY_ENTERPRISE_CONTROLLERS_RID  = (&H00000009)
    SECURITY_SERVER_LOGON_RID  = SECURITY_ENTERPRISE_CONTROLLERS_RID
    SECURITY_PRINCIPAL_SELF_RID  = (&H0000000A)
    SECURITY_AUTHENTICATED_USER_RID  = (&H0000000B)
    SECURITY_RESTRICTED_CODE_RID  = (&H0000000C)
    SECURITY_TERMINAL_SERVER_RID  = (&H0000000D)
    SECURITY_REMOTE_LOGON_RID  = (&H0000000E)
    SECURITY_THIS_ORGANIZATION_RID  = (&H0000000F)
    SECURITY_IUSER_RID  = (&H00000011)
    SECURITY_LOCAL_SYSTEM_RID  = (&H00000012)
    SECURITY_LOCAL_SERVICE_RID  = (&H00000013)
    SECURITY_NETWORK_SERVICE_RID  = (&H00000014)
    SECURITY_NT_NON_UNIQUE  = (&H00000015)
    SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT  = (3)
    SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID  = (&H00000016)
    SECURITY_BUILTIN_DOMAIN_RID  = (&H00000020)
    SECURITY_WRITE_RESTRICTED_CODE_RID  = (&H00000021)
    SECURITY_PACKAGE_BASE_RID  = (&H00000040)
    SECURITY_PACKAGE_RID_COUNT  = (2)
    SECURITY_PACKAGE_NTLM_RID  = (&H0000000A)
    SECURITY_PACKAGE_SCHANNEL_RID  = (&H0000000E)
    SECURITY_PACKAGE_DIGEST_RID  = (&H00000015)
    SECURITY_CRED_TYPE_BASE_RID  = (&H00000041)
    SECURITY_CRED_TYPE_RID_COUNT  = (2)
    SECURITY_CRED_TYPE_THIS_ORG_CERT_RID  = (&H00000001)
    SECURITY_MIN_BASE_RID  = (&H00000050)
    SECURITY_SERVICE_ID_BASE_RID  = (&H00000050)
    SECURITY_SERVICE_ID_RID_COUNT  = (6)
    SECURITY_RESERVED_ID_BASE_RID  = (&H00000051)
    SECURITY_APPPOOL_ID_BASE_RID  = (&H00000052)
    SECURITY_APPPOOL_ID_RID_COUNT  = (6)
    SECURITY_VIRTUALSERVER_ID_BASE_RID  = (&H00000053)
    SECURITY_VIRTUALSERVER_ID_RID_COUNT  = (6)
    SECURITY_USERMODEDRIVERHOST_ID_BASE_RID  = (&H00000054)
    SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT  = (6)
    SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID  = (&H00000055)
    SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT  = (6)
    SECURITY_WMIHOST_ID_BASE_RID  = (&H00000056)
    SECURITY_WMIHOST_ID_RID_COUNT  = (6)
    SECURITY_TASK_ID_BASE_RID  = (&H00000057)
    SECURITY_NFS_ID_BASE_RID  = (&H00000058)
    SECURITY_COM_ID_BASE_RID  = (&H00000059)
    SECURITY_WINDOW_MANAGER_BASE_RID  = (&H0000005A)
    SECURITY_RDV_GFX_BASE_RID  = (&H0000005B)
    SECURITY_DASHOST_ID_BASE_RID  = (&H0000005C)
    SECURITY_DASHOST_ID_RID_COUNT  = (6)
    SECURITY_USERMANAGER_ID_BASE_RID  = (&H0000005D)
    SECURITY_USERMANAGER_ID_RID_COUNT  = (6)
    SECURITY_WINRM_ID_BASE_RID  = (&H0000005E)
    SECURITY_WINRM_ID_RID_COUNT  = (6)
    SECURITY_CCG_ID_BASE_RID  = (&H0000005F)
    SECURITY_UMFD_BASE_RID  = (&H00000060)
    SECURITY_VIRTUALACCOUNT_ID_RID_COUNT  = (6)
'  Virtual account logon is not limited to inbox callers.  Reserve base RID 0x6F for application usage.
    SECURITY_MAX_BASE_RID = (&H0000006F)
    SECURITY_MAX_ALWAYS_FILTERED  = (&H000003E7)
    SECURITY_MIN_NEVER_FILTERED  = (&H000003E8)
    SECURITY_OTHER_ORGANIZATION_RID  = (&H000003E8)
End Enum
Public Enum SECURITY_DOMAIN_RIDS
    DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED = (&H000001F0)
    DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS  = (&H000001F1)
    DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS  = (&H000001F2)
    FOREST_USER_RID_MAX  = (&H000001F3)
'  Well-known users ...
    DOMAIN_USER_RID_ADMIN  = (&H000001F4)
    DOMAIN_USER_RID_GUEST  = (&H000001F5)
    DOMAIN_USER_RID_KRBTGT  = (&H000001F6)
    DOMAIN_USER_RID_DEFAULT_ACCOUNT  = (&H000001F7)
    DOMAIN_USER_RID_WDAG_ACCOUNT  = (&H000001F8)
    DOMAIN_USER_RID_MAX  = (&H000003E7)
'  well-known groups ...
    DOMAIN_GROUP_RID_ADMINS  = (&H00000200)
    DOMAIN_GROUP_RID_USERS  = (&H00000201)
    DOMAIN_GROUP_RID_GUESTS  = (&H00000202)
    DOMAIN_GROUP_RID_COMPUTERS  = (&H00000203)
    DOMAIN_GROUP_RID_CONTROLLERS  = (&H00000204)
    DOMAIN_GROUP_RID_CERT_ADMINS  = (&H00000205)
    DOMAIN_GROUP_RID_SCHEMA_ADMINS  = (&H00000206)
    DOMAIN_GROUP_RID_ENTERPRISE_ADMINS  = (&H00000207)
    DOMAIN_GROUP_RID_POLICY_ADMINS  = (&H00000208)
    DOMAIN_GROUP_RID_READONLY_CONTROLLERS  = (&H00000209)
    DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS  = (&H0000020A)
    DOMAIN_GROUP_RID_CDC_RESERVED  = (&H0000020C)
    DOMAIN_GROUP_RID_PROTECTED_USERS  = (&H0000020D)
    DOMAIN_GROUP_RID_KEY_ADMINS  = (&H0000020E)
    DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS  = (&H0000020F)
'  well-known aliases ...
    DOMAIN_ALIAS_RID_ADMINS  = (&H00000220)
    DOMAIN_ALIAS_RID_USERS  = (&H00000221)
    DOMAIN_ALIAS_RID_GUESTS  = (&H00000222)
    DOMAIN_ALIAS_RID_POWER_USERS  = (&H00000223)
    DOMAIN_ALIAS_RID_ACCOUNT_OPS  = (&H00000224)
    DOMAIN_ALIAS_RID_SYSTEM_OPS  = (&H00000225)
    DOMAIN_ALIAS_RID_PRINT_OPS  = (&H00000226)
    DOMAIN_ALIAS_RID_BACKUP_OPS  = (&H00000227)
    DOMAIN_ALIAS_RID_REPLICATOR  = (&H00000228)
    DOMAIN_ALIAS_RID_RAS_SERVERS  = (&H00000229)
    DOMAIN_ALIAS_RID_PREW2KCOMPACCESS  = (&H0000022A)
    DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS  = (&H0000022B)
    DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS  = (&H0000022C)
    DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS  = (&H0000022D)
    DOMAIN_ALIAS_RID_MONITORING_USERS  = (&H0000022E)
    DOMAIN_ALIAS_RID_LOGGING_USERS  = (&H0000022F)
    DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS  = (&H00000230)
    DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS  = (&H00000231)
    DOMAIN_ALIAS_RID_DCOM_USERS  = (&H00000232)
    DOMAIN_ALIAS_RID_IUSERS  = (&H00000238)
    DOMAIN_ALIAS_RID_CRYPTO_OPERATORS  = (&H00000239)
    DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP  = (&H0000023B)
    DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP  = (&H0000023C)
    DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP  = (&H0000023D)
    DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP  = (&H0000023E)
    DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS  = (&H0000023F)
    DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS  = (&H00000240)
    DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS  = (&H00000241)
    DOMAIN_ALIAS_RID_HYPER_V_ADMINS  = (&H00000242)
    DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS  = (&H00000243)
    DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS  = (&H00000244)
    DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT  = (&H00000245)
    DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS  = (&H00000246)
    DOMAIN_ALIAS_RID_DEVICE_OWNERS  = (&H00000247)
End Enum
Public Enum SECURITY_PROCESS_TRUST_RIDS
    SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT = (2)
    SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID  = (&H00000400)
    SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID  = (&H00000200)
    SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID  = (&H00000000)
    SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID  = (&H00002000)
    SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID  = (&H00001000)
    SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID  = (&H00000800)
    SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID  = (&H00000600)
    SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID  = (&H00000400)
    SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID  = (&H00000000)
End Enum
Public Const SECURITY_TRUSTED_INSTALLER_RID1  = 956008885
Public Const SECURITY_TRUSTED_INSTALLER_RID2  = 3418522649
Public Const SECURITY_TRUSTED_INSTALLER_RID3  = 1831038044
Public Const SECURITY_TRUSTED_INSTALLER_RID4  = 1853292631
Public Const SECURITY_TRUSTED_INSTALLER_RID5  = 2271478464
Public Enum GROUP_SID_ATTRIBUTES
    SE_GROUP_MANDATORY  = (&H00000001)
    SE_GROUP_ENABLED_BY_DEFAULT  = (&H00000002)
    SE_GROUP_ENABLED  = (&H00000004)
    SE_GROUP_OWNER  = (&H00000008)
    SE_GROUP_USE_FOR_DENY_ONLY  = (&H00000010)
    SE_GROUP_INTEGRITY  = (&H00000020)
    SE_GROUP_INTEGRITY_ENABLED  = (&H00000040)
    SE_GROUP_LOGON_ID  = (&HC0000000)
    SE_GROUP_RESOURCE  = (&H20000000)
    SE_GROUP_VALID_ATTRIBUTES  = (SE_GROUP_MANDATORY  Or  SE_GROUP_ENABLED_BY_DEFAULT  Or  SE_GROUP_ENABLED  Or  SE_GROUP_OWNER  Or  SE_GROUP_USE_FOR_DENY_ONLY  Or  SE_GROUP_LOGON_ID  Or  SE_GROUP_RESOURCE  Or  SE_GROUP_INTEGRITY  Or  SE_GROUP_INTEGRITY_ENABLED)
End Enum

Public Enum ACCESS_REASON_TYPE
    AccessReasonNone = &H00000000 ' Indicate no reason for the bit. The bit may not be checked, or just no known reason.
    ' 
    '  The lowest 2 bytes store the index of the ACE that grant/deny this bit.
    '  If the corresponding access mask is zero, then it is deny ACE; otherwise,
    '  it is allow ACE.
    ' 
    AccessReasonAllowedAce = &H00010000 ' Granted a permission.
    AccessReasonDeniedAce = &H00020000 ' Denied a permission.
    AccessReasonAllowedParentAce = &H00030000 ' Granted a permission from parent ACE
    AccessReasonDeniedParentAce = &H00040000 ' Denied a permission from parent ACE
    AccessReasonNotGrantedByCape = &H00050000 ' A CAPE didn't grant the permission
    AccessReasonNotGrantedByParentCape = &H00060000 ' A CAPE from the parent's SD didn't grant the permission
    AccessReasonNotGrantedToAppContainer = &H00070000 ' This is an AppContainer and no ACE granted the permission.
    AccessReasonMissingPrivilege = &H00100000
    AccessReasonFromPrivilege = &H00200000
    AccessReasonIntegrityLevel = &H00300000
    AccessReasonOwnership = &H00400000
    AccessReasonNullDacl = &H00500000
    AccessReasonEmptyDacl = &H00600000
    AccessReasonNoSD = &H00700000
    AccessReasonNoGrant = &H00800000 ' this access bit is not granted by any ACE.
    AccessReasonTrustLabel = &H00900000 ' The trust label ACE did not grant this access.
    AccessReasonFilterAce = &H00a00000 ' The filtering ACE did not grant this access
End Enum
Public Type ACCESS_REASONS
    Data(0 To 31) As ACCESS_REASON_TYPE
End Type

Public Enum AUDIT_EVENT_TYPE
    AuditEventObjectAccess = 0
    AuditEventDirectoryServiceAccess = 1
End Enum

Public Enum AuditAllowFlag
    AUDIT_ALLOW_NO_PRIVILEGE  = &H1
End Enum
'  DS values for Source and ObjectTypeName
[Description ("NOTE: CONVERT TO ANSI") ] Public Const ACCESS_DS_SOURCE_A  = "DS"
Public Const ACCESS_DS_SOURCE_W  = "DS"
[Description ("NOTE: CONVERT TO ANSI") ] Public Const ACCESS_DS_OBJECT_TYPE_NAME_A  = "Directory Service Object"
Public Const ACCESS_DS_OBJECT_TYPE_NAME_W  = "Directory Service Object"


Public Enum OBJECT_TYPE_LEVEL
    ACCESS_OBJECT_GUID  = 0
    ACCESS_PROPERTY_SET_GUID  = 1
    ACCESS_PROPERTY_GUID  = 2
End Enum
Public Type OBJECT_TYPE_LIST
    /*[TypeHint(OBJECT_TYPE_LEVEL)]*/ Level As Integer
    Sbz As Integer
    ObjectType As LongPtr
End Type

Public Enum LM_ACCESS_FLAGS
    ACCESS_NONE  = 0
    ACCESS_ALL  = ( ACCESS_READ  Or  ACCESS_WRITE  Or  ACCESS_CREATE  Or  ACCESS_EXEC  Or  ACCESS_DELETE  Or  ACCESS_ATRIB  Or  ACCESS_PERM )
    ACCESS_READ  = &H01
    ACCESS_WRITE  = &H02
    ACCESS_CREATE  = &H04
    ACCESS_EXEC  = &H08
    ACCESS_DELETE  = &H10
    ACCESS_ATRIB  = &H20
    ACCESS_PERM  = &H40
    ACCESS_GROUP = &H8000&
End Enum

Public Enum SECURITY_DESCRIPTOR_CONTROL
    SE_OWNER_DEFAULTED  = (&H0001)
    SE_GROUP_DEFAULTED  = (&H0002)
    SE_DACL_PRESENT  = (&H0004)
    SE_DACL_DEFAULTED  = (&H0008)
    SE_SACL_PRESENT  = (&H0010)
    SE_SACL_DEFAULTED  = (&H0020)
    SE_DACL_AUTO_INHERIT_REQ  = (&H0100)
    SE_SACL_AUTO_INHERIT_REQ  = (&H0200)
    SE_DACL_AUTO_INHERITED  = (&H0400)
    SE_SACL_AUTO_INHERITED  = (&H0800)
    SE_DACL_PROTECTED  = (&H1000)
    SE_SACL_PROTECTED  = (&H2000)
    SE_RM_CONTROL_VALID  = (&H4000)
    SE_SELF_RELATIVE = (&H8000&)
End Enum

Public Enum ACL_INFORMATION_CLASS
    AclRevisionInformation=1
    AclSizeInformation = 2
End Enum
Public Type ACL_SIZE_INFORMATION
    AceCount As Long
    AclBytesInUse As Long
    AclBytesFree As Long
End Type
Public Type ACL_REVISION_INFORMATION
    AclRevision As Long
End Type

Public Enum AceTypes
	ACCESS_MIN_MS_ACE_TYPE  = (&H0)
	ACCESS_ALLOWED_ACE_TYPE  = (&H0)
	ACCESS_DENIED_ACE_TYPE  = (&H1)
	SYSTEM_AUDIT_ACE_TYPE  = (&H2)
	SYSTEM_ALARM_ACE_TYPE  = (&H3)
	ACCESS_MAX_MS_V2_ACE_TYPE  = (&H3)
	ACCESS_ALLOWED_COMPOUND_ACE_TYPE  = (&H4)
	ACCESS_MAX_MS_V3_ACE_TYPE  = (&H4)
	ACCESS_MIN_MS_OBJECT_ACE_TYPE  = (&H5)
	ACCESS_ALLOWED_OBJECT_ACE_TYPE  = (&H5)
	ACCESS_DENIED_OBJECT_ACE_TYPE  = (&H6)
	SYSTEM_AUDIT_OBJECT_ACE_TYPE  = (&H7)
	SYSTEM_ALARM_OBJECT_ACE_TYPE  = (&H8)
	ACCESS_MAX_MS_OBJECT_ACE_TYPE  = (&H8)
	ACCESS_MAX_MS_V4_ACE_TYPE  = (&H8)
	ACCESS_MAX_MS_ACE_TYPE  = (&H8)
	ACCESS_ALLOWED_CALLBACK_ACE_TYPE  = (&H9)
	ACCESS_DENIED_CALLBACK_ACE_TYPE  = (&HA)
	ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE  = (&HB)
	ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE  = (&HC)
	SYSTEM_AUDIT_CALLBACK_ACE_TYPE  = (&HD)
	SYSTEM_ALARM_CALLBACK_ACE_TYPE  = (&HE)
	SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE  = (&HF)
	SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE  = (&H10)
	SYSTEM_MANDATORY_LABEL_ACE_TYPE  = (&H11)
	SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE  = (&H12)
	SYSTEM_SCOPED_POLICY_ID_ACE_TYPE  = (&H13)
	SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE  = (&H14)
	SYSTEM_ACCESS_FILTER_ACE_TYPE  = (&H15)
	ACCESS_MAX_MS_V5_ACE_TYPE  = (&H15)
End Enum

Public Enum ACE_FLAGS
	OBJECT_INHERIT_ACE  = (&H1)
	CONTAINER_INHERIT_ACE  = (&H2)
	NO_PROPAGATE_INHERIT_ACE  = (&H4)
	INHERIT_ONLY_ACE  = (&H8)
	INHERITED_ACE = (&H10)
	VALID_INHERIT_FLAGS  = (&H1F)
    CRITICAL_ACE_FLAG            =  (&H20)
    SUCCESSFUL_ACCESS_ACE_FLAG  = (&H40)
    FAILED_ACCESS_ACE_FLAG = (&H80)
    TRUST_PROTECTED_FILTER_ACE_FLAG = (&H40)
End Enum

Public Type ACE_HEADER
    /*[TypeHint(AceTypes)]*/ AceType As Byte
    AceFlags As Byte
    AceSize As Integer
End Type




Public Enum AclRevision
    ACL_REVISION1 = (1)
    ACL_REVISION2 = (2)
    ACL_REVISION3 = (3)
    ACL_REVISION4 = (4)
    ACL_REVISION = (2)
    ACL_REVISION_DS = (4)
End Enum

Public Type PRIVILEGE_SET
        PrivilegeCount As Long
        Control As Long
        Privilege(0) As LUID_AND_ATTRIBUTES
End Type

Public Enum CheckTokenMembershipExFlags
    CTMF_INCLUDE_APPCONTAINER = 1
    CTMF_INCLUDE_LPAC = 2
End Enum
Public Enum TOKEN_INFORMATION_CLASS
	TokenUser=1
	TokenGroups = 2
	TokenPrivileges = 3
	TokenOwner = 4
	TokenPrimaryGroup = 5
	TokenDefaultDacl = 6
	TokenSource = 7
	TokenType = 8
	TokenImpersonationLevel = 9
	TokenStatistics = 10
	TokenRestrictedSids = 11
	TokenSessionId = 12
	TokenGroupsAndPrivileges = 13
	TokenSessionReference = 14
	TokenSandBoxInert = 15
	TokenAuditPolicy = 16
	TokenOrigin = 17
	TokenElevationType = 18
	TokenLinkedToken = 19
	TokenElevation = 20
	TokenHasRestrictions = 21
	TokenAccessInformation = 22
	TokenVirtualizationAllowed = 23
	TokenVirtualizationEnabled = 24
	TokenIntegrityLevel = 25
	TokenUIAccess = 26
	TokenMandatoryPolicy = 27
	TokenLogonSid = 28
	TokenIsAppContainer = 29
	TokenCapabilities = 30
	TokenAppContainerSid = 31
	TokenAppContainerNumber = 32
	TokenUserClaimAttributes = 33
	TokenDeviceClaimAttributes = 34
	TokenRestrictedUserClaimAttributes = 35
	TokenRestrictedDeviceClaimAttributes = 36
	TokenDeviceGroups = 37
	TokenRestrictedDeviceGroups = 38
	TokenSecurityAttributes = 39
	TokenIsRestricted = 40
	TokenProcessTrustLevel = 41
	TokenPrivateNameSpace = 42
	TokenSingletonAttributes = 43
	TokenBnoIsolation = 44
	TokenChildProcessFlags = 45
	TokenIsLessPrivilegedAppContainer = 46
	TokenIsSandboxed = 47
	TokenIsAppSilo = 48
	MaxTokenInfoClass = 49
End Enum

Public Type SECURITY_DESCRIPTOR
	Revision As BYTE
	Sbz1 As BYTE
	Control As Integer
	Owner As LongPtr
	Group As LongPtr
	Sacl As LongPtr
	Dacl As LongPtr
End Type
Public Const SECURITY_DESCRIPTOR_REVISION  = (1)
Public Const SECURITY_DESCRIPTOR_REVISION1  = (1)
#If Win64 Then
	Public Const SECURITY_DESCRIPTOR_MIN_LENGTH  = 40
#Else
    Public Const SECURITY_DESCRIPTOR_MIN_LENGTH  = &H14
#End If

Public Enum SECURITY_INFORMATION
	OWNER_SECURITY_INFORMATION  = (&H00000001)
	GROUP_SECURITY_INFORMATION  = (&H00000002)
	DACL_SECURITY_INFORMATION  = (&H00000004)
	SACL_SECURITY_INFORMATION  = (&H00000008)
	LABEL_SECURITY_INFORMATION  = (&H00000010)
	ATTRIBUTE_SECURITY_INFORMATION  = (&H00000020)
	SCOPE_SECURITY_INFORMATION  = (&H00000040)
	PROCESS_TRUST_LABEL_SECURITY_INFORMATION  = (&H00000080)
	ACCESS_FILTER_SECURITY_INFORMATION = (&H00000100)
	BACKUP_SECURITY_INFORMATION  = (&H00010000)
	PROTECTED_DACL_SECURITY_INFORMATION  = (&H80000000)
	PROTECTED_SACL_SECURITY_INFORMATION  = (&H40000000)
	UNPROTECTED_DACL_SECURITY_INFORMATION  = (&H20000000)
	UNPROTECTED_SACL_SECURITY_INFORMATION  = (&H10000000)
End Enum

Public Enum WELL_KNOWN_SID_TYPE
	WinNullSid = 0
	WinWorldSid = 1
	WinLocalSid = 2
	WinCreatorOwnerSid = 3
	WinCreatorGroupSid = 4
	WinCreatorOwnerServerSid = 5
	WinCreatorGroupServerSid = 6
	WinNtAuthoritySid = 7
	WinDialupSid = 8
	WinNetworkSid = 9
	WinBatchSid = 10
	WinInteractiveSid = 11
	WinServiceSid = 12
	WinAnonymousSid = 13
	WinProxySid = 14
	WinEnterpriseControllersSid = 15
	WinSelfSid = 16
	WinAuthenticatedUserSid = 17
	WinRestrictedCodeSid = 18
	WinTerminalServerSid = 19
	WinRemoteLogonIdSid = 20
	WinLogonIdsSid = 21
	WinLocalSystemSid = 22
	WinLocalServiceSid = 23
	WinNetworkServiceSid = 24
	WinBuiltinDomainSid = 25
	WinBuiltinAdministratorsSid = 26
	WinBuiltinUsersSid = 27
	WinBuiltinGuestsSid = 28
	WinBuiltinPowerUsersSid = 29
	WinBuiltinAccountOperatorsSid = 30
	WinBuiltinSystemOperatorsSid = 31
	WinBuiltinPrintOperatorsSid = 32
	WinBuiltinBackupOperatorsSid = 33
	WinBuiltinReplicatorSid = 34
	WinBuiltinPreWindows2000CompatibleAccessSid = 35
	WinBuiltinRemoteDesktopUsersSid = 36
	WinBuiltinNetworkConfigurationOperatorsSid = 37
	WinAccountAdministratorSid = 38
	WinAccountGuestSid = 39
	WinAccountKrbtgtSid = 40
	WinAccountDomainAdminsSid = 41
	WinAccountDomainUsersSid = 42
	WinAccountDomainGuestsSid = 43
	WinAccountComputersSid = 44
	WinAccountControllersSid = 45
	WinAccountCertAdminsSid = 46
	WinAccountSchemaAdminsSid = 47
	WinAccountEnterpriseAdminsSid = 48
	WinAccountPolicyAdminsSid = 49
	WinAccountRasAndIasServersSid = 50
	WinNTLMAuthenticationSid = 51
	WinDigestAuthenticationSid = 52
	WinSChannelAuthenticationSid = 53
	WinThisOrganizationSid = 54
	WinOtherOrganizationSid = 55
	WinBuiltinIncomingForestTrustBuildersSid = 56
	WinBuiltinPerfMonitoringUsersSid = 57
	WinBuiltinPerfLoggingUsersSid = 58
	WinBuiltinAuthorizationAccessSid = 59
	WinBuiltinTerminalServerLicenseServersSid = 60
	WinBuiltinDCOMUsersSid = 61
	WinBuiltinIUsersSid = 62
	WinIUserSid = 63
	WinBuiltinCryptoOperatorsSid = 64
	WinUntrustedLabelSid = 65
	WinLowLabelSid = 66
	WinMediumLabelSid = 67
	WinHighLabelSid = 68
	WinSystemLabelSid = 69
	WinWriteRestrictedCodeSid = 70
	WinCreatorOwnerRightsSid = 71
	WinCacheablePrincipalsGroupSid = 72
	WinNonCacheablePrincipalsGroupSid = 73
	WinEnterpriseReadonlyControllersSid = 74
	WinAccountReadonlyControllersSid = 75
	WinBuiltinEventLogReadersGroup = 76
	WinNewEnterpriseReadonlyControllersSid = 77
	WinBuiltinCertSvcDComAccessGroup = 78
	WinMediumPlusLabelSid = 79
	WinLocalLogonSid = 80
	WinConsoleLogonSid = 81
	WinThisOrganizationCertificateSid = 82
	WinApplicationPackageAuthoritySid = 83
	WinBuiltinAnyPackageSid = 84
	WinCapabilityInternetClientSid = 85
	WinCapabilityInternetClientServerSid = 86
	WinCapabilityPrivateNetworkClientServerSid = 87
	WinCapabilityPicturesLibrarySid = 88
	WinCapabilityVideosLibrarySid = 89
	WinCapabilityMusicLibrarySid = 90
	WinCapabilityDocumentsLibrarySid = 91
	WinCapabilitySharedUserCertificatesSid = 92
	WinCapabilityEnterpriseAuthenticationSid = 93
	WinCapabilityRemovableStorageSid = 94
	WinBuiltinRDSRemoteAccessServersSid = 95
	WinBuiltinRDSEndpointServersSid = 96
	WinBuiltinRDSManagementServersSid = 97
	WinUserModeDriversSid = 98
	WinBuiltinHyperVAdminsSid = 99
	WinAccountCloneableControllersSid = 100
	WinBuiltinAccessControlAssistanceOperatorsSid = 101
	WinBuiltinRemoteManagementUsersSid = 102
	WinAuthenticationAuthorityAssertedSid = 103
	WinAuthenticationServiceAssertedSid = 104
	WinLocalAccountSid = 105
	WinLocalAccountAndAdministratorSid = 106
	WinAccountProtectedUsersSid = 107
	WinCapabilityAppointmentsSid = 108
	WinCapabilityContactsSid = 109
	WinAccountDefaultSystemManagedSid = 110
	WinBuiltinDefaultSystemManagedGroupSid = 111
	WinBuiltinStorageReplicaAdminsSid = 112
	WinAccountKeyAdminsSid = 113
	WinAccountEnterpriseKeyAdminsSid = 114
	WinAuthenticationKeyTrustSid = 115
	WinAuthenticationKeyPropertyMFASid = 116
	WinAuthenticationKeyPropertyAttestationSid = 117
	WinAuthenticationFreshKeyAuthSid = 118
	WinBuiltinDeviceOwnersSid = 119
End Enum

Public Declare PtrSafe Function OpenEventLogA Lib "advapi32" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public DeclareWide PtrSafe Function OpenEventLogW Lib "advapi32" (ByVal lpUNCServerName As LongPtr, ByVal lpSourceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenEventLog Lib "advapi32" Alias "OpenEventLogW" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function RegisterEventSourceA Lib "advapi32" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public DeclareWide PtrSafe Function RegisterEventSourceW Lib "advapi32" (ByVal lpUNCServerName As LongPtr, ByVal lpSourceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RegisterEventSource Lib "advapi32" Alias "RegisterEventSourceW" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public DeclareWide PtrSafe Function GetOldestEventLogRecord Lib "advapi32" (ByVal hEventLog As LongPtr, OldestRecord As Long) As BOOL
Public DeclareWide PtrSafe Function GetNumberOfEventLogRecords Lib "advapi32" (ByVal hEventLog As LongPtr, NumberOfRecords As Long) As BOOL
Public DeclareWide PtrSafe Function DeregisterEventSource Lib "advapi32" (ByVal hEventLog As LongPtr) As BOOL
Public DeclareWide PtrSafe Function NotifyChangeEventLog Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal hEvent As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CloseEventLog Lib "advapi32" (ByVal hEventLog As LongPtr) As BOOL
Public Declare PtrSafe Function BackupEventLogA Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal lpBackupFileName As String) As BOOL
Public DeclareWide PtrSafe Function BackupEventLogW Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal lpBackupFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function BackupEventLog Lib "advapi32" Alias "BackupEventLogW" (ByVal hEventLog As LongPtr, ByVal lpBackupFileName As String) As BOOL
Public Declare PtrSafe Function ClearEventLogA Lib "advapi32" (ByVal hEventLog As LongPtr, Optional ByVal lpBackupFileName As String) As BOOL
Public DeclareWide PtrSafe Function ClearEventLogW Lib "advapi32" (ByVal hEventLog As LongPtr, Optional ByVal lpBackupFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ClearEventLog Lib "advapi32" Alias "ClearEventLogW" (ByVal hEventLog As LongPtr, Optional ByVal lpBackupFileName As String) As BOOL
Public Declare PtrSafe Function OpenBackupEventLogA Lib "advapi32" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public DeclareWide PtrSafe Function OpenBackupEventLogW Lib "advapi32" (ByVal lpUNCServerName As LongPtr, ByVal lpSourceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenBackupEventLog Lib "advapi32" Alias "OpenBackupEventLogW" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public DeclareWide PtrSafe Function ReadEventLogW Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal dwReadFlags As EventLogReadFlags, ByVal dwRecordOffset As Long, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, pnBytesRead As Long, pnMinNumberOfBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function ReadEventLog Lib "advapi32" Alias "ReadEventLogW" (ByVal hEventLog As LongPtr, ByVal dwReadFlags As EventLogReadFlags, ByVal dwRecordOffset As Long, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, pnBytesRead As Long, pnMinNumberOfBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function ReportEventA Lib "advapi32" (ByVal hEventLog As LongPtr, [TypeHint(EventLogTypes) ] ByVal wType As Integer, ByVal wCategory As Integer, ByVal dwEventID As Long, ByVal lpUserSid As LongPtr, ByVal wNumStrings As Long, ByVal dwDataSize As Long, Optional lpStrings As Any, Optional lpRawData As Any) As BOOL
Public DeclareWide PtrSafe Function ReportEventW Lib "advapi32" (ByVal hEventLog As LongPtr, [TypeHint(EventLogTypes)] ByVal wType As Integer, ByVal wCategory As Integer, ByVal dwEventID As Long, ByVal lpUserSid As LongPtr, ByVal wNumStrings As Long, ByVal dwDataSize As Long, Optional lpStrings As Any, Optional lpRawData As Any) As BOOL
Public DeclareWide PtrSafe Function ReportEvent Lib "advapi32" Alias "ReportEventW" (ByVal hEventLog As LongPtr, [TypeHint(EventLogTypes) ] ByVal wType As Integer, ByVal wCategory As Integer, ByVal dwEventID As Long, ByVal lpUserSid As LongPtr, ByVal wNumStrings As Long, ByVal dwDataSize As Long, Optional lpStrings As Any, Optional lpRawData As Any) As BOOL
Public DeclareWide PtrSafe Function GetEventLogInformation Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal dwInfoLevel As EventLogInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Enum EventLogInfoLevels
    EVENTLOG_FULL_INFO     = 0	
End Enum
Public Type EVENTLOG_FULL_INFORMATION
	dwFull As Long
End Type
Public Enum EventLogReadFlags
	EVENTLOG_SEQUENTIAL_READ  = &H0001
	EVENTLOG_SEEK_READ  = &H0002
	EVENTLOG_FORWARDS_READ = &H0004
	EVENTLOG_BACKWARDS_READ  = &H0008
End Enum
Public Enum EventLogTypes
	EVENTLOG_SUCCESS  = &H0000
	EVENTLOG_ERROR_TYPE  = &H0001
	EVENTLOG_WARNING_TYPE  = &H0002
	EVENTLOG_INFORMATION_TYPE  = &H0004
	EVENTLOG_AUDIT_SUCCESS  = &H0008
	EVENTLOG_AUDIT_FAILURE  = &H0010
End Enum
Public Enum EventLogWriteFlags
	EVENTLOG_START_PAIRED_EVENT  = &H0001
	EVENTLOG_END_PAIRED_EVENT  = &H0002
	EVENTLOG_END_ALL_PAIRED_EVENTS  = &H0004
	EVENTLOG_PAIRED_EVENT_ACTIVE = &H0008
	EVENTLOG_PAIRED_EVENT_INACTIVE  = &H0010
End Enum
Public Type EVENTLOGRECORD
	Length As Long ' Length of full record
	Reserved As Long ' Used by the service
	RecordNumber As Long ' Absolute record number
	TimeGenerated As Long ' Seconds since 1-1-1970
	TimeWritten As Long ' Seconds since 1-1-1970
	EventID As Long
	EventType As Integer
	NumStrings As Integer
	EventCategory As Integer
	ReservedFlags As Integer ' For use with paired events (auditing)
	ClosingRecordNumber As Long ' For use with paired events (auditing)
	StringOffset As Long ' Offset from beginning of record
	UserSidLength As Long
	UserSidOffset As Long
	DataLength As Long
	DataOffset As Long ' Offset from beginning of record
	' Then follow:
	' WCHAR SourceName[]
	' WCHAR Computername[]
	' SID   UserSid
	' WCHAR Strings[]
	' BYTE  Data[]
	' CHAR  Pad[]
	' DWORD Length;
End Type
Public Const MAXLOGICALLOGNAMESIZE = 256
Public Type EVENTSFORLOGFILE
	ulSize As Long
	szLogicalLogFile(0 To (MAXLOGICALLOGNAMESIZE - 1)) As Integer 'name of the logical file-security/application/system
	ulNumRecords As Long
	pEventLogRecords(0) As EVENTLOGRECORD
End Type
Public Type PACKEDEVENTINFO
	ulSize As Long 'total size of the structure
	ulNumEventsForLogFile As Long 'number of EventsForLogFile structure that follow
	ulOffsets(0) As Long 'the offsets from the start of this structure to the EVENTSFORLOGFILE structure
End Type


Public DeclareWide PtrSafe Function CryptAcquireContext Lib "advapi32" Alias "CryptAcquireContextW" (hProv As LongPtr, ByVal pszContainer As String, ByVal pszProvider As String, ByVal dwProvType As Crypt_Providers, ByVal dwFlags As Crypt_AC_Flags) As BOOL
Public DeclareWide PtrSafe Function CryptAcquireContextW Lib "advapi32" (hProv As LongPtr, ByVal pszContainer As LongPtr, ByVal pszProvider As LongPtr, ByVal dwProvType As Crypt_Providers, ByVal dwFlags As Crypt_AC_Flags) As BOOL
Public Declare PtrSafe Function CryptReleaseContext Lib "advapi32" (ByVal hProv As LongPtr, ByVal dwFlags As Long) As BOOL
Public Declare PtrSafe Function CryptGenRandom Lib "advapi32" (ByVal hProv As LongPtr, ByVal dwLen As Long, pbBuffer As Any) As BOOL
Public Declare PtrSafe Function CryptGenKey Lib "advapi32" (ByVal hProv As LongPtr, ByVal Algid As ALG_ID, ByVal dwFlags As CryptKeyFlags, phkey As LongPtr) As BOOL
Public Declare PtrSafe Function CryptCreateHash Lib "advapi32" (ByVal hProv As LongPtr, ByVal Algid As ALG_ID, ByVal hKey As LongPtr, ByVal dwFlags As CryptCreateHashFlags, phHash As LongPtr) As BOOL
Public Declare PtrSafe Function CryptDestroyHash Lib "advapi32" (ByVal hHash As LongPtr) As BOOL
Public Declare PtrSafe Function CryptHashData Lib "advapi32" (ByVal hHash As LongPtr, pbData As Any, ByVal dwDataLen As Long, ByVal dwFlags As CryptHashDataFlags) As BOOL
Public Declare PtrSafe Function CryptGetHashParam Lib "advapi32" (ByVal hHash As LongPtr, ByVal dwParam As CryptHashParams, pbData As Any, ByRef pcbData As Long, ByVal dwFlags As Long) As BOOL
Public Declare PtrSafe Function CryptSetHashParam Lib "advapi32" (ByVal hHash As LongPtr, ByVal dwParam As CryptHashParams, pbData As Any, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function CryptImportKey Lib "advapi32" (ByVal hProv As LongPtr, pbData As Any, ByVal dwDataLen As Long, ByVal hPubKey As LongPtr, ByVal dwFlags As CryptKeyFlags, phKey As LongPtr) As Long
Public Declare PtrSafe Function CryptDeriveKey Lib "advapi32" (ByVal hProv As LongPtr, ByVal Algid As ALG_ID, ByVal hBaseData As LongPtr, ByVal dwFlags As CryptKeyFlags, ByRef phKey As LongPtr) As Long
Public Declare PtrSafe Function CryptDestroyKey Lib "advapi32" (ByVal hKey As LongPtr) As Long
Public Declare PtrSafe Function CryptEncrypt Lib "advapi32" _
    (ByVal hKey As LongPtr, ByVal hHash As LongPtr, ByVal Final As BOOL, ByVal dwFlags As Long, _
     pbData As Any, pdwDataLen As Long, ByVal dwBufLen As Long) As BOOL

Public Declare PtrSafe Function CryptDecrypt Lib "advapi32" _
                                    (ByVal hKey As LongPtr, _
                                    ByVal hHash As LongPtr, _
                                    ByVal Final As BOOL, _
                                    ByVal dwFlags As Long, _
                                    pbData As Any, _
                                    pdwDataLen As Long) As BOOL

Public Declare PtrSafe Function CryptGetProvParam Lib "advapi32" _
    (ByVal hProv As LongPtr, _
     ByVal dwParam As CryptProvParams, _
     ByRef pbData As Any, _
     ByRef pdwDataLen As Long, _
     ByVal dwFlags As Long) As Long

Public Const CRYPT_DECRYPT_RSA_NO_PADDING_CHECK = &H20
Public Const CRYPT_OAEP = &H40

#End Region


#Region "setupapi"

Public Enum SetupApiErrorCodes
	ERROR_EXPECTED_SECTION_NAME  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 0)
	ERROR_BAD_SECTION_NAME_LINE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 1)
	ERROR_SECTION_NAME_TOO_LONG  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 2)
	ERROR_GENERAL_SYNTAX  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 3)
	ERROR_WRONG_INF_STYLE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H100)
	ERROR_SECTION_NOT_FOUND  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H101)
	ERROR_LINE_NOT_FOUND  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H102)
	ERROR_NO_BACKUP  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H103)
	ERROR_NO_ASSOCIATED_CLASS  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H200)
	ERROR_CLASS_MISMATCH  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H201)
	ERROR_DUPLICATE_FOUND  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H202)
	ERROR_NO_DRIVER_SELECTED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H203)
	ERROR_KEY_DOES_NOT_EXIST  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H204)
	ERROR_INVALID_DEVINST_NAME  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H205)
	ERROR_INVALID_CLASS  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H206)
	ERROR_DEVINST_ALREADY_EXISTS  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H207)
	ERROR_DEVINFO_NOT_REGISTERED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H208)
	ERROR_INVALID_REG_PROPERTY  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H209)
	ERROR_NO_INF  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20A)
	ERROR_NO_SUCH_DEVINST  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20B)
	ERROR_CANT_LOAD_CLASS_ICON  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20C)
	ERROR_INVALID_CLASS_INSTALLER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20D)
	ERROR_DI_DO_DEFAULT  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20E)
	ERROR_DI_NOFILECOPY  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20F)
	ERROR_INVALID_HWPROFILE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H210)
	ERROR_NO_DEVICE_SELECTED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H211)
	ERROR_DEVINFO_LIST_LOCKED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H212)
	ERROR_DEVINFO_DATA_LOCKED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H213)
	ERROR_DI_BAD_PATH  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H214)
	ERROR_NO_CLASSINSTALL_PARAMS  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H215)
	ERROR_FILEQUEUE_LOCKED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H216)
	ERROR_BAD_SERVICE_INSTALLSECT  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H217)
	ERROR_NO_CLASS_DRIVER_LIST  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H218)
	ERROR_NO_ASSOCIATED_SERVICE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H219)
	ERROR_NO_DEFAULT_DEVICE_INTERFACE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21A)
	ERROR_DEVICE_INTERFACE_ACTIVE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21B)
	ERROR_DEVICE_INTERFACE_REMOVED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21C)
	ERROR_BAD_INTERFACE_INSTALLSECT  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21D)
	ERROR_NO_SUCH_INTERFACE_CLASS  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21E)
	ERROR_INVALID_REFERENCE_STRING  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21F)
	ERROR_INVALID_MACHINENAME  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H220)
	ERROR_REMOTE_COMM_FAILURE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H221)
	ERROR_MACHINE_UNAVAILABLE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H222)
	ERROR_NO_CONFIGMGR_SERVICES  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H223)
	ERROR_INVALID_PROPPAGE_PROVIDER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H224)
	ERROR_NO_SUCH_DEVICE_INTERFACE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H225)
	ERROR_DI_POSTPROCESSING_REQUIRED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H226)
	ERROR_INVALID_COINSTALLER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H227)
	ERROR_NO_COMPAT_DRIVERS  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H228)
	ERROR_NO_DEVICE_ICON  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H229)
	ERROR_INVALID_INF_LOGCONFIG  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22A)
	ERROR_DI_DONT_INSTALL  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22B)
	ERROR_INVALID_FILTER_DRIVER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22C)
	ERROR_NON_WINDOWS_NT_DRIVER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22D)
	ERROR_NON_WINDOWS_DRIVER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22E)
	ERROR_NO_CATALOG_FOR_OEM_INF  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22F)
	ERROR_DEVINSTALL_QUEUE_NONNATIVE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H230)
	ERROR_NOT_DISABLEABLE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H231)
	ERROR_CANT_REMOVE_DEVINST  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H232)
	ERROR_INVALID_TARGET  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H233)
	ERROR_DRIVER_NONNATIVE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H234)
	ERROR_IN_WOW64  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H235)
	ERROR_SET_SYSTEM_RESTORE_POINT  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H236)
	ERROR_SCE_DISABLED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H238)
	ERROR_UNKNOWN_EXCEPTION  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H239)
	ERROR_PNP_REGISTRY_ERROR  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23A)
	ERROR_REMOTE_REQUEST_UNSUPPORTED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23B)
	ERROR_NOT_AN_INSTALLED_OEM_INF  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23C)
	ERROR_INF_IN_USE_BY_DEVICES  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23D)
	ERROR_DI_FUNCTION_OBSOLETE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23E)
	ERROR_NO_AUTHENTICODE_CATALOG  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23F)
	ERROR_AUTHENTICODE_DISALLOWED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H240)
	ERROR_AUTHENTICODE_TRUSTED_PUBLISHER  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H241)
	ERROR_AUTHENTICODE_TRUST_NOT_ESTABLISHED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H242)
	ERROR_AUTHENTICODE_PUBLISHER_NOT_TRUSTED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H243)
	ERROR_SIGNATURE_OSATTRIBUTE_MISMATCH  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H244)
	ERROR_ONLY_VALIDATE_VIA_AUTHENTICODE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H245)
	ERROR_DEVICE_INSTALLER_NOT_READY  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H246)
	ERROR_DRIVER_STORE_ADD_FAILED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H247)
	ERROR_DEVICE_INSTALL_BLOCKED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H248)
	ERROR_DRIVER_INSTALL_BLOCKED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H249)
	ERROR_WRONG_INF_TYPE  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H24A)
	ERROR_FILE_HASH_NOT_IN_CATALOG  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H24B)
	ERROR_DRIVER_STORE_DELETE_FAILED  = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H24C)
    ERROR_UNRECOVERABLE_STACK_OVERFLOW = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H300)
End Enum

Public Enum Setup_KeyType
	DIREG_DEV  = &H00000001  ' Open/Create/Delete device key
	DIREG_DRV  = &H00000002  ' Open/Create/Delete driver key
	DIREG_BOTH  = &H00000004  ' Delete both driver and Device key
End Enum
Public Enum Setup_DIGCF
	DIGCF_DEFAULT  = &H00000001  ' only valid with DIGCF_DEVICEINTERFACE
	DIGCF_PRESENT  = &H00000002
	DIGCF_ALLCLASSES  = &H00000004
	DIGCF_PROFILE  = &H00000008
	DIGCF_DEVICEINTERFACE  = &H00000010
End Enum

Public Type SP_DEVINFO_DATA
	cbSize As Long
	ClassGuid As UUID
	DevInst As Long
	Reserved As LongPtr
End Type

Public Enum SetupDevIfaceDataFlags
	SPINT_ACTIVE  = &H00000001
	SPINT_DEFAULT  = &H00000002
	SPINT_REMOVED  = &H00000004
End Enum
Public Type SP_DEVICE_INTERFACE_DATA
	cbSize As Long
	InterfaceClassGuid As UUID
	Flags As SetupDevIfaceDataFlags
	Reserved As LongPtr
End Type

Public Enum Setup_DICSF
	DICS_FLAG_GLOBAL  = &H00000001  ' make change in all hardware profiles
	DICS_FLAG_CONFIGSPECIFIC  = &H00000002  ' make change in specified profile only
	DICS_FLAG_CONFIGGENERAL  = &H00000004  ' 1 or more hardware profile-specific
'  changes to follow.
End Enum


Public Enum DI_FUNCTION
	DIF_SELECTDEVICE  = &H00000001
	DIF_INSTALLDEVICE  = &H00000002
	DIF_ASSIGNRESOURCES  = &H00000003
	DIF_PROPERTIES  = &H00000004
	DIF_REMOVE  = &H00000005
	DIF_FIRSTTIMESETUP  = &H00000006
	DIF_FOUNDDEVICE  = &H00000007
	DIF_SELECTCLASSDRIVERS  = &H00000008
	DIF_VALIDATECLASSDRIVERS  = &H00000009
	DIF_INSTALLCLASSDRIVERS  = &H0000000A
	DIF_CALCDISKSPACE = &H0000000B
	DIF_DESTROYPRIVATEDATA  = &H0000000C
	DIF_VALIDATEDRIVER  = &H0000000D
    DIF_MOVEDEVICE = &H0000000E
	DIF_DETECT  = &H0000000F
	DIF_INSTALLWIZARD  = &H00000010
	DIF_DESTROYWIZARDDATA  = &H00000011
	DIF_PROPERTYCHANGE  = &H00000012
	DIF_ENABLECLASS  = &H00000013
	DIF_DETECTVERIFY  = &H00000014
	DIF_INSTALLDEVICEFILES  = &H00000015
	DIF_UNREMOVE  = &H00000016
	DIF_SELECTBESTCOMPATDRV  = &H00000017
	DIF_ALLOW_INSTALL  = &H00000018
	DIF_REGISTERDEVICE  = &H00000019
	DIF_NEWDEVICEWIZARD_PRESELECT  = &H0000001A
	DIF_NEWDEVICEWIZARD_SELECT  = &H0000001B
	DIF_NEWDEVICEWIZARD_PREANALYZE  = &H0000001C
	DIF_NEWDEVICEWIZARD_POSTANALYZE  = &H0000001D
	DIF_NEWDEVICEWIZARD_FINISHINSTALL  = &H0000001E
	DIF_UNUSED1  = &H0000001F
	DIF_INSTALLINTERFACES  = &H00000020
	DIF_DETECTCANCEL  = &H00000021
	DIF_REGISTER_COINSTALLERS  = &H00000022
	DIF_ADDPROPERTYPAGE_ADVANCED  = &H00000023
	DIF_ADDPROPERTYPAGE_BASIC  = &H00000024
	DIF_RESERVED1  = &H00000025
	DIF_TROUBLESHOOTER  = &H00000026
	DIF_POWERMESSAGEWAKE  = &H00000027
	DIF_ADDREMOTEPROPERTYPAGE_ADVANCED  = &H00000028
	DIF_UPDATEDRIVER_UI  = &H00000029
	DIF_FINISHINSTALL_ACTION  = &H0000002A
	DIF_RESERVED2  = &H00000030
End Enum

Public Type SP_CLASSINSTALL_HEADER
	cbSize As Long
	InstallFunction As DI_FUNCTION
End Type

Public Enum SetupDeviceStateChange
	DICS_ENABLE  = &H00000001
	DICS_DISABLE  = &H00000002
	DICS_PROPCHANGE  = &H00000003
	DICS_START  = &H00000004
	DICS_STOP  = &H00000005
End Enum

Public Type SP_PROPCHANGE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	StateChange As SetupDeviceStateChange
	Scope As Setup_DICSF
	HwProfile As Long
End Type

Public Enum SetupRemDeviceScope
	DI_REMOVEDEVICE_GLOBAL  = &H00000001
	DI_REMOVEDEVICE_CONFIGSPECIFIC  = &H00000002
End Enum
Public Type SP_REMOVEDEVICE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	Scope As SetupRemDeviceScope
	HwProfile As Long
End Type
Public Enum SetupUnRemDeviceScope
	DI_UNREMOVEDEVICE_CONFIGSPECIFIC = &H00000002
End Enum
Public Type SP_UNREMOVEDEVICE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	Scope As SetupUnRemDeviceScope
	HwProfile As Long
End Type

Public Type SP_DETECTDEVICE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	DetectProgressNotify As LongPtr
	ProgressNotifyParam As LongPtr
End Type

Public Type SP_CLASSIMAGELIST_DATA
	cbSize As Long
	ImageList As LongPtr
	Reserved As LongPtr
End Type

Public Enum SetupDevInstallFlags
	DI_SHOWOEM = &H00000001  ' support Other... button
	DI_SHOWCOMPAT  = &H00000002  ' show compatibility list
	DI_SHOWCLASS  = &H00000004  ' show class list
	DI_SHOWALL  = &H00000007  ' both class & compat list shown
	DI_NOVCP  = &H00000008  ' don't create a new copy queue--use
'  caller-supplied FileQueue
	DI_DIDCOMPAT  = &H00000010  ' Searched for compatible devices
	DI_DIDCLASS  = &H00000020  ' Searched for class devices
	DI_AUTOASSIGNRES  = &H00000040  ' No UI for resources if possible
'  flags returned by DiInstallDevice to indicate need to reboot/restart
	DI_NEEDRESTART  = &H00000080  ' Reboot required to take effect
	DI_NEEDREBOOT  = &H00000100  ' ""
'  flags for device installation
	DI_NOBROWSE  = &H00000200  ' no Browse... in InsertDisk
'  Flags set by DiBuildDriverInfoList
	DI_MULTMFGS  = &H00000400  ' Set if multiple manufacturers in
'  class driver list
'  Flag indicates that device is disabled
	DI_DISABLED  = &H00000800  ' Set if device disabled
'  Flags for Device/Class Properties
	DI_GENERALPAGE_ADDED  = &H00001000
	DI_RESOURCEPAGE_ADDED  = &H00002000
'  Flag to indicate the setting properties for this Device (or class) caused a change
'  so the Dev Mgr UI probably needs to be updatd.
	DI_PROPERTIES_CHANGE  = &H00004000
'  Flag to indicate that the sorting from the INF file should be used.
	DI_INF_IS_SORTED  = &H00008000&
'  Flag to indicate that only the the INF specified by SP_DEVINSTALL_PARAMS.DriverPath
'  should be searched.
	DI_ENUMSINGLEINF  = &H00010000
'  Flag that prevents ConfigMgr from removing/re-enumerating devices during device
'  registration, installation, and deletion.
	DI_DONOTCALLCONFIGMG  = &H00020000
'  The following flag can be used to install a device disabled
	DI_INSTALLDISABLED  = &H00040000
'  Flag that causes SetupDiBuildDriverInfoList to build a device's compatible driver
'  list from its existing class driver list, instead of the normal INF search.
	DI_COMPAT_FROM_CLASS  = &H00080000
'  This flag is set if the Class Install params should be used.
	DI_CLASSINSTALLPARAMS  = &H00100000
'  This flag is set if the caller of DiCallClassInstaller does NOT
'  want the internal default action performed if the Class installer
'  returns ERROR_DI_DO_DEFAULT.
	DI_NODI_DEFAULTACTION  = &H00200000
'  The setupx flag, DI_NOSYNCPROCESSING (0x00400000L) is not support in the Setup APIs.
'  flags for device installation
	DI_QUIETINSTALL  = &H00800000  ' don't confuse the user with
'  questions or excess info
	DI_NOFILECOPY  = &H01000000  ' No file Copy necessary
	DI_FORCECOPY  = &H02000000  ' Force files to be copied from install path
	DI_DRIVERPAGE_ADDED = &H04000000  ' Prop provider added Driver page.
	DI_USECI_SELECTSTRINGS  = &H08000000  ' Use Class Installer Provided strings in the Select Device Dlg
	DI_OVERRIDE_INFFLAGS  = &H10000000 ' Override INF flags
	DI_PROPS_NOCHANGEUSAGE  = &H20000000  ' No Enable/Disable in General Props
	DI_NOSELECTICONS  = &H40000000  ' No small icons in select device dialogs
	DI_NOWRITE_IDS  = &H80000000  ' Don't write HW & Compat IDs on install
End Enum
Public Enum SetupDevInstallFlagsEx
	DI_FLAGSEX_RESERVED2 = &H00000001  ' DI_FLAGSEX_USEOLDINFSEARCH is obsolete
	DI_FLAGSEX_RESERVED3  = &H00000002  ' DI_FLAGSEX_AUTOSELECTRANK0 is obsolete
	DI_FLAGSEX_CI_FAILED  = &H00000004  ' Failed to Load/Call class installer
	DI_FLAGSEX_FINISHINSTALL_ACTION  = &H00000008  ' Class/co-installer wants to get a DIF_FINISH_INSTALL action in client context.
	DI_FLAGSEX_DIDINFOLIST  = &H00000010  ' Did the Class Info List
	DI_FLAGSEX_DIDCOMPATINFO = &H00000020  ' Did the Compat Info List
	DI_FLAGSEX_FILTERCLASSES  = &H00000040
	DI_FLAGSEX_SETFAILEDINSTALL  = &H00000080
	DI_FLAGSEX_DEVICECHANGE  = &H00000100
	DI_FLAGSEX_ALWAYSWRITEIDS  = &H00000200
	DI_FLAGSEX_PROPCHANGE_PENDING  = &H00000400  ' One or more device property sheets have had changes made
'  to them, and need to have a DIF_PROPERTYCHANGE occur.
	DI_FLAGSEX_ALLOWEXCLUDEDDRVS  = &H00000800
	DI_FLAGSEX_NOUIONQUERYREMOVE  = &H00001000
	DI_FLAGSEX_USECLASSFORCOMPAT  = &H00002000  ' Use the device's class when building compat drv list.
'  (Ignored if DI_COMPAT_FROM_CLASS flag is specified.)
	DI_FLAGSEX_RESERVED4  = &H00004000  ' DI_FLAGSEX_OLDINF_IN_CLASSLIST is obsolete
	DI_FLAGSEX_NO_DRVREG_MODIFY  = &H00008000&  ' Don't run AddReg and DelReg for device's software (driver) key.
	DI_FLAGSEX_IN_SYSTEM_SETUP  = &H00010000  ' Installation is occurring during initial system setup.
	DI_FLAGSEX_INET_DRIVER  = &H00020000  ' Driver came from Windows Update
	DI_FLAGSEX_APPENDDRIVERLIST  = &H00040000  ' Cause SetupDiBuildDriverInfoList to append
'  a new driver list to an existing list.
	DI_FLAGSEX_PREINSTALLBACKUP  = &H00080000  ' not used
	DI_FLAGSEX_BACKUPONREPLACE  = &H00100000  ' not used
	DI_FLAGSEX_DRIVERLIST_FROM_URL  = &H00200000  ' build driver list from INF(s) retrieved from URL specified
'  in SP_DEVINSTALL_PARAMS.DriverPath (empty string means
'  Windows Update website)
	DI_FLAGSEX_RESERVED1  = &H00400000
	DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS  = &H00800000  ' Don't include old Internet drivers when building
'  a driver list.
'  Ignored on Windows Vista and later.
	DI_FLAGSEX_POWERPAGE_ADDED  = &H01000000  ' class installer added their own power page
	DI_FLAGSEX_FILTERSIMILARDRIVERS  = &H02000000  ' only include similar drivers in class list
	DI_FLAGSEX_INSTALLEDDRIVER  = &H04000000  ' only add the installed driver to the class or compat
'  driver list.  Used in calls to SetupDiBuildDriverInfoList
	DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE  = &H08000000  ' Don't remove identical driver nodes from the class list
	DI_FLAGSEX_ALTPLATFORM_DRVSEARCH  = &H10000000  ' Build driver list based on alternate platform information
'  specified in associated file queue
	DI_FLAGSEX_RESTART_DEVICE_ONLY = &H20000000  ' only restart the device drivers are being installed on as
'  opposed to restarting all devices using those drivers.
	DI_FLAGSEX_RECURSIVESEARCH  = &H40000000  ' Tell SetupDiBuildDriverInfoList to do a recursive search
	DI_FLAGSEX_SEARCH_PUBLISHED_INFS  = &H80000000  ' Tell SetupDiBuildDriverInfoList to do a "published INF" search
End Enum

Public Type SP_DEVINSTALL_PARAMS_W
	cbSize As Long
	Flags As SetupDevInstallFlags
	FlagsEx As SetupDevInstallFlagsEx
	hwndParent As LongPtr
	InstallMsgHandler As LongPtr
	InstallMsgHandlerContext As LongPtr
	FileQueue As LongPtr
	ClassInstallReserved As LongPtr
	Reserved As Long
	DriverPath(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type SP_DEVINSTALL_PARAMS
    cbSize As Long
    Flags As SetupDevInstallFlags
    FlagsEx As SetupDevInstallFlagsEx
    hwndParent As LongPtr
    InstallMsgHandler As LongPtr
    InstallMsgHandlerContext As LongPtr
    FileQueue As LongPtr
    ClassInstallReserved As LongPtr
    Reserved As Long
    DriverPath(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum SetupClassListFlags
	DIBCI_NOINSTALLCLASS  = &H00000001
	DIBCI_NODISPLAYCLASS  = &H00000002
End Enum

Public Type SP_DEVICE_INTERFACE_DETAIL_DATA_W
	cbSize As Long
	DevicePath(0) As Integer
End Type

Public Enum SetupDevPropType
	DEVPROP_TYPEMOD_ARRAY  = &H00001000  ' array of fixed-sized data elements
	DEVPROP_TYPEMOD_LIST  = &H00002000  ' list of variable-sized data elements
'  Property data types.
	DEVPROP_TYPE_EMPTY  = &H00000000  ' nothing, no property data
	DEVPROP_TYPE_NULL  = &H00000001  ' null property data
	DEVPROP_TYPE_SBYTE  = &H00000002  ' 8-bit signed int (SBYTE)
	DEVPROP_TYPE_BYTE  = &H00000003  ' 8-bit unsigned int (BYTE)
	DEVPROP_TYPE_INT16  = &H00000004  ' 16-bit signed int (SHORT)
	DEVPROP_TYPE_UINT16  = &H00000005  ' 16-bit unsigned int (USHORT)
	DEVPROP_TYPE_INT32  = &H00000006  ' 32-bit signed int (LONG)
	DEVPROP_TYPE_UINT32  = &H00000007  ' 32-bit unsigned int (ULONG)
	DEVPROP_TYPE_INT64  = &H00000008  ' 64-bit signed int (LONG64)
	DEVPROP_TYPE_UINT64  = &H00000009  ' 64-bit unsigned int (ULONG64)
	DEVPROP_TYPE_FLOAT  = &H0000000A  ' 32-bit floating-point (FLOAT)
	DEVPROP_TYPE_DOUBLE  = &H0000000B  ' 64-bit floating-point (DOUBLE)
	DEVPROP_TYPE_DECIMAL  = &H0000000C  ' 128-bit data (DECIMAL)
	DEVPROP_TYPE_GUID  = &H0000000D  ' 128-bit unique identifier (GUID)
	DEVPROP_TYPE_CURRENCY  = &H0000000E  ' 64 bit signed int currency value (CURRENCY)
	DEVPROP_TYPE_DATE  = &H0000000F  ' date (DATE)
	DEVPROP_TYPE_FILETIME  = &H00000010  ' file time (FILETIME)
	DEVPROP_TYPE_BOOLEAN  = &H00000011  ' 8-bit boolean (DEVPROP_BOOLEAN)
	DEVPROP_TYPE_STRING  = &H00000012  ' null-terminated string
	DEVPROP_TYPE_STRING_LIST  = (DEVPROP_TYPE_STRING Or DEVPROP_TYPEMOD_LIST)  ' multi-sz string list
	DEVPROP_TYPE_SECURITY_DESCRIPTOR  = &H00000013  ' self-relative binary SECURITY_DESCRIPTOR
	DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING  = &H00000014  ' security descriptor string (SDDL format)
	DEVPROP_TYPE_DEVPROPKEY  = &H00000015  ' device property key (DEVPROPKEY)
	DEVPROP_TYPE_DEVPROPTYPE  = &H00000016  ' device property type (DEVPROPTYPE)
	DEVPROP_TYPE_BINARY  = (DEVPROP_TYPE_BYTE Or DEVPROP_TYPEMOD_ARRAY)  ' custom binary data
	DEVPROP_TYPE_ERROR  = &H00000017  ' 32-bit Win32 system error code
	DEVPROP_TYPE_NTSTATUS  = &H00000018  ' 32-bit NTSTATUS code
	DEVPROP_TYPE_STRING_INDIRECT  = &H00000019  ' string resource (@[path\]<dllname>,-<strId>)
End Enum

Public Enum SetupDICDFlags
	DICD_GENERATE_ID  = &H00000001
	DICD_INHERIT_CLASSDRVS  = &H00000002
End Enum

Public Enum SetupDevRegProps
	SPDRP_DEVICEDESC  = (&H00000000)  ' DeviceDesc (R/W)
	SPDRP_HARDWAREID  = (&H00000001)  ' HardwareID (R/W)
	SPDRP_COMPATIBLEIDS  = (&H00000002)  ' CompatibleIDs (R/W)
	SPDRP_UNUSED0  = (&H00000003)  ' unused
	SPDRP_SERVICE  = (&H00000004)  ' Service (R/W)
	SPDRP_UNUSED1  = (&H00000005)  ' unused
	SPDRP_UNUSED2  = (&H00000006)  ' unused
	SPDRP_CLASS  = (&H00000007)  ' Class (R--tied to ClassGUID)
	SPDRP_CLASSGUID  = (&H00000008)  ' ClassGUID (R/W)
	SPDRP_DRIVER  = (&H00000009)  ' Driver (R/W)
	SPDRP_CONFIGFLAGS  = (&H0000000A)  ' ConfigFlags (R/W)
	SPDRP_MFG  = (&H0000000B)  ' Mfg (R/W)
	SPDRP_FRIENDLYNAME  = (&H0000000C)  ' FriendlyName (R/W)
	SPDRP_LOCATION_INFORMATION  = (&H0000000D)  ' LocationInformation (R/W)
	SPDRP_PHYSICAL_DEVICE_OBJECT_NAME  = (&H0000000E)  ' PhysicalDeviceObjectName (R)
	SPDRP_CAPABILITIES  = (&H0000000F)  ' Capabilities (R)
	SPDRP_UI_NUMBER  = (&H00000010)  ' UiNumber (R)
	SPDRP_UPPERFILTERS  = (&H00000011)  ' UpperFilters (R/W)
	SPDRP_LOWERFILTERS  = (&H00000012)  ' LowerFilters (R/W)
	SPDRP_BUSTYPEGUID  = (&H00000013)  ' BusTypeGUID (R)
	SPDRP_LEGACYBUSTYPE  = (&H00000014)  ' LegacyBusType (R)
	SPDRP_BUSNUMBER  = (&H00000015)  ' BusNumber (R)
	SPDRP_ENUMERATOR_NAME  = (&H00000016)  ' Enumerator Name (R)
	SPDRP_SECURITY  = (&H00000017)  ' Security (R/W, binary form)
	SPDRP_SECURITY_SDS  = (&H00000018)  ' Security (W, SDS form)
	SPDRP_DEVTYPE  = (&H00000019)  ' Device Type (R/W)
	SPDRP_EXCLUSIVE  = (&H0000001A)  ' Device is exclusive-access (R/W)
	SPDRP_CHARACTERISTICS  = (&H0000001B)  ' Device Characteristics (R/W)
	SPDRP_ADDRESS  = (&H0000001C)  ' Device Address (R)
	SPDRP_UI_NUMBER_DESC_FORMAT = (&H0000001D)  ' UiNumberDescFormat (R/W)
	SPDRP_DEVICE_POWER_DATA  = (&H0000001E)  ' Device Power Data (R)
	SPDRP_REMOVAL_POLICY  = (&H0000001F)  ' Removal Policy (R)
	SPDRP_REMOVAL_POLICY_HW_DEFAULT  = (&H00000020)  ' Hardware Removal Policy (R)
	SPDRP_REMOVAL_POLICY_OVERRIDE  = (&H00000021)  ' Removal Policy Override (RW)
	SPDRP_INSTALL_STATE  = (&H00000022)  ' Device Install State (R)
	SPDRP_LOCATION_PATHS  = (&H00000023)  ' Device Location Paths (R)
	SPDRP_BASE_CONTAINERID  = (&H00000024)  ' Base ContainerID (R)
End Enum
Public Enum SetupClsRegProps
	SPCRP_UPPERFILTERS  = (&H00000011)  ' UpperFilters (R/W)
	SPCRP_LOWERFILTERS  = (&H00000012)  ' LowerFilters (R/W)
	SPCRP_SECURITY  = (&H00000017)  ' Security (R/W, binary form)
	SPCRP_SECURITY_SDS  = (&H00000018)  ' Security (W, SDS form)
	SPCRP_DEVTYPE = (&H00000019)  ' Device Type (R/W)
	SPCRP_EXCLUSIVE  = (&H0000001A)  ' Device is exclusive-access (R/W)
	SPCRP_CHARACTERISTICS = (&H0000001B)  ' Device Characteristics (R/W)
End Enum

Public Enum SetupDevCap
	CM_DEVCAP_LOCKSUPPORTED  = (&H00000001)
	CM_DEVCAP_EJECTSUPPORTED  = (&H00000002)
	CM_DEVCAP_REMOVABLE  = (&H00000004)
	CM_DEVCAP_DOCKDEVICE  = (&H00000008)
	CM_DEVCAP_UNIQUEID  = (&H00000010)
	CM_DEVCAP_SILENTINSTALL  = (&H00000020)
	CM_DEVCAP_RAWDEVICEOK  = (&H00000040)
	CM_DEVCAP_SURPRISEREMOVALOK  = (&H00000080)
	CM_DEVCAP_HARDWAREDISABLED  = (&H00000100)
	CM_DEVCAP_NONDYNAMIC  = (&H00000200)
	CM_DEVCAP_SECUREDEVICE  = (&H00000400)
End Enum

Public Enum SetupDriverType
	SPDIT_NODRIVER  = &H00000000
	SPDIT_CLASSDRIVER  = &H00000001
	SPDIT_COMPATDRIVER  = &H00000002
End Enum

Public Const LINE_LEN = 256

[Description("Note: This is the V2 version, for Windows 2000 and higher.")]
Public Type SP_DRVINFO_DATA_W
	cbSize As Long
	DriverType As SetupDriverType
	Reserved As LongPtr
	Description(0 To (LINE_LEN - 1)) As Integer
	MfgName(0 To (LINE_LEN - 1)) As Integer
	ProviderName(0 To (LINE_LEN - 1)) As Integer
	DriverDate As FILETIME
	DriverVersion As LongLong
End Type

Public Enum SetupClassPropFlags
	DICLASSPROP_INSTALLER = &H00000001  ' device setup class property
	DICLASSPROP_INTERFACE  = &H00000002  ' device interface class property
End Enum

Public Type SP_PROPSHEETPAGE_REQUEST
	cbSize As Long
	PageRequested As Long
	DeviceInfoSet As LongPtr
	DeviceInfoData As LongPtr
End Type

Public Enum SetupPropPageTypes
	DIGCDP_FLAG_BASIC  = &H00000001
	DIGCDP_FLAG_ADVANCED  = &H00000002
	DIGCDP_FLAG_REMOTE_BASIC  = &H00000003  ' not presently implemented
	DIGCDP_FLAG_REMOTE_ADVANCED  = &H00000004
End Enum


Public DeclareWide PtrSafe Function SetupDiGetClassDevsW Lib "setupapi" (ClassGuid As UUID, ByVal Enumerator As String, ByVal hWndParent As LongPtr, ByVal Flags As Setup_DIGCF) As LongPtr
Public DeclareWide PtrSafe Function SetupDiGetClassDevs Lib "setupapi" Alias "SetupDiGetClassDevsW" (ClassGuid As UUID, ByVal Enumerator As String, ByVal hWndParent As LongPtr, ByVal Flags As Setup_DIGCF) As LongPtr
Public DeclareWide PtrSafe Function SetupDiEnumDeviceInfo Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByVal MemberIndex As Long, ByRef DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiDestroyDeviceInfoList Lib "setupapi" (ByVal DeviceInfoSet As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInstanceIdW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DeviceInstanceId As LongPtr, ByVal DeviceInstanceSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInstanceId Lib "setupapi" Alias "SetupDiGetDeviceInstanceIdW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DeviceInstanceId As String, ByVal DeviceInstanceSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassInstallParams Lib "setupapi" Alias "SetupDiSetClassInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassInstallParams Lib "setupapi" Alias "SetupDiGetClassInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiOpenDevRegKey Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByRef DeviceInfoData As SP_DEVINFO_DATA, ByVal Scope As Setup_DICSF, ByVal HwProfile As Long, ByVal KeyType As Setup_KeyType, ByVal samDesired As REGSAM) As LongPtr
Public DeclareWide PtrSafe Function SetupDiRemoveDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiUnremoveDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiLoadClassIcon Lib "setupapi" (ClassGuid As UUID, Optional LargeIcon As LongPtr, Optional MiniIconIndex As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiLoadDeviceIcon Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal cxIcon As Long, ByVal cyIcon As Long, ByVal Flags As Long, hIcon As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDescriptionW Lib "setupapi" (ClassGuid As UUID, ByVal ClassDescription As LongPtr, ByVal ClassDescriptionSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDescription Lib "setupapi" Alias "SetupDiGetClassDescriptionW" (ClassGuid As UUID, ByVal ClassDescription As String, ByVal ClassDescriptionSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassImageList Lib "setupapi" (ClassImageListData As SP_CLASSIMAGELIST_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiDestroyClassImageList Lib "setupapi" (ClassImageListData As SP_CLASSIMAGELIST_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassImageIndex Lib "setupapi" (ClassImageListData As SP_CLASSIMAGELIST_DATA, ClassGuid As UUID, ImageIndex As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInstallParams Lib "setupapi" Alias "SetupDiGetDeviceInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS) As Bool
Public DeclareWide PtrSafe Function SetupDiSetDeviceInstallParams Lib "setupapi" Alias "SetupDiSetDeviceInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS) As BOOL
Public DeclareWide PtrSafe Function SetupDiBuildClassInfoList Lib "setupapi" (ByVal Flags As SetupClassListFlags, ClassGuidList As UUID, ByVal ClassGuidListSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiClassNameFromGuidW Lib "setupapi" (ClassGuid As UUID, ByVal ClassName As LongPtr, ByVal ClassNameSize As Long, RequiredSize As Long) as BOOL
Public DeclareWide PtrSafe Function SetupDiClassNameFromGuid Lib "setupapi" Alias "SetupDiClassNameFromGuidW" (ClassGuid As UUID, ByVal ClassName As String, ByVal ClassNameSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiEnumDeviceInterfaces Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InterfaceClassGuid As UUID, ByVal MemberIndex As Long, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfaceDetailW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, DeviceInterfaceDetailData As Any, ByVal DeviceInterfaceDetailDataSize As Long, RequiredSize As Long, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfaceDetail Lib "setupapi" Alias "SetupDiGetDeviceInterfaceDetailW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, DeviceInterfaceDetailData As Any, ByVal DeviceInterfaceDetailDataSize As Long, RequiredSize As Long, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDevicePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceProperty Lib "setupapi" Alias "SetupDiGetDevicePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDevicePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceProperty Lib "setupapi" Alias "SetupDiSetDevicePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDevicePropertyKeys Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKeyArray As PROPERTYKEY, ByVal PropertyKeyCount As Long, RequiredPropertyKeyCount As Long, ByVal Flags As Long) as BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceInterfacePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVICE_INTERFACE_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceInterfaceProperty Lib "setupapi" Alias "SetupDiSetDeviceInterfacePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfacePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfaceProperty Lib "setupapi" Alias "SetupDiGetDeviceInterfacePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfacePropertyKeys Lib "setupapi" Alias "SetupDiGetDeviceInterfacePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, PropertyKeyArray As PROPERTYKEY, ByVal PropertyKeyCount As Long, RequiredPropertyKeyCount As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInfoList Lib "setupapi" (ClassGuid As UUID, ByVal hwndParent As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInfoW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByVal DeviceName As LongPtr, ClassGuid As UUID, ByVal DeviceDescription As LongPtr, ByVal hwndParent As LongPtr, ByVal CreationFlags As SetupDICDFlags, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInfo Lib "setupapi" Alias "SetupDiCreateDeviceInfoW" (ByVal DeviceInfoSet As LongPtr, ByVal DeviceName As String, ClassGuid As UUID, ByVal DeviceDescription As String, ByVal hwndParent As LongPtr, ByVal CreationFlags As SetupDICDFlags, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInterfaceW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InterfaceClassGuid As UUID, ByVal ReferenceString As LongPtr, ByVal CreationFlags As Long, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInterface Lib "setupapi" Alias "SetupDiCreateDeviceInterfaceW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InterfaceClassGuid As UUID, ByVal ReferenceString As String, ByVal CreationFlags As Long, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceRegistryPropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceRegistryProperty Lib "setupapi" Alias "SetupDiGetDeviceRegistryPropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSevDeviceRegistryPropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceRegistryProperty Lib "setupapi" Alias "SetupDiSetDeviceRegistryPropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassRegistryPropertyW Lib "setupapi" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassRegistryProperty Lib "setupapi" Alias "SetupDiGetClassRegistryPropertyW" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassRegistryPropertyW Lib "setupapi" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassRegistryProperty Lib "setupapi" Alias "SetupDiSetClassRegistryPropertyW" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiAskForOEMDisk Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiBuildDriverInfoList Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType) As BOOL
Public DeclareWide PtrSafe Function SetupDiCancelDriverInfoSearch Lib "setupapi" (ByVal DeviceInfoSet As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiEnumDriverInfoW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType, ByVal MemberIndex As Long, DriverInfoData As SP_DRVINFO_DATA_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiEnumDriverInfo Lib "setupapi" Alias "SetupDiEnumDriverInfoW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType, ByVal MemberIndex As Long, DriverInfoData As SP_DRVINFO_DATA_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiChangeState Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiCallClassInstaller Lib "setupapi" (ByVal InstallFunction As DI_FUNCTION, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassPropertyW Lib "setupapi" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassProperty Lib "setupapi" Alias "SetupDiSetClassPropertyW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassPropertyW Lib "setupapi" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassProperty Lib "setupapi" Alias "SetupDiGetClassPropertyW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassPropertyKeys Lib "setupapi" (ClassGuid As UUID, PropertyKeyArray As PROPERTYKEY, ByVal PropertyKeyCount As Long, RequiredPropertyKeyCount As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfaceAlias Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, AliasInterfaceClassGuid As UUID, AliasDeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDevPropertySheetsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal PropertySheetHeaderPageListSize As Long, RequiredSize As Long, ByVal PropertySheetType As SetupPropPageTypes) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDevPropertySheets Lib "setupapi" Alias "SetupDiGetClassDevPropertySheetsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal PropertySheetHeaderPageListSize As Long, RequiredSize As Long, ByVal PropertySheetType As SetupPropPageTypes) As BOOL


Public Enum PNP_VETO_TYPE
    PNP_VetoTypeUnknown
    PNP_VetoLegacyDevice
    PNP_VetoPendingClose
    PNP_VetoWindowsApp
    PNP_VetoWindowsService
    PNP_VetoOutstandingOpen
    PNP_VetoDevice
    PNP_VetoDriver
    PNP_VetoIllegalDeviceRequest
    PNP_VetoInsufficientPower
    PNP_VetoNonDisableable
    PNP_VetoLegacyDriver
    PNP_VetoInsufficientRights
    PNP_VetoAlreadyRemoved
End Enum

Public Enum CONFIGRET
	CR_SUCCESS  = (&H00000000)
	CR_DEFAULT  = (&H00000001)
	CR_OUT_OF_MEMORY  = (&H00000002)
	CR_INVALID_POINTER  = (&H00000003)
	CR_INVALID_FLAG  = (&H00000004)
	CR_INVALID_DEVNODE  = (&H00000005)
	CR_INVALID_DEVINST  = CR_INVALID_DEVNODE
	CR_INVALID_RES_DES  = (&H00000006)
	CR_INVALID_LOG_CONF  = (&H00000007)
	CR_INVALID_ARBITRATOR  = (&H00000008)
	CR_INVALID_NODELIST  = (&H00000009)
	CR_DEVNODE_HAS_REQS  = (&H0000000A)
	CR_DEVINST_HAS_REQS  = CR_DEVNODE_HAS_REQS
	CR_INVALID_RESOURCEID  = (&H0000000B)
	CR_DLVXD_NOT_FOUND  = (&H0000000C)  ' WIN 95 ONLY
	CR_NO_SUCH_DEVNODE  = (&H0000000D)
	CR_NO_SUCH_DEVINST  = CR_NO_SUCH_DEVNODE
	CR_NO_MORE_LOG_CONF  = (&H0000000E)
	CR_NO_MORE_RES_DES  = (&H0000000F)
	CR_ALREADY_SUCH_DEVNODE  = (&H00000010)
	CR_ALREADY_SUCH_DEVINST  = CR_ALREADY_SUCH_DEVNODE
	CR_INVALID_RANGE_LIST  = (&H00000011)
	CR_INVALID_RANGE  = (&H00000012)
	CR_FAILURE  = (&H00000013)
	CR_NO_SUCH_LOGICAL_DEV  = (&H00000014)
	CR_CREATE_BLOCKED  = (&H00000015)
	CR_NOT_SYSTEM_VM  = (&H00000016)  ' WIN 95 ONLY
	CR_REMOVE_VETOED  = (&H00000017)
	CR_APM_VETOED  = (&H00000018)
	CR_INVALID_LOAD_TYPE  = (&H00000019)
	CR_BUFFER_SMALL  = (&H0000001A)
	CR_NO_ARBITRATOR  = (&H0000001B)
	CR_NO_REGISTRY_HANDLE  = (&H0000001C)
	CR_REGISTRY_ERROR  = (&H0000001D)
	CR_INVALID_DEVICE_ID  = (&H0000001E)
	CR_INVALID_DATA  = (&H0000001F)
	CR_INVALID_API  = (&H00000020)
	CR_DEVLOADER_NOT_READY  = (&H00000021)
	CR_NEED_RESTART  = (&H00000022)
	CR_NO_MORE_HW_PROFILES  = (&H00000023)
	CR_DEVICE_NOT_THERE  = (&H00000024)
	CR_NO_SUCH_VALUE  = (&H00000025)
	CR_WRONG_TYPE  = (&H00000026)
	CR_INVALID_PRIORITY  = (&H00000027)
	CR_NOT_DISABLEABLE  = (&H00000028)
	CR_FREE_RESOURCES  = (&H00000029)
	CR_QUERY_VETOED  = (&H0000002A)
	CR_CANT_SHARE_IRQ  = (&H0000002B)
	CR_NO_DEPENDENT  = (&H0000002C)
	CR_SAME_RESOURCES  = (&H0000002D)
	CR_NO_SUCH_REGISTRY_KEY  = (&H0000002E)
	CR_INVALID_MACHINENAME  = (&H0000002F)  ' NT ONLY
	CR_REMOTE_COMM_FAILURE  = (&H00000030)  ' NT ONLY
	CR_MACHINE_UNAVAILABLE  = (&H00000031)  ' NT ONLY
	CR_NO_CM_SERVICES  = (&H00000032)  ' NT ONLY
	CR_ACCESS_DENIED  = (&H00000033)  ' NT ONLY
	CR_CALL_NOT_IMPLEMENTED  = (&H00000034)
	CR_INVALID_PROPERTY  = (&H00000035)
	CR_DEVICE_INTERFACE_ACTIVE  = (&H00000036)
	CR_NO_SUCH_DEVICE_INTERFACE  = (&H00000037)
	CR_INVALID_REFERENCE_STRING  = (&H00000038)
	CR_INVALID_CONFLICT_LIST  = (&H00000039)
	CR_INVALID_INDEX  = (&H0000003A)
	CR_INVALID_STRUCTURE_SIZE  = (&H0000003B)
End Enum

Public Enum CfgMgrProblems
	CM_PROB_NOT_CONFIGURED  = (&H00000001)  ' no config for device
	CM_PROB_DEVLOADER_FAILED  = (&H00000002)  ' service load failed
	CM_PROB_OUT_OF_MEMORY  = (&H00000003)  ' out of memory
	CM_PROB_ENTRY_IS_WRONG_TYPE  = (&H00000004)  '
	CM_PROB_LACKED_ARBITRATOR  = (&H00000005)  '
	CM_PROB_BOOT_CONFIG_CONFLICT  = (&H00000006)  ' boot config conflict
	CM_PROB_FAILED_FILTER  = (&H00000007)  '
	CM_PROB_DEVLOADER_NOT_FOUND  = (&H00000008)  ' Devloader not found
	CM_PROB_INVALID_DATA  = (&H00000009)  ' Invalid ID
	CM_PROB_FAILED_START  = (&H0000000A)  '
	CM_PROB_LIAR  = (&H0000000B)  '
	CM_PROB_NORMAL_CONFLICT  = (&H0000000C)  ' config conflict
	CM_PROB_NOT_VERIFIED  = (&H0000000D)  '
	CM_PROB_NEED_RESTART  = (&H0000000E)  ' requires restart
	CM_PROB_REENUMERATION  = (&H0000000F)  '
	CM_PROB_PARTIAL_LOG_CONF  = (&H00000010)  '
	CM_PROB_UNKNOWN_RESOURCE  = (&H00000011)  ' unknown res type
	CM_PROB_REINSTALL  = (&H00000012)  '
	CM_PROB_REGISTRY  = (&H00000013)  '
	CM_PROB_VXDLDR  = (&H00000014)  ' WINDOWS 95 ONLY
	CM_PROB_WILL_BE_REMOVED  = (&H00000015)  ' devinst will remove
	CM_PROB_DISABLED  = (&H00000016)  ' devinst is disabled
	CM_PROB_DEVLOADER_NOT_READY  = (&H00000017)  ' Devloader not ready
	CM_PROB_DEVICE_NOT_THERE  = (&H00000018)  ' device doesn't exist
	CM_PROB_MOVED  = (&H00000019)  '
	CM_PROB_TOO_EARLY  = (&H0000001A)  '
	CM_PROB_NO_VALID_LOG_CONF  = (&H0000001B)  ' no valid log config
	CM_PROB_FAILED_INSTALL  = (&H0000001C)  ' install failed
	CM_PROB_HARDWARE_DISABLED  = (&H0000001D)  ' device disabled
	CM_PROB_CANT_SHARE_IRQ  = (&H0000001E)  ' can't share IRQ
	CM_PROB_FAILED_ADD  = (&H0000001F)  ' driver failed add
	CM_PROB_DISABLED_SERVICE  = (&H00000020)  ' service's Start = 4
	CM_PROB_TRANSLATION_FAILED  = (&H00000021)  ' resource translation failed
	CM_PROB_NO_SOFTCONFIG  = (&H00000022)  ' no soft config
	CM_PROB_BIOS_TABLE  = (&H00000023)  ' device missing in BIOS table
	CM_PROB_IRQ_TRANSLATION_FAILED  = (&H00000024)  ' IRQ translator failed
	CM_PROB_FAILED_DRIVER_ENTRY  = (&H00000025)  ' DriverEntry() failed.
	CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD  = (&H00000026)  ' Driver should have unloaded.
	CM_PROB_DRIVER_FAILED_LOAD  = (&H00000027)  ' Driver load unsuccessful.
	CM_PROB_DRIVER_SERVICE_KEY_INVALID  = (&H00000028)  ' Error accessing driver's service key
	CM_PROB_LEGACY_SERVICE_NO_DEVICES  = (&H00000029)  ' Loaded legacy service created no devices
	CM_PROB_DUPLICATE_DEVICE  = (&H0000002A)  ' Two devices were discovered with the same name
	CM_PROB_FAILED_POST_START  = (&H0000002B)  ' The drivers set the device state to failed
	CM_PROB_HALTED  = (&H0000002C)  ' This device was failed post start via usermode
	CM_PROB_PHANTOM  = (&H0000002D)  ' The devinst currently exists only in the registry
	CM_PROB_SYSTEM_SHUTDOWN  = (&H0000002E)  ' The system is shutting down
	CM_PROB_HELD_FOR_EJECT  = (&H0000002F)  ' The device is offline awaiting removal
	CM_PROB_DRIVER_BLOCKED  = (&H00000030)  ' One or more drivers is blocked from loading
	CM_PROB_REGISTRY_TOO_LARGE  = (&H00000031)  ' System hive has grown too large
	CM_PROB_SETPROPERTIES_FAILED  = (&H00000032)  ' Failed to apply one or more registry properties
	CM_PROB_WAITING_ON_DEPENDENCY  = (&H00000033)  ' Device is stalled waiting on a dependency to start
	CM_PROB_UNSIGNED_DRIVER  = (&H00000034)  ' Failed load driver due to unsigned image.
	CM_PROB_USED_BY_DEBUGGER  = (&H00000035)  ' Device is being used by kernel debugger
	CM_PROB_DEVICE_RESET  = (&H00000036)  ' Device is being reset
	CM_PROB_CONSOLE_LOCKED  = (&H00000037)  ' Device is blocked while console is locked
	CM_PROB_NEED_CLASS_CONFIG  = (&H00000038)  ' Device needs extended class configuration to start
	CM_PROB_GUEST_ASSIGNMENT_FAILED  = (&H00000039)  ' Assignment to guest partition failed
End Enum

Public Enum CfgMgDevNodeStatus
	DN_ROOT_ENUMERATED  = (&H00000001)  ' Was enumerated by ROOT
	DN_DRIVER_LOADED  = (&H00000002)  ' Has Register_Device_Driver
	DN_ENUM_LOADED  = (&H00000004)  ' Has Register_Enumerator
	DN_STARTED  = (&H00000008)  ' Is currently configured
	DN_MANUAL  = (&H00000010)  ' Manually installed
	DN_NEED_TO_ENUM  = (&H00000020)  ' May need reenumeration
	DN_NOT_FIRST_TIME  = (&H00000040)  ' Has received a config
	DN_HARDWARE_ENUM  = (&H00000080)  ' Enum generates hardware ID
	DN_LIAR  = (&H00000100)  ' Lied about can reconfig once
	DN_HAS_MARK  = (&H00000200)  ' Not CM_Create_DevInst lately
	DN_HAS_PROBLEM  = (&H00000400)  ' Need device installer
	DN_FILTERED = (&H00000800)  ' Is filtered
	DN_MOVED  = (&H00001000)  ' Has been moved
	DN_DISABLEABLE  = (&H00002000)  ' Can be disabled
	DN_REMOVABLE  = (&H00004000)  ' Can be removed
	DN_PRIVATE_PROBLEM = (&H00008000&)  ' Has a private problem
	DN_MF_PARENT  = (&H00010000)  ' Multi function parent
	DN_MF_CHILD  = (&H00020000)  ' Multi function child
	DN_WILL_BE_REMOVED  = (&H00040000)  ' DevInst is being removed
'  Windows 4 OPK2 Flags
	DN_NOT_FIRST_TIMEE  = &H00080000  ' S: Has received a config enumerate
	DN_STOP_FREE_RES  = &H00100000  ' S: When child is stopped, free resources
	DN_REBAL_CANDIDATE  = &H00200000  ' S: Don't skip during rebalance
	DN_BAD_PARTIAL  = &H00400000  ' S: This devnode's log_confs do not have same resources
	DN_NT_ENUMERATOR  = &H00800000  ' S: This devnode's is an NT enumerator
	DN_NT_DRIVER  = &H01000000  ' S: This devnode's is an NT driver
'  Windows 4.1 Flags
	DN_NEEDS_LOCKING  = &H02000000  ' S: Devnode need lock resume processing
	DN_ARM_WAKEUP  = &H04000000  ' S: Devnode can be the wakeup device
	DN_APM_ENUMERATOR  = &H08000000  ' S: APM aware enumerator
	DN_APM_DRIVER  = &H10000000  ' S: APM aware driver
	DN_SILENT_INSTALL  = &H20000000  ' S: Silent install
	DN_NO_SHOW_IN_DM  = &H40000000  ' S: No show in device manager
	DN_BOOT_LOG_PROB  = &H80000000  ' S: Had a problem during preassignment of boot log conf
	DN_NEED_RESTART  = DN_LIAR  ' System needs to be restarted for this Devnode to work properly
	DN_DRIVER_BLOCKED  = DN_NOT_FIRST_TIME  ' One or more drivers are blocked from loading for this Devnode
	DN_LEGACY_DRIVER  = DN_MOVED  ' This device is using a legacy driver
	DN_CHILD_WITH_INVALID_ID  = DN_HAS_MARK  ' One or more children have invalid ID(s)
	DN_DEVICE_DISCONNECTED  = DN_NEEDS_LOCKING  ' The function driver for a device reported that the device is not connected.  Typically this means a wireless device is out of range.
	DN_QUERY_REMOVE_PENDING  = DN_MF_PARENT  ' Device is part of a set of related devices collectively pending query-removal
	DN_QUERY_REMOVE_ACTIVE  = DN_MF_CHILD  ' Device is actively engaged in a query-remove IRP
End Enum

Public DeclareWide PtrSafe Function CM_Request_Device_EjectW Lib "setupapi" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As LongPtr, ByVal ulNameLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Request_Device_Eject Lib "setupapi" Alias "CM_Request_Device_EjectW" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Status Lib "cfgmgr32" (pulStatus As Long, pulProblemNumber As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
#End Region




#Region "winmm"

'Complete
#Region "winmm_sound"
Public Enum SND_FLAGS
    SND_ALIAS = &H10000 ' name is a WIN.INI [sounds] entry
    SND_ALIAS_ID = &H110000 ' name is a WIN.INI [sounds]Entry identifier
    SND_ALIAS_START = 0 ' must be > 4096 to keep strings insame section of resource file
    SND_APPLICATION = &H80 ' look for applicationspecific association
    SND_ASYNC = &H1 ' play asynchronously
    SND_FILENAME = &H20000 ' name is a file name
    SND_LOOP = &H8 ' loop the sound until nextsndPlaySound
    SND_MEMORY = &H4 ' lpszSoundName points to a memoryFile
    SND_NODEFAULT = &H2 ' silence not default, if soundnot found
    SND_NOSTOP = &H10 ' don't stop any currently playingsound
    SND_NOWAIT = &H2000 ' don't wait if the driver is busy
    SND_PURGE = &H40 ' purge non-static events forTask
    SND_RESERVED = &HFF000000 ' In particular these flags areReserved
    SND_RESOURCE = &H40004 ' name is a resource name or atom
    SND_RING = &H00100000 /* Treat this as a "ring" from a communications app - don't duck me */
    SND_SYSTEM = &H00200000 /* Treat this as a system sound */    
    SND_SYNC = &H0 ' play synchronously (default)
    SND_TYPE_MASK = &H170007
End Enum

Public Const SND_ALIAS_SYSTEMASTERISK      As String = "SystemAsterisk"
Public Const SND_ALIAS_SYSTEMDEFAULT       As String = "SystemDefault"
Public Const SND_ALIAS_SYSTEMEXCLAMATION   As String = "SystemExclamation"
Public Const SND_ALIAS_SYSTEMEXIT          As String = "SystemExit"
Public Const SND_ALIAS_SYSTEMHAND          As String = "SystemHand"
Public Const SND_ALIAS_SYSTEMQUESTION      As String = "SystemQuestion"
Public Const SND_ALIAS_SYSTEMSTART         As String = "SystemStart"
Public Const SND_ALIAS_SYSTEMWELCOME       As String = "SystemWelcome"
Public Const SND_ALIAS_YouGotMail          As String = "MailBeep"

Public DeclareWide PtrSafe Function PlaySound Lib "winmm" Alias "PlaySoundW" (ByVal pszSound As String, ByVal hModule As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
Public Declare PtrSafe Function PlaySoundA Lib "winmm" (ByVal pszSound As String, ByVal hModule As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
Public DeclareWide PtrSafe Function PlaySoundW Lib "winmm" (ByVal pszSound As LongPtr, ByVal hModule As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
Public DeclareWide PtrSafe Function sndPlaySound Lib "winmm" Alias "PlaySoundW" (ByVal lpszSound As String, ByVal dwFlags As SND_FLAGS) As Long
Public Declare PtrSafe Function sndPlaySoundA Lib "winmm" (ByVal lpszSound As String, ByVal dwFlags As SND_FLAGS) As Long
Public DeclareWide PtrSafe Function sndPlaySoundW Lib "winmm" (ByVal lpszSound As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
#End Region

Public DeclareWide PtrSafe Function timeGetTime Lib "winmm" () As Long
Public DeclareWide PtrSafe Function timeGetSystemTime Lib "winmm" (pmmt As MMTIME, ByVal cbmmt As Long) As Long
Public DeclareWide PtrSafe Function timeBeginPeriod Lib "winmm" (ByVal uPeriod As Long) As Long
Public DeclareWide PtrSafe Function timeEndPeriod Lib "winmm" (ByVal uPeriod As Long) As Long
Public DeclareWide PtrSafe Function timeGetDevCaps Lib "winmm" (ptc As TIMECAPS, ByVal cbtc As Long) As Long

'Complete
#Region "winmm_mci"
Public Enum MCIERROR
    MCIERR_INVALID_DEVICE_ID  = (MCIERR_BASE + 1)
    MCIERR_UNRECOGNIZED_KEYWORD  = (MCIERR_BASE + 3)
    MCIERR_UNRECOGNIZED_COMMAND  = (MCIERR_BASE + 5)
    MCIERR_HARDWARE  = (MCIERR_BASE + 6)
    MCIERR_INVALID_DEVICE_NAME  = (MCIERR_BASE + 7)
    MCIERR_OUT_OF_MEMORY  = (MCIERR_BASE + 8)
    MCIERR_DEVICE_OPEN  = (MCIERR_BASE + 9)
    MCIERR_CANNOT_LOAD_DRIVER  = (MCIERR_BASE + 10)
    MCIERR_MISSING_COMMAND_STRING  = (MCIERR_BASE + 11)
    MCIERR_PARAM_OVERFLOW  = (MCIERR_BASE + 12)
    MCIERR_MISSING_STRING_ARGUMENT  = (MCIERR_BASE + 13)
    MCIERR_BAD_INTEGER  = (MCIERR_BASE + 14)
    MCIERR_PARSER_INTERNAL  = (MCIERR_BASE + 15)
    MCIERR_DRIVER_INTERNAL  = (MCIERR_BASE + 16)
    MCIERR_MISSING_PARAMETER  = (MCIERR_BASE + 17)
    MCIERR_UNSUPPORTED_FUNCTION  = (MCIERR_BASE + 18)
    MCIERR_FILE_NOT_FOUND  = (MCIERR_BASE + 19)
    MCIERR_DEVICE_NOT_READY  = (MCIERR_BASE + 20)
    MCIERR_INTERNAL  = (MCIERR_BASE + 21)
    MCIERR_DRIVER  = (MCIERR_BASE + 22)
    MCIERR_CANNOT_USE_ALL  = (MCIERR_BASE + 23)
    MCIERR_MULTIPLE  = (MCIERR_BASE + 24)
    MCIERR_EXTENSION_NOT_FOUND  = (MCIERR_BASE + 25)
    MCIERR_OUTOFRANGE  = (MCIERR_BASE + 26)
    MCIERR_FLAGS_NOT_COMPATIBLE  = (MCIERR_BASE + 28)
    MCIERR_FILE_NOT_SAVED  = (MCIERR_BASE + 30)
    MCIERR_DEVICE_TYPE_REQUIRED  = (MCIERR_BASE + 31)
    MCIERR_DEVICE_LOCKED  = (MCIERR_BASE + 32)
    MCIERR_DUPLICATE_ALIAS  = (MCIERR_BASE + 33)
    MCIERR_BAD_CONSTANT  = (MCIERR_BASE + 34)
    MCIERR_MUST_USE_SHAREABLE  = (MCIERR_BASE + 35)
    MCIERR_MISSING_DEVICE_NAME  = (MCIERR_BASE + 36)
    MCIERR_BAD_TIME_FORMAT  = (MCIERR_BASE + 37)
    MCIERR_NO_CLOSING_QUOTE  = (MCIERR_BASE + 38)
    MCIERR_DUPLICATE_FLAGS  = (MCIERR_BASE + 39)
    MCIERR_INVALID_FILE  = (MCIERR_BASE + 40)
    MCIERR_NULL_PARAMETER_BLOCK  = (MCIERR_BASE + 41)
    MCIERR_UNNAMED_RESOURCE  = (MCIERR_BASE + 42)
    MCIERR_NEW_REQUIRES_ALIAS  = (MCIERR_BASE + 43)
    MCIERR_NOTIFY_ON_AUTO_OPEN  = (MCIERR_BASE + 44)
    MCIERR_NO_ELEMENT_ALLOWED  = (MCIERR_BASE + 45)
    MCIERR_NONAPPLICABLE_FUNCTION  = (MCIERR_BASE + 46)
    MCIERR_ILLEGAL_FOR_AUTO_OPEN  = (MCIERR_BASE + 47)
    MCIERR_FILENAME_REQUIRED  = (MCIERR_BASE + 48)
    MCIERR_EXTRA_CHARACTERS  = (MCIERR_BASE + 49)
    MCIERR_DEVICE_NOT_INSTALLED  = (MCIERR_BASE + 50)
    MCIERR_GET_CD  = (MCIERR_BASE + 51)
    MCIERR_SET_CD  = (MCIERR_BASE + 52)
    MCIERR_SET_DRIVE  = (MCIERR_BASE + 53)
    MCIERR_DEVICE_LENGTH  = (MCIERR_BASE + 54)
    MCIERR_DEVICE_ORD_LENGTH  = (MCIERR_BASE + 55)
    MCIERR_NO_INTEGER  = (MCIERR_BASE + 56)
    MCIERR_WAVE_OUTPUTSINUSE  = (MCIERR_BASE + 64)
    MCIERR_WAVE_SETOUTPUTINUSE  = (MCIERR_BASE + 65)
    MCIERR_WAVE_INPUTSINUSE  = (MCIERR_BASE + 66)
    MCIERR_WAVE_SETINPUTINUSE  = (MCIERR_BASE + 67)
    MCIERR_WAVE_OUTPUTUNSPECIFIED  = (MCIERR_BASE + 68)
    MCIERR_WAVE_INPUTUNSPECIFIED  = (MCIERR_BASE + 69)
    MCIERR_WAVE_OUTPUTSUNSUITABLE  = (MCIERR_BASE + 70)
    MCIERR_WAVE_SETOUTPUTUNSUITABLE  = (MCIERR_BASE + 71)
    MCIERR_WAVE_INPUTSUNSUITABLE  = (MCIERR_BASE + 72)
    MCIERR_WAVE_SETINPUTUNSUITABLE  = (MCIERR_BASE + 73)
    MCIERR_SEQ_DIV_INCOMPATIBLE  = (MCIERR_BASE + 80)
    MCIERR_SEQ_PORT_INUSE  = (MCIERR_BASE + 81)
    MCIERR_SEQ_PORT_NONEXISTENT  = (MCIERR_BASE + 82)
    MCIERR_SEQ_PORT_MAPNODEVICE  = (MCIERR_BASE + 83)
    MCIERR_SEQ_PORT_MISCERROR  = (MCIERR_BASE + 84)
    MCIERR_SEQ_TIMER  = (MCIERR_BASE + 85)
    MCIERR_SEQ_PORTUNSPECIFIED  = (MCIERR_BASE + 86)
    MCIERR_SEQ_NOMIDIPRESENT  = (MCIERR_BASE + 87)
    MCIERR_NO_WINDOW  = (MCIERR_BASE + 90)
    MCIERR_CREATEWINDOW  = (MCIERR_BASE + 91)
    MCIERR_FILE_READ  = (MCIERR_BASE + 92)
    MCIERR_FILE_WRITE  = (MCIERR_BASE + 93)

    MCIERR_CUSTOM_DRIVER_BASE  = (MCIERR_BASE + 256)
End Enum
Public Enum MCI_COMMANDS
    MCI_OPEN  = &H0803
    MCI_CLOSE  = &H0804
    MCI_ESCAPE  = &H0805
    MCI_PLAY  = &H0806
    MCI_SEEK  = &H0807
    MCI_STOP  = &H0808
    MCI_PAUSE  = &H0809
    MCI_INFO  = &H080A
    MCI_GETDEVCAPS  = &H080B
    MCI_SPIN  = &H080C
    MCI_SET  = &H080D
    MCI_STEP  = &H080E
    MCI_RECORD  = &H080F
    MCI_SYSINFO  = &H0810
    MCI_BREAK  = &H0811
    MCI_SOUND  = &H0812
    MCI_SAVE  = &H0813
    MCI_STATUS  = &H0814
    MCI_CUE  = &H0830
    MCI_REALIZE  = &H0840
    MCI_WINDOW  = &H0841
    MCI_PUT  = &H0842
    MCI_WHERE  = &H0843
    MCI_FREEZE  = &H0844
    MCI_UNFREEZE  = &H0845
    MCI_LOAD  = &H0850
    MCI_CUT  = &H0851
    MCI_COPY  = &H0852
    MCI_PASTE  = &H0853
    MCI_UPDATE  = &H0854
    MCI_RESUME  = &H0855
    MCI_DELETE  = &H0856
End Enum

Public Enum MCI_DEVICE_TYPE
    MCI_DEVTYPE_VCR  = 513 /* (MCI_STRING_OFFSET + 1) */
    MCI_DEVTYPE_VIDEODISC  = 514 /* (MCI_STRING_OFFSET + 2) */
    MCI_DEVTYPE_OVERLAY  = 515 /* (MCI_STRING_OFFSET + 3) */
    MCI_DEVTYPE_CD_AUDIO  = 516 /* (MCI_STRING_OFFSET + 4) */
    MCI_DEVTYPE_DAT  = 517 /* (MCI_STRING_OFFSET + 5) */
    MCI_DEVTYPE_SCANNER  = 518 /* (MCI_STRING_OFFSET + 6) */
    MCI_DEVTYPE_ANIMATION  = 519 /* (MCI_STRING_OFFSET + 7) */
    MCI_DEVTYPE_DIGITAL_VIDEO  = 520 /* (MCI_STRING_OFFSET + 8) */
    MCI_DEVTYPE_OTHER  = 521 /* (MCI_STRING_OFFSET + 9) */
    MCI_DEVTYPE_WAVEFORM_AUDIO  = 522 /* (MCI_STRING_OFFSET + 10) */
    MCI_DEVTYPE_SEQUENCER  = 523 /* (MCI_STRING_OFFSET + 11) */
    MCI_DEVTYPE_FIRST  = MCI_DEVTYPE_VCR
    MCI_DEVTYPE_LAST  = MCI_DEVTYPE_SEQUENCER
    MCI_DEVTYPE_FIRST_USER  = &H1000
End Enum

Public Enum MCI_STATUS_MODE
    MCI_MODE_NOT_READY  = (MCI_STRING_OFFSET + 12)
    MCI_MODE_STOP  = (MCI_STRING_OFFSET + 13)
    MCI_MODE_PLAY  = (MCI_STRING_OFFSET + 14)
    MCI_MODE_RECORD  = (MCI_STRING_OFFSET + 15)
    MCI_MODE_SEEK  = (MCI_STRING_OFFSET + 16)
    MCI_MODE_PAUSE  = (MCI_STRING_OFFSET + 17)
    MCI_MODE_OPEN  = (MCI_STRING_OFFSET + 18)
End Enum

Public Enum MCI_STATUS_TIMEFMT
    MCI_FORMAT_MILLISECONDS  = 0
    MCI_FORMAT_HMS  = 1
    MCI_FORMAT_MSF  = 2
    MCI_FORMAT_FRAMES  = 3
    MCI_FORMAT_SMPTE_24  = 4
    MCI_FORMAT_SMPTE_25  = 5
    MCI_FORMAT_SMPTE_30  = 6
    MCI_FORMAT_SMPTE_30DROP  = 7
    MCI_FORMAT_BYTES  = 8
    MCI_FORMAT_SAMPLES  = 9
    MCI_FORMAT_TMSF  = 10
End Enum

Public Enum MCI_NOTIFY_RESULT
    MCI_NOTIFY_SUCCESSFUL  = &H0001
    MCI_NOTIFY_SUPERSEDED  = &H0002
    MCI_NOTIFY_ABORTED  = &H0004
    MCI_NOTIFY_FAILURE  = &H0008
End Enum

Public Enum MCI_CMD_FLAGS
    MCI_NOTIFY  = &H00000001
    MCI_WAIT  = &H00000002
    MCI_FROM  = &H00000004
    MCI_TO  = &H00000008
    MCI_TRACK = &H00000010
End Enum

Public Enum MCI_OPEN_FLAGS
    MCI_OPEN_SHAREABLE  = &H00000100
    MCI_OPEN_ELEMENT  = &H00000200
    MCI_OPEN_ALIAS  = &H00000400
    MCI_OPEN_ELEMENT_ID  = &H00000800
    MCI_OPEN_TYPE_ID  = &H00001000
    MCI_OPEN_TYPE  = &H00002000
End Enum

Public Enum MCI_SEEK_FLAGS
    MCI_SEEK_TO_START  = &H00000100
    MCI_SEEK_TO_END  = &H00000200
End Enum

Public Enum MCI_STATUS_FLAGS
    MCI_STATUS_ITEM = &H00000100
    MCI_STATUS_START  = &H00000200
End Enum

Public Enum MCI_STATUS_ITEM
    MCI_STATUS_LENGTH  = &H00000001
    MCI_STATUS_POSITION  = &H00000002
    MCI_STATUS_NUMBER_OF_TRACKS  = &H00000003
    MCI_STATUS_MODE  = &H00000004
    MCI_STATUS_MEDIA_PRESENT  = &H00000005
    MCI_STATUS_TIME_FORMAT  = &H00000006
    MCI_STATUS_READY  = &H00000007
    MCI_STATUS_CURRENT_TRACK  = &H00000008
End Enum

Public Enum MCI_INFO_FLAGS
    MCI_INFO_PRODUCT = &H00000100
    MCI_INFO_FILE  = &H00000200
    MCI_INFO_MEDIA_UPC  = &H00000400
    MCI_INFO_MEDIA_IDENTITY  = &H00000800
    MCI_INFO_NAME  = &H00001000
    MCI_INFO_COPYRIGHT  = &H00002000
End Enum

Public Enum MCI_GETDEVCAPS_FLAGS
    MCI_GETDEVCAPS_ITEM = &H00000100
End Enum

Public Enum MCI_GETDEVCAPS_PARAM
    MCI_GETDEVCAPS_CAN_RECORD  = &H00000001
    MCI_GETDEVCAPS_HAS_AUDIO  = &H00000002
    MCI_GETDEVCAPS_HAS_VIDEO  = &H00000003
    MCI_GETDEVCAPS_DEVICE_TYPE  = &H00000004
    MCI_GETDEVCAPS_USES_FILES  = &H00000005
    MCI_GETDEVCAPS_COMPOUND_DEVICE  = &H00000006
    MCI_GETDEVCAPS_CAN_EJECT  = &H00000007
    MCI_GETDEVCAPS_CAN_PLAY  = &H00000008
    MCI_GETDEVCAPS_CAN_SAVE  = &H00000009
End Enum

Public Enum MCI_SYSINFO_FLAGS
    MCI_SYSINFO_QUANTITY  = &H00000100
    MCI_SYSINFO_OPEN  = &H00000200
    MCI_SYSINFO_NAME  = &H00000400
    MCI_SYSINFO_INSTALLNAME  = &H00000800
End Enum

Public Enum MCI_SET_FLAGS
    MCI_SET_DOOR_OPEN  = &H00000100
    MCI_SET_DOOR_CLOSED  = &H00000200
    MCI_SET_TIME_FORMAT  = &H00000400
    MCI_SET_AUDIO  = &H00000800
    MCI_SET_VIDEO  = &H00001000
    MCI_SET_ON  = &H00002000
    MCI_SET_OFF  = &H00004000
End Enum

Public Enum MCI_SET_PARAM
    MCI_SET_AUDIO_ALL  = &H00000000
    MCI_SET_AUDIO_LEFT  = &H00000001
    MCI_SET_AUDIO_RIGHT  = &H00000002
End Enum

Public Enum MCI_BREAK_FLAGS
    MCI_BREAK_KEY  = &H00000100
    MCI_BREAK_HWND  = &H00000200
    MCI_BREAK_OFF  = &H00000400
End Enum

Public Enum MCI_BREAK_PARAM
    MCI_RECORD_INSERT  = &H00000100
    MCI_RECORD_OVERWRITE  = &H00000200
End Enum

Public Enum MCI_SAVE_FLAGS
    MCI_SAVE_FILE = &H00000100
End Enum

Public Enum MCI_LOAD_FLAGS
    MCI_LOAD_FILE = &H00000100
End Enum

Public Type MCI_GENERIC_PARMS
    dwCallback As LongPtr
End Type

[ PackingAlignment (1) ]
Public Type MCI_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
End Type
[ PackingAlignment (1) ]
Public Type MCI_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
End Type
[ PackingAlignment (1) ]
Public Type MCI_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
End Type

Public Type MCI_PLAY_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
End Type

[ PackingAlignment (1) ]
Public Type MCI_SEEK_PARMS
    dwCallback As LongPtr
    dwTo As Long
End Type

Public Type MCI_STATUS_PARMS
    dwCallback As LongPtr
    dwReturn As LongPtr
    dwItem As MCI_STATUS_ITEM
    dwTrack As Long
End Type

[ PackingAlignment (1) ]
Public Type MCI_INFO_PARMSA
    dwCallback As LongPtr
    lpstrReturn As String
    dwRetSize As Long
End Type
[ PackingAlignment (1) ]
Public Type MCI_INFO_PARMSW
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
End Type
[ PackingAlignment (1) ]
Public Type MCI_INFO_PARMS
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
End Type

Public Type MCI_GETDEVCAPS_PARMS
    dwCallback As LongPtr
    dwReturn As Long
    dwItem As MCI_GETDEVCAPS_PARAM
End Type

[ PackingAlignment (1) ]
Public Type MCI_SYSINFO_PARMSA
    dwCallback As LongPtr
    lpstrReturn As String
    dwRetSize As Long
    dwNumber As Long
    wDeviceType As MCI_DEVICE_TYPE
End Type
[ PackingAlignment (1) ]
Public Type MCI_SYSINFO_PARMSW
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
    dwNumber As Long
    wDeviceType As MCI_DEVICE_TYPE
End Type
[ PackingAlignment (1) ]
Public Type MCI_SYSINFO_PARMS
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
    dwNumber As Long
    wDeviceType As MCI_DEVICE_TYPE
End Type

Public Type MCI_SET_PARMS
    dwCallback As LongPtr
    dwTimeFormat As MCI_STATUS_TIMEFMT
    dwAudio As Long
End Type

Public Type MCI_SAVE_PARMSA
    dwCallback As LongPtr
    lpfilename As String
End Type
Public Type MCI_SAVE_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type
Public Type MCI_SAVE_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type

Public Type MCI_LOAD_PARMSA
    dwCallback As LongPtr
    lpfilename As String
End Type
Public Type MCI_LOAD_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type
Public Type MCI_LOAD_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type

Public Type MCI_RECORD_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
End Type

[ PackingAlignment(1) ]
Public Type MCI_WAVE_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
    dwBufferSeconds As Long
End Type
[ PackingAlignment(1) ]
Public Type MCI_WAVE_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwBufferSeconds As Long
End Type
[ PackingAlignment(1) ]
Public Type MCI_WAVE_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwBufferSeconds As Long
End Type

Public Type MCI_WAVE_DELETE_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
End Type

Public Type MCI_WAVE_SET_PARMS
    dwCallback As LongPtr
    dwTimeFormat As MCI_STATUS_TIMEFMT
    dwAudio As Long
    wInput As Long
    wOutput As Long
    /* [ TypeHint(WAV_FORMAT_IDS) ] */ wFormatTag As Integer
    wReserved2 As Integer
    nChannels As Integer
    wReserved3 As Integer
    nSamplesPerSec As Long
    nAvgBytesPerSec As Long
    nBlockAlign As Integer
    wReserved4 As Integer
    wBitsPerSample As Integer
    wReserved5 As Integer
End Type

Public Type WAVEFORMAT
    /* [ TypeHint(WAV_FORMAT_IDS) ] */ wFormatTag As Integer '* format type */
    nChannels As Integer '* number of channels (i.e. mono, stereo...) */
    nSamplesPerSec As Long '* sample rate */
    nAvgBytesPerSec As Long '* for buffer estimation */
    nBlockAlign As Integer '* block size of data */
End Type

Public Type PCMWAVEFORMAT
    wf As WAVEFORMAT
    wBitsPerSample As Integer
End Type

Public Enum MCI_SEQ_DIV
    MCI_SEQ_DIV_PPQN  = (0 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_24  = (1 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_25  = (2 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_30DROP  = (3 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_30  = (4 + MCI_SEQ_OFFSET)
End Enum

Public Enum MCI_SEQ_SET
    MCI_SEQ_FORMAT_SONGPTR  = &H4001
    MCI_SEQ_FILE  = &H4002
    MCI_SEQ_MIDI  = &H4003
    MCI_SEQ_SMPTE  = &H4004
    MCI_SEQ_NONE  = 65533
    MCI_SEQ_MAPPER = 65535
End Enum

Public Enum MCI_SEQ_STATUS
    MCI_SEQ_STATUS_TEMPO  = &H00004002
    MCI_SEQ_STATUS_PORT  = &H00004003
    MCI_SEQ_STATUS_SLAVE  = &H00004007
    MCI_SEQ_STATUS_MASTER  = &H00004008
    MCI_SEQ_STATUS_OFFSET  = &H00004009
    MCI_SEQ_STATUS_DIVTYPE  = &H0000400A
    MCI_SEQ_STATUS_NAME  = &H0000400B
    MCI_SEQ_STATUS_COPYRIGHT  = &H0000400C
End Enum

Public Enum MCI_SEQ_SET_FLAGS
    MCI_SEQ_SET_TEMPO  = &H00010000
    MCI_SEQ_SET_PORT  = &H00020000
    MCI_SEQ_SET_SLAVE  = &H00040000
    MCI_SEQ_SET_MASTER  = &H00080000
    MCI_SEQ_SET_OFFSET  = &H01000000
End Enum

Public Type MCI_SEQ_SET_PARMS
    dwCallback As LongPtr
    dwTimeFormat As MCI_STATUS_TIMEFMT
    dwAudio As Long
    dwTempo As Long
    dwPort As Long
    dwSlave As Long
    dwMaster As Long
    dwOffset As Long
End Type

Public Enum MCI_OVLY_OPEN
    MCI_OVLY_OPEN_WS = &H00010000
    MCI_OVLY_OPEN_PARENT  = &H00020000
End Enum

Public Enum MCI_OVLY_STATUS
    MCI_OVLY_STATUS_HWND  = &H00004001
    MCI_OVLY_STATUS_STRETCH  = &H00004002
End Enum

Public Enum MCI_OVLY_INFO
    MCI_OVLY_INFO_TEXT  = &H00010000
End Enum

Public Enum MCI_OVLY_GETDEVCAPS
    MCI_OVLY_GETDEVCAPS_CAN_STRETCH  = &H00004001
    MCI_OVLY_GETDEVCAPS_CAN_FREEZE  = &H00004002
    MCI_OVLY_GETDEVCAPS_MAX_WINDOWS  = &H00004003
End Enum

Public Enum MCI_OVLY_WINDOW
    MCI_OVLY_WINDOW_HWND  = &H00010000
    MCI_OVLY_WINDOW_STATE  = &H00040000
    MCI_OVLY_WINDOW_TEXT  = &H00080000
    MCI_OVLY_WINDOW_ENABLE_STRETCH  = &H00100000
    MCI_OVLY_WINDOW_DISABLE_STRETCH  = &H00200000
End Enum

Public Const MCI_OVLY_WINDOW_DEFAULT = 0

Public Enum MCI_OVLY_PUT
    MCI_OVLY_RECT  = &H00010000
    MCI_OVLY_PUT_SOURCE  = &H00020000
    MCI_OVLY_PUT_DESTINATION  = &H00040000
    MCI_OVLY_PUT_FRAME  = &H00080000
    MCI_OVLY_PUT_VIDEO  = &H00100000
End Enum

Public Enum MCI_OVLY_WHERE
    MCI_OVLY_WHERE_SOURCE  = &H00020000
    MCI_OVLY_WHERE_DESTINATION  = &H00040000
    MCI_OVLY_WHERE_FRAME  = &H00080000
    MCI_OVLY_WHERE_VIDEO  = &H00100000
End Enum

[ PackingAlignment(1) ]
Public Type MCI_OVLY_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
    dwStyle As MCI_OVLY_OPEN
    hWndParent As LongPtr
End Type
[ PackingAlignment(1) ]
Public Type MCI_OVLY_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwStyle As MCI_OVLY_OPEN
    hWndParent As LongPtr
End Type
[ PackingAlignment(1) ]
Public Type MCI_OVLY_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwStyle As MCI_OVLY_OPEN
    hWndParent As LongPtr
End Type

[ PackingAlignment (1) ]
Public Type MCI_OVLY_WINDOW_PARMSA
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As SHOWWINDOW
    lpstrText As String
End Type
[ PackingAlignment (1) ]
Public Type MCI_OVLY_WINDOW_PARMSW
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As SHOWWINDOW
    lpstrText As LongPtr
End Type
[ PackingAlignment (1) ]
Public Type MCI_OVLY_WINDOW_PARMS
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As SHOWWINDOW
    lpstrText As LongPtr
End Type

Public Type MCI_OVLY_RECT_PARMS
    dwCallback As LongPtr
    rc As RECT
End Type

Public Type MCI_OVLY_SAVE_PARMSA
    dwCallback As LongPtr
    lpfilename As String
    rc As RECT
End Type
Public Type MCI_OVLY_SAVE_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type
Public Type MCI_OVLY_SAVE_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type

Public Type MCI_OVLY_LOAD_PARMSA
    dwCallback As LongPtr
    lpfilename As String
    rc As RECT
End Type
Public Type MCI_OVLY_LOAD_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type
Public Type MCI_OVLY_LOAD_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type




'TODO: Animation and VideoDisc



Public Declare PtrSafe Function mciSendStringA Lib "winmm" (ByVal lpszCommand As String, ByVal lpszReturnString As String, ByVal cchReturn As Long, ByVal hwndCallback As LongPtr) As MCIERROR
Public DeclareWide PtrSafe Function mciSendStringW Lib "winmm" (ByVal lpszommand As LongPtr, ByVal lpszReturnString As LongPtr, ByVal cchReturn As Long, ByVal hwndCallback As LongPtr) As MCIERROR
Public DeclareWide PtrSafe Function mciSendString Lib "winmm" Alias "mciSendStringW" (ByVal lpszCommand As String, ByVal lpszReturnString As String, ByVal cchReturn As Long, ByVal hwndCallback As LongPtr) As MCIERROR
Public Declare PtrSafe Function mciGetErrorStringA Lib "winmm" (ByVal fdwError As MCIERROR, ByVal lpszErrorText As String, ByVal cchErrorText As Long) As BOOL
Public DeclareWide PtrSafe Function mciGetErrorStringW Lib "winmm" (ByVal fdwError As MCIERROR, ByVal lpszErrorText As LongPtr, ByVal cchErrorText As Long) As BOOL
Public DeclareWide PtrSafe Function mciGetErrorString Lib "winmm" Alias "mciGetErrorStringW" (ByVal fdwError As MCIERROR, ByVal lpszErrorText As String, ByVal cchErrorText As Long) As Long
Public Declare PtrSafe Function mciSendCommandA Lib "winmm" (ByVal wDeviceID As Long, ByVal uMessage As MCI_COMMANDS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As Any) As MCIERROR
Public Declare PtrSafe Function mciSendCommandW Lib "winmm" (ByVal wDeviceID As Long, ByVal uMessage As MCI_COMMANDS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As Any) As MCIERROR
Public DeclareWide PtrSafe Function mciSendCommand Lib "winmm" Alias "mciSendCommandW" (ByVal wDeviceID As Long, ByVal uMessage As MCI_COMMANDS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As Any) As MCIERROR
Public Declare PtrSafe Function mciGetCreatorTask Lib "winmm" Alias "mciGetCreatorTask" (ByVal wDeviceID As Long) As LongPtr
Public Declare PtrSafe Function mciGetDeviceIDA Lib "winmm"   (ByVal lpstrName As String) As Long
Public Declare PtrSafe Function mciGetDeviceIDW Lib "winmm" (ByVal lpstrName As LongPtr) As Long
Public DeclareWide PtrSafe Function mciGetDeviceID Lib "winmm" Alias "mciGetDeviceIDW" (ByVal lpstrName As String) As Long
Public Declare PtrSafe Function mciGetDeviceIDFromElementIDA Lib "winmm" (ByVal dwElementID As Long, ByVal lpstrType As String) As Long
Public Declare PtrSafe Function mciGetDeviceIDFromElementIDW Lib "winmm" (ByVal dwElementID As Long, ByVal lpstrType As LongPtr) As Long
Public DeclareWide PtrSafe Function mciGetDeviceIDFromElementID Lib "winmm" Alias "mciGetDeviceIDFromElementIDW" (ByVal dwElementID As Long, ByVal lpstrType As String) As Long
Public DeclareWide PtrSafe Function mciSetYieldProc Lib "winmm" (ByVal mciId As Long, ByVal fpYieldProc As LongPtr, ByVal dwYieldData As Long) As BOOL
Public DeclareWide PtrSafe Function mciGetYieldProc Lib "winmm" (ByVal mciId As Long, pdwYieldData As Long) As BOOL
Public Declare PtrSafe Function mciExecute Lib "winmm" Alias "mciExecute" (ByVal lpstrCommand As String) As Long
#End Region

'Complete
#Region "winmm_mmio"
Public Enum MMIOERR
    MMIOERR_BASE  = 256
    MMIOERR_FILENOTFOUND  = (MMIOERR_BASE + 1) /* file not found */
    MMIOERR_OUTOFMEMORY  = (MMIOERR_BASE + 2) /* out of memory */
    MMIOERR_CANNOTOPEN  = (MMIOERR_BASE + 3) /* cannot open */
    MMIOERR_CANNOTCLOSE  = (MMIOERR_BASE + 4) /* cannot close */
    MMIOERR_CANNOTREAD  = (MMIOERR_BASE + 5) /* cannot read */
    MMIOERR_CANNOTWRITE  = (MMIOERR_BASE + 6) /* cannot write */
    MMIOERR_CANNOTSEEK  = (MMIOERR_BASE + 7) /* cannot seek */
    MMIOERR_CANNOTEXPAND  = (MMIOERR_BASE + 8) /* cannot expand file */
    MMIOERR_CHUNKNOTFOUND  = (MMIOERR_BASE + 9) /* chunk not found */
    MMIOERR_UNBUFFERED  = (MMIOERR_BASE + 10) /* */
    MMIOERR_PATHNOTFOUND  = (MMIOERR_BASE + 11) /* path incorrect */
    MMIOERR_ACCESSDENIED  = (MMIOERR_BASE + 12) /* file was protected */
    MMIOERR_SHARINGVIOLATION = (MMIOERR_BASE + 13) /* file in use */
    MMIOERR_NETWORKERROR  = (MMIOERR_BASE + 14) /* network not responding */
    MMIOERR_TOOMANYOPENFILES  = (MMIOERR_BASE + 15) /* no more file handles */
    MMIOERR_INVALIDFILE  = (MMIOERR_BASE + 16) /* default error file error */
End Enum

[Description("NOTE: Convert to ANSI")]
Public Const CFSEPCHAR   = "+"             /* compound file name separator char. */

Public Enum MMIO_OPENMODE
    MMIO_RWMODE  = &H00000003  ' /* open file for reading/writing/both */
    MMIO_SHAREMODE  = &H00000070  ' /* file sharing mode number */
End Enum

Public Enum MMIO_INFO_FLAGS
    MMIO_CREATE  = &H00001000     /* create new file (or truncate file) */
    MMIO_PARSE  = &H00000100      /* parse new file returning path */
    MMIO_DELETE  = &H00000200     /* create new file (or truncate file) */
    MMIO_EXIST  = &H00004000      /* checks for existence of file */
    MMIO_ALLOCBUF  = &H00010000   /* mmioOpen() should allocate a buffer */
    MMIO_GETTEMP  = &H00020000    /* mmioOpen() should retrieve temp name */
    MMIO_DIRTY  = &H10000000      /* I/O buffer is dirty */
End Enum

Public Enum MMIO_RWMODE
    MMIO_READ  = &H00000000  ' /* open file for reading only */
    MMIO_WRITE  = &H00000001  ' /* open file for writing only */
    MMIO_READWRITE  = &H00000002  ' /* open file for reading and writing */
End Enum

Public Enum MMIO_SHAREMODE
    MMIO_COMPAT  = &H00000000  ' /* compatibility mode */
    MMIO_EXCLUSIVE  = &H00000010  ' /* exclusive-access mode */
    MMIO_DENYWRITE  = &H00000020  ' /* deny writing to other processes */
    MMIO_DENYREAD  = &H00000030  ' /* deny reading to other processes */
    MMIO_DENYNONE = &H00000040  ' /* deny nothing to other processes */
End Enum

[ PackingAlignment (1) ]
Public Type MMIOINFO
   /* TypeHint(MMIO_SHAREMODE, MMIO_RWMODE, MMIO_OPENMODE) ] */ dwFlags As MMIO_INFO_FLAGS '  /* general status flags */
   fccIOProc As Long '   /* pointer to I/O procedure */
   pIOProc As LongPtr '  /* pointer to I/O procedure */
   wErrorRet As MMIOERR '  /* place for error to be returned */
   htask As LongPtr '  /* alternate local task */
   ' /* fields maintained by MMIO /functions during buffered I/O */
   cchBuffer As LONG '  /* size of I/O buffer (or 0L) */
   pchBuffer As LongPtr '  /* start of I/O buffer (or NULL) */
   pchNext As LongPtr '  /* pointer to next byte to read/write */
   pchEndRead As LongPtr '  /* pointer to last valid byte to read */
   pchEndWrite As LongPtr ' /* pointer to last byte to write */
   lBufOffset As LONG ' /* disk offset of start of buffer */
   ' /* fields maintained by I/O procedure */
   lDiskOffset As LONG ' /* disk offset of next read or write */
   adwInfo(0 To 2) As Long ' /* data specific to type of MMIOPROC */
   ' /* other fields maintained by MMIO */
   dwReserved1 As Long ' /* reserved for MMIO use */
   dwReserved2 As Long ' /* reserved for MMIO use */
   hmmio As LongPtr ' /* handle to open file */
End Type

Public Type MMCKINFO
    ckid As Long '  /* chunk ID */
    cksize As Long '  /* chunk size */
    fccType As Long '  /* form type or list type */
    dwDataOffset As Long '  /* offset of data portion of chunk */
    dwFlags As MMIO_INFO_FLAGS '  /* flags used by MMIO functions */
End Type

Public Enum MMIO_MESSAGE
    MMIOM_READ  = MMIO_READ  ' /* read */
    MMIOM_WRITE  = MMIO_WRITE  ' /* write */
    MMIOM_SEEK  = 2  ' /* seek to a new position in file */
    MMIOM_OPEN  = 3  ' /* open file */
    MMIOM_CLOSE  = 4  ' /* close file */
    MMIOM_WRITEFLUSH  = 5  ' /* write and flush */
    MMIOM_RENAME  = 6
    MMIOM_USER = &H8000&  ' /* beginning of user-defined messages */
End Enum

Public Enum MMIO_FOURCC_FLAGS
    MMIO_TOUPPER            = &H0010
End Enum

Public Enum MMIO_INSTALLIOPROC_FLAGS
    MMIO_INSTALLPROC  = &H00010000  ' /* mmioInstallIOProc: install MMIOProc */
    MMIO_GLOBALPROC  = &H10000000  ' /* mmioInstallIOProc: install globally */
    MMIO_REMOVEPROC  = &H00020000  ' /* mmioInstallIOProc: remove MMIOProc */
    MMIO_UNICODEPROC  = &H01000000  ' /* mmioInstallIOProc: Unicode MMIOProc */
    MMIO_FINDPROC  = &H00040000  ' /* mmioInstallIOProc: find an MMIOProc */
End Enum

Public Enum MMIO_CLOSE_FLAGS
    MMIO_FHOPEN = &H0010 /* mmioClose: keep file handle open */
End Enum

Public Enum MMIO_SEEK_ORIGIN
    MMIO_SEEK_SET = 0  ' /* seek to an absolute position */
    MMIO_SEEK_CUR  = 1  ' /* seek relative to current position */
    MMIO_SEEK_END = 2  ' /* seek relative to end of file */
End Enum

Public Enum MMIO_FLUSH_FLAGS
    MMIO_EMPTYBUF = &H0010
End Enum

Public Enum MMIO_DESCEND_FLAGS
    MMIO_FINDCHUNK  = &H0010  ' /* mmioDescend: find a chunk by ID */
    MMIO_FINDRIFF  = &H0020  ' /* mmioDescend: find a LIST chunk */
    MMIO_FINDLIST  = &H0040  ' /* mmioDescend: find a RIFF chunk */
End Enum

Public Enum MMIO_CHUNK_FLAGS
    MMIO_CREATERIFF  = &H0020  ' /* mmioCreateChunk: make a LIST chunk */
    MMIO_CREATELIST  = &H0040  ' /* mmioCreateChunk: make a RIFF chunk */
End Enum

Public Const MMIO_DEFAULTBUFFER = 8192 /* default buffer size */

Public Declare PtrSafe Function mmioStringToFOURCCA Lib "winmm" (ByVal sz As String, ByVal uFlags As MMIO_FOURCC_FLAGS) As Long
Public Declare PtrSafe Function mmioStringToFOURCCW Lib "winmm" (ByVal sz As LongPtr, ByVal uFlags As MMIO_FOURCC_FLAGS) As Long
Public DeclareWide PtrSafe Function mmioStringToFOURCC Lib "winmm" Alias "mmioStringToFOURCCW" (ByVal sz As String, ByVal uFlags As MMIO_FOURCC_FLAGS) As Long
Public Declare PtrSafe Function mmioInstallIOProcA Lib "winmm" (ByVal fccIOProc As Long, ByVal pIOProc As LongPtr, ByVal dwFlags As MMIO_INSTALLIOPROC_FLAGS) As LongPtr
Public Declare PtrSafe Function mmioInstallIOProcW Lib "winmm" (ByVal fccIOProc As Long, ByVal pIOProc As LongPtr, ByVal dwFlags As MMIO_INSTALLIOPROC_FLAGS) As LongPtr
Public DeclareWide PtrSafe Function mmioInstallIOProc Lib "winmm" Alias "mmioInstallIOProcW" (ByVal fccIOProc As Long, ByVal pIOProc As LongPtr, ByVal dwFlags As MMIO_INSTALLIOPROC_FLAGS) As LongPtr
Public Declare PtrSafe Function mmioOpenA Lib "winmm" (ByVal szFileName As String, lpmmioinfo As MMIOINFO, [ TypeHint (MMIO_INFO_FLAGS, MMIO_SHAREMODE , MMIO_RWMODE) ] ByVal fdwOpen As Long) As LongPtr
Public Declare PtrSafe Function mmioOpenW Lib "winmm" (ByVal szFileName As LongPtr, lpmmioinfo As MMIOINFO, [ TypeHint (MMIO_INFO_FLAGS, MMIO_SHAREMODE , MMIO_RWMODE) ] ByVal fdwOpen As Long) As LongPtr
Public DeclareWide PtrSafe Function mmioOpen Lib "winmm" Alias "mmioOpenW" (ByVal szFileName As String, lpmmioinfo As MMIOINFO, [ TypeHint (MMIO_INFO_FLAGS, MMIO_SHAREMODE , MMIO_RWMODE) ] ByVal fdwOpen As Long) As LongPtr
Public Declare PtrSafe Function mmioRenameA Lib "winmm" (ByVal szFileName As String, ByVal SzNewFileName As String, lpmmioinfo As MMIOINFO, ByVal dwRenameFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioRenameW Lib "winmm" (ByVal szFileName As LongPtr, ByVal SzNewFileName As String, lpmmioinfo As MMIOINFO, ByVal dwRenameFlags As Long) As MMIOERR
Public DeclareWide PtrSafe Function mmioRename Lib "winmm" Alias "mmioRenameW" (ByVal szFileName As String, ByVal SzNewFileName As String, lpmmioinfo As MMIOINFO, ByVal dwRenameFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioClose Lib "winmm" (ByVal hmmio As LongPtr, ByVal uFlags As MMIO_CLOSE_FLAGS) As MMIOERR
Public Declare PtrSafe Function mmioRead Lib "winmm" (ByVal hmmio As LongPtr, pch As Byte, ByVal cch As Long) As Long
Public Declare PtrSafe Function mmioWrite Lib "winmm" (ByVal hmmio As LongPtr, pch As Byte, ByVal cch As Long) As Long
Public Declare PtrSafe Function mmioSeek Lib "winmm" (ByVal hmmio As LongPtr, ByVal lOffset As Long, ByVal iOrigin As MMIO_SEEK_ORIGIN) As Long
Public Declare PtrSafe Function mmioGetInfo Lib "winmm" (ByVal hmmio As LongPtr, lpmmioinfo As MMIOINFO, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioSetInfo Lib "winmm" (ByVal hmmio As LongPtr, lpmmioinfo As MMIOINFO, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioSetBuffer Lib "winmm" (ByVal hmmio As LongPtr, ByVal pchBuffer As String, ByVal cchBuffer As Long, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioFlush Lib "winmm" (ByVal hmmio As LongPtr, ByVal uFlags As MMIO_FLUSH_FLAGS) As MMIOERR
Public Declare PtrSafe Function mmioAdvance Lib "winmm" (ByVal hmmio As LongPtr, lpmmioinfo As MMIOINFO, ByVal uFlags As MMIO_RWMODE) As MMIOERR
Public Declare PtrSafe Function mmioSendMessage Lib "winmm" (ByVal hmmio As LongPtr, ByVal uMsg As MMIO_MESSAGE, ByVal lParam1 As LongPtr, ByVal lParam2 As LongPtr) As LongPtr
Public Declare PtrSafe Function mmioDescend Lib "winmm" (ByVal hmmio As LongPtr, pmmcki As MMCKINFO, pmmckiParent As MMCKINFO, ByVal fuDescend As MMIO_DESCEND_FLAGS) As MMIOERR
Public Declare PtrSafe Function mmioAscend Lib "winmm" (ByVal hmmio As LongPtr, lpck As MMCKINFO, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioCreateChunk Lib "winmm" Alias "mmioCreateChunk" (ByVal hmmio As LongPtr, pmmcki As MMCKINFO, ByVal fuCreate As MMIO_CHUNK_FLAGS) As MMIOERR

Public Function mmioFOURCC(ByVal ch0 As Byte, ByVal ch1 As Byte, ByVal ch2 As Byte, ByVal ch3 As Byte) As Long
    Return MAKEFOURCC(ch0, ch1, ch2, ch3)
End Function
#End Region

'Complete
#Region "winmm_midi"
Public Enum MIDIERR
    MIDIERR_UNPREPARED  = (MIDIERR_BASE + 0) /* header not prepared */
    MIDIERR_STILLPLAYING  = (MIDIERR_BASE + 1) /* still something playing */
    MIDIERR_NOMAP  = (MIDIERR_BASE + 2) /* no configured instruments */
    MIDIERR_NOTREADY  = (MIDIERR_BASE + 3) /* hardware is still busy */
    MIDIERR_NODEVICE  = (MIDIERR_BASE + 4) /* port no longer connected */
    MIDIERR_INVALIDSETUP  = (MIDIERR_BASE + 5) /* invalid MIF */
    MIDIERR_BADOPENMODE  = (MIDIERR_BASE + 6) /* operation unsupported w/ open mode */
    MIDIERR_DONT_CONTINUE  = (MIDIERR_BASE + 7) /* thru device 'eating' a message */
    MIDIERR_LASTERROR  = (MIDIERR_BASE + 7) /* last error in range */
End Enum

Public Const MIDIPATCHSIZE = 128

Public Enum MIDI_CALLBACK_MSG
    MIM_OPEN  = MM_MIM_OPEN
    MIM_CLOSE  = MM_MIM_CLOSE
    MIM_DATA  = MM_MIM_DATA
    MIM_LONGDATA  = MM_MIM_LONGDATA
    MIM_ERROR  = MM_MIM_ERROR
    MIM_LONGERROR  = MM_MIM_LONGERROR
    MOM_OPEN  = MM_MOM_OPEN
    MOM_CLOSE  = MM_MOM_CLOSE
    MOM_DONE  = MM_MOM_DONE
    MIM_MOREDATA  = MM_MIM_MOREDATA
    MOM_POSITIONCB  = MM_MOM_POSITIONCB
End Enum

Public Const MIDIMAPPER  As Long = (-1)
Public Const MIDI_MAPPER As Long = (-1)

Public Enum MIDI_IN_OPEN_FLAGS
    MIDI_IO_STATUS = &H00000020
End Enum

Public Enum MIDI_OUT_CACHE_FLAGS
    MIDI_CACHE_ALL  = 1
    MIDI_CACHE_BESTFIT  = 2
    MIDI_CACHE_QUERY  = 3
    MIDI_UNCACHE  = 4
End Enum

Public Enum MIDI_OUT_CAPS_TECH
    MOD_MIDIPORT  = 1 /* output port */
    MOD_SYNTH  = 2 /* generic internal synth */
    MOD_SQSYNTH  = 3 /* square wave internal synth */
    MOD_FMSYNTH  = 4 /* FM internal synth */
    MOD_MAPPER  = 5 /* MIDI mapper */
    MOD_WAVETABLE  = 6 /* hardware wavetable synth */
    MOD_SWSYNTH  = 7 /* software synth */
End Enum

Public Enum MIDI_OUT_CAPS_SUPPORT
    MIDICAPS_VOLUME  = &H0001 /* supports volume control */
    MIDICAPS_LRVOLUME  = &H0002 /* separate left-right volume control */
    MIDICAPS_CACHE  = &H0004
    MIDICAPS_STREAM  = &H0008 /* driver supports midiStreamOut directly */
End Enum

Public Type MIDIOUTCAPSA
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    /* [ TypeHint(MIDI_OUT_CAPS_TECH) ] */ wTechnology As Integer ' /* type of device */
    wVoices As Integer ' /* # of voices (internal synth only) */
    wNotes As Integer ' /* max # of notes (internal synth only) */
    wChannelMask As Integer ' /* channels used (internal synth only) */
    dwSupport As MIDI_OUT_CAPS_SUPPORT ' /* functionality supported by driver */
End Type
Public Type MIDIOUTCAPSW
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(MIDI_OUT_CAPS_TECH) ] */ wTechnology As Integer ' /* type of device */
    wVoices As Integer ' /* # of voices (internal synth only) */
    wNotes As Integer ' /* max # of notes (internal synth only) */
    wChannelMask As Integer ' /* channels used (internal synth only) */
    dwSupport As MIDI_OUT_CAPS_SUPPORT ' /* functionality supported by driver */
End Type
Public Type MIDIOUTCAPS
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(MIDI_OUT_CAPS_TECH) ] */ wTechnology As Integer ' /* type of device */
    wVoices As Integer ' /* # of voices (internal synth only) */
    wNotes As Integer ' /* max # of notes (internal synth only) */
    wChannelMask As Integer ' /* channels used (internal synth only) */
    dwSupport As MIDI_OUT_CAPS_SUPPORT ' /* functionality supported by driver */
End Type

Public Type MIDIINCAPSA
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
End Type
Public Type MIDIINCAPSW
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
End Type
Public Type MIDIINCAPS
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
End Type

Public Type MIDIINCAPS2W
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Public Enum MIDI_HDR_FLAGS
    MHDR_DONE  = &H00000001 /* done bit */
    MHDR_PREPARED  = &H00000002 /* set if header prepared */
    MHDR_INQUEUE  = &H00000004 /* reserved for driver */
    MHDR_ISSTRM  = &H00000008 /* Buffer is stream buffer */
End Enum

[ PackingAlignment (1) ]
Public Type MIDIHDR
    lpData As LongPtr ' /* pointer to locked data block */
    dwBufferLength As Long ' /* length of data in data block */
    dwBytesRecorded As Long ' /* used for input only */
    dwUser As LongPtr ' /* for client's use */
    dwFlags As MIDI_HDR_FLAGS ' /* assorted flags (see defines) */
    lpNext As LongPtr ' /* reserved for driver */
    reserved As LongPtr ' /* reserved for driver */
    dwOffset As Long ' /* Callback offset into buffer */
    dwReserved(0 To 7) As LongPtr ' /* Reserved for MMSYSTEM */
End Type

Public Enum MIDI_EVT_TYPE
    MEVT_F_SHORT = &H00000000
    MEVT_F_LONG  = &H80000000
    MEVT_F_CALLBACK  = &H40000000
End Enum

Public Type MIDIEVENT
    dwDeltaTime As Long ' /* Ticks since last event */
    dwStreamID As Long ' /* Reserved; must be zero */
    dwEvent As MIDI_EVT_TYPE ' /* Event type and parameters */
    dwParms(0 To 0) As Long ' /* Parameters if this is a long event */
End Type

Public Type MIDISTRMBUFFVER
    dwVersion As Long ' /* Stream buffer format version */
    dwMid As Long ' /* Manufacturer ID as defined in MMREG.H */
    dwOEMVersion As Long ' /* Manufacturer version for custom ext */
End Type

Public Const MEVT_SHORTMSG As Byte = (&H00) /* parm = shortmsg for midiOutShortMsg */
Public Const MEVT_TEMPO    As Byte = (&H01) /* parm = new tempo in microsec/qn */
Public Const MEVT_NOP      As Byte = (&H02) /* parm = unused; does nothing */

Public Const MEVT_LONGMSG  As Byte = (&H80) /* parm = bytes to send verbatim */
Public Const MEVT_COMMENT  As Byte = (&H82) /* parm = comment data */
Public Const MEVT_VERSION  As Byte = (&H84) /* parm = MIDISTRMBUFFVER struct */

Public Const MIDISTRM_ERROR = (-2)

Public Enum MIDI_STRMPROP
    MIDIPROP_SET  = &H80000000
    MIDIPROP_GET  = &H40000000
    MIDIPROP_TIMEDIV  = &H00000001
    MIDIPROP_TEMPO  = &H00000002
End Enum

Public Type MIDIPROPTIMEDIV
    cbStruct As Long
    dwTimeDiv As Long
End Type
Public Type MIDIPROPTEMPO
    cbStruct As Long
    dwTempo As Long
End Type



Public Declare PtrSafe Function midiOutGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function midiStreamOpen Lib "winmm" (phms As LongPtr, uDeviceID As Long, ByVal cMidi As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal fdwOpen As MMDriverCallback) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamClose Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamProperty Lib "winmm" (ByVal hms As LongPtr, lppropdata As Byte, ByVal dwProperty As MIDI_STRMPROP) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamPosition Lib "winmm" (ByVal hms As LongPtr, lpmmt As MMTIME, ByVal cbmmt As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamOut Lib "winmm" (ByVal hms As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamPause Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamRestart Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamStop Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiConnect Lib "winmm" (ByVal hmi As LongPtr, ByVal hmo As LongPtr, ByVal pReserved As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiDisconnect Lib "winmm" (ByVal hmi As LongPtr, ByVal hmo As LongPtr, ByVal pReserved As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetVolume Lib "winmm" (ByVal hms As LongPtr, pdwVolume As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutSetVolume Lib "winmm" (ByVal hms As LongPtr, ByVal dwVolume As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutOpen Lib "winmm" (phmo As LongPtr, ByVal uDeviceID As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal fdwOpen As MMDriverCallback) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutClose Lib "winmm" (ByVal hmo As LongPtr) As MIDIERR
Public Declare PtrSafe Function midiOutPrepareHeader Lib "winmm" (ByVal hmo As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutUnprepareHeader Lib "winmm" (ByVal hmo As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutShortMsg Lib "winmm" (ByVal hmo As LongPtr, ByVal dwMsg As Long) As MIDIERR
Public Declare PtrSafe Function midiOutGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, pmoc As MIDIOUTCAPSA, ByVal cbmoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, pmoc As MIDIOUTCAPSW, ByVal cbmoc As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiOutGetDevCaps Lib "winmm" Alias "midiOutGetDevCapsW" (ByVal uDeviceID As LongPtr, pmoc As MIDIOUTCAPS, ByVal cbmoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetErrorTextA Lib "winmm" ([ TypeHint (MMGeneralErrorCodes, MIDIERR) ] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetErrorTextW Lib "winmm" ([ TypeHint (MMGeneralErrorCodes, MIDIERR) ] ByVal mmrError As Long, ByVal pszText As LongPtr, ByVal cchText As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiOutGetErrorText Lib "winmm" Alias "midiOutGetErrorTextW" ([ TypeHint (MMGeneralErrorCodes, MIDIERR) ] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutLongMsg Lib "winmm" (ByVal hmo As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MIDIERR
Public Declare PtrSafe Function midiOutReset Lib "winmm" (ByVal hmo As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutCachePatches Lib "winmm" (ByVal hmo As LongPtr, ByVal uBank As Long, pwpa As Integer, ByVal fuCache As MIDI_OUT_CACHE_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutCacheDrumPatches Lib "winmm" (ByVal hmo As LongPtr, ByVal uPatch As Long, pwkya As Integer, ByVal fuCache As MIDI_OUT_CACHE_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetID Lib "winmm" (ByVal hmo As LongPtr, puDeviceID As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutMessage Lib "winmm" (ByVal hmo As LongPtr, ByVal uMsg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes

Public Declare PtrSafe Function midiInGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function midiInGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, pmic As MIDIINCAPSA, ByVal cbmic As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, pmic As MIDIINCAPSW, ByVal cbmic As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiInGetDevCaps Lib "winmm" Alias "midiInGetDevCapsW" (ByVal uDeviceID As LongPtr, pmic As MIDIINCAPS, ByVal cbmic As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetErrorTextA Lib "winmm" ([ TypeHint (MMGeneralErrorCodes, MIDIERR) ] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetErrorTextW Lib "winmm" ([ TypeHint (MMGeneralErrorCodes, MIDIERR) ] ByVal mmrError As Long, ByVal pszText As LongPtr, ByVal cchText As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiInGetErrorText Lib "winmm" Alias "midiInGetErrorTextW" ([ TypeHint (MMGeneralErrorCodes, MIDIERR) ] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInOpen Lib "winmm" (phmi As LongPtr, ByVal uDeviceID As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal dwFlags As MIDI_IN_OPEN_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInClose Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInPrepareHeader Lib "winmm" Alias "midiInPrepareHeader" (ByVal hmi As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInUnprepareHeader Lib "winmm" Alias "midiInUnprepareHeader" (ByVal hmi As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MIDIERR
Public Declare PtrSafe Function midiInAddBuffer Lib "winmm" (ByVal hmi As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MIDIERR
Public Declare PtrSafe Function midiInStart Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInStop Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInReset Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetID Lib "winmm" (ByVal hmi As LongPtr, lpuDeviceID As Long) As Long
Public Declare PtrSafe Function midiInMessage Lib "winmm" (ByVal hmi As LongPtr, ByVal uMsg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes
#End Region


'Complete
#Region "winmm_joystick"
Public Const MAX_JOYSTICKOEMVXDNAME = 260
Public Enum JOY_ERROR
    JOYERR_NOERROR  = (0) /* no error */
    JOYERR_PARMS  = (JOYERR_BASE+5) /* bad parameters */
    JOYERR_NOCANDO  = (JOYERR_BASE+6) /* request not completed */
    JOYERR_UNPLUGGED  = (JOYERR_BASE+7) /* joystick is unplugged */
End Enum

Public Enum JOY_BUTTONS
    JOY_BUTTON1  = &H0001
    JOY_BUTTON2  = &H0002
    JOY_BUTTON3  = &H0004
    JOY_BUTTON4  = &H0008
    JOY_BUTTON1CHG  = &H0100
    JOY_BUTTON2CHG  = &H0200
    JOY_BUTTON3CHG  = &H0400
    JOY_BUTTON4CHG  = &H0800
End Enum
Public Enum JOY_BUTTONS_EX
    JOY_BUTTON5  = &H00000010
    JOY_BUTTON6  = &H00000020
    JOY_BUTTON7  = &H00000040
    JOY_BUTTON8  = &H00000080
    JOY_BUTTON9  = &H00000100
    JOY_BUTTON10  = &H00000200
    JOY_BUTTON11  = &H00000400
    JOY_BUTTON12  = &H00000800
    JOY_BUTTON13  = &H00001000
    JOY_BUTTON14  = &H00002000
    JOY_BUTTON15  = &H00004000
    JOY_BUTTON16  = &H00008000&
    JOY_BUTTON17  = &H00010000
    JOY_BUTTON18  = &H00020000
    JOY_BUTTON19  = &H00040000
    JOY_BUTTON20  = &H00080000
    JOY_BUTTON21  = &H00100000
    JOY_BUTTON22  = &H00200000
    JOY_BUTTON23  = &H00400000
    JOY_BUTTON24  = &H00800000
    JOY_BUTTON25  = &H01000000
    JOY_BUTTON26  = &H02000000
    JOY_BUTTON27  = &H04000000
    JOY_BUTTON28  = &H08000000
    JOY_BUTTON29  = &H10000000
    JOY_BUTTON30  = &H20000000
    JOY_BUTTON31  = &H40000000
    JOY_BUTTON32  = &H80000000
End Enum

'[IgnoreWarnings(TB0012) ]
Public Enum JOY_POV
    JOY_POVCENTERED = &HFFFF%
    JOY_POVFORWARD  = 0
    JOY_POVRIGHT  = 9000
    JOY_POVBACKWARD  = 18000
    JOY_POVLEFT  = 27000
End Enum

Public Enum JOY_RETURN
    JOY_RETURNX  = &H00000001
    JOY_RETURNY = &H00000002
    JOY_RETURNZ  = &H00000004
    JOY_RETURNR  = &H00000008
    JOY_RETURNU = &H00000010 /* axis 5 */
    JOY_RETURNV  = &H00000020 /* axis 6 */
    JOY_RETURNPOV  = &H00000040
    JOY_RETURNBUTTONS  = &H00000080
    JOY_RETURNRAWDATA  = &H00000100
    JOY_RETURNPOVCTS  = &H00000200
    JOY_RETURNCENTERED  = &H00000400
    JOY_USEDEADZONE  = &H00000800
    JOY_RETURNALL  = (JOY_RETURNX  Or  JOY_RETURNY  Or  JOY_RETURNZ  Or  JOY_RETURNR  Or  JOY_RETURNU  Or  JOY_RETURNV  Or  JOY_RETURNPOV  Or  JOY_RETURNBUTTONS)
' End Enum

' Public Enum JOY_CAL
    JOY_CAL_READALWAYS  = &H00010000
    JOY_CAL_READXYONLY  = &H00020000
    JOY_CAL_READ3  = &H00040000
    JOY_CAL_READ4  = &H00080000
    JOY_CAL_READXONLY  = &H00100000
    JOY_CAL_READYONLY  = &H00200000
    JOY_CAL_READ5  = &H00400000
    JOY_CAL_READ6  = &H00800000
    JOY_CAL_READZONLY  = &H01000000
    JOY_CAL_READRONLY  = &H02000000
    JOY_CAL_READUONLY  = &H04000000
    JOY_CAL_READVONLY  = &H08000000
End Enum

Public Enum JOY_ID_CONST
    JOYSTICKID1  = 0
    JOYSTICKID2  = 1
End Enum

Public Enum JOY_CAPS
    JOYCAPS_HASZ  = &H0001
    JOYCAPS_HASR  = &H0002
    JOYCAPS_HASU  = &H0004
    JOYCAPS_HASV  = &H0008
    JOYCAPS_HASPOV  = &H0010
    JOYCAPS_POV4DIR  = &H0020
    JOYCAPS_POVCTS  = &H0040
End Enum

Public Type JOYCAPSA
    wMid As Integer '* manufacturer ID */
    wPid As Integer '* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte '* product name (NULL terminated string) */
    wXmin As Long '* minimum x position value */
    wXmax As Long '* maximum x position value */
    wYmin As Long '* minimum y position value */
    wYmax As Long '* maximum y position value */
    wZmin As Long '* minimum z position value */
    wZmax As Long '* maximum z position value */
    wNumButtons As Long '* number of buttons */
    wPeriodMin As Long '* minimum message period when captured */
    wPeriodMax As Long '* maximum message period when captured */
    wRmin As Long '* minimum r position value */
    wRmax As Long '* maximum r position value */
    wUmin As Long '* minimum u (5th axis) position value */
    wUmax As Long '* maximum u (5th axis) position value */
    wVmin As Long '* minimum v (6th axis) position value */
    wVmax As Long '* maximum v (6th axis) position value */
    wCaps As JOY_CAPS '* joystick capabilites */
    wMaxAxes As Long '* maximum number of axes supported */
    wNumAxes As Long '* number of axes in use */
    wMaxButtons As Long '* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Byte '* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Byte '* OEM VxD in use */
End Type
Public Type JOYCAPSW
    wMid As Integer '* manufacturer ID */
    wPid As Integer '* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer '* product name (NULL terminated string) */
    wXmin As Long '* minimum x position value */
    wXmax As Long '* maximum x position value */
    wYmin As Long '* minimum y position value */
    wYmax As Long '* maximum y position value */
    wZmin As Long '* minimum z position value */
    wZmax As Long '* maximum z position value */
    wNumButtons As Long '* number of buttons */
    wPeriodMin As Long '* minimum message period when captured */
    wPeriodMax As Long '* maximum message period when captured */
    wRmin As Long '* minimum r position value */
    wRmax As Long '* maximum r position value */
    wUmin As Long '* minimum u (5th axis) position value */
    wUmax As Long '* maximum u (5th axis) position value */
    wVmin As Long '* minimum v (6th axis) position value */
    wVmax As Long '* maximum v (6th axis) position value */
    wCaps As JOY_CAPS '* joystick capabilites */
    wMaxAxes As Long '* maximum number of axes supported */
    wNumAxes As Long '* number of axes in use */
    wMaxButtons As Long '* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer '* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer '* OEM VxD in use */
End Type
Public Type JOYCAPS
    wMid As Integer '* manufacturer ID */
    wPid As Integer '* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer '* product name (NULL terminated string) */
    wXmin As Long '* minimum x position value */
    wXmax As Long '* maximum x position value */
    wYmin As Long '* minimum y position value */
    wYmax As Long '* maximum y position value */
    wZmin As Long '* minimum z position value */
    wZmax As Long '* maximum z position value */
    wNumButtons As Long '* number of buttons */
    wPeriodMin As Long '* minimum message period when captured */
    wPeriodMax As Long '* maximum message period when captured */
    wRmin As Long '* minimum r position value */
    wRmax As Long '* maximum r position value */
    wUmin As Long '* minimum u (5th axis) position value */
    wUmax As Long '* maximum u (5th axis) position value */
    wVmin As Long '* minimum v (6th axis) position value */
    wVmax As Long '* maximum v (6th axis) position value */
    wCaps As JOY_CAPS '* joystick capabilites */
    wMaxAxes As Long '* maximum number of axes supported */
    wNumAxes As Long '* number of axes in use */
    wMaxButtons As Long '* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer '* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer '* OEM VxD in use */
End Type
Public Type JOYCAPS2A
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    wXmin As Long ' /* minimum x position value */
    wXmax As Long ' /* maximum x position value */
    wYmin As Long ' /* minimum y position value */
    wYmax As Long ' /* maximum y position value */
    wZmin As Long ' /* minimum z position value */
    wZmax As Long ' /* maximum z position value */
    wNumButtons As Long ' /* number of buttons */
    wPeriodMin As Long ' /* minimum message period when captured */
    wPeriodMax As Long ' /* maximum message period when captured */
    wRmin As Long ' /* minimum r position value */
    wRmax As Long ' /* maximum r position value */
    wUmin As Long ' /* minimum u (5th axis) position value */
    wUmax As Long ' /* maximum u (5th axis) position value */
    wVmin As Long ' /* minimum v (6th axis) position value */
    wVmax As Long ' /* maximum v (6th axis) position value */
    wCaps As JOY_CAPS ' /* joystick capabilites */
    wMaxAxes As Long ' /* maximum number of axes supported */
    wNumAxes As Long ' /* number of axes in use */
    wMaxButtons As Long ' /* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Byte ' /* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Byte ' /* OEM VxD in use */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type JOYCAPS2W
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    wXmin As Long ' /* minimum x position value */
    wXmax As Long ' /* maximum x position value */
    wYmin As Long ' /* minimum y position value */
    wYmax As Long ' /* maximum y position value */
    wZmin As Long ' /* minimum z position value */
    wZmax As Long ' /* maximum z position value */
    wNumButtons As Long ' /* number of buttons */
    wPeriodMin As Long ' /* minimum message period when captured */
    wPeriodMax As Long ' /* maximum message period when captured */
    wRmin As Long ' /* minimum r position value */
    wRmax As Long ' /* maximum r position value */
    wUmin As Long ' /* minimum u (5th axis) position value */
    wUmax As Long ' /* maximum u (5th axis) position value */
    wVmin As Long ' /* minimum v (6th axis) position value */
    wVmax As Long ' /* maximum v (6th axis) position value */
    wCaps As JOY_CAPS ' /* joystick capabilites */
    wMaxAxes As Long ' /* maximum number of axes supported */
    wNumAxes As Long ' /* number of axes in use */
    wMaxButtons As Long ' /* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer ' /* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer ' /* OEM VxD in use */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type JOYCAPS2
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    wXmin As Long ' /* minimum x position value */
    wXmax As Long ' /* maximum x position value */
    wYmin As Long ' /* minimum y position value */
    wYmax As Long ' /* maximum y position value */
    wZmin As Long ' /* minimum z position value */
    wZmax As Long ' /* maximum z position value */
    wNumButtons As Long ' /* number of buttons */
    wPeriodMin As Long ' /* minimum message period when captured */
    wPeriodMax As Long ' /* maximum message period when captured */
    wRmin As Long ' /* minimum r position value */
    wRmax As Long ' /* maximum r position value */
    wUmin As Long ' /* minimum u (5th axis) position value */
    wUmax As Long ' /* maximum u (5th axis) position value */
    wVmin As Long ' /* minimum v (6th axis) position value */
    wVmax As Long ' /* maximum v (6th axis) position value */
    wCaps As JOY_CAPS ' /* joystick capabilites */
    wMaxAxes As Long ' /* maximum number of axes supported */
    wNumAxes As Long ' /* number of axes in use */
    wMaxButtons As Long ' /* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer ' /* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer ' /* OEM VxD in use */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Public Type JOYINFO
    wXpos As Long '  /* x position */
    wYpos As Long '   /* y position */
    wZpos As Long '    /* z position */
    wButtons As JOY_BUTTONS '     /* button states */
End Type

Public Type JOYINFOEX
    dwSize As Long ' /* size of structure */
    dwFlags As JOY_RETURN '  /* flags to indicate what to return */
    dwXpos As Long '   /* x position */
    dwYpos As Long '   /* y position */
    dwZpos As Long '   /* z position */
    dwRpos As Long '    /* rudder/4th axis position */
    dwUpos As Long '   /* 5th axis position */
    dwVpos As Long '   /* 6th axis position */
    dwButtons As JOY_BUTTONS_EX '  /* button states */
    dwButtonNumber As JOY_BUTTONS_EX '    /* current button number pressed */
    dwPOV As JOY_POV '  /* point of view state */
    dwReserved1 As Long '    /* reserved for communication between winmm & driver */
    dwReserved2 As Long '  /* reserved for future expansion */
End Type

Public Declare PtrSafe Function joyGetDevCapsA Lib "winmm" (ByVal id As LongPtr, lpCaps As JOYCAPSA, ByVal uSize As Long) As JOY_ERROR
Public Declare PtrSafe Function joyGetDevCapsW Lib "winmm" (ByVal id As LongPtr, lpCaps As JOYCAPSW, ByVal uSize As Long) As JOY_ERROR
Public DeclareWide PtrSafe Function joyGetDevCaps Lib "winmm" Alias "joyGetDevCapsW" (ByVal id As LongPtr, lpCaps As JOYCAPS, ByVal uSize As Long) As JOY_ERROR
Public Declare PtrSafe Function joyGetPos Lib "winmm" (ByVal uJoyID As Long, pji As JOYINFO) As JOY_ERROR
Public Declare PtrSafe Function joyGetPosEx Lib "winmm" (ByVal uJoyID As Long, pji As JOYINFOEX) As JOY_ERROR
Public Declare PtrSafe Function joyGetNumDevs Lib "winmm" () As JOY_ERROR
Public Declare PtrSafe Function joyGetThreshold Lib "winmm" (ByVal id As Long, lpuThreshold As Long) As JOY_ERROR
Public Declare PtrSafe Function joyReleaseCapture Lib "winmm" (ByVal id As Long) As JOY_ERROR
Public Declare PtrSafe Function joySetCapture Lib "winmm"   (ByVal hwnd As LongPtr, ByVal uID As Long, ByVal uPeriod As Long, ByVal fChanged As BOOL) As JOY_ERROR
Public Declare PtrSafe Function joySetThreshold Lib "winmm" (ByVal id As Long, ByVal uThreshold As Long) As JOY_ERROR
Public Declare PtrSafe Function joyConfigChanged Lib "winmm" (ByVal dwFlags As Long) As JOY_ERROR

#End Region

'Complete
#Region "winmm_aux"
Public Const AUX_MAPPER As Long = -1

Public Enum AUX_TECHNOLOGY
    AUXCAPS_CDAUDIO  = 1 /* audio from internal CD-ROM drive */
    AUXCAPS_AUXIN  = 2 /* audio from auxiliary input jacks */
End Enum

Public Enum AUX_SUPPORT
    AUXCAPS_VOLUME = &H0001 /* supports volume control */
    AUXCAPS_LRVOLUME = &H0002 /* separate left-right volume control */ '
End Enum


Public Type AUXCAPSA
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
End Type
Public Type AUXCAPSW
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
End Type
Public Type AUXCAPS
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
End Type

Public Type AUXCAPS2A
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type AUXCAPS2W
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type AUXCAPS2
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Declare PtrSafe Function auxGetNumDevs Lib "winmm" () As Long
Declare PtrSafe Function auxGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, pac As AUXCAPS, ByVal cbac As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, pac As AUXCAPS, ByVal cbac As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxGetDevCaps Lib "winmm" Alias "auxGetDevCapsW" (ByVal uDeviceID As LongPtr, pac As AUXCAPS, ByVal cbac As Long) As MMGeneralErrorCodes

Declare PtrSafe Function auxSetVolume Lib "winmm" (ByVal uDeviceID As Long, ByVal dwVolume As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxGetVolume Lib "winmm" (ByVal uDeviceID As Long, pdwVolume As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxOutMessage Lib "winmm" (ByVal uDeviceID As Long, ByVal uMsg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes
#End Region

'Complete
#Region "winmm_wave"
Public Const MM_MICROSOFT              =    1 /* Microsoft Corporation */
'Microsoft Product IDs
[ Description ("Midi Mapper") ] Public Const MM_MIDI_MAPPER  = 1
[ Description("Wave Mapper") ] Public Const MM_WAVE_MAPPER  = 2 
[ Description("Sound Blaster MIDI output port") ] Public Const MM_SNDBLST_MIDIOUT  = 3 
[ Description("Sound Blaster MIDI input port") ] Public Const MM_SNDBLST_MIDIIN  = 4 
[ Description("Sound Blaster internal synth") ] Public Const MM_SNDBLST_SYNTH  = 5 
[ Description("Sound Blaster waveform output") ] Public Const MM_SNDBLST_WAVEOUT  = 6 
[ Description("Sound Blaster waveform input") ] Public Const MM_SNDBLST_WAVEIN  = 7 
[ Description ("Ad Lib Compatible synth") ] Public Const MM_ADLIB  = 9 
[ Description ("MPU 401 compatible MIDI output port") ] Public Const MM_MPU401_MIDIOUT  = 10 
[ Description ("MPU 401 compatible MIDI input port") ] Public Const MM_MPU401_MIDIIN  = 11 
[ Description("Joystick adapter") ] Public Const MM_PC_JOYSTICK  = 12 
[ Description ("PC speaker waveform output") ] Public Const MM_PCSPEAKER_WAVEOUT  = 13 
[ Description("MS Audio Board waveform input") ] Public Const MM_MSFT_WSS_WAVEIN  = 14 
[ Description("MS Audio Board waveform output") ] Public Const MM_MSFT_WSS_WAVEOUT  = 15 
[ Description("MS Audio Board Stereo FM synth") ] Public Const MM_MSFT_WSS_FMSYNTH_STEREO  = 16 
[ Description("MS Audio Board Mixer Driver") ] Public Const MM_MSFT_WSS_MIXER  = 17
[ Description("MS OEM Audio Board waveform input") ] Public Const MM_MSFT_WSS_OEM_WAVEIN  = 18 
[ Description ("MS OEM Audio Board waveform output") ] Public Const MM_MSFT_WSS_OEM_WAVEOUT  = 19 
[ Description("MS OEM Audio Board Stereo FM Synth") ] Public Const MM_MSFT_WSS_OEM_FMSYNTH_STEREO  = 20 
[ Description ("MS Audio Board Aux. Port") ] Public Const MM_MSFT_WSS_AUX  = 21 
[ Description ("MS OEM Audio Aux Port") ] Public Const MM_MSFT_WSS_OEM_AUX  = 22
[ Description("MS Vanilla driver waveform input") ] Public Const MM_MSFT_GENERIC_WAVEIN  = 23 
[ Description("MS Vanilla driver wavefrom output") ] Public Const MM_MSFT_GENERIC_WAVEOUT  = 24 
[ Description("MS Vanilla driver MIDI in") ] Public Const MM_MSFT_GENERIC_MIDIIN  = 25 
[ Description("MS Vanilla driver MIDI external out") ] Public Const MM_MSFT_GENERIC_MIDIOUT  = 26 
[ Description("MS Vanilla driver MIDI synthesizer") ] Public Const MM_MSFT_GENERIC_MIDISYNTH  = 27 
[ Description("MS Vanilla driver aux (line in)") ] Public Const MM_MSFT_GENERIC_AUX_LINE  = 28 
[ Description("MS Vanilla driver aux (mic)") ] Public Const MM_MSFT_GENERIC_AUX_MIC  = 29 
[ Description("MS Vanilla driver aux (CD)") ] Public Const MM_MSFT_GENERIC_AUX_CD  = 30 
[ Description ("MS OEM Audio Board Mixer Driver") ] Public Const MM_MSFT_WSS_OEM_MIXER  = 31 
[ Description("MS Audio Compression Manager") ] Public Const MM_MSFT_MSACM  = 32 
[ Description("MS ADPCM Codec") ] Public Const MM_MSFT_ACM_MSADPCM  = 33 
[ Description ("IMA ADPCM Codec") ] Public Const MM_MSFT_ACM_IMAADPCM  = 34 
[ Description("MS Filter") ] Public Const MM_MSFT_ACM_MSFILTER  = 35 
[ Description("GSM 610 codec") ] Public Const MM_MSFT_ACM_GSM610  = 36 
[ Description("G.711 codec") ] Public Const MM_MSFT_ACM_G711  = 37 
[ Description("PCM converter") ] Public Const MM_MSFT_ACM_PCM  = 38 

'  Microsoft Windows Sound System drivers
[ Description ("Sound Blaster 16 waveform input") ] Public Const MM_WSS_SB16_WAVEIN  = 39 
[ Description("Sound Blaster 16 waveform output") ] Public Const MM_WSS_SB16_WAVEOUT  = 40 
[ Description("Sound Blaster 16 midi-in") ] Public Const MM_WSS_SB16_MIDIIN  = 41 
 [ Description("Sound Blaster 16 midi out") ] Public Const MM_WSS_SB16_MIDIOUT  = 42
[ Description ("Sound Blaster 16 FM Synthesis") ] Public Const MM_WSS_SB16_SYNTH  = 43 
[ Description("Sound Blaster 16 aux (line in)") ] Public Const MM_WSS_SB16_AUX_LINE  = 44 
[ Description("Sound Blaster 16 aux (CD)") ] Public Const MM_WSS_SB16_AUX_CD  = 45 
[ Description("Sound Blaster 16 mixer device") ] Public Const MM_WSS_SB16_MIXER  = 46 
[ Description ("Sound Blaster Pro waveform input") ] Public Const MM_WSS_SBPRO_WAVEIN  = 47 
[ Description("Sound Blaster Pro waveform output") ] Public Const MM_WSS_SBPRO_WAVEOUT  = 48 
[ Description("Sound Blaster Pro midi in") ] Public Const MM_WSS_SBPRO_MIDIIN  = 49 
[ Description ("Sound Blaster Pro midi out") ] Public Const MM_WSS_SBPRO_MIDIOUT  = 50 
[ Description("Sound Blaster Pro FM synthesis") ] Public Const MM_WSS_SBPRO_SYNTH  = 51 
[ Description("Sound Blaster Pro aux (line in )") ] Public Const MM_WSS_SBPRO_AUX_LINE  = 52 
[ Description ("Sound Blaster Pro aux (CD)") ] Public Const MM_WSS_SBPRO_AUX_CD  = 53 
[ Description("Sound Blaster Pro mixer") ] Public Const MM_WSS_SBPRO_MIXER  = 54 
[ Description("WSS NT wave in") ] Public Const MM_MSFT_WSS_NT_WAVEIN  = 55 
[ Description("WSS NT wave out") ] Public Const MM_MSFT_WSS_NT_WAVEOUT  = 56 
[ Description("WSS NT FM synth") ] Public Const MM_MSFT_WSS_NT_FMSYNTH_STEREO  = 57 
[ Description ("WSS NT mixer") ] Public Const MM_MSFT_WSS_NT_MIXER  = 58 
[ Description("WSS NT aux") ] Public Const MM_MSFT_WSS_NT_AUX  = 59 
[ Description("Sound Blaster 16 waveform input") ] Public Const MM_MSFT_SB16_WAVEIN  = 60 
[ Description("Sound Blaster 16 waveform output") ] Public Const MM_MSFT_SB16_WAVEOUT  = 61 
[ Description("Sound Blaster 16 midi-in") ] Public Const MM_MSFT_SB16_MIDIIN  = 62 
[ Description("Sound Blaster 16 midi out") ] Public Const MM_MSFT_SB16_MIDIOUT  = 63 
[ Description("Sound Blaster 16 FM Synthesis") ] Public Const MM_MSFT_SB16_SYNTH  = 64 
[ Description("Sound Blaster 16 aux (line in)") ] Public Const MM_MSFT_SB16_AUX_LINE  = 65 
[ Description("Sound Blaster 16 aux (CD)") ] Public Const MM_MSFT_SB16_AUX_CD  = 66 
[ Description("Sound Blaster 16 mixer device") ] Public Const MM_MSFT_SB16_MIXER  = 67 
[ Description("Sound Blaster Pro waveform input") ] Public Const MM_MSFT_SBPRO_WAVEIN  = 68 
[ Description("Sound Blaster Pro waveform output") ] Public Const MM_MSFT_SBPRO_WAVEOUT  = 69 
[ Description ("Sound Blaster Pro midi in") ] Public Const MM_MSFT_SBPRO_MIDIIN  = 70 
[ Description ("Sound Blaster Pro midi out") ] Public Const MM_MSFT_SBPRO_MIDIOUT  = 71 
[ Description("Sound Blaster Pro FM synthesis") ] Public Const MM_MSFT_SBPRO_SYNTH  = 72 
[ Description("Sound Blaster Pro aux (line in)") ] Public Const MM_MSFT_SBPRO_AUX_LINE  = 73 
[ Description("Sound Blaster Pro aux (CD)") ] Public Const MM_MSFT_SBPRO_AUX_CD  = 74 
[ Description("Sound Blaster Pro mixer") ] Public Const MM_MSFT_SBPRO_MIXER  = 75 
[ Description ("Yamaha OPL2/OPL3 compatible FM synthesis") ] Public Const MM_MSFT_MSOPL_SYNTH  = 76 
[ Description ("Voice Modem Serial Line Wave Input") ] Public Const MM_MSFT_VMDMS_LINE_WAVEIN  = 80 
[ Description ("Voice Modem Serial Line Wave Output") ] Public Const MM_MSFT_VMDMS_LINE_WAVEOUT  = 81 
[ Description ("Voice Modem Serial Handset Wave Input") ] Public Const MM_MSFT_VMDMS_HANDSET_WAVEIN  = 82 
[ Description("Voice Modem Serial Handset Wave Output") ] Public Const MM_MSFT_VMDMS_HANDSET_WAVEOUT  = 83 
[ Description("Voice Modem Wrapper Line Wave Input") ] Public Const MM_MSFT_VMDMW_LINE_WAVEIN  = 84 
[ Description ("Voice Modem Wrapper Line Wave Output") ] Public Const MM_MSFT_VMDMW_LINE_WAVEOUT  = 85 
[ Description ("Voice Modem Wrapper Handset Wave Input") ] Public Const MM_MSFT_VMDMW_HANDSET_WAVEIN  = 86 
[ Description ("Voice Modem Wrapper Handset Wave Output") ] Public Const MM_MSFT_VMDMW_HANDSET_WAVEOUT  = 87 
[ Description("Voice Modem Wrapper Mixer") ] Public Const MM_MSFT_VMDMW_MIXER  = 88 
[ Description("Voice Modem Game Compatible Wave Device") ] Public Const MM_MSFT_VMDM_GAME_WAVEOUT  = 89 
[ Description("Voice Modem Game Compatible Wave Device") ] Public Const MM_MSFT_VMDM_GAME_WAVEIN  = 90 
Public Const MM_MSFT_ACM_MSNAUDIO  = 91
Public Const MM_MSFT_ACM_MSG723  = 92
Public Const MM_MSFT_ACM_MSRT24  = 93
[ Description ("Generic id for WDM Audio drivers") ] Public Const MM_MSFT_WDMAUDIO_WAVEOUT  = 100
[ Description ("Generic id for WDM Audio drivers") ] Public Const MM_MSFT_WDMAUDIO_WAVEIN  = 101
[ Description ("Generic id for WDM Audio drivers") ] Public Const MM_MSFT_WDMAUDIO_MIDIOUT  = 102 
[ Description ("Generic id for WDM Audio drivers") ] Public Const MM_MSFT_WDMAUDIO_MIDIIN  = 103 
[ Description("Generic id for WDM Audio drivers") ] Public Const MM_MSFT_WDMAUDIO_MIXER  = 104 
[ Description ("Generic id for WDM Audio drivers") ] Public Const MM_MSFT_WDMAUDIO_AUX  = 105 

Public Enum WAVECAPS_SUPPORT_FLAGS
    WAVECAPS_PITCH  = &H0001 /* supports pitch control */
    WAVECAPS_PLAYBACKRATE = &H0002 /* supports playback rate control */
    WAVECAPS_VOLUME  = &H0004 /* supports volume control */
    WAVECAPS_LRVOLUME  = &H0008 /* separate left-right volume control */
    WAVECAPS_SYNC  = &H0010
    WAVECAPS_SAMPLEACCURATE  = &H0020
End Enum
Public Const MAXPNAMELEN = 32
Public Type WAVEOUTCAPSA
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
End Type
Public Type WAVEOUTCAPSW
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
End Type
Public Type WAVEOUTCAPS
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
End Type
Public Type WAVEOUTCAPS2A
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEOUTCAPS2W
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEOUTCAPS2
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEINCAPSA
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
End Type
Public Type WAVEINCAPSW
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
End Type
Public Type WAVEINCAPS
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
End Type
Public Type WAVEINCAPS2A
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEINCAPS2W
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEINCAPS2
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type

Public Const WAVERR_BADFORMAT  = (WAVERR_BASE + 0) /* unsupported wave format */
Public Const WAVERR_STILLPLAYING  = (WAVERR_BASE + 1) /* still something playing */
Public Const WAVERR_UNPREPARED  = (WAVERR_BASE + 2) /* header not prepared */
Public Const WAVERR_SYNC  = (WAVERR_BASE + 3) /* device is synchronous */
Public Const WAVERR_LASTERROR  = (WAVERR_BASE + 3) /* last error in range */

Public Const WOM_OPEN  = MM_WOM_OPEN
Public Const WOM_CLOSE  = MM_WOM_CLOSE
Public Const WOM_DONE  = MM_WOM_DONE
Public Const WIM_OPEN  = MM_WIM_OPEN
Public Const WIM_CLOSE  = MM_WIM_CLOSE
Public Const WIM_DATA  = MM_WIM_DATA

Public Enum WAV_OPEN_FLAGS
    WAVE_FORMAT_QUERY  = &H0001
    WAVE_ALLOWSYNC  = &H0002
    WAVE_MAPPED = &H0004
    WAVE_FORMAT_DIRECT  = &H0008
    WAVE_FORMAT_DIRECT_QUERY  = (WAVE_FORMAT_QUERY  Or  WAVE_FORMAT_DIRECT)
    WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE  = &H0010
End Enum

Public Enum WAV_HDR_FLAGS
    WHDR_DONE = &H00000001 /* done bit */
    WHDR_PREPARED  = &H00000002 /* set if this header has been prepared */
    WHDR_BEGINLOOP  = &H00000004 /* loop start block */
    WHDR_ENDLOOP  = &H00000008 /* loop end block */
    WHDR_INQUEUE  = &H00000010 /* reserved for driver */
End Enum
Public Type WAVEHDR
  lpData  As LongPtr '/ poLonger to locked data buffer
  dwBufferLength  As Long  '/ length of data buffer
  dwBytesRecorded  As Long  '/ used for input only
  dwUser  As LongPtr  ' / for client's use
  dwFlags  As WAV_HDR_FLAGS ' / assorted flags (see defines)
  dwLoops As Long '/ loop control counter
  lpNext As LongPtr '/ reserved for driver
  reserved  As LongPtr  ' / reserved for driver
End Type

Public Enum WAV_DRV_MSGS
    DRV_LOAD  = &H0001
    DRV_ENABLE  = &H0002
    DRV_OPEN  = &H0003
    DRV_CLOSE  = &H0004
    DRV_DISABLE  = &H0005
    DRV_FREE  = &H0006
    DRV_CONFIGURE  = &H0007
    DRV_QUERYCONFIGURE  = &H0008
    DRV_INSTALL  = &H0009
    DRV_REMOVE  = &H000A
    DRV_RESERVED  = &H0800
    DRV_USER  = &H4000
    DRV_QUERYDEVNODE  = (DRV_RESERVED + 2)
    DRV_QUERYMAPPABLE  = (DRV_RESERVED + 5)
    DRV_QUERYMODULE  = (DRV_RESERVED + 9)
    DRV_PNPINSTALL  = (DRV_RESERVED + 11)
    DRV_QUERYDEVICEINTERFACE  = (DRV_RESERVED + 12)
    DRV_QUERYDEVICEINTERFACESIZE  = (DRV_RESERVED + 13)
    DRV_QUERYSTRINGID  = (DRV_RESERVED + 14)
    DRV_QUERYSTRINGIDSIZE  = (DRV_RESERVED + 15)
    DRV_QUERYIDFROMSTRINGID  = (DRV_RESERVED + 16)
    DRV_QUERYFUNCTIONINSTANCEID  = (DRV_RESERVED + 17)
    DRV_QUERYFUNCTIONINSTANCEIDSIZE = (DRV_RESERVED + 18)
End Enum

Public Declare PtrSafe Function waveInGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function waveOutGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function waveInGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEINCAPS, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEOUTCAPSA, ByVal cbwoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEINCAPS, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEOUTCAPSA, ByVal cbwoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetDevCaps Lib "winmm" Alias "waveInGetDevCapsW" (ByVal uDeviceID As LongPtr, lpCaps As WAVEINCAPS, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetDevCaps Lib "winmm" Alias "waveOutGetDevCapsW" (ByVal uDeviceID As LongPtr, lpCaps As WAVEOUTCAPSA, ByVal cbwoc As Long) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveOutGetVolume Lib "winmm" (ByVal hwo As LongPtr, lpdwVolume As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutSetVolume Lib "winmm" (ByVal hwo As LongPtr, ByVal dwVolume As Long) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveInGetErrorTextA Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function waveInGetErrorTextW Lib "winmm" Alias "waveInGetErrorTextW" (ByVal err As MMGeneralErrorCodes, ByVal lpText As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function waveInGetErrorText Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function waveOutGetErrorTextA Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetErrorTextW Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As LongPtr, ByVal uSize As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function waveOutGetErrorText Lib "winmm" Alias "waveOutGetErrorTextW" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveInOpen Lib "winmm" (lphWaveIn As LongPtr, ByVal uDeviceID As Long, lpFormat As WAVEFORMATEX, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, [ TypeHint (MMDriverCallback, WAV_OPEN_FLAGS) ] ByVal fdwOpen As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutOpen Lib "winmm" (lphWaveOut As LongPtr, ByVal uDeviceID As Long, lpFormat As WAVEFORMATEX, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, [ TypeHint (MMDriverCallback, WAV_OPEN_FLAGS) ] ByVal fdwOpen As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInClose Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutClose Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInPrepareHeader Lib "winmm" (ByVal hWaveIn As LongPtr, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutPrepareHeader Lib "winmm" (ByVal hWaveOut As LongPtr, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInUnprepareHeader Lib "winmm" (ByVal hWaveIn As LongPtr, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutUnprepareHeader Lib "winmm" (ByVal hWaveOut As LongPtr, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutWrite Lib "winmm" (ByVal hWaveOut As LongPtr, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutPause Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutRestart Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutReset Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutBreakLoop Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetPosition Lib "winmm" (ByVal hWaveOut As LongPtr, lpInfo As MMTIME, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetPitch Lib "winmm" (ByVal hWaveOut As LongPtr, lpdwPitch As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutSetPitch Lib "winmm" (ByVal hWaveOut As LongPtr, ByVal dwPitch As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetPlaybackRate Lib "winmm" (ByVal hWaveOut As LongPtr, lpdwRate As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutSetPlaybackRate Lib "winmm" (ByVal hWaveOut As LongPtr, ByVal dwRate As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetID Lib "winmm" (ByVal hWaveOut As LongPtr, lpuDeviceID As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInMessage Lib "winmm" (ByVal hWaveIn As LongPtr, ByVal msg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutMessage Lib "winmm" (ByVal hWaveOut As LongPtr, ByVal msg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveInAddBuffer Lib "winmm" (ByVal hWaveIn As LongPtr, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInStart Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInStop Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInReset Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetPosition Lib "winmm" (ByVal hWaveIn As LongPtr, lpInfo As MMTIME, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetID Lib "winmm" (ByVal hWaveIn As LongPtr, lpuDeviceID As Long) As MMGeneralErrorCodes
#End Region

'Complete
#Region "winmm_mixer"
Public Const MIXER_SHORT_NAME_CHARS  = 16
Public Const MIXER_LONG_NAME_CHARS  = 64

Public Enum MIXERR
    MIXERR_INVALLINE  = (MIXERR_BASE + 0)
    MIXERR_INVALCONTROL  = (MIXERR_BASE + 1)
    MIXERR_INVALVALUE  = (MIXERR_BASE + 2)
    MIXERR_LASTERROR  = (MIXERR_BASE + 2)
End Enum

Public Enum MIXER_OBJECTS
    MIXER_OBJECTF_HANDLE  = &H80000000
    MIXER_OBJECTF_MIXER  = &H00000000
    MIXER_OBJECTF_HMIXER  = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_MIXER)
    MIXER_OBJECTF_WAVEOUT  = &H10000000
    MIXER_OBJECTF_HWAVEOUT  = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_WAVEOUT)
    MIXER_OBJECTF_WAVEIN  = &H20000000
    MIXER_OBJECTF_HWAVEIN  = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_WAVEIN)
    MIXER_OBJECTF_MIDIOUT  = &H30000000
    MIXER_OBJECTF_HMIDIOUT  = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_MIDIOUT)
    MIXER_OBJECTF_MIDIIN  = &H40000000
    MIXER_OBJECTF_HMIDIIN  = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_MIDIIN)
    MIXER_OBJECTF_AUX = &H50000000
End Enum

Public Type MIXERCAPSA
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
End Type
Public Type MIXERCAPSW
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
End Type
Public Type MIXERCAPS
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
End Type

Public Type MIXERCAPS2A
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type MIXERCAPS2W
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type MIXERCAPS2
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Public Enum MIXERLINE_LINE
    MIXERLINE_LINEF_ACTIVE  = &H00000001
    MIXERLINE_LINEF_DISCONNECTED  = &H00008000&
    MIXERLINE_LINEF_SOURCE  = &H80000000
End Enum

Public Enum MIXERLINE_TARGETTYPE
    MIXERLINE_TARGETTYPE_UNDEFINED  = 0
    MIXERLINE_TARGETTYPE_WAVEOUT  = 1
    MIXERLINE_TARGETTYPE_WAVEIN  = 2
    MIXERLINE_TARGETTYPE_MIDIOUT  = 3
    MIXERLINE_TARGETTYPE_MIDIIN  = 4
    MIXERLINE_TARGETTYPE_AUX  = 5
End Enum

Public Enum MIXERLINE_COMPONENTTYPE
    MIXERLINE_COMPONENTTYPE_DST_FIRST  = &H00000000
    MIXERLINE_COMPONENTTYPE_DST_UNDEFINED  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 0)
    MIXERLINE_COMPONENTTYPE_DST_DIGITAL  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 1)
    MIXERLINE_COMPONENTTYPE_DST_LINE  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 2)
    MIXERLINE_COMPONENTTYPE_DST_MONITOR  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 3)
    MIXERLINE_COMPONENTTYPE_DST_SPEAKERS  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 4)
    MIXERLINE_COMPONENTTYPE_DST_HEADPHONES = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 5)
    MIXERLINE_COMPONENTTYPE_DST_TELEPHONE  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 6)
    MIXERLINE_COMPONENTTYPE_DST_WAVEIN  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 7)
    MIXERLINE_COMPONENTTYPE_DST_VOICEIN  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)
    MIXERLINE_COMPONENTTYPE_DST_LAST  = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)
    MIXERLINE_COMPONENTTYPE_SRC_FIRST = &H00001000
    MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 0)
    MIXERLINE_COMPONENTTYPE_SRC_DIGITAL  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 1)
    MIXERLINE_COMPONENTTYPE_SRC_LINE  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 2)
    MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 3)
    MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 4)
    MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 5)
    MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 6)
    MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 7)
    MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 8)
    MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 9)
    MIXERLINE_COMPONENTTYPE_SRC_ANALOG  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)
    MIXERLINE_COMPONENTTYPE_SRC_LAST  = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)
End Enum

Private Type MLTargetA
    dwType As Long '   /* MIXERLINE_TARGETTYPE_xxxx */
    dwDeviceID As Long '      /* target device ID of device type */
    wMid As Integer '  /* of target device */
    wPid As Integer '   /*      " */
    vDriverVersion As Long '  /*      " */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte '  /*      " */
End Type
Private Type MLTargetW
    dwType As MIXERLINE_TARGETTYPE '   /* MIXERLINE_TARGETTYPE_xxxx */
    dwDeviceID As Long '      /* target device ID of device type */
    wMid As Integer '  /* of target device */
    wPid As Integer '   /*      " */
    vDriverVersion As Long '  /*      " */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer '  /*      " */
End Type
[ PackingAlignment(1) ]
Public Type MIXERLINEA
    cbStruct As Long ' /* size of MIXERLINE structure */
    dwDestination As Long ' /* zero based destination index */
    dwSource As Long ' /* zero based source index (if source) */
    dwLineID As Long ' /* unique line id for mixer device */
    fdwLine As MIXERLINE_LINE ' /* state/information about line */
    dwUser As LongPtr ' /* driver specific information */
    dwComponentType As MIXERLINE_COMPONENTTYPE ' /* component type line connects to */
    cChannels As Long ' /* number of channels line supports */
    cConnections As Long ' /* number of connections [possible] */
    cControls As Long ' /* number of controls at this line */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Byte
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Byte
    Target As MLTargetA
End Type
[ PackingAlignment(1) ]
Public Type MIXERLINEW
    cbStruct As Long ' /* size of MIXERLINE structure */
    dwDestination As Long ' /* zero based destination index */
    dwSource As Long ' /* zero based source index (if source) */
    dwLineID As Long ' /* unique line id for mixer device */
    fdwLine As MIXERLINE_LINE ' /* state/information about line */
    dwUser As LongPtr ' /* driver specific information */
    dwComponentType As MIXERLINE_COMPONENTTYPE ' /* component type line connects to */
    cChannels As Long ' /* number of channels line supports */
    cConnections As Long ' /* number of connections [possible] */
    cControls As Long ' /* number of controls at this line */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Target As MLTargetW
End Type
[ PackingAlignment(1) ]
Public Type MIXERLINE
    cbStruct As Long ' /* size of MIXERLINE structure */
    dwDestination As Long ' /* zero based destination index */
    dwSource As Long ' /* zero based source index (if source) */
    dwLineID As Long ' /* unique line id for mixer device */
    fdwLine As MIXERLINE_LINE ' /* state/information about line */
    dwUser As LongPtr ' /* driver specific information */
    dwComponentType As MIXERLINE_COMPONENTTYPE ' /* component type line connects to */
    cChannels As Long ' /* number of channels line supports */
    cConnections As Long ' /* number of connections [possible] */
    cControls As Long ' /* number of controls at this line */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Target As MLTargetW
End Type

Public Enum MIXER_GLIO_FLAGS
    MIXER_GETLINEINFOF_DESTINATION  = &H00000000
    MIXER_GETLINEINFOF_SOURCE  = &H00000001
    MIXER_GETLINEINFOF_LINEID  = &H00000002
    MIXER_GETLINEINFOF_COMPONENTTYPE  = &H00000003
    MIXER_GETLINEINFOF_TARGETTYPE  = &H00000004
    MIXER_GETLINEINFOF_QUERYMASK  = &H0000000F
End Enum

Public Enum MIXER_CONTROLF
    MIXERCONTROL_CONTROLF_UNIFORM  = &H00000001
    MIXERCONTROL_CONTROLF_MULTIPLE  = &H00000002
    MIXERCONTROL_CONTROLF_DISABLED  = &H80000000
End Enum

Public Enum MIXER_CT_BLOCKS
    MIXERCONTROL_CT_CLASS_MASK  = &HF0000000
    MIXERCONTROL_CT_CLASS_CUSTOM  = &H00000000
    MIXERCONTROL_CT_CLASS_METER  = &H10000000
    MIXERCONTROL_CT_CLASS_SWITCH  = &H20000000
    MIXERCONTROL_CT_CLASS_NUMBER  = &H30000000
    MIXERCONTROL_CT_CLASS_SLIDER  = &H40000000
    MIXERCONTROL_CT_CLASS_FADER  = &H50000000
    MIXERCONTROL_CT_CLASS_TIME  = &H60000000
    MIXERCONTROL_CT_CLASS_LIST  = &H70000000
    MIXERCONTROL_CT_SUBCLASS_MASK  = &H0F000000
    MIXERCONTROL_CT_SC_SWITCH_BOOLEAN  = &H00000000
    MIXERCONTROL_CT_SC_SWITCH_BUTTON  = &H01000000
    MIXERCONTROL_CT_SC_METER_POLLED  = &H00000000
    MIXERCONTROL_CT_SC_TIME_MICROSECS  = &H00000000
    MIXERCONTROL_CT_SC_TIME_MILLISECS  = &H01000000
    MIXERCONTROL_CT_SC_LIST_SINGLE  = &H00000000
    MIXERCONTROL_CT_SC_LIST_MULTIPLE  = &H01000000
    MIXERCONTROL_CT_UNITS_MASK  = &H00FF0000
    MIXERCONTROL_CT_UNITS_CUSTOM  = &H00000000
    MIXERCONTROL_CT_UNITS_BOOLEAN  = &H00010000
    MIXERCONTROL_CT_UNITS_SIGNED  = &H00020000
    MIXERCONTROL_CT_UNITS_UNSIGNED  = &H00030000
    MIXERCONTROL_CT_UNITS_DECIBELS  = &H00040000 /* in 10ths */
    MIXERCONTROL_CT_UNITS_PERCENT  = &H00050000 /* in 10ths */
End Enum
Public Enum MIXER_CONTROLTYPE
    MIXERCONTROL_CONTROLTYPE_CUSTOM  = (MIXERCONTROL_CT_CLASS_CUSTOM  Or  MIXERCONTROL_CT_UNITS_CUSTOM)
    MIXERCONTROL_CONTROLTYPE_BOOLEANMETER  = (MIXERCONTROL_CT_CLASS_METER  Or  MIXERCONTROL_CT_SC_METER_POLLED  Or  MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_SIGNEDMETER  = (MIXERCONTROL_CT_CLASS_METER  Or  MIXERCONTROL_CT_SC_METER_POLLED  Or  MIXERCONTROL_CT_UNITS_SIGNED)
    MIXERCONTROL_CONTROLTYPE_PEAKMETER  = (MIXERCONTROL_CONTROLTYPE_SIGNEDMETER + 1)
    MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER  = (MIXERCONTROL_CT_CLASS_METER  Or  MIXERCONTROL_CT_SC_METER_POLLED  Or  MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_BOOLEAN  = (MIXERCONTROL_CT_CLASS_SWITCH  Or  MIXERCONTROL_CT_SC_SWITCH_BOOLEAN  Or  MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_ONOFF  = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 1)
    MIXERCONTROL_CONTROLTYPE_MUTE  = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 2)
    MIXERCONTROL_CONTROLTYPE_MONO  = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 3)
    MIXERCONTROL_CONTROLTYPE_LOUDNESS  = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 4)
    MIXERCONTROL_CONTROLTYPE_STEREOENH  = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 5)
    MIXERCONTROL_CONTROLTYPE_BASS_BOOST  = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + &H00002277)
    MIXERCONTROL_CONTROLTYPE_BUTTON  = (MIXERCONTROL_CT_CLASS_SWITCH  Or  MIXERCONTROL_CT_SC_SWITCH_BUTTON  Or  MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_DECIBELS  = (MIXERCONTROL_CT_CLASS_NUMBER  Or  MIXERCONTROL_CT_UNITS_DECIBELS)
    MIXERCONTROL_CONTROLTYPE_SIGNED  = (MIXERCONTROL_CT_CLASS_NUMBER  Or  MIXERCONTROL_CT_UNITS_SIGNED)
    MIXERCONTROL_CONTROLTYPE_UNSIGNED  = (MIXERCONTROL_CT_CLASS_NUMBER  Or  MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_PERCENT  = (MIXERCONTROL_CT_CLASS_NUMBER  Or  MIXERCONTROL_CT_UNITS_PERCENT)
    MIXERCONTROL_CONTROLTYPE_SLIDER  = (MIXERCONTROL_CT_CLASS_SLIDER  Or  MIXERCONTROL_CT_UNITS_SIGNED)
    MIXERCONTROL_CONTROLTYPE_PAN  = (MIXERCONTROL_CONTROLTYPE_SLIDER + 1)
    MIXERCONTROL_CONTROLTYPE_QSOUNDPAN  = (MIXERCONTROL_CONTROLTYPE_SLIDER + 2)
    MIXERCONTROL_CONTROLTYPE_FADER  = (MIXERCONTROL_CT_CLASS_FADER  Or  MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_VOLUME  = (MIXERCONTROL_CONTROLTYPE_FADER + 1)
    MIXERCONTROL_CONTROLTYPE_BASS  = (MIXERCONTROL_CONTROLTYPE_FADER + 2)
    MIXERCONTROL_CONTROLTYPE_TREBLE  = (MIXERCONTROL_CONTROLTYPE_FADER + 3)
    MIXERCONTROL_CONTROLTYPE_EQUALIZER  = (MIXERCONTROL_CONTROLTYPE_FADER + 4)
    MIXERCONTROL_CONTROLTYPE_SINGLESELECT  = (MIXERCONTROL_CT_CLASS_LIST  Or  MIXERCONTROL_CT_SC_LIST_SINGLE  Or  MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_MUX  = (MIXERCONTROL_CONTROLTYPE_SINGLESELECT + 1)
    MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT  = (MIXERCONTROL_CT_CLASS_LIST  Or  MIXERCONTROL_CT_SC_LIST_MULTIPLE  Or  MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_MIXER  = (MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT + 1)
    MIXERCONTROL_CONTROLTYPE_MICROTIME  = (MIXERCONTROL_CT_CLASS_TIME  Or  MIXERCONTROL_CT_SC_TIME_MICROSECS  Or  MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_MILLITIME  = (MIXERCONTROL_CT_CLASS_TIME  Or  MIXERCONTROL_CT_SC_TIME_MILLISECS  Or  MIXERCONTROL_CT_UNITS_UNSIGNED)
End Enum


Private Type MLIBounds
	ldwMinimum As Long
    ldwMaximum As Long
    dwReserved(3) As Long
End Type
Private Type MLIMetrics
	cStepsOrCbCustomData As Long
    dwReserved(3) As Long
End Type
Public Type MIXERCONTROLA
    cbStruct As Long ' /* size in bytes of MIXERCONTROL */
    dwControlID As Long ' /* unique control id for mixer device */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXERCONTROL_CONTROLTYPE_xxx */
    fdwControl As MIXER_CONTROLF ' /* MIXERCONTROL_CONTROLF_xxx */
    cMultipleItems As Long ' /* if MIXERCONTROL_CONTROLF_MULTIPLE set */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Byte
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Byte
    Bounds As MLIBounds
    Metrics As MLIMetrics
End Type
Public Type MIXERCONTROLW
    cbStruct As Long ' /* size in bytes of MIXERCONTROL */
    dwControlID As Long ' /* unique control id for mixer device */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXERCONTROL_CONTROLTYPE_xxx */
    fdwControl As MIXER_CONTROLF ' /* MIXERCONTROL_CONTROLF_xxx */
    cMultipleItems As Long ' /* if MIXERCONTROL_CONTROLF_MULTIPLE set */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Bounds As MLIBounds
    Metrics As MLIMetrics
End Type
Public Type MIXERCONTROL
    cbStruct As Long ' /* size in bytes of MIXERCONTROL */
    dwControlID As Long ' /* unique control id for mixer device */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXERCONTROL_CONTROLTYPE_xxx */
    fdwControl As MIXER_CONTROLF ' /* MIXERCONTROL_CONTROLF_xxx */
    cMultipleItems As Long ' /* if MIXERCONTROL_CONTROLF_MULTIPLE set */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Bounds As MLIBounds
    Metrics As MLIMetrics
End Type

[ PackingAlignment (1) ]
Public Type MIXERLINECONTROLSA
    cbStruct As Long ' /* size in bytes of MIXERLINECONTROLS */
    dwLineID As Long ' /* line id (from MIXERLINE.dwLineID) */
    'union {
    '    DWORD       dwControlID;    // /* MIXER_GETLINECONTROLSF_ONEBYID */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXER_GETLINECONTROLSF_ONEBYTYPE */
    ' } DUMMYUNIONNAME;
    cControls As Long ' /* count of controls pmxctrl points to */
    cbmxctrl As Long ' /* size in bytes of _one_ MIXERCONTROL */
    pamxctrl As LongPtr ' /* pointer to first MIXERCONTROL array */
End Type
[ PackingAlignment (1) ]
Public Type MIXERLINECONTROLSW
    cbStruct As Long ' /* size in bytes of MIXERLINECONTROLS */
    dwLineID As Long ' /* line id (from MIXERLINE.dwLineID) */
    'union {
    '    DWORD       dwControlID;    // /* MIXER_GETLINECONTROLSF_ONEBYID */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXER_GETLINECONTROLSF_ONEBYTYPE */
    ' } DUMMYUNIONNAME;
    cControls As Long ' /* count of controls pmxctrl points to */
    cbmxctrl As Long ' /* size in bytes of _one_ MIXERCONTROL */
    pamxctrl As LongPtr ' /* pointer to first MIXERCONTROL array */
End Type
[ PackingAlignment (1) ]
Public Type MIXERLINECONTROLS
    cbStruct As Long ' /* size in bytes of MIXERLINECONTROLS */
    dwLineID As Long ' /* line id (from MIXERLINE.dwLineID) */
    'union {
    '    DWORD       dwControlID;    // /* MIXER_GETLINECONTROLSF_ONEBYID */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXER_GETLINECONTROLSF_ONEBYTYPE */
    ' } DUMMYUNIONNAME;
    cControls As Long ' /* count of controls pmxctrl points to */
    cbmxctrl As Long ' /* size in bytes of _one_ MIXERCONTROL */
    pamxctrl As LongPtr ' /* pointer to first MIXERCONTROL array */
End Type


Public Enum MIXER_GLC_FLAGS
    MIXER_GETLINECONTROLSF_ALL  = &H00000000
    MIXER_GETLINECONTROLSF_ONEBYID  = &H00000001
    MIXER_GETLINECONTROLSF_ONEBYTYPE = &H00000002
    MIXER_GETLINECONTROLSF_QUERYMASK  = &H0000000F
End Enum

[ PackingAlignment(1) ]
Public Type MIXERCONTROLDETAILS
    cbStruct As Long ' /* size in bytes of MIXERCONTROLDETAILS */
    dwControlID As Long ' /* control id to get/set details on */
    cChannels As Long ' /* number of channels in paDetails array */
     ' /* for MIXER_SETCONTROLDETAILSF_CUSTOM */
    cMultipleItemsOrhwndOwner As LongPtr' /* if _MULTIPLE, the number of items per channel */
    cbDetails As Long ' /* size of _one_ details_XX struct */
    paDetails As LongPtr ' /* pointer to array of details_XX structs */
End Type

Public Type MIXERCONTROLDETAILS_LISTTEXTA
    dwParam1 As Long
    dwParam2 As Long
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Byte
End Type
Public Type MIXERCONTROLDETAILS_LISTTEXTW
    dwParam1 As Long
    dwParam2 As Long
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
End Type
Public Type MIXERCONTROLDETAILS_LISTTEXT
    dwParam1 As Long
    dwParam2 As Long
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
End Type

Public Type MIXERCONTROLDETAILS_BOOLEAN
    fValue As LONG
End Type
Public Type MIXERCONTROLDETAILS_SIGNED
    lValue As LONG
End Type
Public Type MIXERCONTROLDETAILS_UNSIGNED
    dwValue As Long
End Type

Public Enum MIXER_GCD_FLAGS
    MIXER_GETCONTROLDETAILSF_VALUE  = &H00000000
    MIXER_GETCONTROLDETAILSF_LISTTEXT  = &H00000001
    MIXER_GETCONTROLDETAILSF_QUERYMASK  = &H0000000F
End Enum
Public Enum MIXER_SCD_FLAGS
    MIXER_SETCONTROLDETAILSF_VALUE = &H00000000
    MIXER_SETCONTROLDETAILSF_CUSTOM = &H00000001
    MIXER_SETCONTROLDETAILSF_QUERYMASK  = &H0000000F
End Enum

Public Declare PtrSafe Function mixerGetNumDevs Lib "winmm.dll" () As Long
Public Declare PtrSafe Function mixerGetDevCapsA Lib "winmm.dll" (ByVal uMxId As LongPtr, pmxcaps As MIXERCAPSA, ByVal cbmxcaps As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetDevCapsW Lib "winmm.dll" (ByVal uMxId As LongPtr, pmxcaps As MIXERCAPSW, ByVal cbmxcaps As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function mixerGetDevCaps Lib "winmm.dll" Alias "mixerGetDevCapsW" (ByVal uMxId As LongPtr, pmxcaps As MIXERCAPS, ByVal cbmxcaps As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerOpen Lib "winmm.dll" (phmx As LongPtr, ByVal uMxId As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal fdwOpen As MIXER_OBJECTS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerClose Lib "winmm.dll" (ByVal hmx As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerMessage Lib "winmm.dll" (ByVal hmx As LongPtr, ByVal uMsg As WAV_DRV_MSGS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineInfoA Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxl As MIXERLINEA, [ TypeHint (MIXER_OBJECTS, MIXER_GLIO_FLAGS) ] ByVal fdwInfo As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineInfoW Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxl As MIXERLINEW, [ TypeHint (MIXER_OBJECTS, MIXER_GLIO_FLAGS) ] ByVal fdwInfo As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function mixerGetLineInfo Lib "winmm.dll" Alias "mixerGetLineInfoW" (ByVal hmxobj As LongPtr, pmxl As MIXERLINE, [ TypeHint (MIXER_OBJECTS, MIXER_GLIO_FLAGS) ] ByVal fdwInfo As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetID Lib "winmm.dll" (ByVal hmxobj As LongPtr, pumxID As Long, ByVal fdwId As MIXER_OBJECTS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineControlsA Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxlc As MIXERLINECONTROLSA, ByVal fdwControls As MIXER_GLC_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineControlsW Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxlc As MIXERLINECONTROLSW, ByVal fdwControls As MIXER_GLC_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineControls Lib "winmm.dll" Alias "mixerGetLineControlsW" (ByVal hmxobj As LongPtr, pmxlc As MIXERLINECONTROLS, ByVal fdwControls As MIXER_GLC_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetControlDetailsA Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [ TypeHint (MIXER_GCD_FLAGS, MIXER_OBJECTS) ] ByVal fdwDetails As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetControlDetailsW Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [ TypeHint (MIXER_GCD_FLAGS, MIXER_OBJECTS) ] ByVal fdwDetails As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function mixerGetControlDetails Lib "winmm.dll" Alias "mixerGetControlDetailsW" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [ TypeHint (MIXER_GCD_FLAGS, MIXER_OBJECTS) ] ByVal fdwDetails As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerSetControlDetails Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [ TypeHint (MIXER_SCD_FLAGS, MIXER_OBJECTS) ] ByVal fdwDetails As Long) As MMGeneralErrorCodes

#End Region



Public Const TIMERR_NOERROR = 0
Public Const TIMERR_NOCANDO = 97

Public Enum MMTimeType
	TIME_MS  = &H0001 /* time in milliseconds */
	TIME_SAMPLES  = &H0002 /* number of wave samples */
	TIME_BYTES  = &H0004 /* current byte offset */
	TIME_SMPTE  = &H0008 /* SMPTE time */
	TIME_MIDI  = &H0010 /* MIDI time */
	TIME_TICKS  = &H0020 /* Ticks within MIDI stream */
End Enum

[Description("u is an unsupported union")]
Public Type MMTIME
	wType As Integer
    u(0 To 7) As Byte
End Type

Public Enum MMWindowMessages
	MM_JOY1MOVE  = &H3A0 /* joystick */
	MM_JOY2MOVE  = &H3A1
	MM_JOY1ZMOVE  = &H3A2
	MM_JOY2ZMOVE  = &H3A3
	MM_JOY1BUTTONDOWN  = &H3B5
	MM_JOY2BUTTONDOWN  = &H3B6
	MM_JOY1BUTTONUP  = &H3B7
	MM_JOY2BUTTONUP  = &H3B8
	MM_MCINOTIFY  = &H3B9 /* MCI */
	MM_WOM_OPEN  = &H3BB /* waveform output */
	MM_WOM_CLOSE  = &H3BC
	MM_WOM_DONE  = &H3BD
	MM_WIM_OPEN  = &H3BE /* waveform input */
	MM_WIM_CLOSE  = &H3BF
	MM_WIM_DATA  = &H3C0
	MM_MIM_OPEN  = &H3C1 /* MIDI input */
	MM_MIM_CLOSE  = &H3C2
	MM_MIM_DATA  = &H3C3
	MM_MIM_LONGDATA  = &H3C4
	MM_MIM_ERROR  = &H3C5
	MM_MIM_LONGERROR  = &H3C6
	MM_MOM_OPEN  = &H3C7 /* MIDI output */
	MM_MOM_CLOSE  = &H3C8
	MM_MOM_DONE  = &H3C9
	MM_DRVM_OPEN  = &H3D0 /* installable drivers */
	MM_DRVM_CLOSE  = &H3D1
	MM_DRVM_DATA  = &H3D2
	MM_DRVM_ERROR  = &H3D3
	MM_STREAM_OPEN  = &H3D4
	MM_STREAM_CLOSE  = &H3D5
	MM_STREAM_DONE  = &H3D6
	MM_STREAM_ERROR  = &H3D7
	MM_MOM_POSITIONCB  = &H3CA /* Callback for MEVT_POSITIONCB */
	MM_MCISIGNAL  = &H3CB
	MM_MIM_MOREDATA  = &H3CC /* MIM_DONE w/ pending events */
	MM_MIXM_LINE_CHANGE  = &H3D0 /* mixer line change notify */
	MM_MIXM_CONTROL_CHANGE  = &H3D1 /* mixer control change notify */
End Enum

Public Const MMSYSERR_BASE  = 0
Public Const WAVERR_BASE  = 32
Public Const MIDIERR_BASE  = 64
Public Const TIMERR_BASE  = 96
Public Const JOYERR_BASE  = 160
Public Const MCIERR_BASE  = 256
Public Const MIXERR_BASE  = 1024
Public Const MCI_STRING_OFFSET  = 512
Public Const MCI_VD_OFFSET  = 1024
Public Const MCI_CD_OFFSET  = 1088
Public Const MCI_WAVE_OFFSET  = 1152
Public Const MCI_SEQ_OFFSET  = 1216

Public Enum MMGeneralErrorCodes
	MMSYSERR_NOERROR  = 0 /* no error */
	MMSYSERR_ERROR  = (MMSYSERR_BASE + 1) /* unspecified error */
	MMSYSERR_BADDEVICEID  = (MMSYSERR_BASE + 2) /* device ID out of range */
	MMSYSERR_NOTENABLED  = (MMSYSERR_BASE + 3) /* driver failed enable */
	MMSYSERR_ALLOCATED  = (MMSYSERR_BASE + 4) /* device already allocated */
	MMSYSERR_INVALHANDLE  = (MMSYSERR_BASE + 5) /* device handle is invalid */
	MMSYSERR_NODRIVER  = (MMSYSERR_BASE + 6) /* no device driver present */
	MMSYSERR_NOMEM  = (MMSYSERR_BASE + 7) /* memory allocation error */
	MMSYSERR_NOTSUPPORTED  = (MMSYSERR_BASE + 8) /* function isn't supported */
	MMSYSERR_BADERRNUM  = (MMSYSERR_BASE + 9) /* error value out of range */
	MMSYSERR_INVALFLAG  = (MMSYSERR_BASE + 10) /* invalid flag passed */
	MMSYSERR_INVALPARAM  = (MMSYSERR_BASE + 11) /* invalid parameter passed */
	MMSYSERR_HANDLEBUSY  = (MMSYSERR_BASE + 12) /* handle being used */
                                                /* simultaneously on another */
                                                /* thread  = (eg callback) */
	MMSYSERR_INVALIDALIAS  = (MMSYSERR_BASE + 13) /* specified alias not found */
	MMSYSERR_BADDB  = (MMSYSERR_BASE + 14) /* bad registry database */
	MMSYSERR_KEYNOTFOUND  = (MMSYSERR_BASE + 15) /* registry key not found */
	MMSYSERR_READERROR  = (MMSYSERR_BASE + 16) /* registry read error */
	MMSYSERR_WRITEERROR  = (MMSYSERR_BASE + 17) /* registry write error */
	MMSYSERR_DELETEERROR = (MMSYSERR_BASE + 18) /* registry delete error */
	MMSYSERR_VALNOTFOUND  = (MMSYSERR_BASE + 19) /* registry value not found */
	MMSYSERR_NODRIVERCB  = (MMSYSERR_BASE + 20) /* driver does not call DriverCallback */
	MMSYSERR_MOREDATA  = (MMSYSERR_BASE + 21) /* more data to be returned */
	MMSYSERR_LASTERROR  = (MMSYSERR_BASE + 21) /* last error in range */
End Enum

Public Enum MMDriverCallback
	CALLBACK_TYPEMASK  = &H00070000 /* callback type mask */
	CALLBACK_NULL  = &H00000000 /* no callback */
	CALLBACK_WINDOW  = &H00010000 /* dwCallback is a HWND */
	CALLBACK_TASK  = &H00020000 /* dwCallback is a HTASK */
	CALLBACK_FUNCTION  = &H00030000 /* dwCallback is a FARPROC */
	
	CALLBACK_THREAD  = (CALLBACK_TASK)/* thread ID replaces 16 bit task */
	CALLBACK_EVENT  = &H00050000 /* dwCallback is an EVENT Handle */
End Enum



Public Type TIMECAPS
    wPeriodMin As Long     /* minimum period supported  */
    wPeriodMax As Long /* maximum period supported  */
End Type






#End Region

#Region "winspool"
Public Const SPLREG_DEFAULT_SPOOL_DIRECTORY             = "DefaultSpoolDirectory"
Public Const SPLREG_PORT_THREAD_PRIORITY_DEFAULT        = "PortThreadPriorityDefault"
Public Const SPLREG_PORT_THREAD_PRIORITY                = "PortThreadPriority"
Public Const SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT   = "SchedulerThreadPriorityDefault"
Public Const SPLREG_SCHEDULER_THREAD_PRIORITY           = "SchedulerThreadPriority"
Public Const SPLREG_BEEP_ENABLED                        = "BeepEnabled"
Public Const SPLREG_NET_POPUP                           = "NetPopup"
Public Const SPLREG_RETRY_POPUP                         = "RetryPopup"
Public Const SPLREG_NET_POPUP_TO_COMPUTER               = "NetPopupToComputer"
Public Const SPLREG_EVENT_LOG                           = "EventLog"
Public Const SPLREG_MAJOR_VERSION                       = "MajorVersion"
Public Const SPLREG_MINOR_VERSION                       = "MinorVersion"
Public Const SPLREG_ARCHITECTURE                        = "Architecture"
Public Const SPLREG_OS_VERSION                          = "OSVersion"
Public Const SPLREG_OS_VERSIONEX                        = "OSVersionEx"
Public Const SPLREG_DS_PRESENT                          = "DsPresent"
Public Const SPLREG_DS_PRESENT_FOR_USER                 = "DsPresentForUser"
Public Const SPLREG_REMOTE_FAX                          = "RemoteFax"
Public Const SPLREG_RESTART_JOB_ON_POOL_ERROR           = "RestartJobOnPoolError"
Public Const SPLREG_RESTART_JOB_ON_POOL_ENABLED         = "RestartJobOnPoolEnabled"
Public Const SPLREG_DNS_MACHINE_NAME                    = "DNSMachineName"

Public Const SPLDS_SPOOLER_KEY                       = "DsSpooler"
Public Const SPLDS_DRIVER_KEY                        = "DsDriver"
Public Const SPLDS_USER_KEY                          = "DsUser"


' DS Print-Queue properties

Public Const SPLDS_ASSET_NUMBER                      = "assetNumber"
Public Const SPLDS_BYTES_PER_MINUTE                  = "bytesPerMinute"
Public Const SPLDS_DESCRIPTION                       = "description"
Public Const SPLDS_DRIVER_NAME                       = "driverName"
Public Const SPLDS_DRIVER_VERSION                    = "driverVersion"
Public Const SPLDS_LOCATION                          = "location"
Public Const SPLDS_PORT_NAME                         = "portName"
Public Const SPLDS_PRINT_ATTRIBUTES                  = "printAttributes"
Public Const SPLDS_PRINT_BIN_NAMES                   = "printBinNames"
Public Const SPLDS_PRINT_COLLATE                     = "printCollate"
Public Const SPLDS_PRINT_COLOR                       = "printColor"
Public Const SPLDS_PRINT_DUPLEX_SUPPORTED            = "printDuplexSupported"
Public Const SPLDS_PRINT_END_TIME                    = "printEndTime"
Public Const SPLDS_PRINTER_CLASS                     = "printQueue"
Public Const SPLDS_PRINTER_NAME                      = "printerName"
Public Const SPLDS_PRINT_KEEP_PRINTED_JOBS           = "printKeepPrintedJobs"
Public Const SPLDS_PRINT_LANGUAGE                    = "printLanguage"
Public Const SPLDS_PRINT_MAC_ADDRESS                 = "printMACAddress"
Public Const SPLDS_PRINT_MAX_X_EXTENT                = "printMaxXExtent"
Public Const SPLDS_PRINT_MAX_Y_EXTENT                = "printMaxYExtent"
Public Const SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED    = "printMaxResolutionSupported"
Public Const SPLDS_PRINT_MEDIA_READY                 = "printMediaReady"
Public Const SPLDS_PRINT_MEDIA_SUPPORTED             = "printMediaSupported"
Public Const SPLDS_PRINT_MEMORY                      = "printMemory"
Public Const SPLDS_PRINT_MIN_X_EXTENT                = "printMinXExtent"
Public Const SPLDS_PRINT_MIN_Y_EXTENT                = "printMinYExtent"
Public Const SPLDS_PRINT_NETWORK_ADDRESS             = "printNetworkAddress"
Public Const SPLDS_PRINT_NOTIFY                      = "printNotify"
Public Const SPLDS_PRINT_NUMBER_UP                   = "printNumberUp"
Public Const SPLDS_PRINT_ORIENTATIONS_SUPPORTED      = "printOrientationsSupported"
Public Const SPLDS_PRINT_OWNER                       = "printOwner"
Public Const SPLDS_PRINT_PAGES_PER_MINUTE            = "printPagesPerMinute"
Public Const SPLDS_PRINT_RATE                        = "printRate"
Public Const SPLDS_PRINT_RATE_UNIT                   = "printRateUnit"
Public Const SPLDS_PRINT_SEPARATOR_FILE              = "printSeparatorFile"
Public Const SPLDS_PRINT_SHARE_NAME                  = "printShareName"
Public Const SPLDS_PRINT_SPOOLING                    = "printSpooling"
Public Const SPLDS_PRINT_STAPLING_SUPPORTED          = "printStaplingSupported"
Public Const SPLDS_PRINT_START_TIME                  = "printStartTime"
Public Const SPLDS_PRINT_STATUS                      = "printStatus"
Public Const SPLDS_PRIORITY                          = "priority"
Public Const SPLDS_SERVER_NAME                       = "serverName"
Public Const SPLDS_SHORT_SERVER_NAME                 = "shortServerName"
Public Const SPLDS_UNC_NAME                          = "uNCName"
Public Const SPLDS_URL                               = "url"
Public Const SPLDS_FLAGS                             = "flags"
Public Const SPLDS_VERSION_NUMBER                    = "versionNumber"
Public Const SPLDS_PRINT_IPP_COMPRESSION_SUPPORTED   = "ippCompressionSupported"

/*
    -- Additional Print-Queue properties --

    These properties are not defined in the default Directory Services Schema,
    but should be used when extending the Schema so a consistent interface is maintained.

*/

Public Const SPLDS_PRINTER_NAME_ALIASES              = "printerNameAliases"      '// MULTI_SZ
Public Const SPLDS_PRINTER_LOCATIONS                 = "printerLocations"        '// MULTI_SZ
Public Const SPLDS_PRINTER_MODEL                     = "printerModel"            '/ / SZ



Public Enum PrinterChangeEvents
    PRINTER_CHANGE_ADD_PRINTER  = &H00000001
    PRINTER_CHANGE_SET_PRINTER  = &H00000002
    PRINTER_CHANGE_DELETE_PRINTER  = &H00000004
    PRINTER_CHANGE_FAILED_CONNECTION_PRINTER  = &H00000008
    PRINTER_CHANGE_PRINTER  = &H000000FF
    PRINTER_CHANGE_ADD_JOB  = &H00000100
    PRINTER_CHANGE_SET_JOB  = &H00000200
    PRINTER_CHANGE_DELETE_JOB  = &H00000400
    PRINTER_CHANGE_WRITE_JOB  = &H00000800
    PRINTER_CHANGE_JOB = &H0000FF00&
    PRINTER_CHANGE_ADD_FORM  = &H00010000
    PRINTER_CHANGE_SET_FORM  = &H00020000
    PRINTER_CHANGE_DELETE_FORM  = &H00040000
    PRINTER_CHANGE_FORM  = &H00070000
    PRINTER_CHANGE_ADD_PORT  = &H00100000
    PRINTER_CHANGE_CONFIGURE_PORT  = &H00200000
    PRINTER_CHANGE_DELETE_PORT  = &H00400000
    PRINTER_CHANGE_PORT  = &H00700000
    PRINTER_CHANGE_ADD_PRINT_PROCESSOR  = &H01000000
    PRINTER_CHANGE_DELETE_PRINT_PROCESSOR  = &H04000000
    PRINTER_CHANGE_PRINT_PROCESSOR  = &H07000000
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    PRINTER_CHANGE_SERVER  = &H08000000
' #endif
    PRINTER_CHANGE_ADD_PRINTER_DRIVER  = &H10000000
    PRINTER_CHANGE_SET_PRINTER_DRIVER  = &H20000000
    PRINTER_CHANGE_DELETE_PRINTER_DRIVER  = &H40000000
    PRINTER_CHANGE_PRINTER_DRIVER  = &H70000000
    PRINTER_CHANGE_TIMEOUT  = &H80000000
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    PRINTER_CHANGE_ALL  = &H7F77FFFF
End Enum

Public Enum PrinterChangeNotifyType
    PRINTER_NOTIFY_TYPE  = &H00
    JOB_NOTIFY_TYPE  = &H01
    SERVER_NOTIFY_TYPE  = &H02
End Enum
Public Enum PrinterNotifyFieldsPrinter
    PRINTER_NOTIFY_FIELD_SERVER_NAME  = &H00
    PRINTER_NOTIFY_FIELD_PRINTER_NAME  = &H01
    PRINTER_NOTIFY_FIELD_SHARE_NAME  = &H02
    PRINTER_NOTIFY_FIELD_PORT_NAME  = &H03
    PRINTER_NOTIFY_FIELD_DRIVER_NAME  = &H04
    PRINTER_NOTIFY_FIELD_COMMENT  = &H05
    PRINTER_NOTIFY_FIELD_LOCATION  = &H06
    PRINTER_NOTIFY_FIELD_DEVMODE  = &H07
    PRINTER_NOTIFY_FIELD_SEPFILE  = &H08
    PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR  = &H09
    PRINTER_NOTIFY_FIELD_PARAMETERS  = &H0A
    PRINTER_NOTIFY_FIELD_DATATYPE  = &H0B
    PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR  = &H0C
    PRINTER_NOTIFY_FIELD_ATTRIBUTES  = &H0D
    PRINTER_NOTIFY_FIELD_PRIORITY  = &H0E
    PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY  = &H0F
    PRINTER_NOTIFY_FIELD_START_TIME  = &H10
    PRINTER_NOTIFY_FIELD_UNTIL_TIME  = &H11
    PRINTER_NOTIFY_FIELD_STATUS  = &H12
    PRINTER_NOTIFY_FIELD_STATUS_STRING  = &H13
    PRINTER_NOTIFY_FIELD_CJOBS  = &H14
    PRINTER_NOTIFY_FIELD_AVERAGE_PPM  = &H15
    PRINTER_NOTIFY_FIELD_TOTAL_PAGES  = &H16
    PRINTER_NOTIFY_FIELD_PAGES_PRINTED  = &H17
    PRINTER_NOTIFY_FIELD_TOTAL_BYTES  = &H18
    PRINTER_NOTIFY_FIELD_BYTES_PRINTED  = &H19
    PRINTER_NOTIFY_FIELD_OBJECT_GUID  = &H1A
    '(NTDDI_VERSION  = >= NTDDI_VISTA)
    PRINTER_NOTIFY_FIELD_FRIENDLY_NAME  = &H1B
    '(NTDDI_VERSION  = >= NTDDI_WIN8)
    PRINTER_NOTIFY_FIELD_BRANCH_OFFICE_PRINTING  = &H1C
End Enum
Public Enum PrinterNotifyFieldsJob
    JOB_NOTIFY_FIELD_PRINTER_NAME  = &H00
    JOB_NOTIFY_FIELD_MACHINE_NAME  = &H01
    JOB_NOTIFY_FIELD_PORT_NAME  = &H02
    JOB_NOTIFY_FIELD_USER_NAME  = &H03
    JOB_NOTIFY_FIELD_NOTIFY_NAME  = &H04
    JOB_NOTIFY_FIELD_DATATYPE  = &H05
    JOB_NOTIFY_FIELD_PRINT_PROCESSOR  = &H06
    JOB_NOTIFY_FIELD_PARAMETERS  = &H07
    JOB_NOTIFY_FIELD_DRIVER_NAME  = &H08
    JOB_NOTIFY_FIELD_DEVMODE  = &H09
    JOB_NOTIFY_FIELD_STATUS  = &H0A
    JOB_NOTIFY_FIELD_STATUS_STRING  = &H0B
    JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR  = &H0C
    JOB_NOTIFY_FIELD_DOCUMENT  = &H0D
    JOB_NOTIFY_FIELD_PRIORITY  = &H0E
    JOB_NOTIFY_FIELD_POSITION  = &H0F
    JOB_NOTIFY_FIELD_SUBMITTED  = &H10
    JOB_NOTIFY_FIELD_START_TIME  = &H11
    JOB_NOTIFY_FIELD_UNTIL_TIME  = &H12
    JOB_NOTIFY_FIELD_TIME  = &H13
    JOB_NOTIFY_FIELD_TOTAL_PAGES  = &H14
    JOB_NOTIFY_FIELD_PAGES_PRINTED  = &H15
    JOB_NOTIFY_FIELD_TOTAL_BYTES  = &H16
    JOB_NOTIFY_FIELD_BYTES_PRINTED  = &H17
    JOB_NOTIFY_FIELD_REMOTE_JOB_ID  = &H18
End Enum
Public Enum PrinterNotifyFieldsServer
    SERVER_NOTIFY_FIELD_PRINT_DRIVER_ISOLATION_GROUP = &H00
End Enum
Public Type PRINTER_NOTIFY_OPTIONS_TYPE
    /* [TypeHint(PrinterChangeNotifyType)] */ Type As Integer
    Reserved0 As Integer
    Reserved1 As Long
    Reserved2 As Long
    Count As Long
    pFields As LongPtr
End Type
Public Enum PrinterNotifyOptionsFlags
    PRINTER_NOTIFY_OPTIONS_REFRESH = &h01
End Enum

[Description("pTypes points to a PRINTER_NOTIFY_OPTIONS_TYPE") ]
Public Type PRINTER_NOTIFY_OPTIONS
    Version As Long
    Flags As PrinterNotifyOptionsFlags
    Count As Long
    pTypes As LongPtr 'PPRINTER_NOTIFY_OPTIONS_TYPE
End Type

Public Enum PrinterChangeNotifyOptions
    PRINTER_NOTIFY_CATEGORY_ALL  = &H001000
    PRINTER_NOTIFY_CATEGORY_3D  = &H002000
End Enum

Public Enum PrinterNotifyInfoFlags
    PRINTER_NOTIFY_INFO_DISCARDED = &H1
End Enum

Public Type PRINTER_NOTIFY_INFO_DATA
    /* [TypeHint(PrinterChangeNotifyType)] */ Type As Integer
    /* [TypeHint(PrinterNotifyFieldsPrinter, PrinterNotifyFieldsJob)] */ Field As Integer
    Reserved As Long
    Id As Long
    #If Win64 Then
    NotifyData(11) As Byte
    #Else
    NotifyData(7) As Byte
    #End If
End Type

[Description ("**WARNING** DO NOT USE DIRECTLY WITH API. You must obtain a pointer to this type, fill in the first 12 bytes, redim aData(Count), then fill in VarPtr(aData(0)) with the remaining Count * LenB(Of PRINTER_NOTIFY_INFO_DATA) bytes.") ]
Public Type PRINTER_NOTIFY_INFO
    Version As Long
    Flags As PrinterNotifyInfoFlags
    Count As Long
    aData() As PRINTER_NOTIFY_INFO_DATA
End Type

Public Enum PrinterInfoFlags
    PRINTER_ENUM_DEFAULT  = &H00000001
    PRINTER_ENUM_LOCAL  = &H00000002
    PRINTER_ENUM_CONNECTIONS  = &H00000004
    PRINTER_ENUM_FAVORITE  = &H00000004
    PRINTER_ENUM_NAME  = &H00000008
    PRINTER_ENUM_REMOTE  = &H00000010
    PRINTER_ENUM_SHARED  = &H00000020
    PRINTER_ENUM_NETWORK  = &H00000040
    PRINTER_ENUM_EXPAND  = &H00004000
    PRINTER_ENUM_CONTAINER = &H00008000&
    PRINTER_ENUM_ICONMASK  = &H00ff0000
    PRINTER_ENUM_ICON1  = &H00010000
    PRINTER_ENUM_ICON2  = &H00020000
    PRINTER_ENUM_ICON3  = &H00040000
    PRINTER_ENUM_ICON4  = &H00080000
    PRINTER_ENUM_ICON5  = &H00100000
    PRINTER_ENUM_ICON6  = &H00200000
    PRINTER_ENUM_ICON7  = &H00400000
    PRINTER_ENUM_ICON8  = &H00800000
    PRINTER_ENUM_HIDE  = &H01000000
End Enum
Public Type PRINTER_INFO_1A
    Flags As PrinterInfoFlags
    pDescription As String
    pName As String
    pComment As String
End Type
Public Type PRINTER_INFO_1W
    Flags As PrinterInfoFlags
    pDescription As LongPtr
    pName As LongPtr
    pComment As LongPtr
End Type
'Alias PRINTER_INFO_1 As PRINTER_INFO_1W
Public Type PRINTER_INFO_1
    Flags As PrinterInfoFlags
    pDescription As LongPtr
    pName As LongPtr
    pComment As LongPtr
End Type

Public Enum PrinterAttributes
    PRINTER_ATTRIBUTE_QUEUED  = &H00000001
    PRINTER_ATTRIBUTE_DIRECT  = &H00000002
    PRINTER_ATTRIBUTE_DEFAULT  = &H00000004
    PRINTER_ATTRIBUTE_SHARED  = &H00000008
    PRINTER_ATTRIBUTE_NETWORK  = &H00000010
    PRINTER_ATTRIBUTE_HIDDEN  = &H00000020
    PRINTER_ATTRIBUTE_LOCAL  = &H00000040
    PRINTER_ATTRIBUTE_ENABLE_DEVQ  = &H00000080
    PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS  = &H00000100
    PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST  = &H00000200
    PRINTER_ATTRIBUTE_WORK_OFFLINE  = &H00000400
    PRINTER_ATTRIBUTE_ENABLE_BIDI  = &H00000800
    PRINTER_ATTRIBUTE_RAW_ONLY  = &H00001000
    PRINTER_ATTRIBUTE_PUBLISHED  = &H00002000
    PRINTER_ATTRIBUTE_FAX  = &H00004000
'  The printer attribute pushed xxx bits below are used by the
'  pushing printer connection code to keep track of the type
'  of printer connection.  These bits are per user resources
'  hence the local print provider has no knowledge about these
'  bit and will not accepts them.  The remote print provider
'  is responsible for storeing and persisting these bits.
    PRINTER_ATTRIBUTE_PUSHED_USER  = &H00020000
    PRINTER_ATTRIBUTE_PUSHED_MACHINE  = &H00040000
    PRINTER_ATTRIBUTE_MACHINE  = &H00080000
    PRINTER_ATTRIBUTE_FRIENDLY_NAME  = &H00100000
'  If the redirected TS printer is installed with generic
'  TS printer driver (TSPRINT.dll) then this attribute is set
'  by the UMRDP service and passed on to the spooler
    PRINTER_ATTRIBUTE_TS_GENERIC_DRIVER  = &H00200000
' #if (NTDDI_VERSION >= NTDDI_WINBLUE) // NTDDI_WINTHRESHOLD)
'  Defines a bit allowing a local queue to be installed as a
'  "per-user" queue that is only usable/enumerable by that user.
    PRINTER_ATTRIBUTE_PER_USER  = &H00400000
'  Defines a bit indicating that a queue is an enterprise
'  cloud print queue.
    PRINTER_ATTRIBUTE_ENTERPRISE_CLOUD  = &H00800000
End Enum
Public Enum PRINTER_STATUS_FLAGS
    PRINTER_STATUS_PAUSED  = &H00000001
    PRINTER_STATUS_ERROR  = &H00000002
    PRINTER_STATUS_PENDING_DELETION  = &H00000004
    PRINTER_STATUS_PAPER_JAM  = &H00000008
    PRINTER_STATUS_PAPER_OUT  = &H00000010
    PRINTER_STATUS_MANUAL_FEED  = &H00000020
    PRINTER_STATUS_PAPER_PROBLEM  = &H00000040
    PRINTER_STATUS_OFFLINE  = &H00000080
    PRINTER_STATUS_IO_ACTIVE  = &H00000100
    PRINTER_STATUS_BUSY  = &H00000200
    PRINTER_STATUS_PRINTING  = &H00000400
    PRINTER_STATUS_OUTPUT_BIN_FULL  = &H00000800
    PRINTER_STATUS_NOT_AVAILABLE  = &H00001000
    PRINTER_STATUS_WAITING  = &H00002000
    PRINTER_STATUS_PROCESSING  = &H00004000
    PRINTER_STATUS_INITIALIZING = &H00008000&
    PRINTER_STATUS_WARMING_UP  = &H00010000
    PRINTER_STATUS_TONER_LOW  = &H00020000
    PRINTER_STATUS_NO_TONER  = &H00040000
    PRINTER_STATUS_PAGE_PUNT  = &H00080000
    PRINTER_STATUS_USER_INTERVENTION  = &H00100000
    PRINTER_STATUS_OUT_OF_MEMORY  = &H00200000
    PRINTER_STATUS_DOOR_OPEN  = &H00400000
    PRINTER_STATUS_SERVER_UNKNOWN  = &H00800000
    PRINTER_STATUS_POWER_SAVE  = &H01000000
    PRINTER_STATUS_SERVER_OFFLINE  = &H02000000
    PRINTER_STATUS_DRIVER_UPDATE_NEEDED  = &H04000000
End Enum
Public Type PRINTER_INFO_2A
    pServerName As String
    pPrinterName As String
    pShareName As String
    pPortName As String
    pDriverName As String
    pComment As String
    pLocation As String
    pDevMode As LongPtr 'LPDEVMODEW
    pSepFile As String
    pPrintProcessor As String
    pDatatype As String
    pParameters As String
    pSecurityDescriptor As LongPtr 'PSECURITY_DESCRIPTOR
    Attributes As PrinterAttributes
    Priority As Long
    DefaultPriority As Long
    StartTime As Long
    UntilTime As Long
    Status As PRINTER_STATUS_FLAGS
    cJobs As Long
    AveragePPM As Long
End Type
Public Type PRINTER_INFO_2W
    pServerName As LongPtr
    pPrinterName As LongPtr
    pShareName As LongPtr
    pPortName As LongPtr
    pDriverName As LongPtr
    pComment As LongPtr
    pLocation As LongPtr
    pDevMode As LongPtr 'LPDEVMODEW
    pSepFile As LongPtr
    pPrintProcessor As LongPtr
    pDatatype As LongPtr
    pParameters As LongPtr
    pSecurityDescriptor As LongPtr 'PSECURITY_DESCRIPTOR
    Attributes As PrinterAttributes
    Priority As Long
    DefaultPriority As Long
    StartTime As Long
    UntilTime As Long
    Status As PRINTER_STATUS_FLAGS
    cJobs As Long
    AveragePPM As Long
End Type
'Alias PRINTER_INFO_2 As PRINTER_INFO_2W
Public Type PRINTER_INFO_2
    pServerName As LongPtr
    pPrinterName As LongPtr
    pShareName As LongPtr
    pPortName As LongPtr
    pDriverName As LongPtr
    pComment As LongPtr
    pLocation As LongPtr
    pDevMode As LongPtr 'LPDEVMODEW
    pSepFile As LongPtr
    pPrintProcessor As LongPtr
    pDatatype As LongPtr
    pParameters As LongPtr
    pSecurityDescriptor As LongPtr 'PSECURITY_DESCRIPTOR
    Attributes As PrinterAttributes
    Priority As Long
    DefaultPriority As Long
    StartTime As Long
    UntilTime As Long
    Status As PRINTER_STATUS_FLAGS
    cJobs As Long
    AveragePPM As Long
End Type

Public Type PRINTER_INFO_3
    pSecurityDescriptor As LongPtr ' PSECURITY_DESCRIPTOR
End Type

Public Type PRINTER_INFO_4A
    pPrinterName As String
    pServerName As String
    Attributes As PrinterAttributes
End Type
Public Type PRINTER_INFO_4W
    pPrinterName As LongPtr
    pServerName As LongPtr
    Attributes As PrinterAttributes
End Type
Public Type PRINTER_INFO_4
    pPrinterName As LongPtr
    pServerName As LongPtr
    Attributes As PrinterAttributes
End Type

Public Type PRINTER_INFO_5W
    pPrinterName As LongPtr
    pPortName As LongPtr
    Attributes As PrinterAttributes
    DeviceNotSelectedTimeout As Long
    TransmissionRetryTimeout As Long
End Type
Public Type PRINTER_INFO_5A
    pPrinterName As String
    pPortName As String
    Attributes As PrinterAttributes
    DeviceNotSelectedTimeout As Long
    TransmissionRetryTimeout As Long
End Type
Public Type PRINTER_INFO_5
    pPrinterName As LongPtr
    pPortName As LongPtr
    Attributes As PrinterAttributes
    DeviceNotSelectedTimeout As Long
    TransmissionRetryTimeout As Long
End Type

Public Type PRINTER_INFO_6
    dwStatus As PRINTER_STATUS_FLAGS
End Type

Public Enum PRINTER_DSPRINT_ACTIONS
    DSPRINT_PUBLISH  = &H00000001
    DSPRINT_UPDATE  = &H00000002
    DSPRINT_UNPUBLISH  = &H00000004
    DSPRINT_REPUBLISH  = &H00000008
    DSPRINT_PENDING  = &H80000000
End Enum
Public Type PRINTER_INFO_7A
    pszObjectGUID As String
    dwAction As PRINTER_DSPRINT_ACTIONS
End Type
Public Type PRINTER_INFO_7W
    pszObjectGUID As LongPtr
    dwAction As PRINTER_DSPRINT_ACTIONS
End Type
Public Type PRINTER_INFO_7
    pszObjectGUID As LongPtr
    dwAction As PRINTER_DSPRINT_ACTIONS
End Type

[Description("This will point to either DEVMODEA or DEVMODE[W] depending on whether you use it in an A or W API.") ]
Public Type PRINTER_INFO_8
    pDevMode As LongPtr 'PDEVMODEA or W
End Type
[Description("This will point to either DEVMODEA or DEVMODE[W] depending on whether you use it in an A or W API.") ]
Public Type PRINTER_INFO_9
    pDevMode As LongPtr 'PDEVMODEA or W
End Type

Public Enum PRINT_JOB_STATUS
    JOB_STATUS_PAUSED  = &H00000001
    JOB_STATUS_ERROR  = &H00000002
    JOB_STATUS_DELETING  = &H00000004
    JOB_STATUS_SPOOLING  = &H00000008
    JOB_STATUS_PRINTING  = &H00000010
    JOB_STATUS_OFFLINE  = &H00000020
    JOB_STATUS_PAPEROUT  = &H00000040
    JOB_STATUS_PRINTED  = &H00000080
    JOB_STATUS_DELETED  = &H00000100
    JOB_STATUS_BLOCKED_DEVQ  = &H00000200
    JOB_STATUS_USER_INTERVENTION  = &H00000400
    JOB_STATUS_RESTART  = &H00000800
    JOB_STATUS_COMPLETE  = &H00001000
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    JOB_STATUS_RETAINED  = &H00002000
    JOB_STATUS_RENDERING_LOCALLY  = &H00004000
End Enum

Public Enum PRINT_JOB_CONTROL
    JOB_CONTROL_PAUSE  = 1
    JOB_CONTROL_RESUME  = 2
    JOB_CONTROL_CANCEL  = 3
    JOB_CONTROL_RESTART  = 4
    JOB_CONTROL_DELETE  = 5
    JOB_CONTROL_SENT_TO_PRINTER  = 6
    JOB_CONTROL_LAST_PAGE_EJECTED  = 7
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    JOB_CONTROL_RETAIN  = 8
    JOB_CONTROL_RELEASE  = 9
' #if (NTDDI_VERSION >= NTDDI_WIN10)
    JOB_CONTROL_SEND_TOAST  = 10
End Enum

Public Enum PRINT_JOB_PRIORITY
    PRINT_JOB_NO_PRIORITY  = 0
    PRINT_JOB_MAX_PRIORITY  = 99
    PRINT_JOB_MIN_PRIORITY  = 1
    PRINT_JOB_DEF_PRIORITY  = 1
End Enum

Public Type JOB_INFO_1A
    JobId As Long
    pPrinterName As String
    pMachineName As String
    pUserName As String
    pDocument As String
    pDatatype As String
    pStatus As String
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    TotalPages As Long
    PagesPrinted As Long
    Submitted As SYSTEMTIME
End Type
Public Type JOB_INFO_1W
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pDatatype As LongPtr
    pStatus As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    TotalPages As Long
    PagesPrinted As Long
    Submitted As SYSTEMTIME
End Type
Public Type JOB_INFO_1
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pDatatype As LongPtr
    pStatus As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    TotalPages As Long
    PagesPrinted As Long
    Submitted As SYSTEMTIME
End Type

Public Type JOB_INFO_2A
    JobId As Long
    pPrinterName As String
    pMachineName As String
    pUserName As String
    pDocument As String
    pNotifyName As String
    pDatatype As String
    pPrintProcessor As String
    pParameters As String
    pDriverName As String
    pDevMode As LongPtr
    pStatus As String
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME ' Time the job was spooled
    Time As Long ' How many miliseconds the job has been printing
    PagesPrinted As Long
End Type
Public Type JOB_INFO_2W
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME ' Time the job was spooled
    Time As Long ' How many miliseconds the job has been printing
    PagesPrinted As Long
End Type
Public Type JOB_INFO_2
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME ' Time the job was spooled
    Time As Long ' How many miliseconds the job has been printing
    PagesPrinted As Long
End Type

Public Type JOB_INFO_3
    JobId As Long
    NextJobId As Long
    Reserved As Long
End Type

Public Type JOB_INFO_4A
    JobId As Long
    pPrinterName As String
    pMachineName As String
    pUserName As String
    pDocument As String
    pNotifyName As String
    pDatatype As String
    pPrintProcessor As String
    pParameters As String
    pDriverName As String
    pDevMode As LongPtr
    pStatus As String
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME
    Time As Long
    PagesPrinted As Long
    SizeHigh As Long
End Type
Public Type JOB_INFO_4W
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME
    Time As Long
    PagesPrinted As Long
    SizeHigh As Long
End Type
Public Type JOB_INFO_4
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME
    Time As Long
    PagesPrinted As Long
    SizeHigh As Long
End Type

Public Enum PRINT_JOB_POSITION
    JOB_POSITION_UNSPECIFIED     =  0
End Enum

Public Enum PRINTER_CONTROL_COMMANDS
    PRINTER_CONTROL_PAUSE  = 1
    PRINTER_CONTROL_RESUME  = 2
    PRINTER_CONTROL_PURGE  = 3
    PRINTER_CONTROL_SET_STATUS  = 4
End Enum

Public Enum DEVCAP_INDEX
    DC_FIELDS  = 1
    DC_PAPERS  = 2
    DC_PAPERSIZE  = 3
    DC_MINEXTENT  = 4
    DC_MAXEXTENT  = 5
    DC_BINS  = 6
    DC_DUPLEX  = 7
    DC_SIZE  = 8
    DC_EXTRA  = 9
    DC_VERSION  = 10
    DC_DRIVER  = 11
    DC_BINNAMES  = 12
    DC_ENUMRESOLUTIONS  = 13
    DC_FILEDEPENDENCIES  = 14
    DC_TRUETYPE  = 15
    DC_PAPERNAMES  = 16
    DC_ORIENTATION  = 17
    DC_COPIES  = 18
    DC_BINADJUST  = 19
    DC_EMF_COMPLIANT  = 20
    DC_DATATYPE_PRODUCED  = 21
    DC_COLLATE  = 22
    DC_MANUFACTURER  = 23
    DC_MODEL  = 24
    DC_PERSONALITY  = 25
    DC_PRINTRATE  = 26
    DC_PRINTRATEUNIT  = 27
    DC_PRINTERMEM  = 28
    DC_MEDIAREADY  = 29
    DC_STAPLE  = 30
    DC_PRINTRATEPPM  = 31
    DC_COLORDEVICE  = 32
    DC_NUP  = 33
    DC_MEDIATYPENAMES  = 34
    DC_MEDIATYPES  = 35
End Enum
Public Enum DEVCAP_PRINTRATEUNIT
    PRINTRATEUNIT_PPM  = 1
    PRINTRATEUNIT_CPS  = 2
    PRINTRATEUNIT_LPM  = 3
    PRINTRATEUNIT_IPM  = 4
End Enum
Public Enum DEVCAP_TRUETYPE
    DCTT_BITMAP  = &H0000001
    DCTT_DOWNLOAD  = &H0000002
    DCTT_SUBDEV  = &H0000004
    DCTT_DOWNLOAD_OUTLINE = &H0000008
End Enum
Public Enum DEVCAP_BINADJUST
    DCBA_FACEUPNONE  = &H0000
    DCBA_FACEUPCENTER  = &H0001
    DCBA_FACEUPLEFT  = &H0002
    DCBA_FACEUPRIGHT  = &H0003
    DCBA_FACEDOWNNONE  = &H0100
    DCBA_FACEDOWNCENTER  = &H0101
    DCBA_FACEDOWNLEFT  = &H0102
    DCBA_FACEDOWNRIGHT  = &H0103
End Enum

Public Enum ENUM_PRINTER_FLAGS
    PRINTER_ENUM_DEFAULT  = &H00000001
    PRINTER_ENUM_LOCAL  = &H00000002
    PRINTER_ENUM_CONNECTIONS  = &H00000004
    PRINTER_ENUM_FAVORITE = &H00000004
    PRINTER_ENUM_NAME  = &H00000008
    PRINTER_ENUM_REMOTE  = &H00000010
    PRINTER_ENUM_SHARED  = &H00000020
    PRINTER_ENUM_NETWORK  = &H00000040
    PRINTER_ENUM_EXPAND  = &H00004000
    PRINTER_ENUM_CONTAINER  = &H00008000&
    PRINTER_ENUM_ICONMASK  = &H00ff0000
    PRINTER_ENUM_ICON1  = &H00010000
    PRINTER_ENUM_ICON2  = &H00020000
    PRINTER_ENUM_ICON3  = &H00040000
    PRINTER_ENUM_ICON4  = &H00080000
    PRINTER_ENUM_ICON5  = &H00100000
    PRINTER_ENUM_ICON6  = &H00200000
    PRINTER_ENUM_ICON7  = &H00400000
    PRINTER_ENUM_ICON8  = &H00800000
    PRINTER_ENUM_HIDE  = &H01000000
' #if (NTDDI_VERSION >= NTDDI_WINBLUE)
    PRINTER_ENUM_CATEGORY_ALL  = &H02000000
    PRINTER_ENUM_CATEGORY_3D  = &H04000000
End Enum
Public Enum PrinterAccessRights
    SERVER_ACCESS_ADMINISTER  = &H00000001
    SERVER_ACCESS_ENUMERATE  = &H00000002
    PRINTER_ACCESS_ADMINISTER  = &H00000004
    PRINTER_ACCESS_USE  = &H00000008
    JOB_ACCESS_ADMINISTER  = &H00000010
    JOB_ACCESS_READ  = &H00000020
    PRINTER_ACCESS_MANAGE_LIMITED = &H00000040
End Enum

Public Type PRINTER_DEFAULTSA
    pDataType As String
    pDevMode As LongPtr
    /* [ TypeHint(PrinterAccessRights, StandardAccessTypes)] */ DesiredAccess As PrinterAccessRights
End Type
Public Type PRINTER_DEFAULTSW
    pDataType As LongPtr
    pDevMode As LongPtr
    /* [ TypeHint(PrinterAccessRights, StandardAccessTypes)] */ DesiredAccess As PrinterAccessRights
End Type
Public Type PRINTER_DEFAULTS
    pDataType As LongPtr
    pDevMode As LongPtr
    /* [ TypeHint(PrinterAccessRights, StandardAccessTypes)] */ DesiredAccess As PrinterAccessRights
End Type

Public Enum PRINTER_OPTION_FLAGS
    PRINTER_OPTION_NO_CACHE 
    PRINTER_OPTION_CACHE 
    PRINTER_OPTION_CLIENT_CHANGE
End Enum
Public Type PRINTER_OPTIONS
    cbSize As Long
    dwFlags As PRINTER_OPTION_FLAGS
End Type

Public Enum EPrintXPSJobOperation
    kJobProduction 
    kJobConsumption  
End Enum
Public Enum EPrintXPSJobProgress
    kAddingDocumentSequence  
    kDocumentSequenceAdded  
    kAddingFixedDocument  
    kFixedDocumentAdded 
    kAddingFixedPage 
    kFixedPageAdded  
    kResourceAdded
    kFontAdded 
    kImageAdded  
    kXpsDocumentCommitted 
End Enum

Public Type ADDJOB_INFO_1A
    Path As String
    JobId As Long
End Type
Public Type ADDJOB_INFO_1W
    Path As LongPtr
    JobId As Long
End Type
Public Type ADDJOB_INFO_1
    Path As LongPtr
    JobId As Long
End Type

Public Type DRIVER_INFO_1A
    pName As String ' QMS 810
End Type
Public Type DRIVER_INFO_1W
    pName As LongPtr ' QMS 810
End Type
Public Type DRIVER_INFO_1
    pName As LongPtr ' QMS 810
End Type
Public Type DRIVER_INFO_2A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
End Type
Public Type DRIVER_INFO_2W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
End Type
Public Type DRIVER_INFO_2
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
End Type

Public Type DRIVER_INFO_3A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
End Type
Public Type DRIVER_INFO_3W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
End Type
Public Type DRIVER_INFO_3
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
End Type

Public Type DRIVER_INFO_4A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
    pszzPreviousNames As String ' "OldName1\0OldName2\0\0
End Type
Public Type DRIVER_INFO_4W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
End Type
Public Type DRIVER_INFO_4
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
End Type

Public Enum PRINT_DRIVER_ATTR_FLAGS
    DRIVER_KERNELMODE  = &H00000001
    DRIVER_USERMODE  = &H00000002
End Enum

Public Type DRIVER_INFO_5A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    dwDriverAttributes As PRINT_DRIVER_ATTR_FLAGS ' driver attributes (like UMPD/KMPD)
    dwConfigVersion As Long ' version number of the config file since reboot
    dwDriverVersion As Long ' version number of the driver file since reboot
End Type
Public Type DRIVER_INFO_5W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    dwDriverAttributes As PRINT_DRIVER_ATTR_FLAGS ' driver attributes (like UMPD/KMPD)
    dwConfigVersion As Long ' version number of the config file since reboot
    dwDriverVersion As Long ' version number of the driver file since reboot
End Type
Public Type DRIVER_INFO_5
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    dwDriverAttributes As PRINT_DRIVER_ATTR_FLAGS ' driver attributes (like UMPD/KMPD)
    dwConfigVersion As Long ' version number of the config file since reboot
    dwDriverVersion As Long ' version number of the driver file since reboot
End Type

Public Enum PRINT_DRIVER_ATTRS
    PRINTER_DRIVER_PACKAGE_AWARE  = &H00000001
    PRINTER_DRIVER_XPS  = &H00000002
    PRINTER_DRIVER_SANDBOX_ENABLED  = &H00000004
    PRINTER_DRIVER_CLASS  = &H00000008
    PRINTER_DRIVER_DERIVED  = &H00000010
    PRINTER_DRIVER_NOT_SHAREABLE  = &H00000020
    PRINTER_DRIVER_CATEGORY_FAX  = &H00000040
    PRINTER_DRIVER_CATEGORY_FILE  = &H00000080
    PRINTER_DRIVER_CATEGORY_VIRTUAL  = &H00000100
    PRINTER_DRIVER_CATEGORY_SERVICE  = &H00000200
    PRINTER_DRIVER_SOFT_RESET_REQUIRED  = &H00000400
    PRINTER_DRIVER_SANDBOX_DISABLED  = &H00000800
    PRINTER_DRIVER_CATEGORY_3D  = &H00001000
    PRINTER_DRIVER_CATEGORY_CLOUD  = &H00002000
End Enum

Public Type DRIVER_INFO_6A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
    pszzPreviousNames As String ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As String
    pszOEMUrl As String
    pszHardwareID As String
    pszProvider As String
End Type
Public Type DRIVER_INFO_6W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
End Type
Public Type DRIVER_INFO_6
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
End Type

Public Type DRIVER_INFO_8A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
    pszzPreviousNames As String ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As String
    pszOEMUrl As String
    pszHardwareID As String
    pszProvider As String
    pszPrintProcessor As String
    pszVendorSetup As String
    pszzColorProfiles As String
    pszInfPath As String
    dwPrinterDriverAttributes As PRINT_DRIVER_ATTRS
    pszzCoreDriverDependencies As String
    ftMinInboxDriverVerDate As FILETIME
    dwlMinInboxDriverVerVersion As LongLong
End Type
Public Type DRIVER_INFO_8W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
    pszPrintProcessor As LongPtr
    pszVendorSetup As LongPtr
    pszzColorProfiles As LongPtr
    pszInfPath As LongPtr
    dwPrinterDriverAttributes As PRINT_DRIVER_ATTRS
    pszzCoreDriverDependencies As LongPtr
    ftMinInboxDriverVerDate As FILETIME
    dwlMinInboxDriverVerVersion As LongLong
End Type
Public Type DRIVER_INFO_8
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
    pszPrintProcessor As LongPtr
    pszVendorSetup As LongPtr
    pszzColorProfiles As LongPtr
    pszInfPath As LongPtr
    dwPrinterDriverAttributes As PRINT_DRIVER_ATTRS
    pszzCoreDriverDependencies As LongPtr
    ftMinInboxDriverVerDate As FILETIME
    dwlMinInboxDriverVerVersion As LongLong
End Type

Public Enum PRINT_DRIVER_APD_FLAGS
    APD_STRICT_UPGRADE  = &H00000001
    APD_STRICT_DOWNGRADE  = &H00000002
    APD_COPY_ALL_FILES  = &H00000004
    APD_COPY_NEW_FILES  = &H00000008
    APD_COPY_FROM_DIRECTORY  = &H00000010
End Enum
Public Enum PRINT_DRIVER_DPD_FLAGS
    DPD_DELETE_UNUSED_FILES  = &H00000001
    DPD_DELETE_SPECIFIC_VERSION  = &H00000002
    DPD_DELETE_ALL_FILES  = &H00000004
End Enum

Public Type PRINTPROCESSOR_INFO_1A
    pName As String
End Type
Public Type PRINTPROCESSOR_INFO_1W
    pName As LongPtr
End Type
Public Type PRINTPROCESSOR_INFO_1
    pName As LongPtr
End Type

Public Type DATATYPES_INFO_1A
    pName As String
End Type
Public Type DATATYPES_INFO_1W
    pName As LongPtr
End Type
Public Type DATATYPES_INFO_1
    pName As LongPtr
End Type

Public Type DOC_INFO_1A
    pDocName As String
    pOutputFile As String
    pDatatype As String
End Type
Public Type DOC_INFO_1W
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
End Type
Public Type DOC_INFO_1
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
End Type

Public Enum DOC_INFO_MODE
    DI_CHANNEL = 1    ' start direct read/write channel,
End Enum

Public Type DOC_INFO_2W
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
    dwMode As DOC_INFO_MODE
    JobId As Long
End Type

Public Enum DOC_INFO_FLAGS
    DI_MEMORYMAP_WRITE = &H1
End Enum
Public Type DOC_INFO_3A
    pDocName As String
    pOutputFile As String
    pDatatype As String
    dwFlags As DOC_INFO_FLAGS
End Type
Public Type DOC_INFO_3W
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
    dwFlags As DOC_INFO_FLAGS
End Type
Public Type DOC_INFO_3
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
    dwFlags As DOC_INFO_FLAGS
End Type



Public Enum DM_MODES
    DM_UPDATE  = 1
    DM_COPY  = 2
    DM_PROMPT  = 4
    DM_MODIFY  = 8
    DM_IN_BUFFER  = DM_MODIFY
    DM_IN_PROMPT  = DM_PROMPT
    DM_OUT_BUFFER  = DM_COPY
    DM_OUT_DEFAULT  = DM_UPDATE
End Enum

Public Type PRINTER_ENUM_VALUES
    pValueName As LongPtr
    cbValueName As Long
    dwType As REGTYPES
    pData As LongPtr
    cbData As Long
End Type

Public Enum PRINTER_ERROR_TYPES
    PRINTER_ERROR_OUTOFPAPER  = &H00000001
    PRINTER_ERROR_JAM  = &H00000002
    PRINTER_ERROR_OUTOFTONER  = &H00000004
End Enum

Public Enum PRINTER_ERROR_LEVELS
    PRINTER_ERROR_INFORMATION  = &H80000000
    PRINTER_ERROR_WARNING  = &H40000000
    PRINTER_ERROR_SEVERE  = &H20000000
End Enum

Public Enum PRINTER_FORM_FLAGS
    FORM_USER  = &H00000000
    FORM_BUILTIN  = &H00000001
    FORM_PRINTER  = &H00000002
End Enum
Public Type FORM_INFO_1W
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
End Type

Public Enum PRINTER_FORM_STRINGTYPE
    STRING_NONE  = &H00000001
    STRING_MUIDLL  = &H00000002
    STRING_LANGPAIR  = &H00000004
End Enum

Public Const MAX_FORM_KEYWORD_LENGTH = 63+1
Public Type FORM_INFO_2A
    Flags As PRINTER_FORM_FLAGS
    pName As String
    Size As SIZEL
    ImageableArea As RECTL
    pKeyword As String
    StringType As PRINTER_FORM_STRINGTYPE
    pMuiDll As String
    dwResourceId As Long
    pDisplayName As String
    wLangId As Integer
End Type
Public Type FORM_INFO_2W
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
    pKeyword As LongPtr
    StringType As PRINTER_FORM_STRINGTYPE
    pMuiDll As LongPtr
    dwResourceId As Long
    pDisplayName As LongPtr
    wLangId As Integer
End Type
Public Type FORM_INFO_2
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
    pKeyword As LongPtr
    StringType As PRINTER_FORM_STRINGTYPE
    pMuiDll As LongPtr
    dwResourceId As Long
    pDisplayName As LongPtr
    wLangId As Integer
End Type

Public Type MONITOR_INFO_1A
    pName As String
End Type
Public Type MONITOR_INFO_1W
    pName As LongPtr
End Type
Public Type MONITOR_INFO_1
    pName As LongPtr
End Type

Public Type MONITOR_INFO_2A
    pName As String
    pEnvironment As String
    pDLLName As String
End Type
Public Type MONITOR_INFO_2W
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type
Public Type MONITOR_INFO_2
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type

Public Type PORT_INFO_1A
    pName As String
End Type
Public Type PORT_INFO_1W
    pName As LongPtr
End Type
Public Type PORT_INFO_1
    pName As LongPtr
End Type

Public Enum PRINTER_PORT_TYPE
    PORT_TYPE_WRITE  = &H0001
    PORT_TYPE_READ  = &H0002
    PORT_TYPE_REDIRECTED  = &H0004
    PORT_TYPE_NET_ATTACHED  = &H0008
End Enum
Public Type PORT_INFO_2A
    pPortName As String
    pMonitorName As String
    pDescription As String
    fPortType As PRINTER_PORT_TYPE
    Reserved As Long
End Type
Public Type PORT_INFO_2W
    pPortName As LongPtr
    pMonitorName As LongPtr
    pDescription As LongPtr
    fPortType As PRINTER_PORT_TYPE
    Reserved As Long
End Type
Public Type PORT_INFO_2
    pPortName As LongPtr
    pMonitorName As LongPtr
    pDescription As LongPtr
    fPortType As PRINTER_PORT_TYPE
    Reserved As Long
End Type

Public Enum PRINTER_PORT_STATUS_TYPE
    PORT_STATUS_TYPE_ERROR  = 1
    PORT_STATUS_TYPE_WARNING  = 2
    PORT_STATUS_TYPE_INFO  = 3
End Enum
Public Enum PRINTER_PORT_STATUS
    PORT_STATUS_OFFLINE  = 1
    PORT_STATUS_PAPER_JAM  = 2
    PORT_STATUS_PAPER_OUT  = 3
    PORT_STATUS_OUTPUT_BIN_FULL  = 4
    PORT_STATUS_PAPER_PROBLEM  = 5
    PORT_STATUS_NO_TONER  = 6
    PORT_STATUS_DOOR_OPEN  = 7
    PORT_STATUS_USER_INTERVENTION  = 8
    PORT_STATUS_OUT_OF_MEMORY  = 9
    PORT_STATUS_TONER_LOW  = 10
    PORT_STATUS_WARMING_UP  = 11
    PORT_STATUS_POWER_SAVE  = 12
End Enum
Public Type PORT_INFO_3A
    dwStatus As PRINTER_PORT_STATUS
    pszStatus As String
    dwSeverity As PRINTER_PORT_STATUS_TYPE
End Type
Public Type PORT_INFO_3W
    dwStatus As PRINTER_PORT_STATUS
    pszStatus As LongPtr
    dwSeverity As PRINTER_PORT_STATUS_TYPE
End Type
Public Type PORT_INFO_3
    dwStatus As PRINTER_PORT_STATUS
    pszStatus As LongPtr
    dwSeverity As PRINTER_PORT_STATUS_TYPE
End Type

Public Type PROVIDOR_INFO_1A
    pName As String
    pEnvironment As String
    pDLLName As String
End Type
Public Type PROVIDOR_INFO_1W
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type
Public Type PROVIDOR_INFO_1
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type

Public Type PROVIDOR_INFO_2A
    pOrder As String
End Type
Public Type PROVIDOR_INFO_2W
    pOrder As LongPtr
End Type
Public Type PROVIDOR_INFO_2
    pOrder As LongPtr
End Type

Public Enum PRINTER_CONNECTION_FLAGS
    PRINTER_CONNECTION_MISMATCH  = &H00000020  ' printer should be mismatched
    PRINTER_CONNECTION_NO_UI  = &H00000040  ' Fail call if UI is needed in order to install printer driver
End Enum
Public Type PRINTER_CONNECTION_INFO_1A
    dwFlags As PRINTER_CONNECTION_FLAGS
    pszDriverName As LongPtr
End Type
Public Type PRINTER_CONNECTION_INFO_1W
    dwFlags As PRINTER_CONNECTION_FLAGS
    pszDriverName As LongPtr
End Type
Public Type PRINTER_CONNECTION_INFO_1
    dwFlags As PRINTER_CONNECTION_FLAGS
    pszDriverName As LongPtr
End Type

Public Declare PtrSafe Function FindFirstPrinterChangeNotification Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal fdwFilter As PrinterChangeEvents, ByVal fdwOptions As PrinterChangeNotifyOptions, pPrinterNotifyOptions As PRINTER_NOTIFY_OPTIONS) As LongPtr
Public Declare PtrSafe Function FindClosePrinterChangeNotification Lib "winspool.drv"  (ByVal hChange As LongPtr) As Long
Public Declare PtrSafe Function FindNextPrinterChangeNotification Lib "winspool.drv" (ByVal hChange As LongPtr, pdwChange As PrinterChangeEvents, pPrinterNotifyOptions As PRINTER_NOTIFY_OPTIONS, ppPrinterNotifyInfo As LongPtr) As Long
Public Declare PtrSafe Function FreePrinterNotifyInfo Lib "winspool.drv" (pPrinterNotifyInfo As PRINTER_NOTIFY_INFO) As BOOL

Public Declare PtrSafe Function GetPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal cbBuf As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal Command As PRINTER_CONTROL_COMMANDS) As Long
Public Declare PtrSafe Function GetPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal cbBuf As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal Command As PRINTER_CONTROL_COMMANDS) As Long
Public Declare PtrSafe Function GetPrinter Lib "winspool.drv" Alias "GetPrinterW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal cbBuf As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinter Lib "winspool.drv" Alias "SetPrinterW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal Command As PRINTER_CONTROL_COMMANDS) As Long
Public Declare PtrSafe Function DeviceCapabilitiesA Lib "winspool.drv" (ByVal pDevice As String, ByVal pPort As String, [TypeHint (DEVCAP_INDEX) ] ByVal fwCapability As Integer, ByVal pOutput As String, pDevMode As DEVMODEA) As Long
Public Declare PtrSafe Function DeviceCapabilitiesW Lib "winspool.drv" (ByVal pDevice As LongPtr, ByVal pPort As LongPtr, [ TypeHint (DEVCAP_INDEX) ] ByVal fwCapability As Integer, ByVal pOutput As LongPtr, pDevMode As DEVMODEW) As Long
Public DeclareWide PtrSafe Function DeviceCapabilities Lib "winspool.drv" Alias "DeviceCapabilitiesW" (ByVal pDevice As String, ByVal pPort As String, [ TypeHint (DEVCAP_INDEX) ] ByVal fwCapability As Integer, ByVal pOutput As String, pDevMode As DEVMODE) As Long

Public DeclareWide PtrSafe Function EnumPrinters Lib "winspool.drv" Alias "EnumPrintersW" (ByVal flags As ENUM_PRINTER_FLAGS, ByVal name As String, ByVal Level As Long, pPrinterEnum As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long
Public DeclareWide PtrSafe Function EnumPrintersW Lib "winspool.drv" (ByVal flags As ENUM_PRINTER_FLAGS, ByVal name As LongPtr, ByVal Level As Long, pPrinterEnum As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long
Public DeclareWide PtrSafe Function EnumPrintersA Lib "winspool.drv" (ByVal flags As ENUM_PRINTER_FLAGS, ByVal name As String, ByVal Level As Long, pPrinterEnum As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long
Public Declare PtrSafe Function OpenPrinterA Lib "winspool.drv" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSA) As BOOL
Public DeclareWide PtrSafe Function OpenPrinterW Lib "winspool.drv" (ByVal pPrinterName As LongPtr, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSW) As BOOL
Public DeclareWide PtrSafe Function OpenPrinter Lib "winspool.drv" Alias "OpenPrinterW" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTS) As BOOL
Public DeclareWide PtrSafe Function OpenPrinter2W Lib "winspool.drv" (ByVal pPrinterName As LongPtr, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSW, pOptions As PRINTER_OPTIONS) As BOOL
Public DeclareWide PtrSafe Function OpenPrinter2 Lib "winspool.drv" Alias "OpenPrinter2W" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTS, pOptions As PRINTER_OPTIONS) As BOOL
Public Declare PtrSafe Function ResetPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, pDefault As PRINTER_DEFAULTSA) As BOOL
Public DeclareWide PtrSafe Function ResetPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, pDefault As PRINTER_DEFAULTSW) As BOOL
Public DeclareWide PtrSafe Function ResetPrinter Lib "winspool.drv" Alias "ResetPrinterW" (ByVal hPrinter As LongPtr, pDefault As PRINTER_DEFAULTS) As BOOL
Public Declare PtrSafe Function AddPrinterA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pPrinter As Any) As LongPtr
Public Declare PtrSafe Function AddPrinterW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pPrinter As Any) As LongPtr
Public DeclareWide PtrSafe Function AddPrinter Lib "winspool.drv" Alias "AddPrinterW" (ByVal pName As String, ByVal Level As Long, pPrinter As Any) As LongPtr
Public Declare PtrSafe Function DeletePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function ClosePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function AbortPrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function GetDefaultPrinterA Lib "winspool.drv" (ByVal pszBuffer As String, pcchBuffer As Long) As BOOL
Public Declare PtrSafe Function GetDefaultPrinterW Lib "winspool.drv" (ByVal pszBuffer As LongPtr, pcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultPrinter Lib "winspool.drv" Alias "GetDefaultPrinterW" (ByVal pszBuffer As String, pcchBuffer As Long) As BOOL
Public Declare PtrSafe Function SetDefaultPrinterA Lib "winspool.drv" (ByVal pszPrinter As String) As BOOL
Public Declare PtrSafe Function SetDefaultPrinterW Lib "winspool.drv" (ByVal pszPrinter As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetDefaultPrinter Lib "winspool.drv" Alias "GetDefaultPrinterW" (ByVal pszPrinter As String) As BOOL

Public Declare PtrSafe Function SetJobA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal Command As PRINT_JOB_CONTROL) As BOOL
Public Declare PtrSafe Function SetJobW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal Command As PRINT_JOB_CONTROL) As BOOL
Public DeclareWide PtrSafe Function SetJob Lib "winspool.drv" Alias "SetJobW" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal Command As PRINT_JOB_CONTROL) As BOOL
Public Declare PtrSafe Function GetJobA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetJobW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetJob Lib "winspool.drv" Alias "GetJobW" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumJobsA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumJobsW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumJobs Lib "winspool.drv" Alias "EnumJobsW" (ByVal hPrinter As LongPtr, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function AddJobA Lib "winspool.drv"  (ByVal hPrinter As LongPtr, ByVal Level As Long, pData As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function AddJobW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pData As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function AddJob Lib "winspool.drv" Alias "AddJobW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pData As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function ScheduleJob Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long) As BOOL
Public Declare PtrSafe Function ReportJobProcessingProgress Lib "winspool.drv" (ByVal printerHandle As LongPtr, ByVal JobId As Long, ByVal jobOperation As EPrintXPSJobOperation, ByVal jobProgrss As EPrintXPSJobProgress) As Long

Public Declare PtrSafe Function AddPrinterDriverA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrinterDriverW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pDriverInfo As Any) As BOOL
Public DeclareWide PtrSafe Function AddPrinterDriver Lib "winspool.drv" alias "AddPrinterDriverW" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrinterDriveExA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any, ByVal dwFileCopyFlags As PRINT_DRIVER_APD_FLAGS) As BOOL
Public Declare PtrSafe Function AddPrinterDriverExW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pDriverInfo As Any, ByVal dwFileCopyFlags As PRINT_DRIVER_APD_FLAGS) As BOOL
Public DeclareWide PtrSafe Function AddPrinterDriverEx Lib "winspool.drv" Alias "AddPrinterDriverW" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any, ByVal dwFileCopyFlags As PRINT_DRIVER_APD_FLAGS) As BOOL
Public Declare PtrSafe Function EnumPrinterDriversA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function EnumPrinterDriversW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPrinterDrivers Lib "winspool.drv" Alias "EnumPrinterDriversW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrinterDriver Lib "winspool.drv" Alias "GetPrinterDriverW" (ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriver2A Lib "winspool.drv" (ByVal hWnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriver2W Lib "winspool.drv" (ByVal hWnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrinterDriver2 Lib "winspool.drv" Alias "GetPrinterDriverW" (ByVal hWnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverDirectoryA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverDirectory As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverDirectoryW Lib "winspool.drv"  (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverDirectory As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrinterDriverDirectory Lib "winspool.drv" Alias "GetPrinterDriverDirectoryW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverDirectory As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pDriverName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrinterDriver Lib "winspool.drv" Alias "DeletePrinterDriverW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverExA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String, ByVal dwDeleteFlag As PRINT_DRIVER_DPD_FLAGS, ByVal dwVersionFlag As Long) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverExW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pDriverName As LongPtr, ByVal dwDeleteFlag As PRINT_DRIVER_DPD_FLAGS, ByVal dwVersionFlag As Long) As BOOL
Public DeclareWide PtrSafe Function DeletePrinterDriverEx Lib "winspool.drv" Alias "DeletePrinterDriverW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String, ByVal dwDeleteFlag As PRINT_DRIVER_DPD_FLAGS, ByVal dwVersionFlag As Long) As BOOL

Public Declare PtrSafe Function AddPrintProcessorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPathName As String, ByVal pPrintProcessorName As String) As BOOL
Public Declare PtrSafe Function AddPrintProcessorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pPathName As LongPtr, ByVal pPrintProcessorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddPrintProcessor Lib "winspool.drv" Alias "AddPrintProcessorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPathName As String, ByVal pPrintProcessorName As String) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorsA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pPrintProcessorInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorsW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pPrintProcessorInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPrintProcessors Lib "winspool.drv" Alias "EnumPrintProcessorsW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pPrintProcessorInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function GetPrintProcessorDirectoryA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, ByVal pPrintProcessorInfo As String, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrintProcessorDirectoryW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, ByVal pPrintProcessorInfo As String, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrintProcessorDirectory Lib "winspool.drv" Alias "GetPrintProcessorDirectoryW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, ByVal pPrintProcessorInfo As String, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorDatatypesA Lib "winspool.drv" (ByVal pName As String, ByVal pPrintProcessorName As String, ByVal Level As Long, pDatatypes As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorDatatypesW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pPrintProcessorName As LongPtr, ByVal Level As Long, pDatatypes As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPrintProcessorDatatypes Lib "winspool.drv" Alias "EnumPrintProcessorDatatypesW" (ByVal pName As String, ByVal pPrintProcessorName As String, ByVal Level As Long, pDatatypes As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function DeletePrintProcessorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProcessorName As String) As BOOL
Public Declare PtrSafe Function DeletePrintProcessorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pPrintProcessorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrintProcessor Lib "winspool.drv" Alias "DeletePrintProcessorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProcessorName As String) As BOOL

Public Declare PtrSafe Function StartDocPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pDocInfo As Any) As Long
Public Declare PtrSafe Function StartDocPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pDocInfo As Any) As Long
Public DeclareWide PtrSafe Function StartDocPrinter Lib "winspool.drv" Alias "StartDocPrinterW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pDocInfo As Any) As Long
Public Declare PtrSafe Function StartPagePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function WritePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr, pBuf As Any, ByVal cbBuf As Long, pcWritten As Long) As BOOL
Public Declare PtrSafe Function EndPagePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function ReadPrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr, pBuf As Any, ByVal cbBuf As Long, pNoBytesRead As Long) As BOOL
Public Declare PtrSafe Function EndDocPrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function PrinterProperties Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr) As Long
Public Declare PtrSafe Function DocumentPropertiesA Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODEA, pDevModeInput As DEVMODEA, ByVal fMode As DM_MODES) As Long
Public Declare PtrSafe Function DocumentPropertiesW Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As LongPtr, pDevModeOutput As DEVMODEW, pDevModeInput As DEVMODEW, ByVal fMode As DM_MODES) As Long
Public DeclareWide PtrSafe Function DocumentProperties Lib "winspool.drv" Alias "DocumentPropertiesW" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODE, pDevModeInput As DEVMODE, ByVal fMode As DM_MODES) As Long
Public Declare PtrSafe Function AdvancedDocumentPropertiesA Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODEA, pDevModeInput As DEVMODEA) As Long
Public Declare PtrSafe Function AdvancedDocumentPropertiesW Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As LongPtr, pDevModeOutput As DEVMODEW, pDevModeInput As DEVMODEW) As Long
Public DeclareWide PtrSafe Function AdvancedDocumentProperties Lib "winspool.drv" Alias "AdvancedDocumentPropertiesW" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODE, pDevModeInput As DEVMODE) As Long

Public Declare PtrSafe Function GetPrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function GetPrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As LongPtr, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public DeclareWide PtrSafe Function GetPrinterData Lib "winspool.drv" Alias "GetPrinterDataW" (ByVal hPrinter As LongPtr, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function GetPrinterDataExA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function GetPrinterDataExW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, ByVal pValueName As LongPtr, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public DeclareWide PtrSafe Function GetPrinterDataEx Lib "winspool.drv" Alias "GetPrinterDataExW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SetPrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As LongPtr, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function SetPrinterData Lib "winspool.drv" Alias "SetPrinterDataW" (ByVal hPrinter As LongPtr, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SetPrinterDataExA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SetPrinterDataExW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, ByVal pValueName As LongPtr, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function SetPrinterDataEx Lib "winspool.drv" Alias "SetPrinterDataExW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function EnumPrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal dwIndex As Long, ByVal pValueName As String, ByVal cbValueName As Long, pType As REGTYPES, pData As Any, ByVal cbData As Long, pcbData As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal dwIndex As Long, ByVal pValueName As LongPtr, ByVal cbValueName As Long, pType As REGTYPES, pData As Any, ByVal cbData As Long, pcbData As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterData Lib "winspool.drv" Alias "EnumPrinterDataW" (ByVal hPrinter As LongPtr, ByVal dwIndex As Long, ByVal pValueName As String, ByVal cbValueName As Long, pType As REGTYPES, pData As Any, ByVal cbData As Long, pcbData As Long) As Long
Public Declare PtrSafe Function EnumPrinterDataExA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, pEnumValues As PRINTER_ENUM_VALUES, ByVal cbEnunValues As Long, pcbEnumValues As Long, pnEnumValues As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterDataExW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, pEnumValues As PRINTER_ENUM_VALUES, ByVal cbEnunValues As Long, pcbEnumValues As Long, pnEnumValues As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterDataEx Lib "winspool.drv" Alias "EnumPrinterDataExW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, pEnumValues As PRINTER_ENUM_VALUES, ByVal cbEnunValues As Long, pcbEnumValues As Long, pnEnumValues As Long) As Long
Public Declare PtrSafe Function EnumPrinterKeyA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pSubkey As String, ByVal cbSubkey As Long, pcbSubkey As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterKeyW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, ByVal pSubkey As LongPtr, ByVal cbSubkey As Long, pcbSubkey As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterKey Lib "winspool.drv" Alias "EnumPrinterKeyW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pSubkey As String, ByVal cbSubkey As Long, pcbSubkey As Long) As Long
Public Declare PtrSafe Function DeletePrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As String) As Long
Public Declare PtrSafe Function DeletePrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As LongPtr) As Long
Public DeclareWide PtrSafe Function DeletePrinterData Lib "winspool.drv" Alias "DeletePrinterDataW" (ByVal hPrinter As LongPtr, ByVal pValueName As String) As Long
Public Declare PtrSafe Function DeletePrinterKeyA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String) As Long
Public Declare PtrSafe Function DeletePrinterKeyW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr) As Long
Public DeclareWide PtrSafe Function DeletePrinterKey Lib "winspool.drv" Alias "DeletePrinterKeyW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String) As Long

[ Description ("If anyone ever uses this, I hope you appreciate how difficult it was to track down the meaning of Flags.") ]
Public Declare PtrSafe Function WaitForPrinterChange Lib "winspool.drv" Alias "WaitForPrinterChange" (ByVal hPrinter As LongPtr, ByVal flags As PrinterChangeEvents) As LongPtr
Public Declare PtrSafe Function PrinterMessageBoxA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal error As PRINTER_ERROR_TYPES, ByVal hwnd As LongPtr, ByVal pText As String, ByVal pCaption As String, [ TypeHint (MessageBoxFlags, PRINTER_ERROR_LEVELS) ] ByVal dwType As Long) As MessageBoxResults
Public Declare PtrSafe Function PrinterMessageBoxW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal error As PRINTER_ERROR_TYPES, ByVal hwnd As LongPtr, ByVal pText As LongPtr, ByVal pCaption As LongPtr, [ TypeHint (MessageBoxFlags, PRINTER_ERROR_LEVELS) ] ByVal dwType As Long) As MessageBoxResults
Public DeclareWide PtrSafe Function PrinterMessageBox Lib "winspool.drv" Alias "PrinterMessageBoxW" (ByVal hPrinter As LongPtr, ByVal error As PRINTER_ERROR_TYPES, ByVal hwnd As LongPtr, ByVal pText As String, ByVal pCaption As String, [ TypeHint (MessageBoxFlags, PRINTER_ERROR_LEVELS) ] ByVal dwType As Long) As MessageBoxResults

Public Declare PtrSafe Function AddFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function AddFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public DeclareWide PtrSafe Function AddForm Lib "winspool.drv" Alias "AddFormW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function DeleteFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String) As BOOL
Public Declare PtrSafe Function DeleteFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteForm Lib "winspool.drv" Alias "DeleteFormW" (ByVal hPrinter As LongPtr, ByVal pFormName As String) As BOOL
Public Declare PtrSafe Function GetFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetForm Lib "winspool.drv" Alias "GetFormW" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function SetFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function SetFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any) As BOOL
Public DeclareWide PtrSafe Function SetForm Lib "winspool.drv" Alias "SetFormW" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function EnumFormsA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumFormsW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumForms Lib "winspool.drv" Alias "EnumFormsW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL

Public Declare PtrSafe Function EnumMonitorsA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pMonitors As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumMonitorsW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pMonitors As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumMonitors Lib "winspool.drv" Alias "EnumMonitorsW" (ByVal pName As String, ByVal Level As Long, pMonitors As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function AddMonitorA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pMonitors As Any) As BOOL
Public Declare PtrSafe Function AddMonitorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pMonitors As Any) As BOOL
Public DeclareWide PtrSafe Function AddMonitor Lib "winspool.drv" Alias "AddMonitorW" (ByVal pName As String, ByVal Level As Long, pMonitors As Any) As BOOL
Public Declare PtrSafe Function DeleteMonitorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pMonitorName As String) As BOOL
Public Declare PtrSafe Function DeleteMonitorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pMonitorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteMonitor Lib "winspool.drv" Alias "DeleteMonitorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pMonitorName As String) As BOOL

Public Declare PtrSafe Function EnumPortsA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pPort As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumPortsW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pPort As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPorts Lib "winspool.drv" Alias "EnumPortsW" (ByVal pName As String, ByVal Level As Long, pPort As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function AddPortA Lib "winspool.drv" (ByVal pName As LongPtr, ByVal hwnd As LongPtr, ByVal pMonitorName As LongPtr) As BOOL
Public Declare PtrSafe Function AddPortW Lib "winspool.drv" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pMonitorName As String) As BOOL
Public DeclareWide PtrSafe Function AddPort Lib "winspool.drv" Alias "AddPortW" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pMonitorName As String) As BOOL
Public Declare PtrSafe Function ConfigurePortA Lib "winspool.drv" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function ConfigurePortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal hwnd As LongPtr, ByVal pPortName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConfigurePort Lib "winspool.drv" Alias "ConfigurePortW" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function DeletePortA Lib "winspool.drv" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function DeletePortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal hwnd As LongPtr, ByVal pPortName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePort Lib "winspool.drv" Alias "DeletePortW" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function SetPortA Lib "winspool.drv" (ByVal pName As String, ByVal pPortName As String, ByVal Level As Long, pPort As Any) As BOOL
Public Declare PtrSafe Function SetPortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pPortName As LongPtr, ByVal Level As Long, pPort As Any) As BOOL
Public DeclareWide PtrSafe Function SetPort Lib "winspool.drv" Alias "SetPortW" (ByVal pName As String, ByVal pPortName As String, ByVal Level As Long, pPort As Any) As BOOL

Public Declare PtrSafe Function AddPrinterConnectionA Lib "winspool.drv" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function AddPrinterConnectionW Lib "winspool.drv" (ByVal pName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddPrinterConnection Lib "winspool.drv" Alias "AddPrinterConnectionW" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function AddPrinterConnection2A Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal pszName As String, ByVal dwLevel As Long, pConnectionInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrinterConnection2W Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal pszName As LongPtr, ByVal dwLevel As Long, pConnectionInfo As Any) As BOOL
Public DeclareWide PtrSafe Function AddPrinterConnection2 Lib "winspool.drv" Alias "AddPrinterConnection2W" (ByVal hwnd As LongPtr, ByVal pszName As String, ByVal dwLevel As Long, pConnectionInfo As Any) As BOOL
Public Declare PtrSafe Function DeletePrinterConnectionA Lib "winspool.drv" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function DeletePrinterConnectionW Lib "winspool.drv" (ByVal pName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrinterConnection Lib "winspool.drv" Alias "DeletePrinterConnectionW" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function ConnectToPrinterDlg Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal flags As Long) As LongPtr

Public Declare PtrSafe Function AddPrintProvidorA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pProvidorInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrintProvidorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pProvidorInfo As Any) As BOOL
Public DeclareWide PtrSafe Function AddPrintProvidor Lib "winspool.drv" Alias "AddPrintProvidorW" (ByVal pName As String, ByVal Level As Long, pProvidorInfo As Any) As BOOL
Public Declare PtrSafe Function DeletePrintProvidorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProvidorName As String) As BOOL
Public Declare PtrSafe Function DeletePrintProvidorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pPrintProvidorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrintProvidor Lib "winspool.drv" Alias "DeletePrintProvidorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProvidorName As String) As BOOL

Public Declare PtrSafe Function IsValidDevmodeA Lib "winspool.drv" (pDevMode As DEVMODEA, ByVal DevmodeSize As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidDevmodeW Lib "winspool.drv" (pDevMode As DEVMODEW, ByVal DevmodeSize As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidDevmode Lib "winspool.drv" (pDevMode As DEVMODE, ByVal DevmodeSize As LongPtr) As BOOL
#End Region


#Region "Misc"

Public Enum SOFTDIST_FLAGS
    SOFTDIST_FLAG_USAGE_EMAIL  = &H00000001
    SOFTDIST_FLAG_USAGE_PRECACHE  = &H00000002
    SOFTDIST_FLAG_USAGE_AUTOINSTALL  = &H00000004
    SOFTDIST_FLAG_DELETE_SUBSCRIPTION  = &H00000008
End Enum
Public Enum SOFTDIST_STATE
    SOFTDIST_ADSTATE_NONE  = &H00000000
    SOFTDIST_ADSTATE_AVAILABLE  = &H00000001
    SOFTDIST_ADSTATE_DOWNLOADED  = &H00000002
    SOFTDIST_ADSTATE_INSTALLED  = &H00000003
End Enum
Public Type SOFTDISTINFO
    cbSize As Long
    dwFlags As SOFTDIST_FLAGS
    dwAdState As SOFTDIST_STATE
    szTitle As LongPtr
    szAbstract As LongPtr
    szHREF As LongPtr
    dwInstalledVersionMS As Long
    dwInstalledVersionLS As Long
    dwUpdateVersionMS As Long
    dwUpdateVersionLS As Long
    dwAdvertisedVersionMS As Long
    dwAdvertisedVersionLS As Long
    dwReserved As Long
End Type

Public DeclareWide PtrSafe Function SoftwareUpdateMessageBox Lib "shdocvw" (ByVal hwnd As LongPtr, ByVal pszDistUnit As LongPtr, ByVal dwFlags As Long, psdi As SOFTDISTINFO) As MessageBoxResults


Public Type TRIVERTEX
	x As LONG
	y As LONG
	Red As Integer
	Green As Integer
	Blue As Integer
	Alpha As Integer
End Type

Public Enum GradientDrawingMode
	GRADIENT_FILL_RECT_H  = &H00000000
	GRADIENT_FILL_RECT_V  = &H00000001
	GRADIENT_FILL_TRIANGLE  = &H00000002
	GRADIENT_FILL_OP_FLAG  = &H000000ff
End Enum

Public Enum VersionGetExFlags
	FILE_VER_GET_LOCALISED  = &H01
	FILE_VER_GET_NEUTRAL  = &H02
	FILE_VER_GET_PREFETCHED  = &H04
End Enum

Public Enum VersionFindFileFlags
    VFFF_ISSHAREDFILE       = &H0001	
End Enum
Public Enum VersionFindFIleErrors
	VFF_CURNEDEST  = &H0001
	VFF_FILEINUSE  = &H0002
	VFF_BUFFTOOSMALL  = &H0004
End Enum


Public Enum VersionInstallFileFlags
	VIFF_FORCEINSTALL = &H0001
	VIFF_DONTDELETEOLD  = &H0002
End Enum
Public Enum VersionInstallFileErrors
	VIF_TEMPFILE  = &H00000001
	VIF_MISMATCH  = &H00000002
	VIF_SRCOLD  = &H00000004
	VIF_DIFFLANG  = &H00000008
	VIF_DIFFCODEPG = &H00000010
	VIF_DIFFTYPE  = &H00000020
	VIF_WRITEPROT  = &H00000040
	VIF_FILEINUSE  = &H00000080
	VIF_OUTOFSPACE  = &H00000100
	VIF_ACCESSVIOLATION = &H00000200
	VIF_SHARINGVIOLATION  = &H00000400
	VIF_CANNOTCREATE  = &H00000800
	VIF_CANNOTDELETE  = &H00001000
	VIF_CANNOTRENAME  = &H00002000
	VIF_CANNOTDELETECUR  = &H00004000
	VIF_OUTOFMEMORY  = &H00008000&
	VIF_CANNOTREADSRC  = &H00010000
	VIF_CANNOTREADDST = &H00020000
	VIF_BUFFTOOSMALL  = &H00040000
	VIF_CANNOTLOADLZ32  = &H00080000
	VIF_CANNOTLOADCABINET = &H00100000
End Enum


[Description("NOTE: The last param of this API is ByVal BLENDFUNCTION; copy that 4-byte UDT to a Long, then pass that long. Do not pass a pointer.")]
Public Declare PtrSafe Function AlphaBlend Lib "Msimg32.dll" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal ftn As Long) As BOOL
Public Declare PtrSafe Function TransparentBlt Lib "Msimg32.dll" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal crTransparent As Long) As BOOL
Public Declare PtrSafe Function GradientFill Lib "Msimg32.dll" (ByVal hdc As LongPtr, pVertex As TRIVERTEX, ByVal nVertex As Long, pMesh As Any, ByVal nMesh As Long, ByVal ulMode As GradientDrawingMode) As BOOL


Public Type DATA_BLOB
        cbData As Long
        pbData As LongPtr
End Type

Public Enum CryptPromptFlags
	CRYPTPROTECT_PROMPT_ON_UNPROTECT  = &H1  ' 1<<0
'  prompt on protect
	CRYPTPROTECT_PROMPT_ON_PROTECT  = &H2  ' 1<<1
End Enum
Public Type CRYPTPROTECT_PROMPTSTRUCT
	cbSize As Long
	dwPromptFlags As CryptPromptFlags
	hwndApp As LongPtr
	szPrompt As LongPtr
End Type

Public Enum CryptProtectFlags
	CRYPTPROTECT_UI_FORBIDDEN  = &H1
'  per machine protected data -- any user on machine where CryptProtectData
'  took place may CryptUnprotectData
	CRYPTPROTECT_LOCAL_MACHINE  = &H4
'  force credential synchronize during CryptProtectData()
'  Synchronize is only operation that occurs during this operation
	CRYPTPROTECT_CRED_SYNC  = &H8
'  Generate an Audit on protect and unprotect operations
	CRYPTPROTECT_AUDIT  = &H10
'  Protect data with a non-recoverable key
	CRYPTPROTECT_NO_RECOVERY  = &H20
'  Verify the protection of a protected blob
	CRYPTPROTECT_VERIFY_PROTECTION  = &H40
'  Regenerate the local machine protection
	CRYPTPROTECT_CRED_REGENERATE  = &H80
End Enum

Public Enum CryptMemProtectFlags
	CRYPTPROTECTMEMORY_SAME_PROCESS  = &H00
'  Encrypt/Decrypt across process boundaries.
'  eg: encrypted buffer passed across LPC to another process which calls CryptUnprotectMemory.
	CRYPTPROTECTMEMORY_CROSS_PROCESS  = &H01
'  Encrypt/Decrypt across callers with same LogonId.
'  eg: encrypted buffer passed across LPC to another process which calls CryptUnprotectMemory whilst impersonating.
	CRYPTPROTECTMEMORY_SAME_LOGON  = &H02
End Enum

Public Const CRYPTPROTECTMEMORY_BLOCK_SIZE  = 16

Public DeclareWide PtrSafe Function CryptProtectData lib "crypt32" (pDataIn As DATA_BLOB, ByVal szDataDescr As String, pOptionalEntropy As DATA_BLOB, ByVal pvReserved As LongPtr, pPromptStruct As CRYPTPROTECT_PROMPTSTRUCT, ByVal dwFlags As CryptProtectFlags, pDataOut As DATA_BLOB) As BOOL
Public DeclareWide PtrSafe Function CryptUnprotectData Lib "crypt32" (pDataIn As DATA_BLOB, szDataDescr As LongPtr, pOptionalEntropy As DATA_BLOB, ByVal pvReserved As LongPtr, pPromptStruct As CRYPTPROTECT_PROMPTSTRUCT, ByVal dwFlags As CryptProtectFlags, pDataOut As DATA_BLOB) As BOOL
Public DeclareWide PtrSafe Function CryptProtectMemory lib "crypt32" (pDataIn As Any, ByVal cbDataIn As Long, ByVal dwFlags As CryptMemProtectFlags) As BOOL
Public DeclareWide PtrSafe Function CryptUnprotectMemory lib "crypt32" (pDataIn As Any, ByVal cbDataIn As Long, ByVal dwFlags As CryptMemProtectFlags) As BOOL

Public Enum CREATE_ASM_NAME_OBJ_FLAGS
    CANOF_PARSE_DISPLAY_NAME = &H1
    CANOF_SET_DEFAULT_VALUES = &H2
End Enum

Public DeclareWide PtrSafe Function CreateAssemblyNameObject Lib "sxs.dll" (ppAssemblyNameObj As IAssemblyName, ByVal szAssemblyName As LongPtr, ByVal dwFlags As CREATE_ASM_NAME_OBJ_FLAGS, ByVal pvReserved As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateAssemblyCache Lib "sxs.dll" (ppAsmCache As IAssemblyCache, ByVal dwReserved As Long) As Long


Public DeclareWide PtrSafe Function GetFileVersionInfoSizeW Lib "version.dll" (ByVal lptstrFilename As LongPtr, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoW Lib "version.dll" (ByVal lptstrFilename As LongPtr, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoSize Lib "version.dll" Alias "GetFileVersionInfoSizeW" (ByVal lptstrFilename As String, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfo Lib "version.dll" Alias "GetFileVersionInfoW" (ByVal lptstrFilename As String, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoSizeExW Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As LongPtr, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoExW Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As LongPtr, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoSizeEx Lib "version.dll" Alias "GetFileVersionInfoSizeExW" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As String, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoEx Lib "version.dll" Alias "GetFileVersionInfoExW" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As String, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As Long
Public DeclareWide PtrSafe Function VerQueryValue Lib "version.dll" Alias "VerQueryValueW" (pBlock As Any, lpSubBlock As Any, lplpBuffer As Any, puLen As Long) As Long
Public DeclareWide PtrSafe Function VerQueryValueW Lib "version.dll" (ByRef pBlock As Any, ByVal lpSubBlock As LongPtr, ByRef lplpBuffer As LongPtr, ByRef puLen As Long) As Long
Public DeclareWide PtrSafe Function VerFindFileW Lib "version.dll" (ByVal uFlags As VersionFindFileFlags, ByVal szFileName As LongPtr, ByVal szWinDir As LongPtr, ByVal szAppDir As LongPtr, ByVal szCurDir As LongPtr, ByVal puCurDirLen As Long, ByVal szDestDir As LongPtr, puDestDirLen As Long) As VersionFindFIleErrors
Public DeclareWide PtrSafe Function VerFindFile Lib "version.dll" Alias "VerFindFileW" (ByVal uFlags As VersionFindFileFlags, ByVal szFileName As String, ByVal szWinDir As String, ByVal szAppDir As String, ByVal szCurDir As String, ByVal puCurDirLen As Long, ByVal szDestDir As String, puDestDirLen As Long) As VersionFindFIleErrors
Public DeclareWide PtrSafe Function VerInstallFileW Lib "version.dll" (ByVal uFlags As VersionInstallFileFlags, ByVal szSrcFileName As LongPtr, ByVal szDestFileName As LongPtr, ByVal szSrcDir As LongPtr, ByVal szDestDir As LongPtr, ByVal szCurDir As LongPtr, ByVal szTmpFile As LongPtr, puTmpFileLen As Long) As VersionInstallFileErrors
Public DeclareWide PtrSafe Function VerInstallFile Lib "version.dll" Alias "VerInstallFileW" (ByVal uFlags As VersionInstallFileFlags, ByVal szSrcFileName As String, ByVal szDestFileName As String, ByVal szSrcDir As String, ByVal szDestDir As String, ByVal szCurDir As String, ByVal szTmpFile As String, puTmpFileLen As Long) As VersionInstallFileErrors
Public DeclareWide PtrSafe Function VerLanguageNameW Lib "version.dll" (ByVal wLang As Long, ByVal szLang As LongPtr, ByVal cchLang As Long) As Long
Public DeclareWide PtrSafe Function VerLanguageName Lib "version.dll" Alias "VerLanguageNameW" (ByVal wLang As Long, ByVal szLang As String, ByVal cchLang As Long) As Long

Public Type VIRTUAL_STORAGE_TYPE
    DeviceId As VirtualDiskType
    VendorId As UUID
End Type

Public Enum VIRTUAL_DISK_ACCESS_MASK
    VIRTUAL_DISK_ACCESS_NONE = &H00000000
    VIRTUAL_DISK_ACCESS_ATTACH_RO = &H00010000
    VIRTUAL_DISK_ACCESS_ATTACH_RW = &H00020000
    VIRTUAL_DISK_ACCESS_DETACH = &H00040000
    VIRTUAL_DISK_ACCESS_GET_INFO = &H00080000
    VIRTUAL_DISK_ACCESS_CREATE = &H00100000
    VIRTUAL_DISK_ACCESS_METAOPS = &H00200000
    VIRTUAL_DISK_ACCESS_READ = &H000d0000
    VIRTUAL_DISK_ACCESS_ALL = &H003f0000
    VIRTUAL_DISK_ACCESS_WRITABLE = &H00320000
End Enum

Public Enum OPEN_VIRTUAL_DISK_FLAG
    OPEN_VIRTUAL_DISK_FLAG_NONE = &H00000000
    '[ Description("Open the backing store without opening any differencing chain parents. This allows one to fixup broken parent links.") ]
    OPEN_VIRTUAL_DISK_FLAG_NO_PARENTS = &H00000001
    '[ Description("The backing store being opened is an empty file. Do not perform virtual disk verification.") ]
    OPEN_VIRTUAL_DISK_FLAG_BLANK_FILE = &H00000002
    '[ Description("This flag is only specified at boot time to load the system disk during virtual disk boot.  Must be kernel mode to specify this flag") ]
    OPEN_VIRTUAL_DISK_FLAG_BOOT_DRIVE = &H00000004
    '[ Description("This flag causes the backing file to be opened in cached mode.") ]
    OPEN_VIRTUAL_DISK_FLAG_CACHED_IO = &H00000008
    '[ Description("Open the backing store without opening any differencing chain parents. This allows one to fixup broken parent links temporarily without updating the parent locator.") ]
    OPEN_VIRTUAL_DISK_FLAG_CUSTOM_DIFF_CHAIN = &H00000010
    '[ Description("This flag causes all backing stores except the leaf backing store to be opened in cached mode.") ]
    OPEN_VIRTUAL_DISK_FLAG_PARENT_CACHED_IO = &H00000020
    '[ Description("This flag causes a Vhd Set file to be opened without any virtual disk.") ]
    OPEN_VIRTUAL_DISK_FLAG_VHDSET_FILE_ONLY = &H00000040
    '[ Description("For differencing disks, relative parent locators are not used when determining the path of a parent VHD.") ]
    OPEN_VIRTUAL_DISK_FLAG_IGNORE_RELATIVE_PARENT_LOCATOR = &H00000080
    '[ Description("Disable flushing and FUA (both for payload data and for metadata for backing files associated with this virtual disk.") ]
    OPEN_VIRTUAL_DISK_FLAG_NO_WRITE_HARDENING = &H00000100
    '[ Description("Open the backing store even if it is a compressed file.") ]
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = &H00000200
    '[ Description("Open the backing store even if it is a sparse file, on any file system.") ]
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_SPARSE_FILES_ANY_FS = &H00000400
    '[ Description("Open the backing store even if it is an encrypted file.") ]
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_ENCRYPTED_FILES = &H00000800
End Enum

Public Enum OPEN_VIRTUAL_DISK_VERSION
    OPEN_VIRTUAL_DISK_VERSION_UNSPECIFIED=0
    OPEN_VIRTUAL_DISK_VERSION_1=1
    OPEN_VIRTUAL_DISK_VERSION_2=2
    OPEN_VIRTUAL_DISK_VERSION_3=3
End Enum
[Description ("THIS TYPE IS FOR V2 ONLY: Use OPEN_VIRTUAL_DISK_PARAMETERS_V1 for Version 1.") ]
Public Type OPEN_VIRTUAL_DISK_PARAMETERS
	Version As OPEN_VIRTUAL_DISK_VERSION
    GetInfoOnly As BOOL
    ReadOnly As BOOL
    ResiliencyGuid As UUID
End Type
[Description ("THIS TYPE IS FOR V1 ONLY") ]
Public Type OPEN_VIRTUAL_DISK_PARAMETERS_V1
    Version As OPEN_VIRTUAL_DISK_VERSION
    RWDepth As Long
End Type
[ Description ("THIS TYPE IS FOR V3 ONLY") ]
Public Type OPEN_VIRTUAL_DISK_PARAMETERS_V3
    Version As OPEN_VIRTUAL_DISK_VERSION
    GetInfoOnly As BOOL
    ReadOnly As BOOL
    ResiliencyGuid As UUID
    SnapshotId As UUID
End Type

Public Enum VirtualDiskType
    VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN  = 0
    VIRTUAL_STORAGE_TYPE_DEVICE_ISO  = 1
    VIRTUAL_STORAGE_TYPE_DEVICE_VHD  = 2
    VIRTUAL_STORAGE_TYPE_DEVICE_VHDX  = 3
    VIRTUAL_STORAGE_TYPE_DEVICE_VHDSET  = 4
End Enum

Public Const OPEN_VIRTUAL_DISK_RW_DEPTH_DEFAULT = 1

Public Enum CREATE_VIRTUAL_DISK_FLAG
    CREATE_VIRTUAL_DISK_FLAG_NONE = &H0
    '  Pre-allocate all physical space necessary for the virtual
    '  size of the disk (e.g. a fixed VHD).
    CREATE_VIRTUAL_DISK_FLAG_FULL_PHYSICAL_ALLOCATION = &H1
    '  Take ownership of the source disk during create from source disk, to
    '  insure the source disk does not change during the create operation.  The
    '  source disk must also already be offline or read-only (or both).
    '  Ownership is released when create is done.  This also has a side-effect
    '  of disallowing concurrent create from same source disk.  Create will fail
    '  if ownership cannot be obtained or if the source disk is not already
    '  offline or read-only.  This flag is optional, but highly recommended for
    '  creates from source disk.  No effect for other types of create (no effect
    '  for create from source VHD; no effect for create without SourcePath).
    CREATE_VIRTUAL_DISK_FLAG_PREVENT_WRITES_TO_SOURCE_DISK = &H2
    '  Do not copy initial virtual disk metadata or block states from the
    '  parent VHD; this is useful if the parent VHD is a stand-in file and the
    '  real parent will be explicitly set later.
    CREATE_VIRTUAL_DISK_FLAG_DO_NOT_COPY_METADATA_FROM_PARENT = &H4
    '  Create the backing storage disk.
    CREATE_VIRTUAL_DISK_FLAG_CREATE_BACKING_STORAGE = &H8
    '  If set, the SourceLimitPath is an change tracking ID, and all data that has changed
    '  since that change tracking ID will be copied from the source. If clear, the
    '  SourceLimitPath is a VHD file path in the source VHD's chain, and
    '  all data that is present in the children of that VHD in the chain
    '  will be copied from the source.
    CREATE_VIRTUAL_DISK_FLAG_USE_CHANGE_TRACKING_SOURCE_LIMIT = &H10
    '  If set and the parent VHD has change tracking enabled, the child will
    '  have change tracking enabled and will recognize all change tracking
    '  IDs that currently exist in the parent. If clear or if the parent VHD
    '  does not have change tracking available, then change tracking will
    '  not be enabled in the new VHD.
    CREATE_VIRTUAL_DISK_FLAG_PRESERVE_PARENT_CHANGE_TRACKING_STATE = &H20
    '  When creating a VHD Set from source, don't copy the data in the original
    '  backing store, but intsead use the file as is. If this flag is not specified
    '  and a source file is passed to CreateVirtualDisk for a VHDSet file, the data
    '  in the source file is copied. If this flag is set the data is moved. The
    '  name of the file may change.
    CREATE_VIRTUAL_DISK_FLAG_VHD_SET_USE_ORIGINAL_BACKING_STORAGE = &H40
    ' 
    '  When creating a fixed virtual disk, take advantage of an underlying sparse file.
    '  Only supported on file systems that support sparse VDLs.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_SPARSE_FILE = &H80
    ' 
    '  Creates a VHD suitable as the backing store for a virtual persistent memory device.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_PMEM_COMPATIBLE = &H100
    ' 
    '  Allow a VHD to be created on a compressed volume.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = &H200
    ' 
    '  Allow a VHD to be created when it may be marked as a sparse file. This flag is a companion
    '  to CREATE_VIRTUAL_DISK_FLAG_SPARSE_FILE, and overrides the behavior that only
    '  allows sparse files on file systems that support sparse VDLs.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_SUPPORT_SPARSE_FILES_ANY_FS = &H400
End Enum

Public Const CREATE_VIRTUAL_DISK_PARAMETERS_DEFAULT_BLOCK_SIZE = 0
Public Enum CREATE_VIRTUAL_DISK_VERSION
    CREATE_VIRTUAL_DISK_VERSION_UNSPECIFIED=0
    CREATE_VIRTUAL_DISK_VERSION_1=1
    CREATE_VIRTUAL_DISK_VERSION_2=2
    CREATE_VIRTUAL_DISK_VERSION_3=3
    CREATE_VIRTUAL_DISK_VERSION_4=4
End Enum

[Description ("This is the V2 version of the type. Use CREATE_VIRTUAL_DISK_PARAMETERS_V1 for version 1. 3 and 4 are similarly defined but for internal use.") ]
Public Type CREATE_VIRTUAL_DISK_PARAMETERS
    Version As CREATE_VIRTUAL_DISK_VERSION
	UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
    OpenFlags As OPEN_VIRTUAL_DISK_FLAG
    ParentVirtualStorageType As VIRTUAL_STORAGE_TYPE
    SourceVirtualStorageType As VIRTUAL_STORAGE_TYPE
    ResiliencyGuid As UUID
End Type

Public Type CREATE_VIRTUAL_DISK_PARAMETERS_V1
    Version As CREATE_VIRTUAL_DISK_VERSION
    UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
End Type
Public Type CREATE_VIRTUAL_DISK_PARAMETERS_V3
    Version As CREATE_VIRTUAL_DISK_VERSION
    UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
    OpenFlags As OPEN_VIRTUAL_DISK_FLAG
    ParentVirtualStorageType As VIRTUAL_STORAGE_TYPE
    SourceVirtualStorageType As VIRTUAL_STORAGE_TYPE
    ResiliencyGuid As UUID
    SourceLimitPath As LongPtr
    BackingStorageType As VIRTUAL_STORAGE_TYPE
End Type
Public Type CREATE_VIRTUAL_DISK_PARAMETERS_V4
    Version As CREATE_VIRTUAL_DISK_VERSION
    UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
    OpenFlags As OPEN_VIRTUAL_DISK_FLAG
    ParentVirtualStorageType As VIRTUAL_STORAGE_TYPE
    SourceVirtualStorageType As VIRTUAL_STORAGE_TYPE
    ResiliencyGuid As UUID
    SourceLimitPath As LongPtr
    BackingStorageType As VIRTUAL_STORAGE_TYPE
    PmemAddressAbstractionType As UUID
    DataAlignment As LongLong
End Type

Public Enum ATTACH_VIRTUAL_DISK_VERSION
    ATTACH_VIRTUAL_DISK_VERSION_UNSPECIFIED=0
    ATTACH_VIRTUAL_DISK_VERSION_1=1
    ATTACH_VIRTUAL_DISK_VERSION_2=2
End Enum

[Description ("This is V2 of the type, for V1 use ATTACH_VIRTUAL_DISK_PARAMETERS_V1 ") ]
Public Type ATTACH_VIRTUAL_DISK_PARAMETERS
	Version As ATTACH_VIRTUAL_DISK_VERSION
    RestrictedOffset As LongLong
    RestrictedLength As LongLong
End Type
Public Type ATTACH_VIRTUAL_DISK_PARAMETERS_V1
    Version As ATTACH_VIRTUAL_DISK_VERSION
    Reserved As Long
End Type

Public Enum ATTACH_VIRTUAL_DISK_FLAG
    ATTACH_VIRTUAL_DISK_FLAG_NONE = &H00000000
    '  Attach the disk as read only
    ATTACH_VIRTUAL_DISK_FLAG_READ_ONLY = &H00000001
    '  Will cause all volumes on the disk to be mounted
    '  without drive letters.
    ATTACH_VIRTUAL_DISK_FLAG_NO_DRIVE_LETTER = &H00000002
    '  Will decouple the disk lifetime from that of the VirtualDiskHandle.
    '  The disk will be attached until an explicit call is made to
    '  DetachVirtualDisk, even if all handles are closed.
    ATTACH_VIRTUAL_DISK_FLAG_PERMANENT_LIFETIME = &H00000004
    '  Indicates that the drive will not be attached to
    '  the local system (but rather to a VM).
    ATTACH_VIRTUAL_DISK_FLAG_NO_LOCAL_HOST = &H00000008
    '  Do not assign a custom security descriptor to the disk; use the
    '  system default.
    ATTACH_VIRTUAL_DISK_FLAG_NO_SECURITY_DESCRIPTOR = &H00000010
    '  Default volume encryption policies should not be applied to the
    '  disk when attached to the local system.
    ATTACH_VIRTUAL_DISK_FLAG_BYPASS_DEFAULT_ENCRYPTION_POLICY = &H00000020
    '  Attach the disk as a non-PnP device.
    ATTACH_VIRTUAL_DISK_FLAG_NON_PNP = &H00000040
    '  Restrict the disk's view to the specified offset and length.
    ATTACH_VIRTUAL_DISK_FLAG_RESTRICTED_RANGE = &H00000080
    '  Restrict the disk's view to the unique data partition.
    ATTACH_VIRTUAL_DISK_FLAG_SINGLE_PARTITION = &H00000100
    '  Register the non-PnP disk as a volume with mount manager.
    ATTACH_VIRTUAL_DISK_FLAG_REGISTER_VOLUME = &H00000200
End Enum

Public Enum DETACH_VIRTUAL_DISK_FLAG
    DETACH_VIRTUAL_DISK_FLAG_NONE = &H00000000
End Enum


Public DeclareWide PtrSafe Function OpenVirtualDisk Lib "virtdisk.dll" (VirtualStorageType As VIRTUAL_STORAGE_TYPE, ByVal Path As String, ByVal VirtualDiskAccessMask As VIRTUAL_DISK_ACCESS_MASK, ByVal Flags As OPEN_VIRTUAL_DISK_FLAG, Parameters As Any, Handle As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateVirtualDisk Lib "virtdisk.dll" (VirtualStorageType As VIRTUAL_STORAGE_TYPE, ByVal Path As String, ByVal VirtualDiskAccessMask As VIRTUAL_DISK_ACCESS_MASK, SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal Flags As CREATE_VIRTUAL_DISK_FLAG, ByVal ProviderSpecificFlags As Long, Parameters As Any, lpOverlapped As OVERLAPPED, Handle As LongPtr) As Long
Public DeclareWide PtrSafe Function AttachVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal Flags As ATTACH_VIRTUAL_DISK_FLAG, ByVal ProviderSpecificFlags As Long, Parameters As Any, lpOverlapped As OVERLAPPED) As Long
Public DeclareWide PtrSafe Function DetachVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As DETACH_VIRTUAL_DISK_FLAG, ByVal ProviderSpecificFlags As Long) As Long
Public DeclareWide PtrSafe Function GetVirtualDiskPhysicalPath Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByRef DiskPathSizeInBytes As Long, ByVal DiskPath As String) As Long
Public DeclareWide PtrSafe Function GetAllAttachedVirtualDiskPhysicalPaths Lib "virtdisk.dll" (PathsBufferSizeInBytes As Long, ByVal PathsBuffer As String) As Long




Public DeclareWide PtrSafe Function ImmIsIME Lib "imm32" (ByVal hKL As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ImmCreateContext Lib "imm32" () As Long
Public DeclareWide PtrSafe Function ImmDestroyContext Lib "imm32" (ByVal hIMC As Long) As Long
Public DeclareWide PtrSafe Function ImmGetContext Lib "imm32" (ByVal hWnd As LongPtr) As Long
Public DeclareWide PtrSafe Function ImmReleaseContext Lib "imm32" (ByVal hWnd As LongPtr, ByVal hIMC As Long) As BOOL
Public DeclareWide PtrSafe Function ImmGetOpenStatus Lib "imm32" (ByVal hIMC As Long) As BOOL
Public DeclareWide PtrSafe Function ImmSetOpenStatus Lib "imm32" (ByVal hIMC As Long, ByVal fOpen As BOOL) As BOOL
Public DeclareWide PtrSafe Function ImmAssociateContext Lib "imm32" (ByVal hWnd As LongPtr, ByVal hIMC As Long) As Long
Public DeclareWide PtrSafe Function ImmGetConversionStatus Lib "imm32" (ByVal hIMC As Long, ByRef lpfdwConversion As Long, ByRef lpfdwSentence As Long) As BOOL
Public DeclareWide PtrSafe Function ImmSetConversionStatus Lib "imm32" (ByVal hIMC As Long, ByVal lpfdwConversion As Long, ByVal lpfdwSentence As Long) As BOOL


Public Enum UserProfileFlags
	PI_NOUI  = &H00000001  ' Prevents displaying of messages
	PI_APPLYPOLICY  = &H00000002  ' Apply NT4 style policy
End Enum

Public Type PROFILEINFOW
	dwSize As Long	
	dwFlags As UserProfileFlags
	lpUserName As LongPtr
	lpProfilePath As LongPtr
	lpDefaultPath As LongPtr
	lpServerName As LongPtr
	lpPolicyPath As LongPtr
	hProfile As LongPtr
End Type
'Alias PROFILEINFO As PROFILEINFOW
Public Type PROFILEINFO
    dwSize As Long
    dwFlags As UserProfileFlags
    lpUserName As LongPtr
    lpProfilePath As LongPtr
    lpDefaultPath As LongPtr
    lpServerName As LongPtr
    lpPolicyPath As LongPtr
    hProfile As LongPtr
End Type

Public DeclareWide PtrSafe Function LoadUserProfileW Lib "userenv" (ByVal hToken As LongPtr, lpProfileInfo As PROFILEINFOW) As BOOL
Public DeclareWide PtrSafe Function LoadUserProfile Lib "userenv" Alias "LoadUserProfileW" (ByVal hToken As LongPtr, lpProfileInfo As PROFILEINFO) As BOOL
Public DeclareWide PtrSafe Function UnloadUserProfile Lib "userenv" (ByVal hToken As LongPtr, ByVal hProfile As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetAllUsersProfileDirectoryW Lib "userenv" (ByVal lpProfileDir As LongPtr, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetAllUsersProfileDirectoryA Lib "userenv" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetAllUsersProfileDirectory Lib "userenv" Alias "GetAllUsersProfileDirectoryW" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultUserProfileDirectoryW Lib "userenv" (ByVal lpProfileDir As LongPtr, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetDefaultUserProfileDirectoryA Lib "userenv" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultUserProfileDirectory Lib "userenv" Alias "GetDefaultUserProfileDirectoryW" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function ExpandEnvironmentStringsForUserW Lib "userenv" (ByVal hToken As LongPtr, ByVal lpSrc As LongPtr, ByVal lpDst As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function ExpandEnvironmentStringForUser Lib "userenv" Alias "ExpandEnvironmentStringsForUserW" (ByVal hToken As LongPtr, ByVal lpSrc As String, ByVal lpDst As String, ByVal nSize As Long) As Long



Public Const CNLEN  = 15  ' Computer name length
Public Const LM20_CNLEN  = 15  ' LM 2.0 Computer name length
Public Const DNLEN  = CNLEN  ' Maximum domain name length
Public Const LM20_DNLEN  = LM20_CNLEN  ' LM 2.0 Maximum domain name length
Public Const UNCLEN  = (CNLEN+2)  ' UNC computer name length
Public Const LM20_UNCLEN  = (LM20_CNLEN+2)  ' LM 2.0 UNC computer name length
Public Const NNLEN  = 80  ' Net name length (share name)
Public Const LM20_NNLEN  = 12  ' LM 2.0 Net name length
Public Const RMLEN  = (UNCLEN+1+NNLEN)  ' Max remote name length
Public Const LM20_RMLEN  = (LM20_UNCLEN+1+LM20_NNLEN)  ' LM 2.0 Max remote name length
Public Const SNLEN  = 80  ' Service name length
Public Const LM20_SNLEN  = 15  ' LM 2.0 Service name length
Public Const STXTLEN  = 256  ' Service text length
Public Const LM20_STXTLEN  = 63  ' LM 2.0 Service text length
Public Const PATHLEN  = 256  ' Max. path (not including drive name)
Public Const LM20_PATHLEN  = 256  ' LM 2.0 Max. path
Public Const DEVLEN  = 80  ' Device name length
Public Const LM20_DEVLEN  = 8  ' LM 2.0 Device name length
Public Const EVLEN  = 16  ' Event name length
'  User, Group and Password lengths
Public Const UNLEN  = 256  ' Maximum user name length
Public Const LM20_UNLEN  = 20  ' LM 2.0 Maximum user name length
Public Const GNLEN  = UNLEN  ' Group name
Public Const LM20_GNLEN  = LM20_UNLEN  ' LM 2.0 Group name
Public Const PWLEN  = 256  ' Maximum password length
Public Const LM20_PWLEN  = 14  ' LM 2.0 Maximum password length
Public Const SHPWLEN  = 8  ' Share password length (bytes)
Public Const CLTYPE_LEN  = 12  ' Length of client type string
Public Const MAXCOMMENTSZ  = 256  ' Multipurpose comment length
Public Const LM20_MAXCOMMENTSZ  = 48  ' LM 2.0 Multipurpose comment length
Public Const QNLEN  = NNLEN  ' Queue name maximum length
Public Const LM20_QNLEN  = LM20_NNLEN  ' LM 2.0 Queue name maximum length
'  The ALERTSZ and MAXDEVENTRIES defines have not yet been NT'ized.
'  Whoever ports these components should change these values appropriately.
Public Const ALERTSZ  = 128  ' size of alert string in server
Public Const MAXDEVENTRIES  = 32 '(sizeof (int)*8)  ' Max number of device entries
'  We use int bitmap to represent
Public Const NETBIOS_NAME_LEN  = 16  ' NetBIOS net name (bytes)
'  Value to be used with APIs which have a "preferred maximum length"
'  parameter.  This value indicates that the API should just allocate
'  "as much as it takes."
Public Const MAX_PREFERRED_LENGTH As Long = (-1)
'         Constants used with encryption
Public Const CRYPT_KEY_LEN  = 7
Public Const CRYPT_TXT_LEN  = 8
Public Const ENCRYPTED_PWLEN  = 16
Public Const SESSION_PWLEN  = 24
Public Const SESSION_CRYPT_KLEN  = 21
'   Value to be used with SetInfo calls to allow setting of all
'   settable parameters (parmnum zero option)
Public Const PARMNUM_ALL  = 0
Public Const PARM_ERROR_UNKNOWN As Long = (-1)
Public Const PARM_ERROR_NONE  = 0
Public Const PARMNUM_BASE_INFOLEVEL  = 1000

Public Const MESSAGE_FILENAME        = "NETMSG"
Public Const OS2MSG_FILENAME         = "BASE"
Public Const HELP_MSG_FILENAME       = "NETH"

Public Enum NETAPI_PLATFORMID
    PLATFORM_ID_DOS  = 300
    PLATFORM_ID_OS2  = 400
    PLATFORM_ID_NT  = 500
    PLATFORM_ID_OSF = 600
    PLATFORM_ID_VMS = 700
End Enum

Public Const NERR_BASE = 2100
Public Const MIN_LANMAN_MESSAGE_ID  = NERR_BASE
Public Const MAX_LANMAN_MESSAGE_ID  = 5899

Public Const NERR_Success          =  0 /* Success */
[ Description ("The workstation driver is not installed.") ] Public Const NERR_NetNotStarted = (NERR_BASE+2)
[ Description("The server could not be located.") ] Public Const NERR_UnknownServer = (NERR_BASE+3) 
[ Description("An internal error occurred. The network cannot access a shared memory segment.") ] Public Const NERR_ShareMem  = (NERR_BASE+4) 

[ Description("A network resource shortage occurred .") ] Public Const NERR_NoNetworkResource = (NERR_BASE+5) 
[ Description("This operation is not supported on workstations.") ] Public Const NERR_RemoteOnly = (NERR_BASE+6) 
[ Description("The device is not connected.") ] Public Const NERR_DevNotRedirected = (NERR_BASE+7) 
/* NERR_BASE+8 is used for ERROR_CONNECTED_OTHER_PASSWORD */
/* NERR_BASE+9 is used for ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT */
/* UNUSED BASE+10 */
/* UNUSED BASE+11 */
/* UNUSED BASE+12 */
/* UNUSED BASE+13 */
[ Description("The Server service is not started.") ] Public Const NERR_ServerNotStarted = (NERR_BASE+14) 
[ Description("The queue is empty.") ] Public Const NERR_ItemNotFound = (NERR_BASE+15) 
[ Description("The device or directory does not exist.") ] Public Const NERR_UnknownDevDir = (NERR_BASE+16) 
[ Description("The operation is invalid on a redirected resource.") ] Public Const NERR_RedirectedPath = (NERR_BASE+17) 
[ Description("The name has already been shared.") ] Public Const NERR_DuplicateShare = (NERR_BASE+18) 
[ Description("The server is currently out of the requested resource.") ] Public Const NERR_NoRoom = (NERR_BASE+19) 
/* UNUSED BASE+20 */
[ Description("Requested addition of items exceeds the maximum allowed.") ] Public Const NERR_TooManyItems = (NERR_BASE+21) 
[ Description("The Peer service supports only two simultaneous users.") ] Public Const NERR_InvalidMaxUsers = (NERR_BASE+22) 
[ Description("The API return buffer is too small.") ] Public Const NERR_BufTooSmall = (NERR_BASE+23) 
/* UNUSED BASE+24 */
/* UNUSED BASE+25 */
/* UNUSED BASE+26 */
[ Description("A remote API error occurred.") ] Public Const NERR_RemoteErr = (NERR_BASE+27) 
/* UNUSED BASE+28 */
/* UNUSED BASE+29 */
/* UNUSED BASE+30 */
[ Description("An error occurred when opening or reading the configuration file.") ] Public Const NERR_LanmanIniError = (NERR_BASE+31) 
/* UNUSED BASE+32 */
/* UNUSED BASE+33 */
/* UNUSED BASE+34 */
/* UNUSED BASE+35 */
[ Description("A general network error occurred.") ] Public Const NERR_NetworkError = (NERR_BASE+36)
[ Description ("The Workstation service is in an inconsistent state. Restart the computer before restarting the Workstation service.") ] Public Const NERR_WkstaInconsistentState = (NERR_BASE + 37)
[ Description("The Workstation service has not been started.") ] Public Const NERR_WkstaNotStarted = (NERR_BASE+38) 
[ Description("The requested information is not available.") ] Public Const NERR_BrowserNotStarted = (NERR_BASE+39) 
[ Description("An internal Windows error occurred.") ] Public Const NERR_InternalError = (NERR_BASE+40) 
[ Description("The server is not configured for transactions.") ] Public Const NERR_BadTransactConfig = (NERR_BASE+41) 
[ Description("The requested API is not supported on the remote server.") ] Public Const NERR_InvalidAPI = (NERR_BASE+42) 
[ Description("The event name is invalid.") ] Public Const NERR_BadEventName = (NERR_BASE+43)
[ Description("The computer name already exists on the network. Change it and restart the computer.") ] Public Const NERR_DupNameReboot = (NERR_BASE+44) 
/*
 *      Config API related
 *              Error codes from BASE+45 to BASE+49
 */

/* UNUSED BASE+45 */
[ Description("The specified component could not be found in the configuration information.") ] Public Const NERR_CfgCompNotFound = (NERR_BASE+46) 
[ Description("The specified parameter could not be found in the configuration information.") ] Public Const NERR_CfgParamNotFound = (NERR_BASE+47) 
[ Description("A line in the configuration file is too long.") ] Public Const NERR_LineTooLong = (NERR_BASE+49) 

/*
 *      Spooler API related
 *              Error codes from BASE+50 to BASE+79
 */

[ Description("The printer does not exist.") ] Public Const NERR_QNotFound = (NERR_BASE+50) 
[ Description("The print job does not exist.") ] Public Const NERR_JobNotFound = (NERR_BASE+51) 
[ Description("The printer destination cannot be found.") ] Public Const NERR_DestNotFound = (NERR_BASE+52) 
[ Description("The printer destination already exists.") ] Public Const NERR_DestExists = (NERR_BASE+53) 
[ Description("The printer queue already exists.") ] Public Const NERR_QExists = (NERR_BASE+54) 
[ Description("No more printers can be added.") ] Public Const NERR_QNoRoom = (NERR_BASE+55) 
[ Description("No more print jobs can be added.") ] Public Const NERR_JobNoRoom = (NERR_BASE+56) 
[ Description("No more printer destinations can be added.") ] Public Const NERR_DestNoRoom = (NERR_BASE+57) 
[ Description("This printer destination is idle and cannot accept control operations.") ] Public Const NERR_DestIdle  = (NERR_BASE+58) 
[ Description("This printer destination request contains an invalid control function.") ] Public Const NERR_DestInvalidOp = (NERR_BASE+59) 
[ Description("The print processor is not responding.") ] Public Const NERR_ProcNoRespond = (NERR_BASE+60) 
[ Description("The spooler is not running.") ] Public Const NERR_SpoolerNotLoaded = (NERR_BASE+61) 
[ Description("This operation cannot be performed on the print destination in its current state.") ] Public Const NERR_DestInvalidState = (NERR_BASE+62) 
[ Description("This operation cannot be performed on the printer queue in its current state.") ] Public Const NERR_QInvalidState = (NERR_BASE+63) 
[ Description("This operation cannot be performed on the print job in its current state.") ] Public Const NERR_JobInvalidState = (NERR_BASE+64) 
[ Description("A spooler memory allocation failure occurred.") ] Public Const NERR_SpoolNoMemory = (NERR_BASE+65) 
[ Description("The device driver does not exist.") ] Public Const NERR_DriverNotFound = (NERR_BASE+66) 
[ Description("The data type is not supported by the print processor.") ] Public Const NERR_DataTypeInvalid = (NERR_BASE+67) 
[ Description("The print processor is not installed.") ] Public Const NERR_ProcNotFound = (NERR_BASE+68) 

/*
 *      Service API related
 *              Error codes from BASE+80 to BASE+99
 */

[ Description("The service database is locked.") ] Public Const NERR_ServiceTableLocked = (NERR_BASE+80) 
[ Description("The service table is full.") ] Public Const NERR_ServiceTableFull = (NERR_BASE+81) 
[ Description("The requested service has already been started.") ] Public Const NERR_ServiceInstalled = (NERR_BASE+82) 
[ Description("The service does not respond to control actions.") ] Public Const NERR_ServiceEntryLocked = (NERR_BASE+83) 
[ Description("The service has not been started.") ] Public Const NERR_ServiceNotInstalled = (NERR_BASE+84) 
[ Description("The service name is invalid.") ] Public Const NERR_BadServiceName = (NERR_BASE+85) 
[ Description("The service is not responding to the control function.") ] Public Const NERR_ServiceCtlTimeout = (NERR_BASE+86) 
[ Description("The service control is busy.") ] Public Const NERR_ServiceCtlBusy = (NERR_BASE+87) 
[ Description("The configuration file contains an invalid service program name.") ] Public Const NERR_BadServiceProgName = (NERR_BASE+88) 
[ Description("The service could not be controlled in its present state.") ] Public Const NERR_ServiceNotCtrl = (NERR_BASE+89) 
[ Description("The service ended abnormally.") ] Public Const NERR_ServiceKillProc = (NERR_BASE+90) 
[ Description("The requested pause, continue, or stop is not valid for this service.") ] Public Const NERR_ServiceCtlNotValid = (NERR_BASE+91) 
[ Description("The service control dispatcher could not find the service name in the dispatch table.") ] Public Const NERR_NotInDispatchTbl = (NERR_BASE+92) 
[ Description("The service control dispatcher pipe read failed.") ] Public Const NERR_BadControlRecv = (NERR_BASE+93) 
[ Description("A thread for the new service could not be created.") ] Public Const NERR_ServiceNotStarting = (NERR_BASE+94) 

/*
 *      Wksta and Logon API related
 *              Error codes from BASE+100 to BASE+118
 */

[ Description("This workstation is already logged on to the local-area network.") ] Public Const NERR_AlreadyLoggedOn = (NERR_BASE+100) 
[ Description("The workstation is not logged on to the local-area network.") ] Public Const NERR_NotLoggedOn = (NERR_BASE+101) 
[ Description("The user name or group name parameter is invalid.") ] Public Const NERR_BadUsername = (NERR_BASE+102) 
[ Description("The password parameter is invalid.") ] Public Const NERR_BadPassword = (NERR_BASE+103) 
[ Description("@W The logon processor did not add the message alias.") ] Public Const NERR_UnableToAddName_W = (NERR_BASE+104) 
[ Description("The logon processor did not add the message alias.") ] Public Const NERR_UnableToAddName_F = (NERR_BASE+105) 
[ Description("@W The logoff processor did not delete the message alias.") ] Public Const NERR_UnableToDelName_W = (NERR_BASE+106) 
[ Description("The logoff processor did not delete the message alias.") ] Public Const NERR_UnableToDelName_F = (NERR_BASE+107) 
/* UNUSED BASE+108 */
[ Description("Network logons are paused.") ] Public Const NERR_LogonsPaused = (NERR_BASE+109) 
[ Description("A centralized logon-server conflict occurred.")] Public Const NERR_LogonServerConflict = (NERR_BASE+ 110)
[ Description("The server is configured without a valid user path.") ] Public Const NERR_LogonNoUserPath = (NERR_BASE+111) 
[ Description("An error occurred while loading or running the logon script.") ] Public Const NERR_LogonScriptError = (NERR_BASE+112) 
/* UNUSED BASE+113 */
[ Description("The logon server was not specified. Your computer will be logged on as STANDALONE.") ] Public Const NERR_StandaloneLogon = (NERR_BASE+114) 
[ Description("The logon server could not be found.") ] Public Const NERR_LogonServerNotFound = (NERR_BASE+115)
[ Description("There is already a logon domain for this computer.") ] Public Const NERR_LogonDomainExists = (NERR_BASE+116) 
[ Description("The logon server could not validate the logon.") ] Public Const NERR_NonValidatedLogon = (NERR_BASE+117) 

/*
 *      ACF API related (access, user, group)
 *              Error codes from BASE+119 to BASE+149
 */

[ Description("The security database could not be found.") ] Public Const NERR_ACFNotFound = (NERR_BASE+119) 
[ Description("The group name could not be found.") ] Public Const NERR_GroupNotFound = (NERR_BASE+120) 
[ Description("The user name could not be found.") ] Public Const NERR_UserNotFound = (NERR_BASE+121) 
[ Description("The resource name could not be found.") ] Public Const NERR_ResourceNotFound = (NERR_BASE+122) 
[ Description("The group already exists.") ] Public Const NERR_GroupExists = (NERR_BASE+123) 
[ Description("The account already exists.") ] Public Const NERR_UserExists = (NERR_BASE+124) 
[ Description("The resource permission list already exists.") ] Public Const NERR_ResourceExists = (NERR_BASE+125) 
[ Description("This operation is only allowed on the primary domain controller of the domain.") ] Public Const NERR_NotPrimary = (NERR_BASE+126) 
[ Description("The security database has not been started.") ] Public Const NERR_ACFNotLoaded = (NERR_BASE+127) 
[ Description("There are too many names in the user accounts database.") ] Public Const NERR_ACFNoRoom = (NERR_BASE+128) 
[ Description("A disk I/O failure occurred.") ] Public Const NERR_ACFFileIOFail = (NERR_BASE+129) 
[ Description("The limit of 64 entries per resource was exceeded.") ] Public Const NERR_ACFTooManyLists = (NERR_BASE+130) 
[ Description("Deleting a user with a session is not allowed.") ] Public Const NERR_UserLogon = (NERR_BASE+131) 
[ Description("The parent directory could not be located.") ] Public Const NERR_ACFNoParent = (NERR_BASE+132) 
[ Description("Unable to add to the security database session cache segment.") ] Public Const NERR_CanNotGrowSegment = (NERR_BASE+133) 
[ Description("This operation is not allowed on this special group.") ] Public Const NERR_SpeGroupOp = (NERR_BASE+134) 
[ Description("This user is not cached in user accounts database session cache.") ] Public Const NERR_NotInCache = (NERR_BASE+135) 
[ Description("The user already belongs to this group.") ] Public Const NERR_UserInGroup = (NERR_BASE+136) 
[ Description("The user does not belong to this group.") ] Public Const NERR_UserNotInGroup = (NERR_BASE+137) 
[ Description("This user account is undefined.") ] Public Const NERR_AccountUndefined = (NERR_BASE+138) 
[ Description("This user account has expired.") ] Public Const NERR_AccountExpired = (NERR_BASE+139) 
[ Description("The user is not allowed to log on from this workstation.") ] Public Const NERR_InvalidWorkstation = (NERR_BASE+140) 
[ Description("The user is not allowed to log on at this time.") ] Public Const NERR_InvalidLogonHours = (NERR_BASE+141) 
[ Description("The password of this user has expired.") ] Public Const NERR_PasswordExpired = (NERR_BASE+142) 
[ Description("The password of this user cannot change.") ] Public Const NERR_PasswordCantChange = (NERR_BASE+143) 
[ Description("This password cannot be used now.") ] Public Const NERR_PasswordHistConflict = (NERR_BASE+144) 
[ Description("The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements.") ] Public Const NERR_PasswordTooShort = (NERR_BASE+145) 
[ Description("The password of this user is too recent to change.") ] Public Const NERR_PasswordTooRecent = (NERR_BASE+146) 
[ Description("The security database is corrupted.") ] Public Const NERR_InvalidDatabase = (NERR_BASE+147) 
[ Description("No updates are necessary to this replicant network/local security database.") ] Public Const NERR_DatabaseUpToDate = (NERR_BASE+148) 
[ Description("This replicant database is outdated; synchronization is required.") ] Public Const NERR_SyncRequired = (NERR_BASE+149) 

/*
 *      Use API related
 *              Error codes from BASE+150 to BASE+169
 */

[ Description("The network connection could not be found.") ] Public Const NERR_UseNotFound = (NERR_BASE+150) 
[ Description("This asg_type is invalid.") ] Public Const NERR_BadAsgType = (NERR_BASE+151) 
[ Description("This device is currently being shared.") ] Public Const NERR_DeviceIsShared = (NERR_BASE+152) 
[ Description("The user name may not be same as computer name.") ] Public Const NERR_SameAsComputerName = (NERR_BASE+153) 


/*
 *      Message Server related
 *              Error codes BASE+170 to BASE+209
 */

[ Description("The computer name could not be added as a message alias. The name may already exist on the network.") ] Public Const NERR_NoComputerName = (NERR_BASE+170) 
[ Description("The Messenger service is already started.") ] Public Const NERR_MsgAlreadyStarted = (NERR_BASE+171) 
[ Description("The Messenger service failed to start.") ] Public Const NERR_MsgInitFailed = (NERR_BASE+172) 
[ Description("The message alias could not be found on the network.") ] Public Const NERR_NameNotFound = (NERR_BASE+173) 
[ Description("This message alias has already been forwarded.") ] Public Const NERR_AlreadyForwarded = (NERR_BASE+174) 
[ Description("This message alias has been added but is still forwarded.") ] Public Const NERR_AddForwarded = (NERR_BASE+175) 
[ Description("This message alias already exists locally.") ] Public Const NERR_AlreadyExists = (NERR_BASE+176) 
[ Description("The maximum number of added message aliases has been exceeded.") ] Public Const NERR_TooManyNames = (NERR_BASE+177) 
[ Description("The computer name could not be deleted.") ] Public Const NERR_DelComputerName = (NERR_BASE+178) 
[ Description("Messages cannot be forwarded back to the same workstation.") ] Public Const NERR_LocalForward = (NERR_BASE+179) 
[ Description("An error occurred in the domain message processor.") ] Public Const NERR_GrpMsgProcessor = (NERR_BASE+180) 
[ Description("The message was sent, but the recipient has paused the Messenger service.") ] Public Const NERR_PausedRemote = (NERR_BASE+181) 
[ Description("The message was sent but not received.") ] Public Const NERR_BadReceive = (NERR_BASE+182) 
[ Description("The message alias is currently in use. Try again later.") ] Public Const NERR_NameInUse = (NERR_BASE+183) 
[ Description("The Messenger service has not been started.") ] Public Const NERR_MsgNotStarted = (NERR_BASE+184) 
[ Description("The name is not on the local computer.") ] Public Const NERR_NotLocalName = (NERR_BASE+185) 
[ Description("The forwarded message alias could not be found on the network.") ] Public Const NERR_NoForwardName = (NERR_BASE+186) 
[ Description("The message alias table on the remote station is full.") ] Public Const NERR_RemoteFull = (NERR_BASE+187) 
[ Description("Messages for this alias are not currently being forwarded.") ] Public Const NERR_NameNotForwarded = (NERR_BASE+188) 
[ Description("The broadcast message was truncated.") ] Public Const NERR_TruncatedBroadcast = (NERR_BASE+189) 
[ Description("This is an invalid device name.") ] Public Const NERR_InvalidDevice = (NERR_BASE+194) 
[ Description("A write fault occurred.") ] Public Const NERR_WriteFault = (NERR_BASE+195) 
/* UNUSED BASE+196 */
[ Description("A duplicate message alias exists on the network.") ] Public Const NERR_DuplicateName = (NERR_BASE+197) 
[ Description("@W This message alias will be deleted later.") ] Public Const NERR_DeleteLater = (NERR_BASE+198) 
[ Description("The message alias was not successfully deleted from all networks.") ] Public Const NERR_IncompleteDel = (NERR_BASE+199) 
[ Description("This operation is not supported on computers with multiple networks.") ] Public Const NERR_MultipleNets = (NERR_BASE+200) 

/*
 *      Server API related
 *              Error codes BASE+210 to BASE+229
 */

[ Description("This shared resource does not exist.") ] Public Const NERR_NetNameNotFound = (NERR_BASE+210) 
[ Description("This device is not shared.") ] Public Const NERR_DeviceNotShared = (NERR_BASE+211) 
[ Description("A session does not exist with that computer name.") ] Public Const NERR_ClientNameNotFound = (NERR_BASE+212) 
[ Description("There is not an open file with that identification number.") ] Public Const NERR_FileIdNotFound = (NERR_BASE+214) 
[ Description("A failure occurred when executing a remote administration command.") ] Public Const NERR_ExecFailure = (NERR_BASE+215) 
[ Description("A failure occurred when opening a remote temporary file.") ] Public Const NERR_TmpFile = (NERR_BASE+216) 
[ Description("The data returned from a remote administration command has been truncated to 64K.") ] Public Const NERR_TooMuchData = (NERR_BASE+217) 
[ Description("This device cannot be shared as both a spooled and a non-spooled resource.") ] Public Const NERR_DeviceShareConflict = (NERR_BASE+218) 
[ Description("The information in the list of servers may be incorrect.") ] Public Const NERR_BrowserTableIncomplete = (NERR_BASE+219) 
[ Description("The computer is not active in this domain.") ] Public Const NERR_NotLocalDomain = (NERR_BASE+220) 
[ Description("The share must be removed from the Distributed File System before it can be deleted.") ] Public Const NERR_IsDfsShare = (NERR_BASE+221) 

/*
 *      CharDev API related
 *              Error codes BASE+230 to BASE+249
 */

/* UNUSED BASE+230 */
[ Description("The operation is invalid for this device.") ] Public Const NERR_DevInvalidOpCode = (NERR_BASE+231) 
[ Description("This device cannot be shared.") ] Public Const NERR_DevNotFound = (NERR_BASE+232) 
[ Description("This device was not open.") ] Public Const NERR_DevNotOpen = (NERR_BASE+233) 
[ Description("This device name list is invalid.") ] Public Const NERR_BadQueueDevString = (NERR_BASE+234) 
[ Description("The queue priority is invalid.") ] Public Const NERR_BadQueuePriority = (NERR_BASE+235) 
[ Description("There are no shared communication devices.") ] Public Const NERR_NoCommDevs = (NERR_BASE+237) 
[ Description("The queue you specified does not exist.") ] Public Const NERR_QueueNotFound = (NERR_BASE+238) 
[ Description("This list of devices is invalid.") ] Public Const NERR_BadDevString = (NERR_BASE+240) 
[ Description("The requested device is invalid.") ] Public Const NERR_BadDev = (NERR_BASE+241) 
[ Description("This device is already in use by the spooler.") ] Public Const NERR_InUseBySpooler = (NERR_BASE+242) 
[ Description("This device is already in use as a communication device.") ] Public Const NERR_CommDevInUse = (NERR_BASE+243) 

/*
 *      NetICanonicalize and NetIType and NetIMakeLMFileName
 *      NetIListCanon and NetINameCheck
 *              Error codes BASE+250 to BASE+269
 */

[ Description("This computer name is invalid.") ] Public Const NERR_InvalidComputer = (NERR_BASE+251) 
/* UNUSED BASE+252 */
/* UNUSED BASE+253 */
[ Description("The string and prefix specified are too long.") ] Public Const NERR_MaxLenExceeded = (NERR_BASE+254) 
/* UNUSED BASE+255 */
[ Description("This path component is invalid.") ] Public Const NERR_BadComponent = (NERR_BASE+256) 
[ Description("Could not determine the type of input.") ] Public Const NERR_CantType = (NERR_BASE+257) 
/* UNUSED BASE+258 */
/* UNUSED BASE+259 */
[ Description("The buffer for types is not big enough.") ] Public Const NERR_TooManyEntries = (NERR_BASE+262) 

/*
 *      NetProfile
 *              Error codes BASE+270 to BASE+276
 */

[ Description("Profile files cannot exceed 64K.") ] Public Const NERR_ProfileFileTooBig = (NERR_BASE+270) 
[ Description("The start offset is out of range.") ] Public Const NERR_ProfileOffset = (NERR_BASE+271) 
[ Description("The system cannot delete current connections to network resources.") ] Public Const NERR_ProfileCleanup = (NERR_BASE+272) 
[ Description("The system was unable to parse the command line in this file.") ] Public Const NERR_ProfileUnknownCmd = (NERR_BASE+273) 
[ Description("An error occurred while loading the profile file.") ] Public Const NERR_ProfileLoadErr = (NERR_BASE+274) 
[ Description("@W Errors occurred while saving the profile file. The profile was partially saved.") ] Public Const NERR_ProfileSaveErr = (NERR_BASE+275) 


/*
 *      NetAudit and NetErrorLog
 *              Error codes BASE+277 to BASE+279
 */

[ Description("Log file %1 is full.") ] Public Const NERR_LogOverflow  = (NERR_BASE+277) 
[ Description("This log file has changed between reads.") ] Public Const NERR_LogFileChanged = (NERR_BASE+278) 
[ Description("Log file %1 is corrupt.") ] Public Const NERR_LogFileCorrupt = (NERR_BASE+279) 


/*
 *      NetRemote
 *              Error codes BASE+280 to BASE+299
 */
[ Description("The source path cannot be a directory.") ] Public Const NERR_SourceIsDir = (NERR_BASE+280) 
[ Description("The source path is illegal.") ] Public Const NERR_BadSource = (NERR_BASE+281) 
[ Description("The destination path is illegal.") ] Public Const NERR_BadDest = (NERR_BASE+282) 
[ Description("The source and destination paths are on different servers.") ] Public Const NERR_DifferentServers = (NERR_BASE+283) 
/* UNUSED BASE+284 */
[ Description("The Run server you requested is paused.") ] Public Const NERR_RunSrvPaused = (NERR_BASE+285) 
/* UNUSED BASE+286 */
/* UNUSED BASE+287 */
/* UNUSED BASE+288 */
[ Description("An error occurred when communicating with a Run server.") ] Public Const NERR_ErrCommRunSrv = (NERR_BASE+289) 
/* UNUSED BASE+290 */
[ Description("An error occurred when starting a background process.") ] Public Const NERR_ErrorExecingGhost = (NERR_BASE+291) 
[ Description("The shared resource you are connected to could not be found.") ] Public Const NERR_ShareNotFound = (NERR_BASE+292) 
/* UNUSED BASE+293 */
/* UNUSED BASE+294 */


/*
 *  NetWksta.sys (redir) returned error codes.
 *
 *          NERR_BASE + (300-329)
 */

[ Description("The LAN adapter number is invalid.") ] Public Const NERR_InvalidLana = (NERR_BASE+300) 
[ Description("There are open files on the connection.") ] Public Const NERR_OpenFiles = (NERR_BASE+301) 
[ Description("Active connections still exist.") ] Public Const NERR_ActiveConns = (NERR_BASE+302) 
[ Description("This share name or password is invalid.") ] Public Const NERR_BadPasswordCore = (NERR_BASE+303) 
[ Description("The device is being accessed by an active process.") ] Public Const NERR_DevInUse  = (NERR_BASE+304) 
[ Description("The drive letter is in use locally.") ] Public Const NERR_LocalDrive = (NERR_BASE+305) 

/*
 *  Alert error codes.
 *
 *          NERR_BASE + (330-339)
 */
[ Description("The specified client is already registered for the specified event.") ] Public Const NERR_AlertExists = (NERR_BASE+330) 
[ Description("The alert table is full.") ] Public Const NERR_TooManyAlerts = (NERR_BASE+331) 
[ Description("An invalid or nonexistent alert name was raised.") ] Public Const NERR_NoSuchAlert = (NERR_BASE+332) 
[ Description("The alert recipient is invalid.") ] Public Const NERR_BadRecipient = (NERR_BASE+333) 
[ Description("A user's session with this server has been deleted because the user's logon hours are no longer valid.") ] Public Const NERR_AcctLimitExceeded = (NERR_BASE+334)

/*
 *  Additional Error and Audit log codes.
 *
 *          NERR_BASE +(340-343)
 */
[ Description("The log file does not contain the requested record number.") ] Public Const NERR_InvalidLogSeek = (NERR_BASE+340) 
/* UNUSED BASE+341 */
/* UNUSED BASE+342 */
/* UNUSED BASE+343 */

/*
 *  Additional UAS and NETLOGON codes
 *
 *          NERR_BASE +(350-359)
 */
[ Description("The user accounts database is not configured correctly.") ] Public Const NERR_BadUasConfig = (NERR_BASE+350) 
[ Description("This operation is not permitted when the Netlogon service is running.") ] Public Const NERR_InvalidUASOp = (NERR_BASE+351) 
[ Description("This operation is not allowed on the last administrative account.") ] Public Const NERR_LastAdmin = (NERR_BASE+352) 
[ Description("Could not find domain controller for this domain.") ] Public Const NERR_DCNotFound = (NERR_BASE+353) 
[ Description("Could not set logon information for this user.") ] Public Const NERR_LogonTrackingError = (NERR_BASE+354) 
[ Description("The Netlogon service has not been started.") ] Public Const NERR_NetlogonNotStarted = (NERR_BASE+355) 
[ Description("Unable to add to the user accounts database.") ] Public Const NERR_CanNotGrowUASFile = (NERR_BASE+356) 
[ Description("This server's clock is not synchronized with the primary domain controller's clock.") ] Public Const NERR_TimeDiffAtDC = (NERR_BASE+357) 
[ Description("A password mismatch has been detected.") ] Public Const NERR_PasswordMismatch = (NERR_BASE+358) 


/*
 *  Server Integration error codes.
 *
 *          NERR_BASE +(360-369)
 */
[ Description("The server identification does not specify a valid server.") ] Public Const NERR_NoSuchServer = (NERR_BASE+360) 
[ Description("The session identification does not specify a valid session.") ] Public Const NERR_NoSuchSession = (NERR_BASE+361) 
[ Description("The connection identification does not specify a valid connection.") ] Public Const NERR_NoSuchConnection = (NERR_BASE+362) 
[ Description("There is no space for another entry in the table of available servers.") ] Public Const NERR_TooManyServers = (NERR_BASE+363) 
[ Description("The server has reached the maximum number of sessions it supports.") ] Public Const NERR_TooManySessions = (NERR_BASE+364) 
[ Description("The server has reached the maximum number of connections it supports.") ] Public Const NERR_TooManyConnections = (NERR_BASE+365) 
[ Description("The server cannot open more files because it has reached its maximum number.") ] Public Const NERR_TooManyFiles = (NERR_BASE+366) 
[ Description("There are no alternate servers registered on this server.") ] Public Const NERR_NoAlternateServers = (NERR_BASE+367) 
/* UNUSED BASE+368 */
/* UNUSED BASE+369 */

[ Description("Try down-level (remote admin protocol) version of API instead.") ] Public Const NERR_TryDownLevel = (NERR_BASE+370) 

/*
 *  UPS error codes.
 *
 *          NERR_BASE + (380-384)
 */
[ Description("The UPS driver could not be accessed by the UPS service.") ] Public Const NERR_UPSDriverNotStarted = (NERR_BASE+380) 
[ Description("The UPS service is not configured correctly.") ] Public Const NERR_UPSInvalidConfig = (NERR_BASE+381) 
[ Description("The UPS service could not access the specified Comm Port.") ] Public Const NERR_UPSInvalidCommPort = (NERR_BASE+382) 
[ Description("The UPS indicated a line fail or low battery situation. Service not started.") ] Public Const NERR_UPSSignalAsserted = (NERR_BASE+383) 
[ Description("The UPS service failed to perform a system shut down.") ] Public Const NERR_UPSShutdownFailed = (NERR_BASE+384) 

/*
 *  Remoteboot error codes.
 *
 *          NERR_BASE + (400-419)
 *          Error codes 400 - 405 are used by RPLBOOT.SYS.
 *          Error codes 403, 407 - 416 are used by RPLLOADR.COM,
 *          Error code 417 is the alerter message of REMOTEBOOT (RPLSERVR.EXE).
 *          Error code 418 is for when REMOTEBOOT can't start
 *          Error code 419 is for a disallowed 2nd rpl connection
 *
 */
[ Description("The program below returned an MS-DOS error code:") ] Public Const NERR_BadDosRetCode = (NERR_BASE+400) 
[ Description("The program below needs more memory:") ] Public Const NERR_ProgNeedsExtraMem = (NERR_BASE+401) 
[ Description("The program below called an unsupported MS-DOS function:") ] Public Const NERR_BadDosFunction = (NERR_BASE+402) 
[ Description("The workstation failed to boot.") ] Public Const NERR_RemoteBootFailed = (NERR_BASE+403) 
[ Description("The file below is corrupt.") ] Public Const NERR_BadFileCheckSum = (NERR_BASE+404) 
[ Description("No loader is specified in the boot-block definition file.") ] Public Const NERR_NoRplBootSystem = (NERR_BASE+405) 
[ Description("NetBIOS returned an error: The NCB and SMB are dumped above.") ] Public Const NERR_RplLoadrNetBiosErr = (NERR_BASE+406) 
[ Description("A disk I/O error occurred.") ] Public Const NERR_RplLoadrDiskErr = (NERR_BASE+407) 
[ Description("Image parameter substitution failed.") ] Public Const NERR_ImageParamErr = (NERR_BASE+408) 
[ Description("Too many image parameters cross disk sector boundaries.") ] Public Const NERR_TooManyImageParams = (NERR_BASE+409) 
[ Description("The image was not generated from an MS-DOS diskette formatted with /S.") ] Public Const NERR_NonDosFloppyUsed = (NERR_BASE+410) 
[ Description("Remote boot will be restarted later.") ] Public Const NERR_RplBootRestart = (NERR_BASE+411) 
[ Description("The call to the Remoteboot server failed.") ] Public Const NERR_RplSrvrCallFailed = (NERR_BASE+412) 
[ Description("Cannot connect to the Remoteboot server.") ] Public Const NERR_CantConnectRplSrvr = (NERR_BASE+413) 
[ Description("Cannot open image file on the Remoteboot server.") ] Public Const NERR_CantOpenImageFile = (NERR_BASE+414) 
[ Description("Connecting to the Remoteboot server...") ] Public Const NERR_CallingRplSrvr = (NERR_BASE+415) 
[ Description("Connecting to the Remoteboot server...") ] Public Const NERR_StartingRplBoot = (NERR_BASE+416) 
[ Description("Remote boot service was stopped; check the error log for the cause of the problem.") ] Public Const NERR_RplBootServiceTerm = (NERR_BASE+417) 
[ Description("Remote boot startup failed; check the error log for the cause of the problem.") ] Public Const NERR_RplBootStartFailed = (NERR_BASE+418) 
[ Description("A second connection to a Remoteboot resource is not allowed.") ] Public Const NERR_RPL_CONNECTED = (NERR_BASE+419) 

/*
 *  FTADMIN API error codes
 *
 *       NERR_BASE + (425-434)
 *
 *       (Currently not used in NT)
 *
 */

/*
 *  Browser service API error codes
 *
 *       NERR_BASE + (450-475)
 *
 */
[ Description("The browser service was configured with MaintainServerList=No.") ] Public Const NERR_BrowserConfiguredToNotRun = (NERR_BASE+450) 

/*
 *  Additional Remoteboot error codes.
 *
 *          NERR_BASE + (510-550)
 */
[ Description("Service failed to start since none of the network adapters started with this service.") ] Public Const NERR_RplNoAdaptersStarted = (NERR_BASE+510) 
[ Description("Service failed to start due to bad startup information in the registry.") ] Public Const NERR_RplBadRegistry = (NERR_BASE+511) 
[ Description("Service failed to start because its database is absent or corrupt.") ] Public Const NERR_RplBadDatabase = (NERR_BASE+512) 
[ Description("Service failed to start because RPLFILES share is absent.") ] Public Const NERR_RplRplfilesShare  = (NERR_BASE+513) 
[ Description("Service failed to start because RPLUSER group is absent.") ] Public Const NERR_RplNotRplServer = (NERR_BASE+514) 
[ Description("Cannot enumerate service records.") ] Public Const NERR_RplCannotEnum  = (NERR_BASE+515) 
[ Description("Workstation record information has been corrupted.") ] Public Const NERR_RplWkstaInfoCorrupted = (NERR_BASE+516) 
[ Description("Workstation record was not found.") ] Public Const NERR_RplWkstaNotFound  = (NERR_BASE+517) 
[ Description("Workstation name is in use by some other workstation.") ] Public Const NERR_RplWkstaNameUnavailable = (NERR_BASE+518) 
[ Description("Profile record information has been corrupted.") ] Public Const NERR_RplProfileInfoCorrupted = (NERR_BASE+519) 
[ Description("Profile record was not found.") ] Public Const NERR_RplProfileNotFound = (NERR_BASE+520) 
[ Description("Profile name is in use by some other profile.") ] Public Const NERR_RplProfileNameUnavailable = (NERR_BASE+521) 
[ Description("There are workstations using this profile.") ] Public Const NERR_RplProfileNotEmpty = (NERR_BASE+522) 
[ Description("Configuration record information has been corrupted.") ] Public Const NERR_RplConfigInfoCorrupted = (NERR_BASE+523) 
[ Description("Configuration record was not found.") ] Public Const NERR_RplConfigNotFound = (NERR_BASE+524) 
[ Description("Adapter id record information has been corrupted.") ] Public Const NERR_RplAdapterInfoCorrupted = (NERR_BASE+525) 
[ Description("An internal service error has occurred.") ] Public Const NERR_RplInternal  = (NERR_BASE+526) 
[ Description("Vendor id record information has been corrupted.") ] Public Const NERR_RplVendorInfoCorrupted = (NERR_BASE+527) 
[ Description("Boot block record information has been corrupted.") ] Public Const NERR_RplBootInfoCorrupted = (NERR_BASE+528) 
[ Description("The user account for this workstation record is missing.") ] Public Const NERR_RplWkstaNeedsUserAcct = (NERR_BASE+529) 
[ Description("The RPLUSER local group could not be found.") ] Public Const NERR_RplNeedsRPLUSERAcct  = (NERR_BASE+530) 
[ Description("Boot block record was not found.") ] Public Const NERR_RplBootNotFound = (NERR_BASE+531) 
[ Description("Chosen profile is incompatible with this workstation.") ] Public Const NERR_RplIncompatibleProfile = (NERR_BASE+532) 
[ Description("Chosen network adapter id is in use by some other workstation.") ] Public Const NERR_RplAdapterNameUnavailable = (NERR_BASE+533) 
[ Description("There are profiles using this configuration.") ] Public Const NERR_RplConfigNotEmpty = (NERR_BASE+534) 
[ Description("There are workstations, profiles or configurations using this boot block.") ] Public Const NERR_RplBootInUse = (NERR_BASE+535) 
[ Description("Service failed to backup Remoteboot database.") ] Public Const NERR_RplBackupDatabase = (NERR_BASE+536) 
[ Description("Adapter record was not found.") ] Public Const NERR_RplAdapterNotFound = (NERR_BASE+537) 
[ Description("Vendor record was not found.") ] Public Const NERR_RplVendorNotFound = (NERR_BASE+538) 
[ Description("Vendor name is in use by some other vendor record.") ] Public Const NERR_RplVendorNameUnavailable = (NERR_BASE+539) 
[ Description("(boot name, vendor id) is in use by some other boot block record.") ] Public Const NERR_RplBootNameUnavailable = (NERR_BASE+540) 
[ Description("Configuration name is in use by some other configuration.") ] Public Const NERR_RplConfigNameUnavailable = (NERR_BASE+541) 

/**INTERNAL_ONLY**/

/*
 *  Dfs API error codes.
 *
 *          NERR_BASE + (560-590)
 */

[ Description("The internal database maintained by the DFS service is corrupt") ] Public Const NERR_DfsInternalCorruption = (NERR_BASE+560) 
[ Description("One of the records in the internal DFS database is corrupt") ] Public Const NERR_DfsVolumeDataCorrupt = (NERR_BASE+561) 
[ Description("There is no DFS name whose entry path matches the input Entry Path") ] Public Const NERR_DfsNoSuchVolume = (NERR_BASE+562) 
[ Description("A root or link with the given name already exists") ] Public Const NERR_DfsVolumeAlreadyExists = (NERR_BASE+563) 
[ Description("The server share specified is already shared in the DFS") ] Public Const NERR_DfsAlreadyShared  = (NERR_BASE+564) 
[ Description("The indicated server share does not support the indicated DFS namespace") ] Public Const NERR_DfsNoSuchShare = (NERR_BASE+565) 
[ Description("The operation is not valid on this portion of the namespace") ] Public Const NERR_DfsNotALeafVolume = (NERR_BASE+566) 
[ Description("The operation is not valid on this portion of the namespace") ] Public Const NERR_DfsLeafVolume  = (NERR_BASE+567) 
[ Description("The operation is ambiguous because the link has multiple servers") ] Public Const NERR_DfsVolumeHasMultipleServers = (NERR_BASE+568) 
[ Description("Unable to create a link") ] Public Const NERR_DfsCantCreateJunctionPoint = (NERR_BASE+569) 
[ Description("The server is not DFS Aware") ] Public Const NERR_DfsServerNotDfsAware = (NERR_BASE+570) 
[ Description("The specified rename target path is invalid") ] Public Const NERR_DfsBadRenamePath  = (NERR_BASE+571) 
[ Description("The specified DFS link is offline") ] Public Const NERR_DfsVolumeIsOffline = (NERR_BASE+572) 
[ Description("The specified server is not a server for this link") ] Public Const NERR_DfsNoSuchServer = (NERR_BASE+573) 
[ Description("A cycle in the DFS name was detected") ] Public Const NERR_DfsCyclicalName = (NERR_BASE+574) 
[ Description("The operation is not supported on a server-based DFS") ] Public Const NERR_DfsNotSupportedInServerDfs = (NERR_BASE+575) 
[ Description("This link is already supported by the specified server-share") ] Public Const NERR_DfsDuplicateService  = (NERR_BASE+576) 
[ Description("Can't remove the last server-share supporting this root or link") ] Public Const NERR_DfsCantRemoveLastServerShare = (NERR_BASE+577) 
[ Description("The operation is not supported for an Inter-DFS link") ] Public Const NERR_DfsVolumeIsInterDfs  = (NERR_BASE+578) 
[ Description("The internal state of the DFS Service has become inconsistent") ] Public Const NERR_DfsInconsistent = (NERR_BASE+579) 
[ Description("The DFS Service has been installed on the specified server") ] Public Const NERR_DfsServerUpgraded = (NERR_BASE+580) 
[ Description("The DFS data being reconciled is identical") ] Public Const NERR_DfsDataIsIdentical = (NERR_BASE+581) 
[ Description("The DFS root cannot be deleted - Uninstall DFS if required") ] Public Const NERR_DfsCantRemoveDfsRoot = (NERR_BASE+582) 
[ Description("A child or parent directory of the share is already in a DFS") ] Public Const NERR_DfsChildOrParentInDfs = (NERR_BASE+583) 
[ Description("DFS internal error") ] Public Const NERR_DfsInternalError  = (NERR_BASE+590) 

/*
 *  Net setup error codes.
 *
 *          NERR_BASE + (591-600)
 */
[ Description("This machine is already joined to a domain.") ] Public Const NERR_SetupAlreadyJoined = (NERR_BASE+591) 
[ Description("This machine is not currently joined to a domain.") ] Public Const NERR_SetupNotJoined = (NERR_BASE+592) 
[ Description("This machine is a domain controller and cannot be unjoined from a domain.") ] Public Const NERR_SetupDomainController = (NERR_BASE+593) 
[ Description("The destination domain controller does not support creating machine accounts in OUs.") ] Public Const NERR_DefaultJoinRequired  = (NERR_BASE+594) 
[ Description("The specified workgroup name is invalid.") ] Public Const NERR_InvalidWorkgroupName = (NERR_BASE+595) 
[ Description("The specified computer name is incompatible with the default language used on the domain controller.") ] Public Const NERR_NameUsesIncompatibleCodePage = (NERR_BASE+596) 
[ Description("The specified computer account could not be found. Contact an administrator to verify the account is in the domain. If the account has been deleted unjoin, reboot, and rejoin the domain.") ] Public Const NERR_ComputerAccountNotFound = (NERR_BASE+597) 
[ Description("This version of Windows cannot be joined to a domain.") ] Public Const NERR_PersonalSku  = (NERR_BASE+598) 
[ Description("An attempt to resolve the DNS name of a domain controller in the domain being joined has failed. Please verify this client is configured to reach a DNS server that can resolve DNS names in the target domain.") ] Public Const NERR_SetupCheckDNSConfig  = (NERR_BASE+599)
[ Description("This device is joined to Azure AD. To join an Active Directory domain, you must first go to settings and choose to disconnect your device from your work or school.") ] Public Const NERR_AlreadyCloudDomainJoined = (NERR_BASE+600) 

/*
 *  Some Password and account error results
 *
 *          NERR_BASE + (601 - 608)
*/
[ Description("Password must change at next logon") ] Public Const NERR_PasswordMustChange = (NERR_BASE + 601) 
[ Description("Account is locked out") ] Public Const NERR_AccountLockedOut  = (NERR_BASE + 602) 
[ Description("Password is too long") ] Public Const NERR_PasswordTooLong = (NERR_BASE + 603) 
[ Description("Password doesn't meet the complexity policy") ] Public Const NERR_PasswordNotComplexEnough = (NERR_BASE + 604) 
[ Description("Password doesn't meet the requirements of the filter dll's") ] Public Const NERR_PasswordFilterError  = (NERR_BASE + 605) 

/*
 *  Error codes used for offline domain join and completion
 *
 *          NERR_BASE + (609 - 621)
 */
[ Description("Offline join completion information was not found.") ] Public Const NERR_NoOfflineJoinInfo = (NERR_BASE + 609) 
[ Description("The offline join completion information was bad.") ] Public Const NERR_BadOfflineJoinInfo = (NERR_BASE + 610) 
[ Description("Unable to create offline join information. Please ensure you have access to the specified path location and permissions to modify its contents. Running as an elevated administrator may be required.") ] Public Const NERR_CantCreateJoinInfo = (NERR_BASE + 611) 
[ Description("The domain join info being saved was incomplete or bad.") ] Public Const NERR_BadDomainJoinInfo = (NERR_BASE + 612) 
[ Description("Offline join operation successfully completed but a restart is needed.") ] Public Const NERR_JoinPerformedMustRestart = (NERR_BASE + 613) 
[ Description("There was no offline join operation pending.") ] Public Const NERR_NoJoinPending  = (NERR_BASE + 614) 
[ Description("Unable to set one or more requested machine or domain name values on the local computer.") ] Public Const NERR_ValuesNotSet = (NERR_BASE + 615) 
[ Description("Could not verify the current machine's hostname against the saved value in the join completion information.") ] Public Const NERR_CantVerifyHostname = (NERR_BASE + 616) 
[ Description("Unable to load the specified offline registry hive. Please ensure you have access to the specified path location and permissions to modify its contents. Running as an elevated administrator may be required.") ] Public Const NERR_CantLoadOfflineHive  = (NERR_BASE + 617) 
[ Description("The minimum session security requirements for this operation were not met.") ] Public Const NERR_ConnectionInsecure = (NERR_BASE + 618) 
[ Description("Computer account provisioning blob version is not supported.") ] Public Const NERR_ProvisioningBlobUnsupported = (NERR_BASE + 619) 
[ Description("The specified domain controller does not meet the version requirement for this operation. Please select a domain controller capable of issuing claims.") ] Public Const NERR_DS8DCRequired  = (NERR_BASE + 620) 
[ Description("This operation requires a domain controller which supports LDAP. Please select an LDAP-capable domain controller.") ] Public Const NERR_LDAPCapableDCRequired = (NERR_BASE + 621) 

/*
 *  Additional error codes
 *
 *          NERR_BASE + (622 - MAX)
 */
[ Description("A domain controller which meets the version requirement for this operation could not be located. Please ensure that a domain controller capable of issuing claims is available.") ] Public Const NERR_DS8DCNotFound  = (NERR_BASE + 622) 
[ Description("The Windows version of the specified image does not support provisioning.") ] Public Const NERR_TargetVersionUnsupported = (NERR_BASE + 623) 
[ Description("The machine name is blocked from joining the domain.") ] Public Const NERR_InvalidMachineNameForJoin = (NERR_BASE + 624) 
[ Description("The domain controller does not meet the version requirement for this operation. See http://go.microsoft.com/fwlink/?LinkId=294288 for more information.") ] Public Const NERR_DS9DCNotFound  = (NERR_BASE + 625) 
[ Description("The local machine does not allow querying of LSA secrets in plain-text.") ] Public Const NERR_PlainTextSecretsRequired = (NERR_BASE + 626) 
[ Description("Unable to leave the Azure AD domain that this machine is joined to. Check the event log for detailed error information.") ] Public Const NERR_CannotUnjoinAadDomain = (NERR_BASE + 627) 
[ Description("Unable to update hostname in Azure AD. Check the event log for detailed error information.") ] Public Const NERR_CannotUpdateAadHostName = (NERR_BASE + 628) 
[ Description("The hostname is already taken by another device.") ] Public Const NERR_DuplicateHostName = (NERR_BASE + 629) 
[ Description("The hostname is too long.") ] Public Const NERR_HostNameTooLong = (NERR_BASE + 630) 
[ Description ("Too many hostnames specified for the device.") ] Public Const NERR_TooManyHostNames  = (NERR_BASE + 631)


Public Enum usriPrivilege
    USER_PRIV_GUEST = 0
    USER_PRIV_USER  = 1
    USER_PRIV_ADMIN = 2
End Enum
Public Enum usriFlags
    UF_SCRIPT  = &H0001
    UF_ACCOUNTDISABLE  = &H0002
    UF_HOMEDIR_REQUIRED  = &H0008
    UF_LOCKOUT  = &H0010
    UF_PASSWD_NOTREQD  = &H0020
    UF_PASSWD_CANT_CHANGE  = &H0040
    UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED  = &H0080
    UF_TEMP_DUPLICATE_ACCOUNT  = &H0100
    UF_NORMAL_ACCOUNT  = &H0200
    UF_INTERDOMAIN_TRUST_ACCOUNT  = &H0800
    UF_WORKSTATION_TRUST_ACCOUNT  = &H1000
    UF_SERVER_TRUST_ACCOUNT  = &H2000
    UF_DONT_EXPIRE_PASSWD  = &H10000
    UF_MNS_LOGON_ACCOUNT  = &H20000
    UF_SMARTCARD_REQUIRED  = &H40000
    UF_TRUSTED_FOR_DELEGATION  = &H80000
    UF_NOT_DELEGATED  = &H100000
    UF_USE_DES_KEY_ONLY  = &H200000
    UF_DONT_REQUIRE_PREAUTH  = &H400000
    UF_PASSWORD_EXPIRED  = &H800000
    UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION  = &H1000000
    UF_NO_AUTH_DATA_REQUIRED  = &H2000000
    UF_PARTIAL_SECRETS_ACCOUNT  = &H4000000
    UF_USE_AES_KEYS  = &H8000000
End Enum
Public Enum usriAuthFlags
    AF_OP_PRINT  = &H1
    AF_OP_COMM  = &H2
    AF_OP_SERVER  = &H4
    AF_OP_ACCOUNTS  = &H8
End Enum
Public Type USER_INFO_0
    usri0_name As LongPtr
End Type
Public Type USER_INFO_2
    usri2_name As LongPtr
    usri2_password As LongPtr
    usri2_password_age As Long
    usri2_priv As usriPrivilege
    usri2_home_dir As LongPtr
    usri2_comment As LongPtr
    usri2_flags As usriFlags
    usri2_script_path As LongPtr
    usri2_auth_flags As usriAuthFlags
    usri2_full_name As LongPtr
    usri2_usr_comment As LongPtr
    usri2_parms As LongPtr
    usri2_workstations As LongPtr
    usri2_last_logon As Long
    usri2_last_logoff As Long
    usri2_acct_expires As Long
    usri2_max_storage As Long
    usri2_units_per_week As Long
    usri2_logon_hours As LongPtr
    usri2_bad_pw_count As Long
    usri2_num_logons As Long
    usri2_logon_server As LongPtr
    usri2_country_code As Long
    usri2_code_page As Long
End Type
Public Type USER_INFO_3
    usri3_name As LongPtr
    usri3_password As LongPtr
    usri3_password_age As Long
    usri3_priv As usriPrivilege
    usri3_home_dir As LongPtr
    usri3_comment As LongPtr
    usri3_flags As usriFlags
    usri3_script_path As LongPtr
    usri3_auth_flags As usriAuthFlags
    usri3_full_name As LongPtr
    usri3_usr_comment As LongPtr
    usri3_parms As LongPtr
    usri3_workstations As LongPtr
    usri3_last_logon As Long
    usri3_last_logoff As Long
    usri3_acct_expires As Long
    usri3_max_storage As Long
    usri3_units_per_week As Long
    usri3_logon_hours As LongPtr
    usri3_bad_pw_count As Long
    usri3_num_logons As Long
    usri3_logon_server As LongPtr
    usri3_country_code As Long
    usri3_code_page As Long
    usri3_user_id As Long
    usri3_primary_group_id As Long
    usri3_profile As LongPtr
    usri3_home_dir_drive As LongPtr
    usri3_password_expired As Long
End Type
Public Type USER_INFO_4
    usri4_name As LongPtr
    usri4_password As LongPtr
    usri4_password_age As Long
    usri4_priv As usriPrivilege
    usri4_home_dir As LongPtr
    usri4_comment As LongPtr
    usri4_flags As usriFlags
    usri4_script_path As LongPtr
    usri4_auth_flags As usriAuthFlags
    usri4_full_name As LongPtr
    usri4_usr_comment As LongPtr
    usri4_parms As LongPtr
    usri4_workstations As LongPtr
    usri4_last_logon As Long
    usri4_last_logoff As Long
    usri4_acct_expires As Long
    usri4_max_storage As Long
    usri4_units_per_week As Long
    usri4_logon_hours As LongPtr
    usri4_bad_pw_count As Long
    usri4_num_logons As Long
    usri4_logon_server As LongPtr
    usri4_country_code As Long
    usri4_code_page As Long
    usri4_user_sid As LongPtr
    usri4_primary_group_id As Long
    usri4_profile As LongPtr
    usri4_home_dir_drive As LongPtr
    usri4_password_expired As Long    
End Type
Public Type USER_INFO_10
    usri10_name As LongPtr
    usri10_comment As LongPtr
    usri10_usr_comment As LongPtr
    usri10_full_name As LongPtr
End Type
Public Type USER_INFO_23
    usri23_name As LongPtr
    usri23_full_name As LongPtr
    usri23_comment As LongPtr
    usri23_flags As usriFlags
    usri23_user_sid As LongPtr
End Type
Public Type USER_INFO_24
    usri24_internet_identity As BOOL
    usri24_flags As Long
    usri24_internet_provider_name As LongPtr
    usri24_internet_principal_name As LongPtr
    usri23_user_sid As LongPtr
End Type
Public Type USER_INFO_1003
    usri1003_password As LongPtr
End Type
Public Type USER_INFO_1007
    usri1007_comment As LongPtr
End Type
Public Type USER_INFO_1008
    usri1008_flags As usriFlags
End Type

Public Enum NETUSER_LG_FLAGS
    LG_INCLUDE_INDIRECT       = (&H0001)
End Enum
Public Declare PtrSafe Function NetUserGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetUserSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal level As Long, buf As Any, parm_err As Long) As Long
Public Declare PtrSafe Function NetApiBufferFree Lib "Netapi32" (ByVal Buffer As LongPtr) As Long


Declare PtrSafe Function NetUserChangePassword Lib "Netapi32.dll" (Domain As Any, User As Any, OldPass As Byte, NewPass As Byte) As Long
Declare PtrSafe Function NetUserGetInfo Lib "Netapi32.dll" (lpServer As Any, UserName As Byte, ByVal Level As Long, lpBuffer As LongPtr) As Long
Declare PtrSafe Function NetUserGetGroups Lib "Netapi32.dll" (lpServer As Any, UserName As Byte, ByVal Level As Long, lpBuffer As LongPtr, ByVal PrefMaxLen As Long, lpEntriesRead As Long, lpTotalEntries As Long) As Long
Declare PtrSafe Function NetUserGetLocalGroups Lib "Netapi32.dll" (lpServer As Any, UserName As Byte, ByVal Level As Long, ByVal Flags As NETUSER_LG_FLAGS, lpBuffer As LongPtr, ByVal MaxLen As Long, lpEntriesRead As Long, lpTotalEntries As Long) As Long
Declare PtrSafe Function NetUserAdd Lib "netapi32" (lpServer As Any, ByVal Level As Long, lpUser As USER_INFO_3, lpError As Long) As Long
Declare PtrSafe Function NetWkstaGetInfo Lib "Netapi32.dll" (lpServer As Any, ByVal Level As Long, lpBuffer As Any) As Long
Declare PtrSafe Function NetWkstaUserGetInfo Lib "Netapi32.dll" (ByVal reserved As Any, ByVal Level As Long, lpBuffer As Any) As Long
Declare PtrSafe Function NetRemoteTOD Lib "Netapi32.dll" (yServer As Any, pBuffer As LongPtr) As Long

Declare PtrSafe Function NetLocalGroupDelMembers Lib "netapi32.dll" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, buf As Any, ByVal totalentries As Long) As Long
Declare PtrSafe Function NetLocalGroupGetMembers Lib "netapi32.dll" (ByVal psServer As LongPtr, ByVal psLocalGroup As LongPtr, ByVal lLevel As Long, pBuffer As LongPtr, ByVal lMaxLength As Long, plEntriesRead As Long, plTotalEntries As Long, phResume As LongPtr) As Long


Public Enum AcmStatusfFlags
	ACMSTREAMHEADER_STATUSF_DONE  = &H00010000
	ACMSTREAMHEADER_STATUSF_PREPARED  = &H00020000
	ACMSTREAMHEADER_STATUSF_INQUEUE = &H00100000
End Enum
[PackingAlignment(1)]
Public Type ACMSTREAMHEADER
	cbStruct As Long ' sizeof(ACMSTREAMHEADER)
	fdwStatus As AcmStatusfFlags ' ACMSTREAMHEADER_STATUSF_*
	dwUser As LongPtr ' user instance data for hdr
	pbSrc As LongPtr
	cbSrcLength As Long
	cbSrcLengthUsed As Long
	dwSrcUser As LongPtr ' user instance data for src
	pbDst As LongPtr
	cbDstLength As Long
	cbDstLengthUsed As Long
	dwDstUser As LongPtr ' user instance data for dst
	dwReservedDriver(9) As Long ' driver reserved work space
End Type

Public Enum AcmStreamOpenFlags
	ACM_STREAMOPENF_QUERY  = &H00000001
	ACM_STREAMOPENF_ASYNC  = &H00000002
	ACM_STREAMOPENF_NONREALTIME  = &H00000004
End Enum

Public Type WAVEFILTER
	cbStruct As Long
	dwFilterTag As Long
	fdwFilter As Long
	dwReserved(0 To 4) As Long
End Type

Public DeclareWide PtrSafe Function acmStreamClose Lib "msacm32" (ByVal has As LongPtr, ByVal fdwClose As Long) As Long
Public DeclareWide PtrSafe Function acmStreamConvert Lib "msacm32" (ByVal has As LongPtr, ByRef pash As ACMSTREAMHEADER, ByVal fdwConvert As Long) As Long
Public DeclareWide PtrSafe Function acmStreamMessage Lib "msacm32" (ByVal has As LongPtr, ByVal uMsg As Long, ByVal lParam1 As LongPtr, ByVal lParam2 As LongPtr) As Long
Public DeclareWide PtrSafe Function acmStreamOpen Lib "msacm32" (phas As LongPtr, ByVal had As LongPtr, pwfxSrc As WAVEFORMATEX, pwfxDst As WAVEFORMATEX, pwfltr As WAVEFILTER, ByVal dwCallback As LongPtr, dwInstance As Any, ByVal fdwOpen As AcmStreamOpenFlags) As Long
Public DeclareWide PtrSafe Function acmStreamPrepareHeader Lib "msacm32" (ByVal has As LongPtr, ByRef pash As ACMSTREAMHEADER, ByVal fdwPrepare As Long) As Long
Public DeclareWide PtrSafe Function acmStreamReset Lib "msacm32" (ByVal has As LongPtr, ByVal fdwReset As Long) As Long
Public DeclareWide PtrSafe Function acmStreamSize Lib "msacm32" (ByVal has As LongPtr, ByVal cbInput As Long, ByRef pdwOutputBytes As Long, ByVal fdwSize As Long) As Long
Public DeclareWide PtrSafe Function acmStreamUnprepareHeader Lib "msacm32" (ByVal has As LongPtr, ByRef pash As ACMSTREAMHEADER, ByVal fdwUnprepare As Long) As Long


Public Enum TRANSLATEURL_IN_FLAGS
	TRANSLATEURL_FL_GUESS_PROTOCOL = &H0001
	TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL = &H0002
End Enum
Public DeclareWide PtrSafe Function TranslateURLW Lib "url.dll" (ByVal pcszUrl As LongPtr, ByVal dwInFlags As TRANSLATEURL_IN_FLAGS, ppszTranslatedURL As LongPtr) As Long
Public DeclareWide PtrSafe Function TranslateURL Lib "url.dll" Alias "TranslateURLW" (ByVal pcszUrl As String, ByVal dwInFlags As TRANSLATEURL_IN_FLAGS, ppszTranslatedURL As LongPtr) As Long

Public DeclareWide PtrSafe Function InetIsOffline Lib "url.dll" (Byval dwFlags As Long) As BOOL

Public Enum HtmlHelpCommands
	HH_DISPLAY_TOPIC  = &H0000
	HH_HELP_FINDER  = &H0000  ' WinHelp equivalent
	HH_DISPLAY_TOC  = &H0001
	HH_DISPLAY_INDEX  = &H0002
	HH_DISPLAY_SEARCH  = &H0003
	HH_SET_WIN_TYPE  = &H0004
	HH_GET_WIN_TYPE  = &H0005
	HH_GET_WIN_HANDLE  = &H0006
	HH_ENUM_INFO_TYPE  = &H0007  ' Get Info type name, call repeatedly to enumerate, -1 at end
	HH_SET_INFO_TYPE  = &H0008  ' Add Info type to filter.
	HH_SYNC  = &H0009
	HH_RESERVED1  = &H000A
	HH_RESERVED2  = &H000B
	HH_RESERVED3  = &H000C
	HH_KEYWORD_LOOKUP  = &H000D
	HH_DISPLAY_TEXT_POPUP  = &H000E  ' display string resource id or text in a popup window
	HH_HELP_CONTEXT  = &H000F  ' display mapped numeric value in dwData
	HH_TP_HELP_CONTEXTMENU  = &H0010  ' text popup help, same as WinHelp HELP_CONTEXTMENU
	HH_TP_HELP_WM_HELP  = &H0011  ' text popup help, same as WinHelp HELP_WM_HELP
	HH_CLOSE_ALL  = &H0012  ' close all windows opened directly or indirectly by the caller
	HH_ALINK_LOOKUP  = &H0013  ' ALink version of HH_KEYWORD_LOOKUP
	HH_GET_LAST_ERROR  = &H0014  ' not currently implemented // See HHERROR.h
	HH_ENUM_CATEGORY  = &H0015  ' Get category name, call repeatedly to enumerate, -1 at end
	HH_ENUM_CATEGORY_IT  = &H0016  ' Get category info type members, call repeatedly to enumerate, -1 at end
	HH_RESET_IT_FILTER  = &H0017  ' Clear the info type filter of all info types.
	HH_SET_INCLUSIVE_FILTER  = &H0018  ' set inclusive filtering method for untyped topics to be included in display
	HH_SET_EXCLUSIVE_FILTER  = &H0019  ' set exclusive filtering method for untyped topics to be excluded from display
	HH_INITIALIZE  = &H001C  ' Initializes the help system.
	HH_UNINITIALIZE  = &H001D  ' Uninitializes the help system.
	HH_SET_QUERYSERVICE  = &H001E  ' Set the Host IQueryService interface
	HH_PRETRANSLATEMESSAGE  = &H00fd  ' Pumps messages. (NULL, NULL, MSG*).
	HH_SET_GLOBAL_PROPERTY  = &H00fc  ' Set a global property. (NULL, NULL, HH_GPROP)
	HH_SAFE_DISPLAY_TOPIC  = &H0020  ' private addition to the interface for InternetExplorer.
End Enum

Public Enum HTMLHelpProps
    HHWIN_PROP_TAB_AUTOHIDESHOW = (1 << 0)    ' Automatically hide/show tri-pane window
    HHWIN_PROP_ONTOP            = (1 << 1)    ' Top-most window
    HHWIN_PROP_NOTITLEBAR       = (1 << 2)    ' no title bar
    HHWIN_PROP_NODEF_STYLES     = (1 << 3)    ' no default window styles (only HH_WINTYPE.dwStyles)
    HHWIN_PROP_NODEF_EXSTYLES   = (1 << 4)    ' no default extended window styles (only HH_WINTYPE.dwExStyles)
    HHWIN_PROP_TRI_PANE         = (1 << 5)    ' use a tri-pane window
    HHWIN_PROP_NOTB_TEXT        = (1 << 6)    ' no text on toolbar buttons
    HHWIN_PROP_POST_QUIT        = (1 << 7)    ' post WM_QUIT message when window closes
    HHWIN_PROP_AUTO_SYNC        = (1 << 8)    ' automatically ssync contents and index
    HHWIN_PROP_TRACKING         = (1 << 9)    ' send tracking notification messages
    HHWIN_PROP_TAB_SEARCH       = (1 << 10)   ' include search tab in navigation pane
    HHWIN_PROP_TAB_HISTORY      = (1 << 11)   ' include history tab in navigation pane
    HHWIN_PROP_TAB_FAVORITES    = (1 << 12)   ' include favorites tab in navigation pane
    HHWIN_PROP_CHANGE_TITLE     = (1 << 13)   ' Put current HTML title in title bar
    HHWIN_PROP_NAV_ONLY_WIN     = (1 << 14)   ' Only display the navigation window
    HHWIN_PROP_NO_TOOLBAR       = (1 << 15)   ' Don't display a toolbar
    HHWIN_PROP_MENU             = (1 << 16)   ' Menu
    HHWIN_PROP_TAB_ADVSEARCH    = (1 << 17)   ' Advanced FTS UI.
    HHWIN_PROP_USER_POS         = (1 << 18)   ' After initial creation, user controls window size/position
    HHWIN_PROP_TAB_CUSTOM1      = (1 << 19)   ' Use custom tab #1
    HHWIN_PROP_TAB_CUSTOM2      = (1 << 20)   ' Use custom tab #2
    HHWIN_PROP_TAB_CUSTOM3      = (1 << 21)   ' Use custom tab #3
    HHWIN_PROP_TAB_CUSTOM4      = (1 << 22)   ' Use custom tab #4
    HHWIN_PROP_TAB_CUSTOM5      = (1 << 23)   ' Use custom tab #5
    HHWIN_PROP_TAB_CUSTOM6      = (1 << 24)   ' Use custom tab #6
    HHWIN_PROP_TAB_CUSTOM7      = (1 << 25)   ' Use custom tab #7
    HHWIN_PROP_TAB_CUSTOM8      = (1 << 26)   ' Use custom tab #8
    HHWIN_PROP_TAB_CUSTOM9      = (1 << 27)   ' Use custom tab #9
    HHWIN_TB_MARGIN             = (1 << 28)   ' the window type has a margin	
End Enum

Public Enum HTMLHelpParam
    HHWIN_PARAM_PROPERTIES      = (1 << 1)    ' valid fsWinProperties
    HHWIN_PARAM_STYLES          = (1 << 2)    ' valid dwStyles
    HHWIN_PARAM_EXSTYLES        = (1 << 3)    ' valid dwExStyles
    HHWIN_PARAM_RECT            = (1 << 4)    ' valid rcWindowPos
    HHWIN_PARAM_NAV_WIDTH       = (1 << 5)    ' valid iNavWidth
    HHWIN_PARAM_SHOWSTATE       = (1 << 6)    ' valid nShowState
    HHWIN_PARAM_INFOTYPES       = (1 << 7)    ' valid apInfoTypes
    HHWIN_PARAM_TB_FLAGS        = (1 << 8)    ' valid fsToolBarFlags
    HHWIN_PARAM_EXPANSION       = (1 << 9)    ' valid fNotExpanded
    HHWIN_PARAM_TABPOS          = (1 << 10)   ' valid tabpos
    HHWIN_PARAM_TABORDER        = (1 << 11)   ' valid taborder
    HHWIN_PARAM_HISTORY_COUNT   = (1 << 12)   ' valid cHistory
    HHWIN_PARAM_CUR_TAB         = (1 << 13)   ' valid curNavType	
End Enum

Public Enum HTMLHelpButtons
    HHWIN_BUTTON_EXPAND         = (1 << 1)    ' Expand/contract button
    HHWIN_BUTTON_BACK           = (1 << 2)    ' Back button
    HHWIN_BUTTON_FORWARD        = (1 << 3)    ' Forward button
    HHWIN_BUTTON_STOP           = (1 << 4)    ' Stop button
    HHWIN_BUTTON_REFRESH        = (1 << 5)    ' Refresh button
    HHWIN_BUTTON_HOME           = (1 << 6)    ' Home button
    HHWIN_BUTTON_BROWSE_FWD     = (1 << 7)    ' not implemented
    HHWIN_BUTTON_BROWSE_BCK     = (1 << 8)    ' not implemented
    HHWIN_BUTTON_NOTES          = (1 << 9)    ' not implemented
    HHWIN_BUTTON_CONTENTS       = (1 << 10)   ' not implemented
    HHWIN_BUTTON_SYNC           = (1 << 11)   ' Sync button
    HHWIN_BUTTON_OPTIONS        = (1 << 12)   ' Options button
    HHWIN_BUTTON_PRINT          = (1 << 13)   ' Print button
    HHWIN_BUTTON_INDEX          = (1 << 14)   ' not implemented
    HHWIN_BUTTON_SEARCH         = (1 << 15)   ' not implemented
    HHWIN_BUTTON_HISTORY        = (1 << 16)   ' not implemented
    HHWIN_BUTTON_FAVORITES      = (1 << 17)   ' not implemented
    HHWIN_BUTTON_JUMP1          = (1 << 18)
    HHWIN_BUTTON_JUMP2          = (1 << 19)
    HHWIN_BUTTON_ZOOM           = (1 << 20)
    HHWIN_BUTTON_TOC_NEXT       = (1 << 21)
    HHWIN_BUTTON_TOC_PREV       = (1 << 22)

    HHWIN_DEF_BUTTONS = (HHWIN_BUTTON_EXPAND Or HHWIN_BUTTON_BACK Or HHWIN_BUTTON_OPTIONS Or HHWIN_BUTTON_PRINT)
End Enum


Public Enum HtmlHelpButtonIDs
	IDTB_EXPAND  = 200
	IDTB_CONTRACT  = 201
	IDTB_STOP  = 202
	IDTB_REFRESH  = 203
	IDTB_BACK  = 204
	IDTB_HOME  = 205
	IDTB_SYNC  = 206
	IDTB_PRINT  = 207
	IDTB_OPTIONS  = 208
	IDTB_FORWARD  = 209
	IDTB_NOTES  = 210  ' not implemented
	IDTB_BROWSE_FWD  = 211
	IDTB_BROWSE_BACK  = 212
	IDTB_CONTENTS  = 213  ' not implemented
	IDTB_INDEX  = 214  ' not implemented
	IDTB_SEARCH  = 215  ' not implemented
	IDTB_HISTORY  = 216  ' not implemented
	IDTB_FAVORITES  = 217  ' not implemented
	IDTB_JUMP1  = 218
	IDTB_JUMP2 = 219
	IDTB_CUSTOMIZE  = 221
	IDTB_ZOOM = 222
	IDTB_TOC_NEXT  = 223
	IDTB_TOC_PREV  = 224
End Enum

Public Const HHN_FIRST  = (0-860)
Public Const HHN_LAST  = (0- 879)
Public Const HHN_NAVCOMPLETE  = (HHN_FIRST-0)
Public Const HHN_TRACK  = (HHN_FIRST-1)
Public Const HHN_WINDOW_CREATE  = (HHN_FIRST-2)

Public Type HHN_NOTIFY
	hdr As NMHDR
	pszUrl As LongPtr ' Multi-byte, null-terminated string
End Type

Public Type HH_POPUP
	cbStruct As Long ' sizeof this structure
	hinst As LongPtr ' instance handle for string resource
	idString As Long ' string resource id, or text id if pszFile is specified in HtmlHelp call
	pszText As LongPtr ' used if idString is zero
	pt As POINT ' top center of popup window
	clrForeground As Long ' use -1 for default
	clrBackground As Long ' use -1 for default
	rcMargins As RECT ' amount of space between edges of window and text, -1 for each member to ignore
	pszFont As LongPtr ' facename, point size, char set, BOLD ITALIC UNDERLINE
End Type

Public Type HH_AKLINK
	cbStruct As Long ' sizeof this structure
	fReserved As BOOL ' must be FALSE (really!)
	pszKeywords As LongPtr ' semi-colon separated keywords
	pszUrl As LongPtr ' URL to jump to if no keywords found (may be NULL)
	pszMsgText As LongPtr ' Message text to display in MessageBox if pszUrl is NULL and no keyword match
	pszMsgTitle As LongPtr ' Message text to display in MessageBox if pszUrl is NULL and no keyword match
	pszWindow As LongPtr ' Window to display URL in
	fIndexOnFail As BOOL ' Displays index if keyword lookup fails.
End Type

Public Enum HHWIN_NavTypes
	HHWIN_NAVTYPE_TOC
	HHWIN_NAVTYPE_INDEX  
	HHWIN_NAVTYPE_SEARCH  
	HHWIN_NAVTYPE_FAVORITES  
	HHWIN_NAVTYPE_HISTORY   ' not implemented
	HHWIN_NAVTYPE_AUTHOR  
	HHWIN_NAVTYPE_CUSTOM_FIRST = 11
End Enum

Public Enum HtmlHelpInfoType
	IT_INCLUSIVE = 0
	IT_EXCLUSIVE = 1
	IT_HIDDEN = 2
End Enum
Public Type HH_ENUM_IT
	cbStruct As Long ' size of this structure
	iType As HtmlHelpInfoType ' the type of the information type ie. Inclusive, Exclusive, or Hidden
	pszCatName As LongPtr ' Set to the name of the Category to enumerate the info types in a category; else NULL
	pszITName As LongPtr ' volitile pointer to the name of the infotype. Allocated by call. Caller responsible for freeing
	pszITDescription As LongPtr ' volitile pointer to the description of the infotype.
End Type

Public Type HH_ENUM_CAT
	cbStruct As Long ' size of this structure
	pszCatName As LongPtr ' volitile pointer to the category name
	pszCatDescription As LongPtr ' volitile pointer to the category description
End Type

Public Type HH_SET_INFOTYPE
	cbStruct As Long ' the size of this structure
	pszCatName As LongPtr ' the name of the category, if any, the InfoType is a member of.
	pszInfoTypeName As LongPtr ' the name of the info type to add to the filter
End Type

Public Enum HtmlHelpNavTabs
    HHWIN_NAVTAB_TOP
    HHWIN_NAVTAB_LEFT
    HHWIN_NAVTAB_BOTTOM
End Enum

Public Const HH_MAX_TABS = 19 
Public Enum HtmlHelpTabs
    HH_TAB_CONTENTS
    HH_TAB_INDEX
    HH_TAB_SEARCH
    HH_TAB_FAVORITES
    HH_TAB_HISTORY
    HH_TAB_AUTHOR

    HH_TAB_CUSTOM_FIRST = 11
    HH_TAB_CUSTOM_LAST = HH_MAX_TABS
End Enum

Public Const HH_FTS_DEFAULT_PROXIMITY = (-1)

Public Type HH_FTS_QUERY
	cbStruct As Long ' Sizeof structure in bytes.
	fUniCodeStrings As BOOL ' TRUE if all strings are unicode.
	pszSearchQuery As LongPtr ' String containing the search query.
	iProximity As LONG ' Word proximity.
	fStemmedSearch As Long ' TRUE for StemmedSearch only.
	fTitleOnly As BOOL ' TRUE for Title search only.
	fExecute As BOOL ' TRUE to initiate the search.
	pszWindow As LongPtr ' Window to display in
End Type

Public Type HH_WINTYPE
	cbStruct As Long ' IN: size of this structure including all Information Types
	fUniCodeStrings As BOOL ' IN/OUT: TRUE if all strings are in UNICODE
	pszType As LongPtr ' IN/OUT: Name of a type of window
	fsValidMembers As Long ' IN: Bit flag of valid members (HHWIN_PARAM_)
	fsWinProperties As HTMLHelpProps ' IN/OUT: Properties/attributes of the window (HHWIN_)
	pszCaption As LongPtr ' IN/OUT: Window title
	dwStyles As Long ' IN/OUT: Window styles
	dwExStyles As Long ' IN/OUT: Extended Window styles
	rcWindowPos As RECT ' IN: Starting position, OUT: current position
	nShowState As SHOWWINDOW ' IN: show state (e.g., SW_SHOW)
	hwndHelp As LongPtr ' OUT: window handle
	hwndCaller As LongPtr ' OUT: who called this window
	paInfoTypes As LongPtr ' IN: Pointer to an array of Information Types
	' The following members are only valid if HHWIN_PROP_TRI_PANE is set
	hwndToolBar As Long ' OUT: toolbar window in tri-pane window
	hwndNavigation As Long ' OUT: navigation window in tri-pane window
	hwndHTML As Long ' OUT: window displaying HTML in tri-pane window
	iNavWidth As Long ' IN/OUT: width of navigation window
	rcHTML As RECT ' OUT: HTML window coordinates
	pszToc As LongPtr ' IN: Location of the table of contents file
	pszIndex As LongPtr ' IN: Location of the index file
	pszFile As LongPtr ' IN: Default location of the html file
	pszHome As LongPtr ' IN/OUT: html file to display when Home button is clicked
	fsToolBarFlags As Long ' IN: flags controling the appearance of the toolbar
	fNotExpanded As Long ' IN: TRUE/FALSE to contract or expand, OUT: current state
	curNavType As Long ' IN/OUT: UI to display in the navigational pane
	tabpos As Long ' IN/OUT: HHWIN_NAVTAB_TOP, HHWIN_NAVTAB_LEFT, or HHWIN_NAVTAB_BOTTOM
	idNotify As Long ' IN: ID to use for WM_NOTIFY messages
	tabOrder(HH_MAX_TABS) As Byte ' IN/OUT: tab order: Contents, Index, Search, History, Favorites, Reserved 1-5, Custom tabs
	cHistory As Long ' IN/OUT: number of history items to keep (default is 30)
	pszJump1 As LongPtr ' Text for HHWIN_BUTTON_JUMP1
	pszJump2 As LongPtr ' Text for HHWIN_BUTTON_JUMP2
	pszUrlJump1 As LongPtr ' URL for HHWIN_BUTTON_JUMP1
	pszUrlJump2 As LongPtr ' URL for HHWIN_BUTTON_JUMP2
	rcMinSize As RECT ' Minimum size for window (ignored in version 1)
	cbInfoTypes As Long ' size of paInfoTypes;
	pszCustomTabs As LongPtr ' multiple zero-terminated strings
End Type

Public Enum HtmlHelpACT
	HHACT_TAB_CONTENTS = 0
	HHACT_TAB_INDEX = 1
	HHACT_TAB_SEARCH = 2
	HHACT_TAB_HISTORY = 3
	HHACT_TAB_FAVORITES = 4
	HHACT_EXPAND = 5
	HHACT_CONTRACT = 6
	HHACT_BACK = 7
	HHACT_FORWARD = 8
	HHACT_STOP = 9
	HHACT_REFRESH = 10
	HHACT_HOME = 11
	HHACT_SYNC = 12
	HHACT_OPTIONS = 13
	HHACT_PRINT = 14
	HHACT_HIGHLIGHT = 15
	HHACT_CUSTOMIZE = 16
	HHACT_JUMP1 = 17
	HHACT_JUMP2 = 18
	HHACT_ZOOM = 19
	HHACT_TOC_NEXT = 20
	HHACT_TOC_PREV = 21
	HHACT_NOTES = 22
	HHACT_LAST_ENUM = 23
End Enum

Public Type HHNTRACK
	hdr As NMHDR
	pszCurUrl As LongPtr ' Multi-byte, null-terminated string
	idAction As HtmlHelpACT ' HHACT_ value
	phhWinType As LongPtr ' Current window type structure
End Type

Public Enum HH_GPROPID
	HH_GPROPID_SINGLETHREAD=1 ' VARIANT_BOOL: True for single thread
	HH_GPROPID_TOOLBAR_MARGIN=2 ' long: Provides a left/right margin around the toolbar.
	HH_GPROPID_UI_LANGUAGE=3 ' long: LangId of the UI.
	HH_GPROPID_CURRENT_SUBSET=4 ' BSTR: Current subset.
	HH_GPROPID_CONTENT_LANGUAGE=5 ' long: LandId for desired content.
End Enum
Public Type HH_GLOBAL_PROPERTY
	id As HH_GPROPID
	var As VARIANT
End Type

Public Declare PtrSafe Function HtmlHelpW Lib "htmlhelp.dll" (ByVal hwndCaller As LongPtr, ByVal pszFile As LongPtr, ByVal uCommand As HtmlHelpCommands, ByVal dwData As LongPtr) As LongPtr
Public Declare PtrSafe Function HtmlHelpA Lib "htmlhelp.dll" (ByVal hwndCaller As String, ByVal pszFile As LongPtr, ByVal uCommand As HtmlHelpCommands, ByVal dwData As LongPtr) As LongPtr
Public Declare PtrSafe Function HtmlHelp Lib "htmlhelp.dll" Alias "HtmlHelpW" (ByVal hwndCaller As LongPtr, ByVal pszFile As LongPtr, ByVal uCommand As HtmlHelpCommands, ByVal dwData As LongPtr) As LongPtr



Public Enum CERT_SECTION_TYPE
    CERT_PE_IMAGE_DIGEST_DEBUG_INFO  = &H01
    CERT_PE_IMAGE_DIGEST_RESOURCES  = &H02
    CERT_PE_IMAGE_DIGEST_ALL_IMPORT_INFO  = &H04
    CERT_PE_IMAGE_DIGEST_NON_PE_INFO  = &H08  ' include data outside the PE image
    CERT_SECTION_TYPE_ANY  = &HFF  ' Any Certificate type
End Enum

Public Enum WIN_CERT_REVISION
    WIN_CERT_REVISION_1_0  = (&H0100)
    WIN_CERT_REVISION_2_0  = (&H0200)
End Enum
Public Enum WIN_CERT_TYPE
    WIN_CERT_TYPE_X509  = (&H0001)  ' bCertificate contains an X.509 Certificate
    WIN_CERT_TYPE_PKCS_SIGNED_DATA  = (&H0002)  ' bCertificate contains a PKCS SignedData structure
    WIN_CERT_TYPE_RESERVED_1  = (&H0003)  ' Reserved
    WIN_CERT_TYPE_TS_STACK_SIGNED  = (&H0004)  ' Terminal Server Protocol Stack Certificate signing
End Enum

[Description("THIS IS A HEADER ONLY: THIS MUST BE FOLLOWED IN MEMORY BY THE CERT DATA. THE ACTUAL DEFINITION HAS AN UNSUPPORT C-STYLE ARRAY FOR THIS.") ]
Public Type WIN_CERTIFICATE
    dwLength As Long
    wRevision As Integer
    wCertificateType As Integer ' WIN_CERT_TYPE_xxx
End Type

Public Declare PtrSafe Function ImageEnumerateCertificates Lib "imagehlp" (ByVal FileHandle As LongPtr, [TypeHint(CERT_SECTION_TYPE) ] TypeFilter As Integer, CertificateCount As Long, Indices As Long, Optional ByVal IndexCount As Long) As BOOL
Public Declare PtrSafe Function ImageAddCertificate Lib "imagehlp" (ByVal FileHandle As LongPtr, Certificate As Any, Index As Long) As BOOL
Public Declare PtrSafe Function ImageGetCertificateData Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal CertificateIndex As Long, Certificate As Any, RequiredLength As Long) As BOOL
Public Declare PtrSafe Function ImageGetCertificateHeader Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal CertificateIndex As Long, Certificate As WIN_CERTIFICATE) As BOOL
Public Declare PtrSafe Function ImageRemoveCertificate Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal Index As Long) As BOOL



[ Description ("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function vbaObjSetAddRef Lib "msvbvm60.dll" Alias "__vbaObjSetAddref" (ByRef objDest As Object, ByVal pObject As LongPtr) As LongPtr 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function vbaObjSet Lib "msvbvm60.dll" Alias "__vbaObjSet" (ByRef objDest As Object, ByVal pObject As LongPtr) As LongPtr 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function GetMem1 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function GetMem2 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function GetMem4 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function GetMem8 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#If Win64 Then
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function GetMemPtr Lib "msvbvm60.dll" Alias "GetMem8" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#Else
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function GetMemPtr Lib "msvbvm60.dll" Alias "GetMem4" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#End If

[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function PutMem1 Lib "msvbvm60.dll" (pDst As Any, ByVal v As Byte) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function PutMem2 Lib "msvbvm60.dll" (pDst As Any, ByVal v As Integer) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function PutMem4 Lib "msvbvm60.dll" (pDst As Any, ByVal v As Long) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function PutMem8 Lib "msvbvm60.dll" (pDst As Any, ByVal v As LongLong) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#If Win64 Then
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function PutMemPtr Lib "msvbvm60.dll" Alias "PutMem8" (pDst As Any, ByVal v As LongLong) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#Else
[ Description("NOTE: twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).") ]
Public Declare PtrSafe Function PutMemPtr Lib "msvbvm60.dll" Alias "PutMem4" (pDst As Any, ByVal v As Long) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#End If
#End Region

#Region "Helpers"
'Standard helper functions:

Public Enum CtlBufferPassMethod
	METHOD_BUFFERED = 0
	METHOD_IN_DIRECT  = 1
	METHOD_OUT_DIRECT  = 2
	METHOD_NEITHER  = 3
End Enum

Public Function SUCCEEDED(hr As Long) As Boolean
    Return hr >= 0
End Function

Public Function MAKEINTRESOURCE(ByVal dwVal As Long) As Long
   MAKEINTRESOURCE = &HFFFF& And dwVal
End Function

/*
#define MAKEFOURCC(ch0, ch1, ch2, ch3)                              \
((DWORD)(BYTE)(ch0) | ((DWORD)(BYTE)(ch1) << 8) |   \
((DWORD)(BYTE)(ch2) << 16) | ((DWORD)(BYTE)(ch3) << 24 ))
*/
[ ConstantFoldable ]
Public Function MAKEFOURCC(ByVal ch0 As Long, ByVal ch1 As Long, ByVal ch2 As Long, ByVal ch3 As Long) As Long
	Return ((ch0) Or ((ch1) << 8) Or ((ch2) << 16) Or ((ch3) << 24))
End Function

[Description("A 32 and 64bit compatible implementation of the classic helper function.") ]
Public Function SwapVtableEntry(pObj As LongPtr, EntryNumber As Integer, ByVal lpFN As LongPtr) As LongPtr

    Dim lOldAddr As LongPtr
    Dim lpVtableHead As LongPtr
    Dim lpfnAddr As LongPtr
    Dim lOldProtect As Long
    Dim cbPtr As LongPtr = LenB(lpfnAddr)

    CopyMemory lpVtableHead, ByVal pObj, cbPtr
    lpfnAddr = lpVtableHead + (EntryNumber - 1) * cbPtr
    CopyMemory lOldAddr, ByVal lpfnAddr, cbPtr

    Call VirtualProtect(lpfnAddr, cbPtr, PAGE_EXECUTE_READWRITE, lOldProtect)
    CopyMemory ByVal lpfnAddr, lpFN, cbPtr
    Call VirtualProtect(lpfnAddr, cbPtr, lOldProtect, lOldProtect)

    SwapVtableEntry = lOldAddr

End Function

[ ConstantFoldable ]
Public Function UtfToANSI(sIn As String) As String
    Return StrConv(sIn, vbFromUnicode)
End Function

[ ConstantFoldable ]
Public Function CTL_CODE(ByVal DeviceType As Long, ByVal lFunction As Long, [ TypeHint(CtlBufferPassMethod) ] ByVal Method As Long, ByVal Access As Long) As Long
   CTL_CODE = ((DeviceType) << 16) Or ((Access) << 14) Or ((lFunction) << 2) Or (Method)
End Function

[Description ("A 32 and 64bit compatible implementation of the classic helper function.") ]
Public Function LPWSTRtoStr(lPtr As LongPtr, Optional ByVal fFree As Boolean = True) As String
SysReAllocStringW VarPtr(LPWSTRtoStr), lPtr
If fFree Then
    Call CoTaskMemFree(lPtr)
End If

End Function

[Description("Ensures a block of memory is zeroed where compiler optimizations may prevent that with ZeroMemory")]
Public Sub SecureZeroMemory(ByVal pv As LongPtr, cb As LongPtr)
	Dim i As LongPtr
    For i = 0 To cb - 1
        CopyMemory ByVal pv + i, 0, 1
    Next
End Sub
 
[ Description("Creates a PROPVARIANT with a VT_UI2 type.") ]
Public Function InitPropVariantFromUInt16(ByVal uiVal As Integer, ppropvar As Variant) As Long
ppropvar = uiVal 
Dim vt As Integer = VT_UI2
CopyMemory ppropvar, vt, 2	'Overwrite VT_I2 with VT_UI2
End Function
[ Description("Creates a PROPVARIANT with a VT_UI4 type.") ]
Public Function InitPropVariantFromUInt32(ByVal ulVal As Long, ppropvar As Variant) As Long
ppropvar = ulVal
Dim vt As Integer = VT_UI4
CopyMemory ppropvar, vt, 2    'Overwrite VT_I4 with VT_UI4
End Function
[ Description ("Creates a PROPVARIANT with a VT_UI8 type.") ]
Public Function InitPropVariantFromUInt64(ByVal ullVal As LongLong, ppropvar As Variant) As Long
ppropvar = ullVal
Dim vt As Integer = VT_UI8
CopyMemory ppropvar, vt, 2    'Overwrite VT_I8 with VT_UI8
End Function

[Description ("Creates a PROPVARIANT of type VT_LPWSTR from a tB String") ]
Public Function InitPropVariantFromString(psz As String, ppropvar As Variant) As Long
	'This unfortunately isn't as easy as making a VT_BSTR Variant then calling VariantChangeType; that fails.
    If VarPtr(ppropvar) = 0 Then Return E_POINTER
    Dim lpAlloc As LongPtr = CoTaskMemAlloc((lstrlenW(ByVal StrPtr(psz)) + 1) * 2)	
    ZeroMemory ByVal lpAlloc, (lstrlenW(ByVal StrPtr(psz)) + 1) * 2
    CopyMemory ByVal lpAlloc, ByVal StrPtr(psz), lstrlenW(ByVal StrPtr(psz)) * 2
    VariantSetType ppropvar, VT_LPWSTR
    CopyMemory ByVal PointerAdd(VarPtr(ppropvar), 8), lpAlloc, LenB(Of LongPtr)
    Return S_OK
End Function

[ Description ("Sets a Variant to the specified type without any alteration to the data. vtOnlyIf raises an error if the original type is other than specified. WARNING: Many data formats are incompatible, use VariantChangeType absent specific need....") ]
Public Function VariantSetType(pvar As Variant, [ TypeHint (VARENUM) ] ByVal vt As Integer, [ TypeHint (VARENUM) ] Optional ByVal vtOnlyIf As Integer = -1) As Boolean
    If VarPtr(pvar) = 0 Then Return False
    If vtOnlyIf <> -1 Then
        If VarType(pvar) <> vtOnlyIf Then
            Return False
        End If
    End If
    CopyMemory pvar, vt, 2
    Return True
End Function
[ Description ("Performs an unsigned add on a LongPtr (Long or LongLong)") ]
Private Function PointerAdd(ByVal Start As LongPtr, ByVal Incr As LongPtr) As LongPtr
    #If Win64 Then
    Return ((Start Xor &H8000000000000000) + Incr) Xor &H8000000000000000
    #Else
    Return ((Start Xor &H80000000) + Incr) Xor &H80000000
    #End If
End Function
#End Region

#Region "DEVPKEY"
Public Function DEVPKEY_Device_DeviceDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DeviceDesc = pkk
End Function
Public Function DEVPKEY_Device_HardwareIds() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 3)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_HardwareIds = pkk
End Function
Public Function DEVPKEY_NAME() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hb725f130, &H47ef, &H101a, &Ha5, &Hf1, &H02, &H60, &H8c, &H9e, &Heb, &Hac, 10)
 'DEVPROP_TYPE_STRING
DEVPKEY_NAME = pkk
End Function
Public Function DEVPKEY_Device_CompatibleIds() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 4)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_CompatibleIds = pkk
End Function
Public Function DEVPKEY_Device_Service() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 6)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Service = pkk
End Function
Public Function DEVPKEY_Device_Class() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 9)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Class = pkk
End Function
Public Function DEVPKEY_Device_ClassGuid() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 10)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_ClassGuid = pkk
End Function
Public Function DEVPKEY_Device_Driver() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 11)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Driver = pkk
End Function
Public Function DEVPKEY_Device_ConfigFlags() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 12)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ConfigFlags = pkk
End Function
Public Function DEVPKEY_Device_Manufacturer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 13)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Manufacturer = pkk
End Function
Public Function DEVPKEY_Device_FriendlyName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 14)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FriendlyName = pkk
End Function
Public Function DEVPKEY_Device_LocationInfo() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 15)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_LocationInfo = pkk
End Function
Public Function DEVPKEY_Device_PDOName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 16)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_PDOName = pkk
End Function
Public Function DEVPKEY_Device_Capabilities() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 17)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Capabilities = pkk
End Function
Public Function DEVPKEY_Device_UINumber() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 18)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_UINumber = pkk
End Function
Public Function DEVPKEY_Device_UpperFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 19)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_UpperFilters = pkk
End Function
Public Function DEVPKEY_Device_LowerFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 20)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_LowerFilters = pkk
End Function
Public Function DEVPKEY_Device_BusTypeGuid() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 21)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_BusTypeGuid = pkk
End Function
Public Function DEVPKEY_Device_LegacyBusType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 22)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_LegacyBusType = pkk
End Function
Public Function DEVPKEY_Device_BusNumber() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 23)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_BusNumber = pkk
End Function
Public Function DEVPKEY_Device_EnumeratorName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 24)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_EnumeratorName = pkk
End Function
Public Function DEVPKEY_Device_Security() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 25)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR
DEVPKEY_Device_Security = pkk
End Function
Public Function DEVPKEY_Device_SecuritySDS() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 26)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING
DEVPKEY_Device_SecuritySDS = pkk
End Function
Public Function DEVPKEY_Device_DevType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 27)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DevType = pkk
End Function
Public Function DEVPKEY_Device_Exclusive() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 28)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_Exclusive = pkk
End Function
Public Function DEVPKEY_Device_Characteristics() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 29)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Characteristics = pkk
End Function
Public Function DEVPKEY_Device_Address() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 30)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Address = pkk
End Function
Public Function DEVPKEY_Device_UINumberDescFormat() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 31)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_UINumberDescFormat = pkk
End Function
Public Function DEVPKEY_Device_PowerData() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 32)
 'DEVPROP_TYPE_BINARY
DEVPKEY_Device_PowerData = pkk
End Function
Public Function DEVPKEY_Device_RemovalPolicy() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 33)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_RemovalPolicy = pkk
End Function
Public Function DEVPKEY_Device_RemovalPolicyDefault() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 34)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_RemovalPolicyDefault = pkk
End Function
Public Function DEVPKEY_Device_RemovalPolicyOverride() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 35)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_RemovalPolicyOverride = pkk
End Function
Public Function DEVPKEY_Device_InstallState() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 36)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_InstallState = pkk
End Function
Public Function DEVPKEY_Device_LocationPaths() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 37)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_LocationPaths = pkk
End Function
Public Function DEVPKEY_Device_BaseContainerId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 38)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_BaseContainerId = pkk
End Function
Public Function DEVPKEY_Device_InstanceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 256)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_InstanceId = pkk
End Function
Public Function DEVPKEY_Device_DevNodeStatus() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 2)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DevNodeStatus = pkk
End Function
Public Function DEVPKEY_Device_ProblemCode() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 3)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ProblemCode = pkk
End Function
Public Function DEVPKEY_Device_EjectionRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 4)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_EjectionRelations = pkk
End Function
Public Function DEVPKEY_Device_RemovalRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 5)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_RemovalRelations = pkk
End Function
Public Function DEVPKEY_Device_PowerRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 6)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_PowerRelations = pkk
End Function
Public Function DEVPKEY_Device_BusRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 7)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_BusRelations = pkk
End Function
Public Function DEVPKEY_Device_Parent() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 8)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Parent = pkk
End Function
Public Function DEVPKEY_Device_Children() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 9)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_Children = pkk
End Function
Public Function DEVPKEY_Device_Siblings() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 10)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_Siblings = pkk
End Function
Public Function DEVPKEY_Device_TransportRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 11)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_TransportRelations = pkk
End Function
Public Function DEVPKEY_Device_ProblemStatus() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 12)
 'DEVPROP_TYPE_NTSTATUS
DEVPKEY_Device_ProblemStatus = pkk
End Function
Public Function DEVPKEY_Device_Reported() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80497100, &H8c73, &H48b9, &Haa, &Hd9, &Hce, &H38, &H7e, &H19, &Hc5, &H6e, 2)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_Reported = pkk
End Function
Public Function DEVPKEY_Device_Legacy() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80497100, &H8c73, &H48b9, &Haa, &Hd9, &Hce, &H38, &H7e, &H19, &Hc5, &H6e, 3)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_Legacy = pkk
End Function
Public Function DEVPKEY_Device_ContainerId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H8c7ed206, &H3f8a, &H4827, &Hb3, &Hab, &Hae, &H9e, &H1f, &Hae, &Hfc, &H6c, 2)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_ContainerId = pkk
End Function
Public Function DEVPKEY_Device_InLocalMachineContainer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H8c7ed206, &H3f8a, &H4827, &Hb3, &Hab, &Hae, &H9e, &H1f, &Hae, &Hfc, &H6c, 4)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_InLocalMachineContainer = pkk
End Function
Public Function DEVPKEY_Device_Model() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 39)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Model = pkk
End Function
Public Function DEVPKEY_Device_ModelId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 2)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_ModelId = pkk
End Function
Public Function DEVPKEY_Device_FriendlyNameAttributes() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 3)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_FriendlyNameAttributes = pkk
End Function
Public Function DEVPKEY_Device_ManufacturerAttributes() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 4)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ManufacturerAttributes = pkk
End Function
Public Function DEVPKEY_Device_PresenceNotForDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 5)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_PresenceNotForDevice = pkk
End Function
Public Function DEVPKEY_Device_SignalStrength() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 6)
 'DEVPROP_TYPE_INT32
DEVPKEY_Device_SignalStrength = pkk
End Function
Public Function DEVPKEY_Device_IsAssociateableByUserAction() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 7)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_IsAssociateableByUserAction = pkk
End Function
Public Function DEVPKEY_Device_ShowInUninstallUI() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 8)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_ShowInUninstallUI = pkk
End Function
Public Function DEVPKEY_Device_Numa_Proximity_Domain() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 1)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Numa_Proximity_Domain = pkk
End Function
Public Function DEVPKEY_Device_DHP_Rebalance_Policy() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 2)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DHP_Rebalance_Policy = pkk
End Function
Public Function DEVPKEY_Device_Numa_Node() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 3)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Numa_Node = pkk
End Function
Public Function DEVPKEY_Device_BusReportedDeviceDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_BusReportedDeviceDesc = pkk
End Function
Public Function DEVPKEY_Device_IsPresent() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 5)
 'DEVPROP_TYPE_BOOL
DEVPKEY_Device_IsPresent = pkk
End Function
Public Function DEVPKEY_Device_HasProblem() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 6)
 'DEVPROP_TYPE_BOOL
DEVPKEY_Device_HasProblem = pkk
End Function
Public Function DEVPKEY_Device_ConfigurationId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 7)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_ConfigurationId = pkk
End Function
Public Function DEVPKEY_Device_ReportedDeviceIdsHash() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 8)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ReportedDeviceIdsHash = pkk
End Function
Public Function DEVPKEY_Device_PhysicalDeviceLocation() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 9)
 'DEVPROP_TYPE_BINARY
DEVPKEY_Device_PhysicalDeviceLocation = pkk
End Function
Public Function DEVPKEY_Device_BiosDeviceName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 10)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_BiosDeviceName = pkk
End Function
Public Function DEVPKEY_Device_DriverProblemDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 11)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverProblemDesc = pkk
End Function
Public Function DEVPKEY_Device_DebuggerSafe() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 12)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DebuggerSafe = pkk
End Function
Public Function DEVPKEY_Device_PostInstallInProgress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 13)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_PostInstallInProgress = pkk
End Function
Public Function DEVPKEY_Device_Stack() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 14)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_Stack = pkk
End Function
Public Function DEVPKEY_Device_ExtendedConfigurationIds() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 15)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_ExtendedConfigurationIds = pkk
End Function
Public Function DEVPKEY_Device_IsRebootRequired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 16)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_IsRebootRequired = pkk
End Function
Public Function DEVPKEY_Device_FirmwareDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 17)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_FirmwareDate = pkk
End Function
Public Function DEVPKEY_Device_FirmwareVersion() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 18)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FirmwareVersion = pkk
End Function
Public Function DEVPKEY_Device_FirmwareRevision() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 19)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FirmwareRevision = pkk
End Function
Public Function DEVPKEY_Device_DependencyProviders() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 20)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_DependencyProviders = pkk
End Function
Public Function DEVPKEY_Device_DependencyDependents() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 21)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_DependencyDependents = pkk
End Function
Public Function DEVPKEY_Device_SoftRestartSupported() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 22)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_SoftRestartSupported = pkk
End Function
Public Function DEVPKEY_Device_ExtendedAddress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 23)
 'DEVPROP_TYPE_UINT64
DEVPKEY_Device_ExtendedAddress = pkk
End Function
Public Function DEVPKEY_Device_AssignedToGuest() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 24)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_AssignedToGuest = pkk
End Function
Public Function DEVPKEY_Device_CreatorProcessId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 25)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_CreatorProcessId = pkk
End Function
Public Function DEVPKEY_Device_FirmwareVendor() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 26)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FirmwareVendor = pkk
End Function
Public Function DEVPKEY_Device_SessionId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 6)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_SessionId = pkk
End Function
Public Function DEVPKEY_Device_InstallDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 100)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_InstallDate = pkk
End Function
Public Function DEVPKEY_Device_FirstInstallDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 101)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_FirstInstallDate = pkk
End Function
Public Function DEVPKEY_Device_LastArrivalDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 102)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_LastArrivalDate = pkk
End Function
Public Function DEVPKEY_Device_LastRemovalDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 103)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_LastRemovalDate = pkk
End Function
Public Function DEVPKEY_Device_DriverDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 2)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_DriverDate = pkk
End Function
Public Function DEVPKEY_Device_DriverVersion() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverVersion = pkk
End Function
Public Function DEVPKEY_Device_DriverDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverDesc = pkk
End Function
Public Function DEVPKEY_Device_DriverInfPath() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverInfPath = pkk
End Function
Public Function DEVPKEY_Device_DriverInfSection() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 6)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverInfSection = pkk
End Function
Public Function DEVPKEY_Device_DriverInfSectionExt() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 7)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverInfSectionExt = pkk
End Function
Public Function DEVPKEY_Device_MatchingDeviceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 8)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_MatchingDeviceId = pkk
End Function
Public Function DEVPKEY_Device_DriverProvider() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 9)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverProvider = pkk
End Function
Public Function DEVPKEY_Device_DriverPropPageProvider() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 10)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverPropPageProvider = pkk
End Function
Public Function DEVPKEY_Device_DriverCoInstallers() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 11)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_DriverCoInstallers = pkk
End Function
Public Function DEVPKEY_Device_ResourcePickerTags() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 12)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_ResourcePickerTags = pkk
End Function
Public Function DEVPKEY_Device_ResourcePickerExceptions() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 13)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_ResourcePickerExceptions = pkk
End Function
Public Function DEVPKEY_Device_DriverRank() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 14)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DriverRank = pkk
End Function
Public Function DEVPKEY_Device_DriverLogoLevel() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 15)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DriverLogoLevel = pkk
End Function
Public Function DEVPKEY_Device_NoConnectSound() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 17)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_NoConnectSound = pkk
End Function
Public Function DEVPKEY_Device_GenericDriverInstalled() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 18)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_GenericDriverInstalled = pkk
End Function
Public Function DEVPKEY_Device_AdditionalSoftwareRequested() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 19)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_AdditionalSoftwareRequested = pkk
End Function
Public Function DEVPKEY_Device_SafeRemovalRequired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hafd97640, &H86a3, &H4210, &Hb6, &H7c, &H28, &H9c, &H41, &Haa, &Hbe, &H55, 2)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_SafeRemovalRequired = pkk
End Function
Public Function DEVPKEY_Device_SafeRemovalRequiredOverride() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hafd97640, &H86a3, &H4210, &Hb6, &H7c, &H28, &H9c, &H41, &Haa, &Hbe, &H55, 3)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_SafeRemovalRequiredOverride = pkk
End Function
Public Function DEVPKEY_DrvPkg_Model() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_Model = pkk
End Function
Public Function DEVPKEY_DrvPkg_VendorWebSite() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_VendorWebSite = pkk
End Function
Public Function DEVPKEY_DrvPkg_DetailedDescription() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_DetailedDescription = pkk
End Function
Public Function DEVPKEY_DrvPkg_DocumentationLink() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_DocumentationLink = pkk
End Function
Public Function DEVPKEY_DrvPkg_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 6)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DrvPkg_Icon = pkk
End Function
Public Function DEVPKEY_DrvPkg_BrandingIcon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 7)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DrvPkg_BrandingIcon = pkk
End Function
Public Function DEVPKEY_DeviceClass_UpperFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 19)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_UpperFilters = pkk
End Function
Public Function DEVPKEY_DeviceClass_LowerFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 20)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_LowerFilters = pkk
End Function
Public Function DEVPKEY_DeviceClass_Security() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 25)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR
DEVPKEY_DeviceClass_Security = pkk
End Function
Public Function DEVPKEY_DeviceClass_SecuritySDS() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 26)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING
DEVPKEY_DeviceClass_SecuritySDS = pkk
End Function
Public Function DEVPKEY_DeviceClass_DevType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 27)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceClass_DevType = pkk
End Function
Public Function DEVPKEY_DeviceClass_Exclusive() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 28)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_Exclusive = pkk
End Function
Public Function DEVPKEY_DeviceClass_Characteristics() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 29)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceClass_Characteristics = pkk
End Function
Public Function DEVPKEY_DeviceClass_Name() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_Name = pkk
End Function
Public Function DEVPKEY_DeviceClass_ClassName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_ClassName = pkk
End Function
Public Function DEVPKEY_DeviceClass_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_Icon = pkk
End Function
Public Function DEVPKEY_DeviceClass_ClassInstaller() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_ClassInstaller = pkk
End Function
Public Function DEVPKEY_DeviceClass_PropPageProvider() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 6)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_PropPageProvider = pkk
End Function
Public Function DEVPKEY_DeviceClass_NoInstallClass() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 7)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_NoInstallClass = pkk
End Function
Public Function DEVPKEY_DeviceClass_NoDisplayClass() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 8)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_NoDisplayClass = pkk
End Function
Public Function DEVPKEY_DeviceClass_SilentInstall() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 9)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_SilentInstall = pkk
End Function
Public Function DEVPKEY_DeviceClass_NoUseClass() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 10)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_NoUseClass = pkk
End Function
Public Function DEVPKEY_DeviceClass_DefaultService() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 11)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_DefaultService = pkk
End Function
Public Function DEVPKEY_DeviceClass_IconPath() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 12)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_IconPath = pkk
End Function
Public Function DEVPKEY_DeviceClass_DHPRebalanceOptOut() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hd14d3ef3, &H66cf, &H4ba2, &H9d, &H38, &H0d, &Hdb, &H37, &Hab, &H47, &H01, 2)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_DHPRebalanceOptOut = pkk
End Function
Public Function DEVPKEY_DeviceClass_ClassCoInstallers() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H713d1703, &Ha2e2, &H49f5, &H92, &H14, &H56, &H47, &H2e, &Hf3, &Hda, &H5c, 2)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_ClassCoInstallers = pkk
End Function
Public Function DEVPKEY_DeviceInterface_FriendlyName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterface_FriendlyName = pkk
End Function
Public Function DEVPKEY_DeviceInterface_Enabled() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 3)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceInterface_Enabled = pkk
End Function
Public Function DEVPKEY_DeviceInterface_ClassGuid() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 4)
 'DEVPROP_TYPE_GUID
DEVPKEY_DeviceInterface_ClassGuid = pkk
End Function
Public Function DEVPKEY_DeviceInterface_ReferenceString() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterface_ReferenceString = pkk
End Function
Public Function DEVPKEY_DeviceInterface_Restricted() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 6)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceInterface_Restricted = pkk
End Function
Public Function DEVPKEY_DeviceInterface_UnrestrictedAppCapabilities() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 8)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceInterface_UnrestrictedAppCapabilities = pkk
End Function
Public Function DEVPKEY_DeviceInterface_SchematicName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 9)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterface_SchematicName = pkk
End Function
Public Function DEVPKEY_DeviceInterfaceClass_DefaultInterface() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H14c83a99, &H0b3f, &H44b7, &Hbe, &H4c, &Ha1, &H78, &Hd3, &H99, &H05, &H64, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterfaceClass_DefaultInterface = pkk
End Function
Public Function DEVPKEY_DeviceInterfaceClass_Name() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H14c83a99, &H0b3f, &H44b7, &Hbe, &H4c, &Ha1, &H78, &Hd3, &H99, &H05, &H64, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterfaceClass_Name = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Address() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 51)
 'DEVPROP_TYPE_STRING | DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Address = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DiscoveryMethod() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 52)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_DiscoveryMethod = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsEncrypted() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 53)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsEncrypted = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsAuthenticated() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 54)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsAuthenticated = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsConnected() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 55)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsConnected = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsPaired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 56)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsPaired = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 57)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Icon = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Version() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 65)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Version = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Last_Seen() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 66)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_DeviceContainer_Last_Seen = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Last_Connected() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 67)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_DeviceContainer_Last_Connected = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsShowInDisconnectedState() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 68)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsShowInDisconnectedState = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsLocalMachine() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 70)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsLocalMachine = pkk
End Function
Public Function DEVPKEY_DeviceContainer_MetadataPath() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 71)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_MetadataPath = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsMetadataSearchInProgress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 72)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsMetadataSearchInProgress = pkk
End Function
Public Function DEVPKEY_DeviceContainer_MetadataChecksum() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 73)
 'DEVPROP_TYPE_BINARY
DEVPKEY_DeviceContainer_MetadataChecksum = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsNotInterestingForDisplay() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 74)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsNotInterestingForDisplay = pkk
End Function
Public Function DEVPKEY_DeviceContainer_LaunchDeviceStageOnDeviceConnect() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 76)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_LaunchDeviceStageOnDeviceConnect = pkk
End Function
Public Function DEVPKEY_DeviceContainer_LaunchDeviceStageFromExplorer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 77)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_LaunchDeviceStageFromExplorer = pkk
End Function
Public Function DEVPKEY_DeviceContainer_BaselineExperienceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 78)
 'DEVPROP_TYPE_GUID
DEVPKEY_DeviceContainer_BaselineExperienceId = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsDeviceUniquelyIdentifiable() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 79)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsDeviceUniquelyIdentifiable = pkk
End Function
Public Function DEVPKEY_DeviceContainer_AssociationArray() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 80)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_AssociationArray = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DeviceDescription1() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 81)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_DeviceDescription1 = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DeviceDescription2() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 82)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_DeviceDescription2 = pkk
End Function
Public Function DEVPKEY_DeviceContainer_HasProblem() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 83)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_HasProblem = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsSharedDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 84)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsSharedDevice = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsNetworkDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 85)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsNetworkDevice = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsDefaultDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 86)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsDefaultDevice = pkk
End Function
Public Function DEVPKEY_DeviceContainer_MetadataCabinet() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 87)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_MetadataCabinet = pkk
End Function
Public Function DEVPKEY_DeviceContainer_RequiresPairingElevation() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 88)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_RequiresPairingElevation = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ExperienceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 89)
 'DEVPROP_TYPE_GUID
DEVPKEY_DeviceContainer_ExperienceId = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 90)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Category = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category_Desc_Singular() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 91)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Category_Desc_Singular = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category_Desc_Plural() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 92)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Category_Desc_Plural = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 93)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Category_Icon = pkk
End Function
Public Function DEVPKEY_DeviceContainer_CategoryGroup_Desc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 94)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_CategoryGroup_Desc = pkk
End Function
Public Function DEVPKEY_DeviceContainer_CategoryGroup_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 95)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_CategoryGroup_Icon = pkk
End Function
Public Function DEVPKEY_DeviceContainer_PrimaryCategory() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 97)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_PrimaryCategory = pkk
End Function
Public Function DEVPKEY_DeviceContainer_UnpairUninstall() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 98)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_UnpairUninstall = pkk
End Function
Public Function DEVPKEY_DeviceContainer_RequiresUninstallElevation() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 99)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_RequiresUninstallElevation = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DeviceFunctionSubRank() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 100)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceContainer_DeviceFunctionSubRank = pkk
End Function
Public Function DEVPKEY_DeviceContainer_AlwaysShowDeviceAsConnected() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 101)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_AlwaysShowDeviceAsConnected = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ConfigFlags() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 105)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceContainer_ConfigFlags = pkk
End Function
Public Function DEVPKEY_DeviceContainer_PrivilegedPackageFamilyNames() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 106)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_PrivilegedPackageFamilyNames = pkk
End Function
Public Function DEVPKEY_DeviceContainer_CustomPrivilegedPackageFamilyNames() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 107)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_CustomPrivilegedPackageFamilyNames = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsRebootRequired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 108)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsRebootRequired = pkk
End Function
Public Function DEVPKEY_DeviceContainer_FriendlyName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 12288)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_FriendlyName = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Manufacturer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 8192)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Manufacturer = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ModelName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 8194)
 'DEVPROP_TYPE_STRING (localizable)
DEVPKEY_DeviceContainer_ModelName = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ModelNumber() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 8195)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_ModelNumber = pkk
End Function
Public Function DEVPKEY_DeviceContainer_InstallInProgress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 9)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_InstallInProgress = pkk
End Function
Public Function DEVPKEY_DevQuery_ObjectType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H13673f42, &Ha3d6, &H49f6, &Hb4, &Hda, &Hae, &H46, &He0, &Hc5, &H23, &H7c, 2)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DevQuery_ObjectType = pkk
End Function
Public Function DEVPKEY_DeviceDisplay_DiscoveryMethod() As PROPERTYKEY
	Return DEVPKEY_DeviceContainer_DiscoveryMethod
End Function
#End Region

Public Function VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H00000000, &H0000, &H0000, &H00, &H00, &H00, &H00, &H00, &H00, &H00, &H00)
VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN = iid
End Function
Public Function VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hec984aec, &Ha0f9, &H47e9, &H90, &H1f, &H71, &H41, &H5a, &H66, &H34, &H5b)
VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT = iid
End Function



End Module
#End If