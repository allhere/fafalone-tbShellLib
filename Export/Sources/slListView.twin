'ShellLib - Undocumented ListView interfaces

[ InterfaceId ("96a23e16-a1bc-11d1-b084-00c04fc33aa5") ]
Interface ILVRange Extends stdole.IUnknown
    Sub IncludeRange(ByVal iBegin As Long, ByVal iEnd As Long)
    Sub ExcludeRange(ByVal iBegin As Long, ByVal iEnd As Long)
    Sub InvertRange(ByVal iBegin As Long, ByVal iEnd As Long)
    Sub InsertItem(ByVal iItem As Long)
    Sub RemoveItem(ByVal iItem As Long)
    Sub Clear()
    Sub IsSelected(ByVal iItem As Long)
    Sub IsEmpty()
    Sub NextSelected(ByVal iItem As Long, piItem As Long)
    Sub NextUnSelected(ByVal iItem As Long, piItem As Long)
    Sub CountIncluded(pcIncluded As Long)
End Interface

[ InterfaceId ("44C09D56-8D3B-419D-A462-7B956B105B47") ]
Interface IOwnerDataCallback Extends stdole.IUnknown
    Sub GetItemPosition(ByVal iItem As Long, pt As POINT)
    Sub SetItemPosition(ByVal iItem As Long, pt As POINT)
    Sub GetItemInGroup(ByVal groupIndex As Long, ByVal groupWideItemIndex As Long, pTotalItemIndex As Long)
    Sub GetItemGroup(ByVal iItem As Long, ByVal occurenceIndex As Long, pGroupIndex As Long)
    Sub GetItemGroupCount(ByVal iItem As Long, pOccurenceCount As Long)
    Sub OnCacheHint(ByVal lviFirst As LongLong, ByVal lviiLast As LongLong) 'Byval LVITEMINDEX
End Interface

[ InterfaceId ("6E71A510-732A-4557-9596-A827E36DAF8F") ]
Interface IPropertyControlBase Extends stdole.IUnknown
    Sub Initialize(ByVal pUnk As stdole.IUnknown, ByVal pct As Long)
    Sub GetSize(ByVal prt As Long, ByVal hDC As LongPtr, siz1 As SIZE, siz2 As SIZE)
    Sub SetWindowTheme(ByVal lpsz1 As LongPtr, ByVal lpsz2 As LongPtr)
    Sub SetFont(ByVal phf As LongPtr)
    Sub SetTextColor(ByVal clrText As Long)
    Sub GetFlags(pdwFlags As Long)
    Sub SetFlags(ByVal dwFlags As Long)
    Sub AdjustWindowRectPCB(ByVal hWnd As LongPtr, prc1 As RECT, prc2 As RECT, ByVal unk As Long)
    Sub SetValue(ByVal pUnk As stdole.IUnknown)
    Sub InvokeDefaultAction()
    Sub Destroy()
    Sub SetFormatFlags(ByVal dwFlags As Long)
    Sub GetFormatFlags(pdwFlags As Long)
End Interface

[ InterfaceId ("5E82A4DD-9561-476A-8634-1BEBACBA4A38") ]
Interface IPropertyControl Extends IPropertyControlBase
    Sub GetValue(riid As UUID, ppv As any)
    Sub Create(ByVal hWnd As LongPtr, prc As RECT, prc2 As RECT, ByVal unk As Long)
    Sub SetPosition(prc As RECT, prc2 As RECT)
    Sub IsModified(bModified As Long)
    Sub SetModified(ByVal bModified As Long)
    Sub ValidationFailed(ByVal lpsz As LongPtr)
    Sub GetState(pState As Long)
End Interface

[ InterfaceId ("E6DFF6FD-BCD5-4162-9C65-A3B18C616FDB") ]
Interface IDrawPropertyControl Extends IPropertyControlBase
    Sub GetDrawFlags(pdwFlags As Long)
    Sub WindowlessDraw(ByVal hDC As LongPtr, pRect As RECT, ByVal a As Long)
    Sub HasVisibleContent()
    Sub GetDisplayText(lpText As LongPtr)
    Sub GetTooltipInfo(ByVal hDC As LongPtr, sz As SIZE, unk As Long)
End Interface

[ InterfaceId ("7AF7F355-1066-4E17-B1F2-19FE2F099CD2") ]
Interface IPropertyValue Extends stdole.IUnknown
    Sub SetPropertyKey(pk As PROPERTYKEY)
    Sub GetPropertyKey(bk As PROPERTYKEY)
    Sub GetValue(pprop As Variant)
    Sub InitValue(ByVal pprop As Variant)
End Interface

[ InterfaceId ("11A66240-5489-42C2-AEBF-286FC831524C") ]
Interface ISubItemCallback Extends stdole.IUnknown
    Sub GetSubItemTitle(ByVal subitemIndex As Long, ByVal lpszBuffer As LongPtr, ByVal BufferSize As Long)
    Sub GetSubItemControl(ByVal itemIndex As Long, ByVal subItemIndex As Long, requiredInterface As UUID, ByVal ppObject As LongPtr)
    Sub BeginSubItemEdit(ByVal itemIndex As Long, ByVal subItemIndex As Long, ByVal mode As Long, requiredInterface As UUID, ByVal ppObject As LongPtr)
    Sub EndSubItemEdit(ByVal itemIndex As Long, ByVal subItemIndex As Long, ByVal mode As Long, ByVal ppc As LongPtr)
    Sub BeginGroupEdit(ByVal groupIndex As Long, requiredInterface As UUID, ByVal ppObject As LongPtr)
    Sub EndGroupEdit(ByVal groupIndex As Long, ByVal mode As Long, ByVal pPropertyControl As LongPtr)
    Sub OnInvokeVerb(ByVal itemIndex As Long, ByVal pVerb As LongPtr)
End Interface

[ InterfaceId ("E5B16AF2-3990-4681-A609-1F060CD14269") ]
Interface IListView Extends IOleWindow 'Windows 7+ version
    Sub GetImageList(ByVal lIndex As Long, himl As LongPtr)
    Sub SetImageList(ByVal lIndex As Long, ByVal himl As LongPtr, phimlOld As LongPtr)
    Sub GetBackgroundColor(clrBk As Long)
    Sub SetBackgroundColor(ByVal clrBk As Long)
    Sub GetTextColor(clrText As Long)
    Sub SetTextColor(ByVal clrText As Long)
    Sub GetTextBackgroundColor(clrTextBk As Long)
    Sub SetTextBackgroundColor(ByVal clrTextBk As Long)
    Sub GetHotLightColor(clrHot As Long)
    Sub SetHotLightColor(ByVal clrHot As Long)
    Sub GetItemCount(nItems As Long)
    Sub SetItemCount(ByVal nItems As Long, ByVal unk As Long)
    Sub GetItem(ByVal ptLVI As LongPtr)
    Sub SetItem(pLVI As LVITEMW)
    Sub GetItemState(ByVal iItem As Long, ByVal iSubItem As Long, ByVal mask As LVITEM_state, pState As LVITEM_state)
    Sub SetItemState(ByVal iItem As Long, ByVal iSubItem As Long, ByVal mask As LVITEM_state, ByVal pState As LVITEM_state)
    Sub GetItemText(ByVal iItem As Long, ByVal iSubItem As Long, ByVal pBuffer As LongPtr, ByVal nBufferSize As Long)
    Sub SetItemText(ByVal iItem As Long, ByVal iSubItem As Long, ByVal pszText As LongPtr)
    Sub GetBackgroundImage(lvbk As LVBKIMAGEW)
    Sub SetBackgroundImage(ByVal plvnk As LongPtr)
    Sub GetFocusedColumn(iCol As Long)
    Sub SetSelectionFlags(ByVal mask As Long, ByVal flags As Long)
    Sub GetSelectedColumn(iCol As Long)
    Sub SetSelectedColumn(ByVal iCol As Long)
    Sub GetView(iView As Long)
    Sub SetView(ByVal iView As Long)
    Sub InsertItem(ByVal pItem As LongPtr, index As Long)
    Sub DeleteItem(ByVal iIndex As Long)
    Sub DeleteAllItems()
    Sub UpdateItem(ByVal iItem As Long)
    Sub GetItemRect(ByVal lvii As LongLong, ByVal nRectType As Long, prc As RECT)
    Sub GetSubItemRect(ByVal lvii As LongLong, ByVal iSubItem As Long, ByVal nRectType As Long, prc As RECT)
    Sub HitTestSubItem(pHitTestData As LVHITTESTINFO)
    Sub GetIncrSearchString(ByVal pBuffer As LongPtr, ByVal BufferSize As Long, pCopiedChars As Long)
    Sub GetItemSpacing(ByVal bSmallIconView As Long, pHorz As Long, pVert As Long)
    Sub SetIconSpacing(ByVal nHoriz As Long, ByVal nVert As Long, pHoriz As Long, pVert As Long)
    Sub GetNextItem(ByVal lvii As LongLong, ByVal lviiGroup As Long, ByVal flags As Long, plviiNext As LVITEMINDEX)
    Sub FindItem(ByVal lvii As LongLong, lvfi As LVFINDINFOW, lviiFound As LVITEMINDEX)
    Sub GetSelectionMark(lvii As LVITEMINDEX)
    Sub SetSelectionMark(ByVal lvii As LongLong, lviiPrev As LVITEMINDEX)
    Sub GetItemPosition(ByVal lvii As LongLong, pt As POINT)
    Sub SetItemPosition(ByVal iItem As Long, pt As POINT)
    Sub ScrollView(ByVal hDist As Long, ByVal vDist As Long)
    Sub EnsureItemVisible(ByVal lvii As LongLong, ByVal fPartialOk As Long)
    Sub EnsureSubItemVisible(ByVal lvii As LongLong, ByVal iSubItem As Long)
    Sub EditSubitem(ByVal lvii As LongLong, ByVal iSubItem As Long)
    Sub RedrawItems(ByVal iFirst As Long, ByVal iLast As Long)
    Sub ArrangeItems(ByVal mode As Long)
    Sub RecomputeItems(ByVal unk As Long)
    Sub GetEditControl(hEdit As LongPtr)
    Sub EditLabel(ByVal lvii As LongLong, ByVal initialEditText As LongPtr, phwndEdit As LongPtr)
    Sub EditGroupLabel(ByVal iGroup As Long)
    Sub CancelLabelEdit()
    Sub GetEditItem(lvii As LVITEMINDEX, iSubItem As Long)
    Sub HitTest(lvhti As LVHITTESTINFO)
    Sub GetStringWidth(ByVal pString As LongPtr, pWidth As Long)
    Sub GetColumn(ByVal iCol As Long, pCol As LVCOLUMNW)
    Sub SetColumn(ByVal iCol As Long, pCol As LVCOLUMNW)
    Sub GetColumnOrderArray(ByVal iNumOfColumns As Long, pCol As Long)
    Sub SetColumnOrderArray(ByVal iNumOfColumns As Long, pCol As Long)
    Sub GetHeaderControl(hHeader As LongPtr)
    Sub InsertColumn(ByVal iInsertAt As Long, lvcol As LVCOLUMNW)
    Sub DeleteColumn(ByVal iIndex As Long)
    Sub CreateDragImage(ByVal iItem As Long, ptUpperLeft As POINT, phiml As LongPtr)
    Sub GetViewRect(rc As RECT)
    Sub GetClientRect(ByVal unk As Long, rc As RECT)
    Sub GetColumnWidth(ByVal iCol As Long, pWidth As Long)
    Sub SetColumnWidth(ByVal iCol As Long, ByVal nWidth As Long)
    Sub GetCallbackMask(pMask As Long)
    Sub SetCallbackMask(ByVal mask As Long)
    Sub GetItemIndex(iIndex As Long)
    Sub GetCountPerPage(pCount As Long)
    Sub GetOrigin(pt As POINT)
    Sub GetSelectedCount(pSelCount As Long)
    Sub SortItems(ByVal unk As Long, ByVal lParam As LongPtr, ByVal pfnCompare As LongPtr)
    Sub GetExtendedStyle(dwStyle As Long)
    Sub SetExtendedStyle(ByVal mask As Long, ByVal style As Long, dwOldStyle As Long)
    Sub GetHoverTime(pTime As Long)
    Sub SetHoverTime(ByVal time As Long, prevtime As Long)
    Sub GetTooltip(hTooltip As LongPtr)
    Sub SetToolTip(ByVal hTooltip As LongPtr, hOldTooltip As LongPtr)
    Sub GetHotItem(lvii As LVITEMINDEX)
    Sub SetHotItem(ByVal lvii As LongLong, oldlvii As LVITEMINDEX)
    Sub GetHotCursor(hCursor As LongPtr)
    Sub SetHotCursor(ByVal hCursor As LongPtr, hOldCursor As LongPtr)
    Sub ApproximateViewRect(ByVal nItemCount As Long, pWidth As Long, pHeight As Long)
    Sub SetRangeObject(ByVal unk As Long, ByVal plvRange As ILVRange)
    Sub GetWorkAreas(ByVal iNumOfWorkAreas As Long, rc As RECT)
    Sub SetWorkAreas(ByVal iNumOfWorkAreas As Long, rc As RECT)
    Sub GetWorkAreaCount(pCount As Long)
    Sub ResetEmptyText()
    Sub EnableGroupView(ByVal fEnable As Long)
    Sub IsGroupViewEnabled(pEnabled As Long)
    Sub SortGroups(ByVal pfnGroupCompare As LongPtr, lParam As any)
    Sub GetGroupInfo(ByVal unk As Long, ByVal iGroupID As Long, lvg As LVGROUP)
    Sub SetGroupInfo(ByVal unk As Long, ByVal iGroupID As Long, lvg As LVGROUP)
    Sub GetGroupRect(ByVal unk As Long, ByVal iGroupID As Long, ByVal nRectType As Long, rc As RECT)
    Sub GetGroupState(ByVal iGroupID As Long, ByVal mask As LVGROUPSTATE, state As LVGROUPSTATE)
    Sub HasGroup(ByVal iGroupID As Long, pHasGroup As Long)
    Sub InsertGroup(ByVal insertAt As Long, lvg As LVGROUP)
    Sub RemoveGroup(ByVal iGroupID As Long)
    Sub InsertGroupSorted(lvigs As LVINSERTGROUPSORTED, pGroupID As Long)
    Sub GetGroupMetrics(lvgm As LVGROUPMETRICS)
    Sub SetGroupMetrics(lvgm As LVGROUPMETRICS)
    Sub RemoveAllGroups()
    Sub GetFocusedGroup(iGroupID As Long)
    Sub GetGroupCount(nCount As Long)
    Sub SetOwnerDataCallback(ByVal pCallback As IOwnerDataCallback)
    Sub GetTileViewInfo(pInfo As LVTILEVIEWINFO)
    Sub SetTileViewInfo(pInfo As LVTILEVIEWINFO)
    Sub GetTileInfo(pInfo As LVTILEINFO)
    Sub SetTileInfo(pInfo As LVTILEINFO)
    Sub GetInsertMark(pInsertMark As LVINSERTMARK)
    Sub SetInsertMark(pInsertMark As LVINSERTMARK)
    Sub GetInsertMarkRect(rc As RECT)
    Sub GetInsertMarkColor(pClrMark As Long)
    Sub SetInsertMarkColor(ByVal clrMark As Long, pclrMarkOld As Long)
    Sub HitTestInsertMark(pt As POINT, pMark As LVINSERTMARK)
    Sub SetInfoTip(pInfoTip As LVSETINFOTIP)
    Sub GetOutlineColor(pClrOutline As Long)
    Sub SetOutlineColor(ByVal clrOutline As Long, pclrOutlineOld As Long)
    Sub GetFrozenItem(pItem As Long)
    Sub SetFrozenItem(ByVal iItemSometimes As Long, ByVal iItemOtherTimes As Long)
    Sub GetFrozenSlot(pSlotRect As RECT)
    Sub SetFrozenSlot(ByVal fFreeze As Long, ptFrozen As POINT)
    Sub GetViewMargin(rcMargin As RECT)
    Sub SetViewMargin(rcMargin As RECT)
    Sub SetKeyboardSelected(ByVal lvii As LongLong)
    Sub MapIndexToId(ByVal iItem As Long, pId As Long)
    Sub MapIdToIndex(ByVal iId As Long, iIndex As Long)
    Sub IsItemVisible(ByVal lvii As LongLong, pVisible As Long)
    Sub EnableAlphaShadow(ByVal fEnable As Long)
    Sub GetGroupSubsetCount(pRows As Long)
    Sub SetGroupSubsetCount(ByVal nRows As Long)
    Sub GetVisibleSlotCount(pCount As Long)
    Sub GetColumnMarginRect(rc As RECT)
    Sub SetSubItemCallback(ByVal pCallback As ISubItemCallback)
    Sub GetVisibleItemRange(pFirst As LVITEMINDEX, pLast As LVITEMINDEX)
    Sub SetTypeAheadFlags(ByVal mask As Long, ByVal flags As Long)
End Interface
[ InterfaceId ("2FFE2979-5928-4386-9CDB-8E1F15B72FB4") ]
Interface IListViewVista Extends IOleWindow 'Vista-only version
    Sub GetImageList(ByVal lIndex As Long, himl As LongPtr)
    Sub SetImageList(ByVal lIndex As Long, ByVal himl As LongPtr, phimlOld As LongPtr)
    Sub GetBackgroundColor(clrBk As Long)
    Sub SetBackgroundColor(ByVal clrBk As Long)
    Sub GetTextColor(clrText As Long)
    Sub SetTextColor(ByVal clrText As Long)
    Sub GetTextBackgroundColor(clrTextBk As Long)
    Sub SetTextBackgroundColor(ByVal clrTextBk As Long)
    Sub GetHotLightColor(clrHot As Long)
    Sub SetHotLightColor(ByVal clrHot As Long)
    Sub GetItemCount(nItems As Long)
    Sub SetItemCount(ByVal nItems As Long, ByVal unk As Long)
    Sub GetItem(ByVal ptLVI As LongPtr)
    Sub SetItem(pLVI As LVITEMW)
    Sub GetItemState(ByVal iItem As Long, ByVal iSubItem As Long, ByVal mask As LVITEM_state, pState As LVITEM_state)
    Sub SetItemState(ByVal iItem As Long, ByVal iSubItem As Long, ByVal mask As LVITEM_state, ByVal pState As LVITEM_state)
    Sub GetItemText(ByVal iItem As Long, ByVal iSubItem As Long, ByVal pBuffer As LongPtr, ByVal nBufferSize As Long)
    Sub SetItemText(ByVal iItem As Long, ByVal iSubItem As Long, ByVal pszText As LongPtr)
    Sub GetBackgroundImage(lvbk As LVBKIMAGEW)
    Sub SetBackgroundImage(ByVal plvnk As LongPtr)
    Sub GetFocusedColumn(iCol As Long)
    Sub SetSelectionFlags(ByVal mask As Long, ByVal flags As Long)
    Sub GetSelectedColumn(iCol As Long)
    Sub SetSelectedColumn(ByVal iCol As Long)
    Sub GetView(iView As Long)
    Sub SetView(ByVal iView As Long)
    Sub InsertItem(ByVal pItem As LongPtr, index As Long)
    Sub DeleteItem(ByVal iIndex As Long)
    Sub DeleteAllItems()
    Sub UpdateItem(ByVal iItem As Long)
    Sub GetItemRect(ByVal lvii As LongLong, ByVal nRectType As Long, prc As RECT)
    Sub GetSubItemRect(ByVal lvii As LongLong, ByVal iSubItem As Long, ByVal nRectType As Long, prc As RECT)
    Sub HitTestSubItem(pHitTestData As LVHITTESTINFO)
    Sub GetIncrSearchString(ByVal pBuffer As LongPtr, ByVal BufferSize As Long, pCopiedChars As Long)
    Sub GetItemSpacing(ByVal bSmallIconView As Long, pHorz As Long, pVert As Long)
    Sub SetIconSpacing(ByVal nHoriz As Long, ByVal nVert As Long, pHoriz As Long, pVert As Long)
    Sub GetNextItem(ByVal lvii As LongLong, ByVal lviiGroup As Long, ByVal flags As Long, plviiNext As LVITEMINDEX)
    Sub FindItem(ByVal lvii As LongLong, lvfi As LVFINDINFOW, lviiFound As LVITEMINDEX)
    Sub GetSelectionMark(lvii As LVITEMINDEX)
    Sub SetSelectionMark(ByVal lvii As LongLong, lviiPrev As LVITEMINDEX)
    Sub GetItemPosition(ByVal lvii As LongLong, pt As POINT)
    Sub SetItemPosition(ByVal iItem As Long, pt As POINT)
    Sub ScrollView(ByVal hDist As Long, ByVal vDist As Long)
    Sub EnsureItemVisible(ByVal lvii As LongLong, ByVal fPartialOk As Long)
    Sub EnsureSubItemVisible(ByVal lvii As LongLong, ByVal iSubItem As Long)
    Sub EditSubitem(ByVal lvii As LongLong, ByVal iSubItem As Long)
    Sub RedrawItems(ByVal iFirst As Long, ByVal iLast As Long)
    Sub ArrangeItems(ByVal mode As Long)
    Sub RecomputeItems(ByVal unk As Long)
    Sub GetEditControl(hEdit As LongPtr)
    Sub EditLabel(ByVal lvii As LongLong, ByVal initialEditText As LongPtr, phwndEdit As LongPtr)
    Sub EditGroupLabel(ByVal iGroup As Long)
    Sub CancelLabelEdit()
    Sub GetEditItem(lvii As LVITEMINDEX, iSubItem As Long)
    Sub HitTest(lvhti As LVHITTESTINFO)
    Sub GetStringWidth(ByVal pString As LongPtr, pWidth As Long)
    Sub GetColumn(ByVal iCol As Long, pCol As LVCOLUMNW)
    Sub SetColumn(ByVal iCol As Long, pCol As LVCOLUMNW)
    Sub GetColumnOrderArray(ByVal iNumOfColumns As Long, pCol As Long)
    Sub SetColumnOrderArray(ByVal iNumOfColumns As Long, pCol As Long)
    Sub GetHeaderControl(hHeader As LongPtr)
    Sub InsertColumn(ByVal iInsertAt As Long, lvcol As LVCOLUMNW)
    Sub DeleteColumn(ByVal iIndex As Long)
    Sub CreateDragImage(ByVal iItem As Long, ptUpperLeft As POINT, phiml As LongPtr)
    Sub GetViewRect(rc As RECT)
    Sub GetClientRect(ByVal unk As Long, rc As RECT)
    Sub GetColumnWidth(ByVal iCol As Long, pWidth As Long)
    Sub SetColumnWidth(ByVal iCol As Long, ByVal nWidth As Long)
    Sub GetCallbackMask(pMask As Long)
    Sub SetCallbackMask(ByVal mask As Long)
    Sub GetItemIndex(iIndex As Long)
    Sub GetCountPerPage(pCount As Long)
    Sub GetOrigin(pt As POINT)
    Sub GetSelectedCount(pSelCount As Long)
    Sub SortItems(ByVal unk As Long, ByVal lParam As LongPtr, ByVal pfnCompare As LongPtr)
    Sub GetExtendedStyle(dwStyle As Long)
    Sub SetExtendedStyle(ByVal mask As Long, ByVal style As Long, dwOldStyle As Long)
    Sub GetHoverTime(pTime As Long)
    Sub SetHoverTime(ByVal time As Long, prevtime As Long)
    Sub GetTooltip(hTooltip As LongPtr)
    Sub SetToolTip(ByVal hTooltip As LongPtr, hOldTooltip As LongPtr)
    Sub GetHotItem(lvii As LVITEMINDEX)
    Sub SetHotItem(ByVal lvii As LongLong, oldlvii As LVITEMINDEX)
    Sub GetHotCursor(hCursor As LongPtr)
    Sub SetHotCursor(ByVal hCursor As LongPtr, hOldCursor As LongPtr)
    Sub ApproximateViewRect(ByVal nItemCount As Long, pWidth As Long, pHeight As Long)
    Sub SetRangeObject(ByVal unk As Long, ByVal plvRange As ILVRange)
    Sub GetWorkAreas(ByVal iNumOfWorkAreas As Long, rc As RECT)
    Sub SetWorkAreas(ByVal iNumOfWorkAreas As Long, rc As RECT)
    Sub GetWorkAreaCount(pCount As Long)
    Sub ResetEmptyText()
    Sub EnableGroupView(ByVal fEnable As Long)
    Sub IsGroupViewEnabled(pEnabled As Long)
    Sub SortGroups(ByVal pfnGroupCompare As LongPtr, lParam As any)
    Sub GetGroupInfo(ByVal unk As Long, ByVal iGroupID As Long, lvg As LVGROUP)
    Sub SetGroupInfo(ByVal unk As Long, ByVal iGroupID As Long, lvg As LVGROUP)
    Sub GetGroupRect(ByVal unk As Long, ByVal iGroupID As Long, ByVal nRectType As Long, rc As RECT)
    Sub GetGroupState(ByVal iGroupID As Long, ByVal mask As LVGROUPSTATE, state As LVGROUPSTATE)
    Sub HasGroup(ByVal iGroupID As Long, pHasGroup As Long)
    Sub InsertGroup(ByVal insertAt As Long, lvg As LVGROUP)
    Sub RemoveGroup(ByVal iGroupID As Long)
    Sub InsertGroupSorted(lvigs As LVINSERTGROUPSORTED, pGroupID As Long)
    Sub GetGroupMetrics(lvgm As LVGROUPMETRICS)
    Sub SetGroupMetrics(lvgm As LVGROUPMETRICS)
    Sub RemoveAllGroups()
    Sub GetFocusedGroup(iGroupID As Long)
    Sub GetGroupCount(nCount As Long)
    Sub SetOwnerDataCallback(ByVal pCallback As IOwnerDataCallback)
    Sub GetTileViewInfo(pInfo As LVTILEVIEWINFO)
    Sub SetTileViewInfo(pInfo As LVTILEVIEWINFO)
    Sub GetTileInfo(pInfo As LVTILEINFO)
    Sub SetTileInfo(pInfo As LVTILEINFO)
    Sub GetInsertMark(pInsertMark As LVINSERTMARK)
    Sub SetInsertMark(pInsertMark As LVINSERTMARK)
    Sub GetInsertMarkRect(rc As RECT)
    Sub GetInsertMarkColor(pClrMark As Long)
    Sub SetInsertMarkColor(ByVal clrMark As Long, pclrMarkOld As Long)
    Sub HitTestInsertMark(pt As POINT, pMark As LVINSERTMARK)
    Sub SetInfoTip(pInfoTip As LVSETINFOTIP)
    Sub GetOutlineColor(pClrOutline As Long)
    Sub SetOutlineColor(ByVal clrOutline As Long, pclrOutlineOld As Long)
    Sub GetFrozenItem(pItem As Long)
    Sub SetFrozenItem(ByVal iItemSometimes As Long, ByVal iItemOtherTimes As Long)
    Sub GetFrozenSlot(pSlotRect As RECT)
    Sub SetFrozenSlot(ByVal fFreeze As Long, ptFrozen As POINT)
    Sub GetViewMargin(rcMargin As RECT)
    Sub SetViewMargin(rcMargin As RECT)
    Sub SetKeyboardSelected(ByVal lvii As LongLong)
    Sub MapIndexToId(ByVal iItem As Long, pId As Long)
    Sub MapIdToIndex(ByVal iId As Long, iIndex As Long)
    Sub IsItemVisible(ByVal lvii As LongLong, pVisible As Long)
    Sub GetGroupSubsetCount(pRows As Long)
    Sub SetGroupSubsetCount(ByVal nRows As Long)
    Sub GetVisibleSlotCount(pCount As Long)
    Sub GetColumnMarginRect(rc As RECT)
    Sub SetSubItemCallback(ByVal pCallback As ISubItemCallback)
    Sub GetVisibleItemRange(pFirst As LVITEMINDEX, pLast As LVITEMINDEX)
    Sub SetTypeAheadFlags(ByVal mask As Long, ByVal flags As Long)
End Interface

[ InterfaceId ("88EB9442-913B-4AB4-A741-DD99DCB7558B") ]
Interface IListViewFooterCallback Extends stdole.IUnknown
    Sub OnButtonClicked(ByVal itemIndex As Long, ByVal lParam As Long, pRemoveFooter As Long)
    Sub OnDestroyButton(ByVal itemIndex As Long, ByVal lParam As Long)
End Interface

[ InterfaceId ("F0034DA8-8A22-4151-8F16-2EBA76565BCC") ]
Interface IListViewFooter Extends stdole.IUnknown
    Sub IsVisible(pVisible As Long)
    Sub GetFooterFocus(pItemIndex As Long)
    Sub SetFooterFocus(ByVal pItemIndex As Long)
    Sub SetIntroText(ByVal pszText As LongPtr)
    Sub Show(ByVal pCallbackObject As IListViewFooterCallback)
    Sub RemoveAllButtons()
    Sub InsertButton(ByVal insertAt As Long, ByVal pszText As LongPtr, ByVal pszAltText As LongPtr, ByVal iconIndex As Long, ByVal lParam As Long)
    Sub GetButtonLParam(lParam As Long)
End Interface


Module slListView


Public Enum LVITEM_mask
  LVIF_TEXT = &H1
  LVIF_IMAGE = &H2
  LVIF_PARAM = &H4
  LVIF_STATE = &H8
  LVIF_INDENT = &H10
  LVIF_GROUPID = &H100
  LVIF_COLUMNS = &H200
  LVIF_NORECOMPUTE = &H800
  LVIF_DI_SETITEM = &H1000   ' NMLVDISPINFO notification
  '6.0
  LVIF_COLFMT = &H10000
End Enum

' LVITEM state, stateMask, LVM_SETCALLBACKMASK wParam
Public Enum LVITEM_state
  LVIS_FOCUSED = &H1
  LVIS_SELECTED = &H2
  LVIS_CUT = &H4
  LVIS_DROPHILITED = &H8
  LVIS_GLOW = &H10
  LVIS_ACTIVATING = &H20
 
  LVIS_OVERLAYMASK = &HF00
  LVIS_STATEIMAGEMASK = &HF000
End Enum
Public Type LVITEMW
  Mask As LVITEM_mask
  iItem As Long
  iSubItem As Long
  State As LVITEM_state
  StateMask As LVITEM_state
  pszText As LongPtr
  cchTextMax As Long
  iImage As Long
  lParam As LongPtr
'#If (WIN32_IE >= &H300) Then
  iIndent As Long
'#End If
'#If (WIN32_IE >= &H501) Then
  iGroupId As Long
  cColumns As Long
  puColumns As LongPtr
'#End If
'#If (WIN32_IE >= &H600) Then
  piColFmt As LongPtr 'array of certain LVCFMT_ for each subitem
  iGroup As Long 'for single item in multiple groups in virtual listview
'#End If
End Type

Public Type LVITEMINDEX
    iItem As Long '          // listview item index
    iGroup As Long
End Type


Public Enum LVBKIMAGE_Flags
    LVBKIF_SOURCE_NONE = &H0
    LVBKIF_SOURCE_HBITMAP = &H1
    LVBKIF_SOURCE_URL = &H2
    LVBKIF_SOURCE_MASK = &H3
    LVBKIF_STYLE_NORMAL = &H0
    LVBKIF_STYLE_TILE = &H10
    LVBKIF_STYLE_MASK = &H10
  '5.0
    LVBKIF_FLAG_TILEOFFSET = &H100
    LVBKIF_TYPE_WATERMARK = &H10000000
    LVBKIF_FLAG_ALPHABLEND = &H20000000
End Enum
Public Type LVBKIMAGEW
  ulFlags As LVBKIMAGE_Flags
  hBm As LongPtr
  pszImage As LongPtr  ' if String, must be pre-allocated
  cchImageMax As Long
  XOffsetPercent As Long
  YOffsetPercent As Long
End Type

Public Enum LVHT_Flags
     LVHT_NOWHERE = &H1   ' in LV client area, but not over item
     LVHT_ONITEMICON = &H2
     LVHT_ONITEMLABEL = &H4
     LVHT_ONITEMSTATEICON = &H8
     LVHT_ONITEM = (LVHT_ONITEMICON Or LVHT_ONITEMLABEL Or LVHT_ONITEMSTATEICON)
    
    '  ' outside the LV's client area
     LVHT_ABOVE = &H8
     LVHT_BELOW = &H10
     LVHT_TORIGHT = &H20
     LVHT_TOLEFT = &H40
'#If (WIN32_IE >= &H600) Then
    LVHT_EX_GROUP_HEADER = &H10000000
    LVHT_EX_GROUP_FOOTER = &H20000000
    LVHT_EX_GROUP_COLLAPSE = &H40000000
    LVHT_EX_GROUP_BACKGROUND = &H80000000
    LVHT_EX_GROUP_STATEICON = &H1000000
    LVHT_EX_GROUP_SUBSETLINK = &H2000000
    LVHT_EX_GROUP = (LVHT_EX_GROUP_BACKGROUND Or LVHT_EX_GROUP_COLLAPSE Or LVHT_EX_GROUP_FOOTER Or LVHT_EX_GROUP_HEADER Or LVHT_EX_GROUP_STATEICON Or LVHT_EX_GROUP_SUBSETLINK)
    LVHT_EX_ONCONTENTS = &H4000000          'On item AND not on the background
    LVHT_EX_FOOTER = &H8000000
'#End If
End Enum
Public Type LVHITTESTINFO   ' was LV_HITTESTINFO
  PT As POINT
  Flags As LVHT_Flags
  iItem As Long
'#If (WIN32_IE >= &H300) Then
  iSubItem As Long    ' this is was NOT in win95.  valid only for LVM_SUBITEMHITTEST
'#End If
'#If (WIN32_IE >= &H600) then
  iGroup As Long
'#End If
End Type

 Public Type LVFINDINFOW   ' was LV_FINDINFO
  Flags As LVFINDINFO_flags
  psz As LongPtr  ' if String, must be pre-allocated
  lParam As LongPtr
  PT As POINT
  VKDirection As Long
End Type
Public Enum LVFINDINFO_flags
  LVFI_PARAM = &H1
  LVFI_STRING = &H2
  LVFI_SUBSTRING = &H4 'same as LVFI_PARTIAL
  LVFI_PARTIAL = &H8
  LVFI_WRAP = &H20
  LVFI_NEARESTXY = &H40
End Enum

Public Enum LVCOLUMN_mask
  LVCF_FMT = &H1
  LVCF_WIDTH = &H2
  LVCF_TEXT = &H4
  LVCF_SUBITEM = &H8
'#If (WIN32_IE >= &H300) Then
  LVCF_IMAGE = &H10
  LVCF_ORDER = &H20
'#End If
'#If (WIN32_IE >= &H600) Then
  LVCF_MINWIDTH = &H40
  LVCF_DEFAULTWIDTH = &H80
  LVCF_IDEALWIDTH = &H100
'#End If
End Enum
Public Type LVCOLUMNW   ' was LV_COLUMN
  Mask As LVCOLUMN_mask
  fmt As LVCOLUMN_fmt
  CX As Long
  pszText As LongPtr  ' if String, must be pre-allocated
  cchTextMax As Long
  iSubItem As Long
'#If (WIN32_IE >= &H300) Then
  iImage As Long
  iOrder As Long
'#End If
'#if (WIN32_IE >= &H600)
  cxMin As Long
  cxDefault As Long
  cxIdeal As Long
'#End If
End Type

 
Public Enum LVCOLUMN_fmt
  LVCFMT_LEFT = &H0
  LVCFMT_RIGHT = &H1
  LVCFMT_CENTER = &H2
  LVCFMT_JUSTIFYMASK = &H3
'#If (WIN32_IE >= &H300) Then
  LVCFMT_IMAGE = &H800
  LVCFMT_BITMAP_ON_RIGHT = &H1000
  LVCFMT_COL_HAS_IMAGES = &H8000&
'#End If
'#If (WIN32_IE >= &H600) Then
  LVCFMT_FIXED_WIDTH = &H100
  LVCFMT_NO_DPI_SCALE = &H40000
  LVCFMT_FIXED_RATIO = &H80000
  LVCFMT_LINE_BREAK = &H100000
  LVCFMT_FILL = &H200000
  LVCFMT_WRAP = &H400000
  LVCFMT_NO_TITLE = &H800000
  LVCFMT_TILE_PLACEMENTMASK = (LVCFMT_LINE_BREAK Or LVCFMT_FILL)
  LVCFMT_SPLITBUTTON = &H1000000
'#End If
End Enum



Public Enum LVGROUPRECT
    LVGGR_GROUP = 0                      'Entire expanded group
    LVGGR_HEADER = 1                     'Header only (collapsed group)
    LVGGR_LABEL = 2                      'Label only
    LVGGR_SUBSETLINK = 3                 'subset link only
End Enum
Public Enum LVGROUPMETRICFLAGS
    LVGMF_NONE = 0
    LVGMF_BORDERSIZE = 1
    LVGMF_BORDERCOLOR = 2
    LVGMF_TEXTCOLOR = 4
End Enum
Public Enum LVGROUPMASK
     LVGF_NONE = 0
     LVGF_HEADER = &H1
     LVGF_FOOTER = &H2
     LVGF_STATE = &H4
     LVGF_ALIGN = &H8
     LVGF_GROUPID = &H10
    ' If SO >= WinVista Then
     LVGF_SUBTITLE = &H100
     LVGF_TASK = &H200
     LVGF_DESCRIPTIONTOP = &H400
     LVGF_DESCRIPTIONBOTTOM = &H800
     LVGF_TITLEIMAGE = &H1000
     LVGF_EXTENDEDIMAGE = &H2000
     LVGF_ITEMS = &H4000
     LVGF_SUBSET = &H8000&
     LVGF_SUBSETITEMS = &H10000               'readonly, cItems holds count of items in visible subset, iFirstItem is valid
End Enum

Public Enum LVGROUPSTATE
     LVGS_NORMAL = &H0
     LVGS_COLLAPSED = &H1
     LVGS_HIDDEN = &H2
    
    ' SO >= WinVista
     LVGS_NOHEADER = &H4
     LVGS_COLLAPSIBLE = &H8
     LVGS_FOCUSED = &H10
     LVGS_SELECTED = &H20
     LVGS_SUBSETED = &H40
     LVGS_SUBSETLINKFOCUSED = &H80
End Enum
Public Enum LVGROUPALIGN
     LVGA_HEADER_LEFT = &H1
     LVGA_HEADER_CENTER = &H2
     LVGA_HEADER_RIGHT = &H4             ' Don't forget to validate exclusivity
    ' SO >= WinVista
     LVGA_FOOTER_LEFT = &H8
     LVGA_FOOTER_CENTER = &H10
     LVGA_FOOTER_RIGHT = &H20             ' Don't forget to validate exclusivity
End Enum

Public Type LVGROUP
    cbSize                  As Long
    Mask                    As LVGROUPMASK
    pszHeader               As LongPtr
    cchHeader               As Long
    
    pszFooter               As LongPtr
    cchFooter               As Long
    
    iGroupId                As Long
    
    StateMask               As LVGROUPSTATE
    State                   As LVGROUPSTATE
    uAlign                  As LVGROUPALIGN
' SO >= WinVista
    pszSubtitle            As LongPtr
    cchSubtitle            As Long
    pszTask                As LongPtr
    cchTask                As Long
    pszDescriptionTop      As LongPtr
    cchDescriptionTop      As Long
    pszDescriptionBottom   As LongPtr
    cchDescriptionBottom   As Long
    iTitleImage            As Long
    iExtendedImage         As Long
    iFirstItem             As Long     ' Read only
    cItems                 As Long     ' Read only
    pszSubsetTitle         As LongPtr   ' NULL if group is not subset
    cchSubsetTitle         As Long
End Type
Public Type LVINSERTGROUPSORTED
    pfnGroupCompare As LongPtr
    pvData As LongPtr
    LVG As LVGROUP
End Type

Public Type LVGROUPMETRICS
    cbSize      As Long
    Mask        As LVGROUPMETRICFLAGS
    Left        As Long
    Top         As Long
    Right       As Long
    Bottom      As Long
    crLeft      As Long
    crTop       As Long
    crRigth     As Long
    crBottom    As Long
    crHeader    As Long
    crFooter    As Long
End Type

Public Enum LVTVI_Flags
    LVTVIF_AUTOSIZE = &H0
    LVTVIF_FIXEDWIDTH = &H1
    LVTVIF_FIXEDHEIGHT = &H2
    LVTVIF_FIXEDSIZE = &H3
    '6.0
    LVTVIF_EXTENDED = &H4
End Enum
Public Enum LVTVI_Mask
    LVTVIM_TILESIZE = &H1
    LVTVIM_COLUMNS = &H2
    LVTVIM_LABELMARGIN = &H4
End Enum

Public Type SIZELVT
    CX As Long
    CY As Long
End Type
Public Type LVTILEVIEWINFO
    cbSize As Long
    dwMask As LVTVI_Mask ';     //LVTVIM_*
    dwFlags As LVTVI_Flags ';    //LVTVIF_*
    SizeTile As SIZELVT ' ;
    cLines As Long
    RCLabelMargin As RECT
End Type

Public Type LVTILEINFO
    cbSize As Long
    iItem As Long
    cColumns As Long
    puColumns As LongPtr
'#if (_WIN32_WINNT >= 0x0600)
    piColFmt As LongPtr
'#End If
End Type

Public Const LVIM_AFTER = &H1
Public Type LVINSERTMARK
    cbSize As Long
    dwFlags As Long 'must be LVIM_AFTER
    iItem As Long
    dwReserved As Long 'must be 0
End Type

Public Type LVSETINFOTIP
    cbSize As Long
    dwFlags As Long
    pszText As LongPtr ' LPWSTR
    iItem As Long
    iSubItem As Long
End Type


End Module