'slInternet :: ShellLib Internet-related interfaces/defs
'
'
[ InterfaceId ("79eac9ed-baf9-11ce-8c82-00aa004ba90b") ]
[ OleAutomation(False) ]
Interface IInternetSecurityMgrSite Extends stdole.IUnknown
    Function GetWindow() As LongPtr
    Sub EnableModeless(ByVal fEnable As Long)
End Interface

[ InterfaceId ("79eac9ee-baf9-11ce-8c82-00aa004ba90b") ]
[ OleAutomation(False) ]
Interface IInternetSecurityManager Extends stdole.IUnknown
    Sub SetSecuritySite(ByVal pSite As IInternetSecurityMgrSite)
    Function GetSecuritySite() As IInternetSecurityMgrSite
    Sub MapUrlToZone(ByVal pszUrl As LongPtr, pdwZone As Long, ByVal dwFlags As Long)
    Sub GetSecurityId(ByVal pwszUrl As LongPtr, pbSecurityId As any, pcbSecurityId As Long, ByVal dwReserved As LongPtr)
    Sub ProcessUrlAction(ByVal pwszUrl As LongPtr, ByVal dwAction As URLACTIONS, pPolicy As any, ByVal cbPolicy As Long, pContext As any, ByVal cbContext As Long, ByVal dwFlags As PUAF, ByVal dwReserved As Long)
    Sub QueryCustomPolicy(ByVal pwszUrl As LongPtr, guidKey As UUID, ppPolicy As any, pcbPolicy As Long, pContext As any, ByVal cbContext As Long, ByVal dwReserved As Long)
    Sub SetZoneMapping(ByVal dwZone As URLZONE, ByVal lpszPattern As LongPtr, ByVal dwFlags As SZM_FLAGS)
    Sub GetZoneMappings(ByVal dwZone As URLZONE, ppenumString As IEnumString, ByVal dwFlags As Long)
End Interface

[ InterfaceId ("F164EDF1-CC7C-4F0D-9A94-34222625C393") ]
[ Description ("IInternetSecurityManagerEx Interface") ]
[ OleAutomation(False) ]
Interface IInternetSecurityManagerEx Extends IInternetSecurityManager
    Sub ProcessUrlActionEx(ByVal pwszUrl As String, ByVal dwAction As Long, ByVal pPolicy As LongPtr, ByVal cbPolicy As Long, ByRef pContext As Byte, ByVal cbContext As Long, ByVal dwFlags As Long, ByVal dwReserved As Long, ByRef pdwOutFlags As Long)
End Interface

[ InterfaceId ("F1E50292-A795-4117-8E09-2B560A72AC60") ]
[ Description ("IInternetSecurityManagerEx2 Interface") ]
[ OleAutomation(False) ]
Interface IInternetSecurityManagerEx2 Extends IInternetSecurityManagerEx
    Sub MapUrlToZoneEx2(ByVal pUri As IUri, ByRef pdwZone As Long, ByVal dwFlags As Long, ByRef ppwszMappedUrl As LongPtr, ByRef pdwOutFlags As Long)
    Sub ProcessUrlActionEx2(ByVal pUri As IUri, ByVal dwAction As Long, ByVal pPolicy As LongPtr, ByVal cbPolicy As Long, ByRef pContext As Byte, ByVal cbContext As Long, ByVal dwFlags As Long, ByVal dwReserved As Long, ByRef pdwOutFlags As Long)
    Sub GetSecurityIdEx2(ByVal pUri As IUri, ByVal pbSecurityId As LongPtr, ByRef pcbSecurityId As Long, ByVal dwReserved As LongPtr)
    Sub QueryCustomPolicyEx2(ByVal pUri As IUri, ByRef guidKey As UUID, ByVal ppPolicy As LongPtr, ByRef pcbPolicy As Long, ByRef pContext As Byte, ByVal cbContext As Long, ByVal dwReserved As Long)
End Interface

[ InterfaceId ("3AF280B6-CB3F-11D0-891E-00C04FB6BFC4") ]
[ OleAutomation(False) ]
Interface IInternetHostSecurityManager Extends stdole.IUnknown
    Sub GetSecurityId(ByRef pbSecurityId As Byte, ByRef pcbSecurityId As Long, Optional ByVal dwReserved As Long = 0)
    Sub ProcessUrlAction(ByVal dwAction As URLACTIONS, ByRef pPolicy As Byte, ByVal cbPolicy As Long, ByRef pContext As Byte, ByVal cbContext As Long, ByVal dwFlags As PUAF, Optional ByVal dwReserved As Long = 0)
    Sub QueryCustomPolicy(ByRef guidKey As UUID, ByRef ppPolicy As LongPtr, ByRef pcbPolicy As Long, ByRef pContext As Byte, ByVal cbContext As Long, Optional ByVal dwReserved As Long = 0)
End Interface

[ InterfaceId ("cd45f185-1b21-48e2-967b-ead743a8914e") ]
[ OleAutomation(False) ]
Interface IZoneIdentifier Extends stdole.IUnknown
    [ PreserveSig ] Function GetId(pdwZone As URLZONE) As Long
    [ PreserveSig ] Function SetId(ByVal dwZone As URLZONE) As Long
    [ PreserveSig ] Function Remove() As Long
End Interface
[ InterfaceId ("EB5E760C-09EF-45C0-B510-70830CE31E6A") ]
[ OleAutomation(False) ]
Interface IZoneIdentifier2 Extends IZoneIdentifier
    [ PreserveSig ] Function GetLastWriterPackageFamilyName(packageFamilyName As LongPtr) As Long
    [ PreserveSig ] Function SetLastWriterPackageFamilyName(ByVal packageFamilyName As LongPtr) As Long
    [ PreserveSig ] Function RemoveLastWriterPackageFamilyName() As Long
    [ PreserveSig ] Function GetAppZoneId(zone As URLZONE) As Long
    [ PreserveSig ] Function SetAppZoneId(ByVal zone As URLZONE) As Long
    [ PreserveSig ] Function RemoveAppZoneId() As Long
End Interface

[ InterfaceId ("79EAC9EF-BAF9-11CE-8C82-00AA004BA90B") ]
[ OleAutomation(False) ]
Interface IInternetZoneManager Extends stdole.IUnknown
    Sub GetZoneAttributes(ByVal dwZone As URLZONE, ByRef pZoneAttributes As ZONEATTRIBUTES)
    Sub SetZoneAttributes(ByVal dwZone As URLZONE, ByRef pZoneAttributes As ZONEATTRIBUTES)
    Sub GetZoneCustomPolicy(ByVal dwZone As URLZONE, ByRef guidKey As UUID, ByRef ppPolicy As Any, ByRef pcbPolicy As Long, ByVal URLZONEREG As URLZONEREG)
    Sub SetZoneCustomPolicy(ByVal dwZone As URLZONE, ByRef guidKey As UUID, ByRef pPolicy As Any, ByVal cbPolicy As Long, ByVal URLZONEREG As URLZONEREG)
    Sub GetZoneActionPolicy(ByVal dwZone As URLZONE, ByVal dwAction As URLACTIONS, ByRef pPolicy As Any, ByVal cbPolicy As Long, ByVal URLZONEREG As URLZONEREG)
    Sub SetZoneActionPolicy(ByVal dwZone As URLZONE, ByVal dwAction As URLACTIONS, ByRef pPolicy As Any, ByVal cbPolicy As Long, ByVal URLZONEREG As URLZONEREG)
    Sub PromptAction(ByVal dwAction As Long, ByVal hwndParent As LongPtr, ByVal pwszUrl As String, ByVal pwszText As String, Optional ByVal dwPromptFlags As Long = 0)
    Sub LogAction(ByVal dwAction As URLACTIONS, ByVal pwszUrl As String, ByVal pwszText As String, Optional ByVal dwLogFlags As Long = 0)
    Sub CreateZoneEnumerator(ByRef pdwEnumHandle As Long, ByRef pdwCount As Long, Optional ByVal dwFlags As Long = 0)
    Function GetZoneAt(ByVal dwEnumHandle As Long, ByVal dwIndex As Long) As URLZONE
    Sub DestroyZoneEnumerator(ByVal dwEnumHandle As Long)
    Sub CopyTemplatePoliciesToZone(ByVal dwTemplate As URLTEMPLATE, ByVal dwZone As URLZONE, Optional ByVal dwReserved As Long = 0)
End Interface

[ InterfaceId ("A4C23339-8E06-431E-9BF4-7E711C085648") ]
[ Description ("IInternetZoneManagerEx Interface") ]
[ OleAutomation(False) ]
Interface IInternetZoneManagerEx Extends IInternetZoneManager
    Sub GetZoneActionPolicyEx(ByVal dwZone As Long, ByVal dwAction As Long, ByRef pPolicy As LongPtr, ByVal cbPolicy As Long, ByVal URLZONEREG As URLZONEREG, ByVal dwFlags As Long)
    Sub SetZoneActionPolicyEx(ByVal dwZone As Long, ByVal dwAction As Long, ByVal pPolicy As LongPtr, ByVal cbPolicy As Long, ByVal URLZONEREG As URLZONEREG, ByVal dwFlags As Long)
End Interface

[ InterfaceId ("EDC17559-DD5D-4846-8EEF-8BECBA5A4ABF") ]
[ Description ("IInternetZoneManagerEx2 Interface") ]
[ OleAutomation(False) ]
Interface IInternetZoneManagerEx2 Extends IInternetZoneManagerEx
    Sub GetZoneAttributesEx(ByVal dwZone As Long, ByRef pZoneAttributes As ZONEATTRIBUTES, ByVal dwFlags As Long)
    Sub GetZoneSecurityState(ByVal dwZoneIndex As Long, ByVal fRespectPolicy As Long, ByRef pdwState As Long, ByVal pfPolicyEncountered As Long)
    Sub GetIESecurityState(ByVal fRespectPolicy As Long, ByRef pdwState As Long, ByVal pfPolicyEncountered As Long, ByVal fNoCache As Long)
    Sub FixUnsecureSettings()
End Interface


[ InterfaceId ("A39EE748-6A27-4817-A6F2-13914BEF5890") ]
[ OleAutomation(False) ]
Interface IUri Extends stdole.IUnknown
    [ Description ("pbstrProperty is set to a new BSTR representing the string property specified by uriProp if it exists. Caller must call SysFreeString to free the new BSTR on success.") ]
    /* voffset &H000C*/ Sub GetPropertyBSTR(ByVal uriProp As Uri_PROPERTY, ByRef pbstrProperty As String, ByVal dwFlags As Long)
    [ Description ("pcchProperty is set to the length of the string property, excluding the terminating NULL character. Call this function if you only need the property length. ") ]
    /* voffset &H0010*/ Sub GetPropertyLength(ByVal uriProp As Uri_PROPERTY, ByRef pcchProperty As Long, ByVal dwFlags As Long)
    [ Description ("pdwProperty is set to the DWORD value of the specified property ") ]
    /* voffset &H0014*/ Sub GetPropertyDWORD(ByVal uriProp As Uri_PROPERTY, ByRef pdwProperty As Long, ByVal dwFlags As Long)
    [ Description ("pfHasProperty is set TRUE if the specified property exists in the URI.") ]
    /* voffset &H0018*/ Sub HasProperty(ByVal uriProp As Uri_PROPERTY, ByVal pfHasProperty As Long)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H001C*/ Sub GetAbsoluteUri(ByRef pbstrAbsoluteUri As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0020*/ Sub GetAuthority(ByRef pbstrAuthority As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0024*/ Sub GetDisplayUri(ByRef pbstrDisplayString As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0028*/ Sub GetDomain(ByRef pbstrDomain As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H002C*/ Sub GetExtension(ByRef pbstrExtension As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0030*/ Sub GetFragment(ByRef pbstrFragment As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0034*/ Sub GetHost(ByRef pbstrHost As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0038*/ Sub GetPassword(ByRef pbstrPassword As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H003C*/ Sub GetPath(ByRef pbstrPath As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0040*/ Sub GetPathAndQuery(ByRef pbstrPathAndQuery As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0044*/ Sub GetQuery(ByRef pbstrQuery As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0048*/ Sub GetRawUri(ByRef pbstrRawUri As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H004C*/ Sub GetSchemeName(ByRef pbstrSchemeName As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0050*/ Sub GetUserInfo(ByRef pbstrUserInfo As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyBSTR with the respective property.") ]
    /* voffset &H0054*/ Sub GetUserName(ByRef pbstrUserName As String)
    [ Description ("This function is for convenience and is the same as calling GetPropertyDWORD with the respective property.") ]
    /* voffset &H0058*/ Sub GetHostType(ByRef pdwHostType As Long)
    [ Description ("This function is for convenience and is the same as calling GetPropertyDWORD with the respective property.") ]
    /* voffset &H005C*/ Sub GetPort(ByRef pdwPort As Long)
    [ Description ("This function is for convenience and is the same as calling GetPropertyDWORD with the respective property.") ]
    /* voffset &H0060*/ Sub GetScheme(ByRef pdwScheme As Long)
    [ Description ("This function is for convenience and is the same as calling GetPropertyDWORD with the respective property.") ]
    /* voffset &H0064*/ Sub GetZone(ByRef pdwZone As Long)
    [ Description ("This function sets pdwFlags to a bitmap using the values Uri_HAS_PROPERTY.") ]
    /* voffset &H0068*/ Sub GetProperties(ByRef pdwFlags As Long)
    [ Description ("pfEqual is set TRUE if the logical content of the URIs are the same") ]
    /* voffset &H006C*/ Sub IsEqual(ByVal pUri As IUri, ByVal pfEqual As Long)
End Interface


    [ InterfaceId ("79EAC9C0-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IBinding Extends stdole.IUnknown
        /* voffset &H0018*/ Sub Abort()
        /* voffset &H0020*/ Sub Suspend()
        /* voffset &H0028*/ Sub Resume()
        /* voffset &H0030*/ Sub SetPriority(ByVal nPriority As Long)
        /* voffset &H0038*/ Sub GetPriority(ByRef pnPriority As Long)
        /* voffset &H0040*/ Sub GetBindResult(ByRef pclsidProtocol As UUID, ByRef pdwResult As Long, ByRef pszResult As LongPtr, ByRef pdwReserved As Long)
    End Interface
    
[ InterfaceId ("79EAC9C1-BAF9-11CE-8C82-00AA004BA90B") ]
[ OleAutomation(False) ]
Interface IBindStatusCallback Extends stdole.IUnknown
    /* voffset &H0018*/ Sub OnStartBinding(ByVal dwReserved As Long, ByVal pib As IBinding)
    /* voffset &H0020*/ Function GetPriority() As Long
    /* voffset &H0028*/ Sub OnLowResource(ByVal reserved As Long)
    /* voffset &H0030*/ Sub OnProgress(ByVal ulProgress As Long, ByVal ulProgressMax As Long, ByVal ulStatusCode As BINDSTATUS, ByVal szStatusText As LongPtr)
    /* voffset &H0038*/ Sub OnStopBinding(ByVal hresult As Long, ByVal szError As LongPtr)
    /* voffset &H0040*/ Sub GetBindInfo(ByRef grfBINDF As BINDF, ByRef pbindinfo As BINDINFO)
    /* voffset &H0048*/ Sub OnDataAvailable(ByVal grfBSCF As BSCF, ByVal dwSize As Long, ByRef pformatetc As FORMATETC, ByRef pStgmed As STGMEDIUM)
    /* voffset &H0050*/ Sub OnObjectAvailable(ByRef riid As UUID, ByVal pUnk As stdole.IUnknown)
End Interface

    [ InterfaceId ("79EAC9D0-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IAuthenticate Extends stdole.IUnknown
        /* voffset &H000C*/ Sub Authenticate(ByRef phwnd As LongPtr, ByRef pszUsername As LongPtr, ByRef pszPassword As LongPtr)
    End Interface

    [ InterfaceId ("79EAC9EC-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetProtocolInfo Extends stdole.IUnknown
        /* voffset &H000C*/ Sub ParseUrl(ByVal pwzUrl As LongPtr, ByVal PARSEACTION As PARSEACTION, ByVal dwParseFlags As Long, ByVal pwzResult As LongPtr, ByVal cchResult As Long, ByRef pcchResult As Long, ByVal dwReserved As Long)
        /* voffset &H0010*/ Sub CombineUrl(ByVal pwzBaseUrl As LongPtr, ByVal pwzRelativeUrl As LongPtr, ByVal dwCombineFlags As Long, ByVal pwzResult As LongPtr, ByVal cchResult As Long, ByRef pcchResult As Long, ByVal dwReserved As Long)
        /* voffset &H0014*/ Sub CompareUrl(ByVal pwzUrl1 As LongPtr, ByVal pwzUrl2 As LongPtr, ByVal dwCompareFlags As Long)
        /* voffset &H0018*/ Sub QueryInfo(ByVal pwzUrl As LongPtr, ByVal OueryOption As QUERYOPTION, ByVal dwQueryFlags As Long, ByVal pBuffer As LongPtr, ByVal cbBuffer As Long, ByRef pcbBuf As Long, ByVal dwReserved As Long)
    End Interface

    [ InterfaceId ("79EAC9EB-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetPriority Extends stdole.IUnknown
        /* voffset &H000C*/ Sub SetPriority(ByVal nPriority As Long)
        /* voffset &H0010*/ Sub GetPriority(ByRef pnPriority As Long)
    End Interface
    
    [ InterfaceId ("79EAC9E7-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetSession Extends stdole.IUnknown
        /* voffset &H000C*/ Sub RegisterNameSpace(ByVal pCF As IClassFactory, ByRef rclsid As UUID, ByVal pwzProtocol As String, ByVal cPatterns As Long, ByRef ppwzPatterns As LongPtr, ByVal dwReserved As Long)
        /* voffset &H0010*/ Sub UnregisterNameSpace(ByVal pCF As IClassFactory, ByVal pszProtocol As LongPtr)
        /* voffset &H0014*/ Sub RegisterMimeFilter(ByVal pCF As IClassFactory, ByRef rclsid As UUID, ByVal pwzType As LongPtr)
        /* voffset &H0018*/ Sub UnregisterMimeFilter(ByVal pCF As IClassFactory, ByVal pwzType As LongPtr)
        /* voffset &H001C*/ Sub CreateBinding(ByVal pbc As IBindCtx, ByVal szURL As String, ByVal pUnkOuter As stdole.IUnknown, ByRef ppunk As stdole.IUnknown, ByRef ppOInetProt As IInternetProtocol, ByVal dwOption As Long)
        /* voffset &H0020*/ Sub SetSessionOption(ByVal dwOption As Long, ByRef pBuffer As Any, ByVal dwBufferLength As Long, Optional ByVal dwReserved As Long = 0)
        /* voffset &H0024*/ Sub GetSessionOption(ByVal dwOption As Long, ByRef pBuffer As Any, ByRef pdwBufferLength As Long, Optional ByVal dwReserved As Long = 0)
    End Interface

    [ InterfaceId ("79EAC9E3-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetProtocolRoot Extends stdole.IUnknown
        /* voffset &H000C*/ Sub Start(ByVal szURL As LongPtr, ByVal pOIProtSink As IInternetProtocolSink, ByVal pOIBindInfo As IInternetBindInfo, ByVal grfPI As PI_FLAGS, ByRef dwReserved As PROTOCOLFILTERDATA)
        /* voffset &H0010*/ Sub Continue(ByRef pProtocolData As PROTOCOLDATA)
        /* voffset &H0014*/ Sub Abort(ByVal hrReason As Long, ByVal dwOptions As Long)
        /* voffset &H0018*/ Sub Terminate(ByVal dwOptions As Long)
        /* voffset &H001C*/ Sub Suspend()
        /* voffset &H0020*/ Sub Resume()
    End Interface

    [ InterfaceId ("79EAC9E4-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetProtocol Extends stdole.IUnknown
        /* voffset &H000C*/ Sub Start(ByVal szURL As LongPtr, ByVal pOIProtSink As IInternetProtocolSink, ByVal pOIBindInfo As IInternetBindInfo, ByVal grfPI As PI_FLAGS, ByRef dwReserved As PROTOCOLFILTERDATA)
        /* voffset &H0010*/ Sub Continue(ByRef pProtocolData As PROTOCOLDATA)
        /* voffset &H0014*/ Sub Abort(ByVal hrReason As Long, ByVal dwOptions As Long)
        /* voffset &H0018*/ Sub Terminate(ByVal dwOptions As Long)
        /* voffset &H001C*/ Sub Suspend()
        /* voffset &H0020*/ Sub Resume()
        [ PreserveSig ]
        /* voffset &H0024*/ Function Read(ByVal pv As LongPtr, ByVal cb As Long, ByRef pcbRead As Long) As Long
        /* voffset &H0028*/ Sub Seek(ByVal dlibMove As LongLong, ByVal dwOrigin As Long, ByRef plibNewPosition As LongLong)
        /* voffset &H002C*/ Sub LockRequest(ByVal dwOptions As Long)
        /* voffset &H0030*/ Sub UnlockRequest()
    End Interface

    [ InterfaceId ("79EAC9E5-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetProtocolSink Extends stdole.IUnknown
        /* voffset &H000C*/ Sub Switch(ByRef pProtocolData As PROTOCOLDATA)
        /* voffset &H0010*/ Sub ReportProgress(ByVal ulStatusCode As BINDSTATUS, ByVal szStatusText As String)
        /* voffset &H0014*/ Sub ReportData(ByVal grfBSCF As BSCF, ByVal ulProgress As Long, ByVal ulProgressMax As Long)
        /* voffset &H0018*/ Sub ReportResult(ByVal hrResult As Long, ByVal dwError As Long, ByVal szResult As String)
    End Interface
    
    [ InterfaceId ("79EAC9E1-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IInternetBindInfo Extends stdole.IUnknown
        /* voffset &H000C*/ Sub GetBindInfo(ByRef grfBINDF As Long, ByRef pbindinfo As BINDINFO)
        /* voffset &H0010*/ Sub GetBindString(ByVal ulStringType As Long, ByRef ppwzStr As LongPtr, ByVal cEl As Long, ByRef pcElFetched As Long)
    End Interface

    [ InterfaceId ("79EAC9CD-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IBindProtocol Extends stdole.IUnknown
        /* voffset &H000C*/ Function CreateBinding(ByVal szURL As LongPtr, ByVal pbc As IBindCtx) As IBinding
    End Interface

    [ InterfaceId ("79EAC9D2-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHttpNegotiate Extends stdole.IUnknown
        /* voffset &H000C*/ Sub BeginningTransaction(ByVal szURL As LongPtr, ByVal szHeaders As LongPtr, ByVal dwReserved As Long, ByRef pszAdditionalHeaders As LongPtr)
        /* voffset &H0010*/ Sub OnResponse(ByVal dwResponseCode As Long, ByVal szResponseHeaders As LongPtr, ByVal szRequestHeaders As LongPtr, ByRef pszAdditionalRequestHeaders As LongPtr)
    End Interface

    [ InterfaceId ("79EAC9D5-BAFA-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IWindowForBindingUI Extends stdole.IUnknown
        /* voffset &H000C*/ Function GetWindow(ByRef rguidReason As UUID) As LongPtr
    End Interface

    [ InterfaceId ("79EAC9D6-BAFA-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IWinInetInfo Extends stdole.IUnknown
        [ PreserveSig ]
        /* voffset &H000C*/ Function QueryOption(ByVal dwOption As QUERYOPTION, ByRef pBuffer As Any, ByRef pcbBuf As Long) As Long
    End Interface

    [ InterfaceId ("79EAC9D8-BAFA-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IWinInetHttpInfo Extends IWinInetInfo
        [ PreserveSig ]
        /* voffset &H0010*/ Function QueryInfo(ByVal dwOption As HTTP_QUERY, ByRef pBuffer As Any, ByRef pcbBuf As Long, ByRef pdwFlags As Long, ByRef pdwReserved As Long) As Long
    End Interface

    [ InterfaceId ("FC4801A1-2BA9-11CF-A229-00AA003D7352") ]
    [ OleAutomation(False) ]
    Interface IBindHost Extends stdole.IUnknown
        /* voffset &H000C*/ Sub CreateMoniker(ByVal szName As LongPtr, ByVal pbc As IBindCtx, ByRef ppmk As IMoniker, ByVal dwReserved As Long)
        /* voffset &H0010*/ Sub MonikerBindToStorage(ByVal pmk As IMoniker, ByVal pbc As IBindCtx, ByVal pbsc As IBindStatusCallback, ByRef riid As UUID, ByRef ppvObj As LongPtr)
        /* voffset &H0014*/ Sub MonikerBindToObject(ByVal pmk As IMoniker, ByVal pbc As IBindCtx, ByVal pbsc As IBindStatusCallback, ByRef riid As UUID, ByRef ppvObj As LongPtr)
    End Interface

    [ InterfaceId ("4F9F9FCB-E0F4-48EB-B7AB-FA2EA9365CB4") ]
    [ OleAutomation(False) ]
    Interface IHttpNegotiate2 Extends stdole.IUnknown
        /* voffset &H000C*/ Sub BeginningTransaction(ByVal szURL As LongPtr, ByVal szHeaders As LongPtr, ByVal dwReserved As Long, ByRef pszAdditionalHeaders As LongPtr)
        /* voffset &H0010*/ Sub OnResponse(ByVal dwResponseCode As Long, ByVal szResponseHeaders As LongPtr, ByVal szRequestHeaders As LongPtr, ByRef pszAdditionalRequestHeaders As LongPtr)
        /* voffset &H0014*/ Sub GetRootSecurityId(ByRef pbSecurityId As Byte, ByRef pcbSecurityId As Long, ByVal dwReserved As LongPtr)
    End Interface

    [ InterfaceId ("79EAC9D7-BAFA-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHttpSecurity Extends stdole.IUnknown
        /* voffset &H000C*/ Sub GetWindow(ByRef rguidReason As UUID, ByRef phwnd As LongPtr)
        /* voffset &H0010*/ Sub OnSecurityProblem(ByVal dwProblem As Long)
    End Interface
        
    [ InterfaceId ("FBF23B80-E3F0-101B-8488-00AA003E56F8") ]
    [ Description ("IuniformResourceLocator - ANSI version") ]
    [ OleAutomation(False) ]
    Interface IUniformResourceLocatorA Extends stdole.IUnknown
        [ Description ("Sets an object's URL") ]
        /* voffset &H0018*/ Sub SetUrl(ByVal pcszURL As String, ByVal dwInFlags As IURL_SETURL_FLAGS)
        [ Description ("Gets an object's URL") ]
        /* voffset &H0020*/ Function GetUrl() As LongPtr
        [ Description ("Invokes a command on an object's URL.") ]
        /* voffset &H0028*/ Sub InvokeCommand(ByRef purlici As URLINVOKECOMMANDINFO)
    End Interface

    [ InterfaceId ("CABB0DA0-DA57-11CF-9974-0020AFD79762") ]
    [ Description ("IUniformResourceLocator - Unicode version") ]
    [ OleAutomation(False) ]
    Interface IUniformResourceLocatorW Extends stdole.IUnknown
        [ Description ("Sets an object's URL") ]
        /* voffset &H0018*/ Sub SetUrl(ByVal pcszURL As String, ByVal dwInFlags As IURL_SETURL_FLAGS)
        [ Description ("Gets an object's URL") ]
        /* voffset &H0020*/ Function GetUrl() As LongPtr
        [ Description ("Invokes a command on an object's URL.") ]
        /* voffset &H0028*/ Sub InvokeCommand(ByRef purlici As URLINVOKECOMMANDINFO)
    End Interface

    [ InterfaceId ("3C374A42-BAE4-11CF-BF7D-00AA006946EE") ]
    [ Description ("Enumerates the cached URLs") ]
    [ OleAutomation(False) ]
    Interface IEnumSTATURL Extends stdole.IUnknown
        [ PreserveSig ]
        [ Description ("Returns the next celt URLS from the cache") ]
        /* voffset &H000C*/ Function Next(ByVal celt As Long, ByRef rgelt As STATURL, Optional ByRef pceltFetched As Long = 0) As Long
        [ Description ("Skips the next celt URLS from the cache") ]
        /* voffset &H0010*/ Sub Skip(ByVal celt As Long)
        [ Description ("Resets the enumeration") ]
        /* voffset &H0014*/ Sub Reset()
        [ Description ("Clones this object") ]
        /* voffset &H0018*/ Function Clone() As IEnumSTATURL
        [ Description ("Sets the enumeration filter") ]
        /* voffset &H001C*/ Sub SetFilter(ByVal poszFilter As String, ByVal dwFlags As STATURL_QUERYFLAGS)
    End Interface

    [ InterfaceId ("3C374A41-BAE4-11CF-BF7D-00AA006946EE") ]
    [ OleAutomation(False) ]
    Interface IUrlHistoryStg Extends stdole.IUnknown
        [ Description ("Adds a new history entry") ]
        /* voffset &H000C*/ Sub AddURL(ByVal pocsUrl As String, ByVal pocsTitle As String, ByVal dwFlags As STATURLFLAGS)
        [ Description ("Deletes an entry by its URL") ]
        /* voffset &H0010*/ Sub DeleteUrl(ByVal pocsUrl As String, ByVal dwFlags As Long)
        [ Description ("Returns a STATURL for a given URL") ]
        /* voffset &H0014*/ Sub QueryUrl(ByVal pocsUrl As String, ByVal dwFlags As Long, ByRef lpSTATURL As STATURL)
        [ Description ("Binds to an object") ]
        /* voffset &H0018*/ Sub BindToObject(ByVal pocsUrl As String, ByRef riid As UUID, ByRef ppvOut As Any)
        [ Description ("Returns an enumerator for URLs") ]
        /* voffset &H001C*/ Function EnumUrls() As IEnumSTATURL
    End Interface

    [ InterfaceId ("AFA0DC11-C313-11D0-831A-00C04FD5AE38") ]
    [ OleAutomation(False) ]
    Interface IUrlHistoryStg2 Extends IUrlHistoryStg
        [ Description ("Adds an URLS IOleCommandTarget *poctNotify IShellFolder *punkISFolder") ]
        /* voffset &H0020*/ Sub AddUrlAndNotify(ByVal pocsUrl As String, ByVal pocsTitle As String, ByVal dwFlags As Long, ByVal fWriteHistory As Long, ByVal poctNotify As stdole.IUnknown, ByVal punkISFolder As stdole.IUnknown)
        [ Description ("Removes all history items") ]
        /* voffset &H0024*/ Sub ClearHistory()
    End Interface
    
    [ InterfaceId ("AC60F6A0-0FD9-11D0-99CB-00C04FD64497") ]
    [ OleAutomation(False) ]
    Interface IURLSearchHook Extends stdole.IUnknown
        /* voffset &H000C*/ Sub Translate(ByVal lpwszSearchURL As LongPtr, ByVal cchBufferSize As Long)
    End Interface

    [ InterfaceId ("09F656A2-41AF-480C-88F7-16CC0D164615") ]
    [ OleAutomation(False) ]
    Interface ISearchContext Extends stdole.IUnknown
        /* voffset &H000C*/ Sub GetSearchUrl(ByRef pbstrSearchUrl As String)
        /* voffset &H0010*/ Sub GetSearchText(ByRef pbstrSearchText As String)
        /* voffset &H0014*/ Sub GetSearchStyle(ByRef pdwSearchStyle As Long)
    End Interface

    [ InterfaceId ("5EE44DA4-6D32-46E3-86BC-07540DEDD0E0") ]
    [ OleAutomation(False) ]
    Interface IURLSearchHook2 Extends stdole.IUnknown
        /* voffset &H000C*/ Sub Translate(ByVal lpwszSearchURL As LongPtr, ByVal cchBufferSize As Long)
        /* voffset &H0010*/ Sub TranslateWithSearchContext(ByVal lpwszSearchURL As LongPtr, ByVal cchBufferSize As Long, ByVal pSearchContext As ISearchContext)
    End Interface
    
    [ InterfaceId ("79EAC9C3-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHlink Extends stdole.IUnknown
        /* voffset &H0018*/ Sub SetHlinkSite(ByVal pihlSite As IHlinkSite, ByVal dwSiteData As Long)
        /* voffset &H0020*/ Sub GetHlinkSite(ByRef ppihlSite As IHlinkSite, ByRef pdwSiteData As Long)
        /* voffset &H0028*/ Sub SetMonikerReference(ByVal grfHLSETF As HLINKSETF, ByVal pimkTarget As IMoniker, ByVal pwzLocation As String)
        /* voffset &H0030*/ Sub GetMonikerReference(ByVal dwWhichRef As HLINKGETREF, ByRef ppimkTarget As IMoniker, ByRef ppwzLocation As LongPtr)
        /* voffset &H0038*/ Sub SetStringReference(ByVal grfHLSETF As HLINKSETF, ByVal pwzTarget As String, ByVal pwzLocation As String)
        /* voffset &H0040*/ Sub GetStringReference(ByVal dwWhichRef As HLINKGETREF, ByRef ppwzTarget As LongPtr, ByRef ppwzLocation As LongPtr)
        /* voffset &H0048*/ Sub SetFriendlyName(ByVal pwzFriendlyName As String)
        /* voffset &H0050*/ Function GetFriendlyName(ByVal grfHLFNAMEF As HLFNAMEF) As LongPtr
        /* voffset &H0058*/ Sub SetTargetFrameName(ByVal pwzTargetFrameName As String)
        /* voffset &H0060*/ Function GetTargetFrameName() As LongPtr
        /* voffset &H0068*/ Function GetMiscStatus() As HLINKMISC
        /* voffset &H0070*/ Sub Navigate(ByVal grfHLNF As HLNF, ByVal pibc As IBindCtx, ByVal pibsc As IBindStatusCallback, ByVal pihlbc As IHlinkBrowseContext)
        /* voffset &H0078*/ Sub SetAdditionalParams(ByVal pwzAdditionalParams As String)
        /* voffset &H0080*/ Function GetAdditionalParams() As LongPtr
    End Interface

    [ InterfaceId ("79EAC9C2-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHlinkSite Extends stdole.IUnknown
        /* voffset &H0018*/ Sub QueryService(ByVal dwSiteData As Long, ByRef guidService As UUID, ByRef riid As UUID, ByRef ppiunk As Any)
        /* voffset &H0020*/ Function GetMoniker(ByVal dwSiteData As Long, ByVal dwAssign As OLEGETMONIKER, ByVal dwWhich As OLEWHICHMK) As IMoniker
        /* voffset &H0028*/ Sub ReadyToNavigate(ByVal dwSiteData As Long, ByVal dwReserved As Long)
        /* voffset &H0030*/ Sub OnNavigationComplete(ByVal dwSiteData As Long, ByVal dwReserved As Long, ByVal hrError As Long, ByVal pwzError As LongPtr)
    End Interface

    [ InterfaceId ("79EAC9C4-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHlinkTarget Extends stdole.IUnknown
        /* voffset &H0018*/ Sub SetBrowseContext(ByVal pihlbc As IHlinkBrowseContext)
        /* voffset &H0020*/ Function GetBrowseContext() As IHlinkBrowseContext
        /* voffset &H0028*/ Sub Navigate(ByVal grfHLNF As HLNF, ByVal pwzJumpLocation As String)
        /* voffset &H0030*/ Function GetMoniker(ByVal pwzLocation As String, ByVal dwAssign As OLEGETMONIKER) As IMoniker
        /* voffset &H0038*/ Function GetFriendlyName(ByVal pwzLocation As String) As LongPtr
    End Interface

    [ InterfaceId ("79EAC9C5-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHlinkFrame Extends stdole.IUnknown
        /* voffset &H0018*/ Sub SetBrowseContext(ByVal pihlbc As IHlinkBrowseContext)
        /* voffset &H0020*/ Function GetBrowseContext() As IHlinkBrowseContext
        /* voffset &H0028*/ Sub Navigate(ByVal grfHLNF As HLNF, ByVal pbc As IBindCtx, ByVal pibsc As IBindStatusCallback, ByVal pihlNavigate As IHlink)
        /* voffset &H0030*/ Sub OnNavigate(ByVal grfHLNF As HLNF, ByVal pimkTarget As IMoniker, ByVal pwzLocation As String, ByVal pwzFriendlyName As String, ByVal dwReserved As Long)
        /* voffset &H0038*/ Sub UpdateHlink(ByVal uHLID As Long, ByVal pimkTarget As IMoniker, ByVal pwzLocation As String, ByVal pwzFriendlyName As String)
    End Interface

    [ InterfaceId ("79EAC9C6-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IEnumHLITEM Extends stdole.IUnknown
        [ PreserveSig ]
        /* voffset &H0018*/ Function Next(ByVal celt As Long, ByRef rgelt As HLITEM, ByRef pceltFetched As Long) As Long
        /* voffset &H0020*/ Sub Skip(ByVal celt As Long)
        /* voffset &H0028*/ Sub Reset()
        /* voffset &H0030*/ Function Clone() As IEnumHLITEM
    End Interface
    
    [ InterfaceId ("79EAC9C7-BAF9-11CE-8C82-00AA004BA90B") ]
    [ OleAutomation(False) ]
    Interface IHlinkBrowseContext Extends stdole.IUnknown
        /* voffset &H0018*/ Sub Register(ByVal reserved As Long, ByVal piunk As stdole.IUnknown, ByVal pimk As IMoniker, ByRef pdwRegister As Long)
        /* voffset &H0020*/ Sub GetObject(ByVal pimk As IMoniker, ByVal fBindIfRootRegistered As Long, ByRef ppiunk As stdole.IUnknown)
        /* voffset &H0028*/ Sub Revoke(ByVal dwRegister As Long)
        /* voffset &H0030*/ Sub SetBrowseWindowInfo(ByRef phlbwi As HLBWINFO)
        /* voffset &H0038*/ Sub GetBrowseWindowInfo(ByRef phlbwi As HLBWINFO)
        /* voffset &H0040*/ Sub SetInitialHlink(ByVal pimkTarget As IMoniker, ByVal pwzLocation As LongPtr, ByVal pwzFriendlyName As LongPtr)
        /* voffset &H0048*/ Function OnNavigateHlink(ByVal grfHLNF As HLNF, ByVal pimkTarget As IMoniker, ByVal pwzLocation As LongPtr, ByVal pwzFriendlyName As LongPtr) As HLID
        /* voffset &H0050*/ Sub UpdateHlink(ByVal uHLID As HLID, ByVal pimkTarget As IMoniker, ByVal pwzLocation As LongPtr, ByVal pwzFriendlyName As LongPtr)
        /* voffset &H0058*/ Sub EnumNavigationStack(ByVal dwReserved As Long, ByVal grfHLFNAMEF As HLFNAMEF, ByRef ppienumhlitem As IEnumHLITEM)
        /* voffset &H0060*/ Sub QueryHlink(ByVal grfHLQF As HLQF, ByVal uHLID As HLID)
        /* voffset &H0068*/ Sub GetHlink(ByVal uHLID As HLID, ByRef ppihl As IHlink)
        /* voffset &H0070*/ Sub SetCurrentHlink(ByVal uHLID As HLID)
        /* voffset &H0078*/ Sub Clone(ByVal piunkOuter As stdole.IUnknown, ByRef riid As UUID, ByRef ppiunkObj As Long)
        /* voffset &H0080*/ Sub Close(ByVal reserved As Long)
    End Interface
    
        
'CLSID_InternetZoneManager 
[ CoClassId ("7b8a2d95-0ac9-11d1-896c-00c04Fb6bfc4") ]
CoClass InternetZoneManager 
	 [ Default ] Interface IInternetZoneManager
End CoClass

'CLSID_InternetSecurityManager 
[ CoClassId ("7b8a2d94-0ac9-11d1-896c-00c04fb6bfc4") ]
CoClass InternetSecurityManager 
	 [ Default ] Interface IInternetSecurityManager 
End CoClass

'CLSID_PersistentZoneIdentifier 
[ CoClassId ("0968E258-16C7-4DBA-AA86-462DD61E31A3") ]
CoClass PersistentZoneIdentifier
	 [ Default ] Interface IZoneIdentifier
End CoClass

'CLSID_UrlHistory 
[ CoClassId ("3C374A40-BAE4-11CF-BF7D-00AA006946EE") ]
CoClass UrlHistory 
	 [ Default ] Interface IUrlHistoryStg2
End CoClass
            
Module slInternet

Public Enum STATURL_QUERYFLAGS
        STATURL_QUERYFLAG_ISCACHED = 65536                   ' &H00010000&
        STATURL_QUERYFLAG_NOURL = 131072                     ' &H00020000&
        STATURL_QUERYFLAG_NOTITLE = 262144                   ' &H00040000&
        STATURL_QUERYFLAG_TOPLEVEL = 524288                  ' &H00080000&
    End Enum

Public Enum STATURLFLAGS
        STATURLFLAG_ISCACHED = 1                             ' &H00000001&
        STATURLFLAG_ISTOPLEVEL = 2                           ' &H00000002&
    End Enum

Public Type STATURL
        cbSize As Long                                       ' offset &H0000
        pwcsUrl As LongPtr                                      ' offset &H0004
        pwcsTitle As LongPtr                                    ' offset &H0008
        ftLastVisited As FILETIME                            ' offset &H000C
        ftLastUpdated As FILETIME                            ' offset &H0014
        ftExpires As FILETIME                                ' offset &H001C
        dwFlags As STATURLFLAGS                       ' offset &H0024
    End Type
    
    
Public Enum IURL_SETURL_FLAGS
	IURL_SETURL_FL_GUESS_PROTOCOL = &H0001
	IURL_SETURL_FL_USE_DEFAULT_PROTOCOL = &H0002
End Enum

Public Enum IURL_INVOKECOMMAND_FLAGS
	IURL_INVOKECOMMAND_FL_ALLOW_UI = &H0001
	IURL_INVOKECOMMAND_FL_USE_DEFAULT_VERB = &H0002
	IURL_INVOKECOMMAND_FL_DDEWAIT = &H0004
End Enum

Public Type URLINVOKECOMMANDINFO
	dwcbSize As LONG
	dwFlags As IURL_INVOKECOMMAND_FLAGS
	hwndParent As LONGPtr
	pcszVerb As LONGPtr
End Type

Public Enum URLZONE
    URLZONE_INVALID = -1
    URLZONE_PREDEFINED_MIN = 0
    URLZONE_LOCAL_MACHINE = 0
    URLZONE_INTRANET
    URLZONE_TRUSTED
    URLZONE_INTERNET
    URLZONE_UNTRUSTED
    URLZONE_PREDEFINED_MAX = 999
    URLZONE_USER_MIN = 1000
    URLZONE_USER_MAX = 10000
End Enum

Public Enum URLACTIONS
	URLACTION_DOWNLOAD_MIN = &H00001000
	URLACTION_DOWNLOAD_SIGNED_ACTIVEX = &H00001001
	URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX = &H00001004
	URLACTION_DOWNLOAD_CURR_MAX = &H00001004
	URLACTION_DOWNLOAD_MAX = &H000011FF
	URLACTION_ACTIVEX_MIN = &H00001200
	URLACTION_ACTIVEX_RUN = &H00001200
	URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY = &H00001201
	URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY = &H00001202
	URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY = &H00001203
	URLACTION_SCRIPT_OVERRIDE_SAFETY = &H00001401
	URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY = &H00001204
	URLACTION_ACTIVEX_TREATASUNTRUSTED = &H00001205
	URLACTION_ACTIVEX_NO_WEBOC_SCRIPT = &H00001206
	URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION = &H00001207
	URLACTION_ACTIVEX_OVERRIDE_OPTIN = &H00001208
	URLACTION_ACTIVEX_SCRIPTLET_RUN = &H00001209
	URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION = &H0000120A
	URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST = &H0000120B
	URLACTION_ACTIVEX_CURR_MAX = &H0000120B
	URLACTION_ACTIVEX_MAX = &H000013ff
	URLACTION_SCRIPT_MIN = &H00001400
	URLACTION_SCRIPT_RUN = &H00001400
	URLACTION_SCRIPT_JAVA_USE = &H00001402
	URLACTION_SCRIPT_SAFE_ACTIVEX = &H00001405
	URLACTION_CROSS_DOMAIN_DATA = &H00001406
	URLACTION_SCRIPT_PASTE = &H00001407
	URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE = &H00001408
	URLACTION_SCRIPT_XSSFILTER = &H00001409
	URLACTION_SCRIPT_NAVIGATE = &H0000140A
	URLACTION_PLUGGABLE_PROTOCOL_XHR = &H0000140B
	URLACTION_SCRIPT_CURR_MAX = &H0000140B
	URLACTION_SCRIPT_MAX = &H000015ff
	URLACTION_HTML_MIN = &H00001600
	URLACTION_HTML_SUBMIT_FORMS = &H00001601
	URLACTION_HTML_SUBMIT_FORMS_FROM = &H00001602
	URLACTION_HTML_SUBMIT_FORMS_TO = &H00001603
	URLACTION_HTML_FONT_DOWNLOAD = &H00001604
	URLACTION_HTML_JAVA_RUN = &H00001605
	URLACTION_HTML_USERDATA_SAVE = &H00001606
	URLACTION_HTML_SUBFRAME_NAVIGATE = &H00001607
	URLACTION_HTML_META_REFRESH = &H00001608
	URLACTION_HTML_MIXED_CONTENT = &H00001609
	URLACTION_HTML_INCLUDE_FILE_PATH = &H0000160A
	URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML = &H0000160B
	URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE = &H0000160C
	URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS = &H0000160D
	URLACTION_HTML_ALLOW_WINDOW_CLOSE = &H0000160E
	URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER = &H0000160F
	URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK = &H00001610
	URLACTION_HTML_ALLOW_INDEXEDDB = &H00001611
	URLACTION_HTML_MAX = &H000017ff
	URLACTION_SHELL_MIN = &H00001800
	URLACTION_SHELL_INSTALL_DTITEMS = &H00001800
	URLACTION_SHELL_MOVE_OR_COPY = &H00001802
	URLACTION_SHELL_FILE_DOWNLOAD = &H00001803
	URLACTION_SHELL_VERB = &H00001804
	URLACTION_SHELL_WEBVIEW_VERB = &H00001805
	URLACTION_SHELL_SHELLEXECUTE = &H00001806
	URLACTION_SHELL_EXECUTE_HIGHRISK = &H00001806
	URLACTION_SHELL_EXECUTE_MODRISK = &H00001807
	URLACTION_SHELL_EXECUTE_LOWRISK = &H00001808
	URLACTION_SHELL_POPUPMGR = &H00001809
	URLACTION_SHELL_RTF_OBJECTS_LOAD = &H0000180A
	URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY = &H0000180B
	URLACTION_SHELL_EXTENSIONSECURITY = &H0000180C
	URLACTION_SHELL_SECURE_DRAGSOURCE = &H0000180D
	URLACTION_SHELL_REMOTEQUERY = &H0000180E
	URLACTION_SHELL_PREVIEW = &H0000180F
	URLACTION_SHELL_SHARE = &H00001810
	URLACTION_SHELL_ALLOW_CROSS_SITE_SHARE = &H00001811
	URLACTION_SHELL_TOCTOU_RISK = &H00001812
	URLACTION_SHELL_CURR_MAX = &H00001812
	URLACTION_SHELL_MAX = &H000019ff
	URLACTION_NETWORK_MIN = &H00001A00
	URLACTION_CREDENTIALS_USE = &H00001A00
	URLACTION_AUTHENTICATE_CLIENT = &H00001A01
	URLACTION_COOKIES = &H00001A02
	URLACTION_COOKIES_SESSION = &H00001A03
	URLACTION_CLIENT_CERT_PROMPT = &H00001A04
	URLACTION_COOKIES_THIRD_PARTY = &H00001A05
	URLACTION_COOKIES_SESSION_THIRD_PARTY = &H00001A06
	URLACTION_COOKIES_ENABLED = &H00001A10
	URLACTION_NETWORK_CURR_MAX = &H00001A04
	URLACTION_NETWORK_MAX = &H00001Bff
	URLACTION_JAVA_MIN = &H00001C00
	URLACTION_JAVA_PERMISSIONS = &H00001C00
	URLACTION_JAVA_CURR_MAX = &H00001C00
	URLACTION_JAVA_MAX = &H00001Cff
	URLACTION_INFODELIVERY_MIN = &H00001D00
	URLACTION_INFODELIVERY_NO_ADDING_CHANNELS = &H00001D00
	URLACTION_INFODELIVERY_NO_EDITING_CHANNELS = &H00001D01
	URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS = &H00001D02
	URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS = &H00001D03
	URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS = &H00001D04
	URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS = &H00001D05
	URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING = &H00001D06
	URLACTION_INFODELIVERY_CURR_MAX = &H00001D06
	URLACTION_INFODELIVERY_MAX = &H00001Dff
	URLACTION_CHANNEL_SOFTDIST_MIN = &H00001E00
	URLACTION_CHANNEL_SOFTDIST_PERMISSIONS = &H00001E05
	URLACTION_CHANNEL_SOFTDIST_MAX = &H00001Eff
	URLACTION_DOTNET_USERCONTROLS = &H00002005
	URLACTION_BEHAVIOR_MIN = &H00002000
	URLACTION_BEHAVIOR_RUN = &H00002000
	URLPOLICY_BEHAVIOR_CHECK_LIST = &H00010000
	URLACTION_FEATURE_MIN = &H00002100
	URLACTION_FEATURE_MIME_SNIFFING = &H00002100
	URLACTION_FEATURE_ZONE_ELEVATION = &H00002101
	URLACTION_FEATURE_WINDOW_RESTRICTIONS = &H00002102
	URLACTION_FEATURE_SCRIPT_STATUS_BAR = &H00002103
	URLACTION_FEATURE_FORCE_ADDR_AND_STATUS = &H00002104
	URLACTION_FEATURE_BLOCK_INPUT_PROMPTS = &H00002105
	URLACTION_FEATURE_DATA_BINDING = &H00002106
	URLACTION_FEATURE_CROSSDOMAIN_FOCUS_CHANGE = &H00002107
	URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN = &H00002200
	URLACTION_AUTOMATIC_DOWNLOAD_UI = &H00002200
	URLACTION_AUTOMATIC_ACTIVEX_UI = &H00002201
	URLACTION_ALLOW_RESTRICTEDPROTOCOLS = &H00002300
	URLACTION_ALLOW_APEVALUATION = &H00002301
	URLACTION_ALLOW_XHR_EVALUATION = &H00002302
	URLACTION_WINDOWS_BROWSER_APPLICATIONS = &H00002400
	URLACTION_XPS_DOCUMENTS = &H00002401
	URLACTION_LOOSE_XAML = &H00002402
	URLACTION_LOWRIGHTS = &H00002500
	URLACTION_WINFX_SETUP = &H00002600
	URLACTION_INPRIVATE_BLOCKING = &H00002700
	URLACTION_ALLOW_AUDIO_VIDEO = &H00002701
	URLACTION_ALLOW_ACTIVEX_FILTERING = &H00002702
	URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING = &H00002703
	URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS = &H00002704
	URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT = &H00002705
	URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION = &H00002706
	URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW = &H00002708
	URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS = &H00002709
	URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST = &H0000270A
	URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS = &H0000270B
	URLACTION_ALLOW_ANTIMALWARE_SCANNING_OF_ACTIVEX = &H0000270C
	URLACTION_ALLOW_CSS_EXPRESSIONS = &H0000270D
End Enum

Public Enum URLPOLICIES
	URLPOLICY_ACTIVEX_CHECK_LIST = &H00010000
	URLPOLICY_CREDENTIALS_SILENT_LOGON_OK = &H00000000
	URLPOLICY_CREDENTIALS_MUST_PROMPT_USER = &H00010000
	URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT = &H00020000
	URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY = &H00030000
	URLPOLICY_AUTHENTICATE_CLEARTEXT_OK = &H00000000
	URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE = &H00010000
	URLPOLICY_AUTHENTICATE_MUTUAL_ONLY = &H00030000
	URLPOLICY_JAVA_PROHIBIT = &H00000000
	URLPOLICY_JAVA_HIGH = &H00010000
	URLPOLICY_JAVA_MEDIUM = &H00020000
	URLPOLICY_JAVA_LOW = &H00030000
	URLPOLICY_JAVA_CUSTOM = &H00800000
	URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT = &H00010000
	URLPOLICY_CHANNEL_SOFTDIST_PRECACHE = &H00020000
	URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL = &H00030000
	URLPOLICY_ALLOW = &H00
	URLPOLICY_QUERY = &H01
	URLPOLICY_DISALLOW = &H03
	URLPOLICY_NOTIFY_ON_ALLOW = &H10
	URLPOLICY_NOTIFY_ON_DISALLOW = &H20
	URLPOLICY_LOG_ON_ALLOW = &H40
	URLPOLICY_LOG_ON_DISALLOW = &H80
	URLPOLICY_MASK_PERMISSIONS = &H0f
	URLPOLICY_DONTCHECKDLGBOX = &H100
End Enum

Public Enum MUTZ_FLAGS
	MUTZ_NOSAVEDFILECHECK = &H00000001 ' don't check file: for saved file comment")
	MUTZ_ISFILE = &H00000002 ' Assume URL if File, url does not need file://")
	MUTZ_ACCEPT_WILDCARD_SCHEME = &H00000080 ' Accept a wildcard scheme")
	MUTZ_ENFORCERESTRICTED = &H00000100 ' enforce restricted zone independent of URL")
	MUTZ_RESERVED = &H00000200 ' This is same as PUAF_NOSAVEDFILECHECK. However we already have MUTZ_NOSAVEDFILECHECK for this.")
	MUTZ_REQUIRESAVEDFILECHECK = &H00000400 ' always check the file for MOTW (overriding FEATURE_UNC_SAVEDFILECHECK)")
	MUTZ_DONT_UNESCAPE = &H00000800 ' Do not unescape the url")
	MUTZ_DONT_USE_CACHE = &H00001000 ' Do not check the cache")
	MUTZ_FORCE_INTRANET_FLAGS = &H00002000 ' Force the intranet flags to be active")
	MUTZ_IGNORE_ZONE_MAPPINGS = &H00004000 ' Don't look up the Zone Mappings
End Enum

Public Enum PUAF
	PUAF_DEFAULT = &H00000000
	PUAF_NOUI = &H00000001
	PUAF_ISFILE = &H00000002 ' Assume URL if File, url does not need file://
	PUAF_WARN_IF_DENIED = &H00000004
	PUAF_FORCEUI_FOREGROUND = &H00000008
	PUAF_CHECK_TIFS = &H00000010
	PUAF_DONTCHECKBOXINDIALOG = &H00000020
	PUAF_TRUSTED = &H00000040
	PUAF_ACCEPT_WILDCARD_SCHEME = &H00000080
	PUAF_ENFORCERESTRICTED = &H00000100
	PUAF_NOSAVEDFILECHECK = &H00000200
	PUAF_REQUIRESAVEDFILECHECK = &H00000400
	PUAF_DONT_USE_CACHE = &H00001000
	PUAF_RESERVED1 = &H00002000
	PUAF_RESERVED2 = &H00004000
	PUAF_LMZ_UNLOCKED = &H00010000
	PUAF_LMZ_LOCKED = &H00020000
	PUAF_DEFAULTZONEPOL = &H00040000
	PUAF_NPL_USE_LOCKED_IF_RESTRICTED = &H00080000
	PUAF_NOUIIFLOCKED = &H00100000
	PUAF_DRAGPROTOCOLCHECK = &H00200000
End Enum

Public Enum SZM_FLAGS
	SZM_CREATE = &H00000000 ' create new mapping, error's if mapping already exists.
	SZM_DELETE = &H00000001 ' delete the mapping
End Enum

Public Enum URLTEMPLATE
    URLTEMPLATE_CUSTOM = 0                               ' &H00000000&
    URLTEMPLATE_PREDEFINED_MIN = 65536                   ' &H00010000&
    URLTEMPLATE_LOW = 65536                              ' &H00010000&
    URLTEMPLATE_MEDLOW = 66816                           ' &H00010500&
    URLTEMPLATE_MEDIUM = 69632                           ' &H00011000&
    URLTEMPLATE_MEDHIGH = 70912                          ' &H00011500&
    URLTEMPLATE_HIGH = 73728                             ' &H00012000&
    URLTEMPLATE_PREDEFINED_MAX = 131072                  ' &H00020000&
End Enum

Public Enum ZAFLAGS
    ZAFLAGS_CUSTOM_EDIT = 1                              ' &H00000001&
    ZAFLAGS_ADD_SITES = 2                                ' &H00000002&
    ZAFLAGS_REQUIRE_VERIFICATION = 4                     ' &H00000004&
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8                   ' &H00000008&
    ZAFLAGS_INCLUDE_INTRANET_SITES = 16                  ' &H00000010&
    ZAFLAGS_NO_UI = 32                                   ' &H00000020&
    ZAFLAGS_SUPPORTS_VERIFICATION = 64                   ' &H00000040&
    ZAFLAGS_UNC_AS_INTRANET = 128                        ' &H00000080&
    ZAFLAGS_DETECT_INTRANET = 256                        ' &H00000100&
    ZAFLAGS_USE_LOCKED_ZONES = 65536                     ' &H00010000&
    ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 131072            ' &H00020000&
    ZAFLAGS_NO_CACHE = 262144                            ' &H00040000&
End Enum

Public Type ZONEATTRIBUTES
	cbSize As Long
	szDisplayName(0 To 519) As Byte
	szDescription(0 To 399) As Byte
	szIconPath(0 To 519) As Byte
	dwTemplateMinLevel As URLTEMPLATE
	dwTemplateRecommended As URLTEMPLATE
	dwTemplateCurrentLevel As URLTEMPLATE
	dwFlags As ZAFLAGS
End Type

Public Enum URLZONEREG
	URLZONEREG_DEFAULT = 0
	URLZONEREG_HKLM
	URLZONEREG_HKCU
End Enum

Public Enum Uri_PROPERTY
	Uri_PROPERTY_ABSOLUTE_URI = 0
	Uri_PROPERTY_STRING_START = 0 ' Uri_PROPERTY_ABSOLUTE_URI,
	Uri_PROPERTY_AUTHORITY = 1
	Uri_PROPERTY_DISPLAY_URI = 2
	Uri_PROPERTY_DOMAIN = 3
	Uri_PROPERTY_EXTENSION = 4
	Uri_PROPERTY_FRAGMENT = 5
	Uri_PROPERTY_HOST = 6
	Uri_PROPERTY_PASSWORD = 7
	Uri_PROPERTY_PATH = 8
	Uri_PROPERTY_PATH_AND_QUERY = 9
	Uri_PROPERTY_QUERY = 10
	Uri_PROPERTY_RAW_URI = 11
	Uri_PROPERTY_SCHEME_NAME = 12
	Uri_PROPERTY_USER_INFO = 13
	Uri_PROPERTY_USER_NAME = 14
	Uri_PROPERTY_STRING_LAST = 14 'Uri_PROPERTY_USER_NAME,
	Uri_PROPERTY_HOST_TYPE = 15
	Uri_PROPERTY_DWORD_START = 15 'Uri_PROPERTY_HOST_TYPE,
	Uri_PROPERTY_PORT = 16
	Uri_PROPERTY_SCHEME = 17
	Uri_PROPERTY_ZONE = 18
	Uri_PROPERTY_DWORD_LAST = 18 'Uri_PROPERTY_ZONE,
End Enum

Public Enum Uri_HOST_TYPE
	Uri_HOST_UNKNOWN = 0
	Uri_HOST_DNS = 1
	Uri_HOST_IPV4 = 2
	Uri_HOST_IPV6 = 3
	Uri_HOST_IDN = 4
End Enum

Public Type PROTOCOLFILTERDATA
	cbSize As LONG
	pProtocolSink As IInternetProtocolSink ' out parameter
	pProtocol As IInternetProtocol ' in parameter
	pUnk As IUnknown
	dwFilterFlags As LONG
End Type

Public Enum OIBDG_FLAGS
	'  default is free threaded
	OIBDG_APARTMENTTHREADED = &H00000100
	OIBDG_DATAONLY = &H00001000
End Enum


Public Enum PI_FLAGS
	PI_PARSE_URL = &H00000001
	PI_FILTER_MODE = &H00000002
	PI_FORCE_ASYNC = &H00000004
	PI_USE_WORKERTHREAD = &H00000008
	PI_MIMEVERIFICATION = &H00000010
	PI_CLSIDLOOKUP = &H00000020
	PI_DATAPROGRESS = &H00000040
	PI_SYNCHRONOUS = &H00000080
	PI_APARTMENTTHREADED = &H00000100
	PI_CLASSINSTALL = &H00000200
	PI_PASSONBINDCTX = &H00002000
	PI_NOMIMEHANDLER = &H00008000&
	PI_LOADAPPDIRECT = &H00004000
	PD_FORCE_SWITCH = &H00010000
	PI_PREFERDEFAULTHANDLER = &H00020000
End Enum

Public Type PROTOCOLDATA
	grfFlags As LONG
	dwState As LONG
	pData As LongPtr
	cbData As LONG
End Type

Public Type StartParam
	iid As UUID
	pIBindCtx As IBindCtx
	pItf As stdole.IUnknown
End Type

Public Enum BINDSTRING
	BINDSTRING_HEADERS = 1
	BINDSTRING_ACCEPT_MIMES = 2
	BINDSTRING_EXTRA_URL = 3
	BINDSTRING_LANGUAGE = 4
	BINDSTRING_USERNAME = 5
	BINDSTRING_PASSWORD = 6
	BINDSTRING_UA_PIXELS = 7
	BINDSTRING_UA_COLOR = 8
	BINDSTRING_OS = 9
	BINDSTRING_USER_AGENT = 10
	BINDSTRING_ACCEPT_ENCODINGS = 11
	BINDSTRING_POST_COOKIE = 12
	BINDSTRING_POST_DATA_MIME = 13
	BINDSTRING_URL = 14
	BINDSTRING_IID = 15
	BINDSTRING_FLAG_BIND_TO_OBJECT = 16
	BINDSTRING_PTR_BIND_CONTEXT = 17
	BINDSTRING_XDR_ORIGIN = 18
	BINDSTRING_DOWNLOADPATH = 19
	BINDSTRING_ROOTDOC_URL = 20
End Enum

Public Enum HTTP_QUERY
	HTTP_QUERY_MIME_VERSION = 0
	HTTP_QUERY_CONTENT_TYPE = 1
	HTTP_QUERY_CONTENT_TRANSFER_ENCODING = 2
	HTTP_QUERY_CONTENT_ID = 3
	HTTP_QUERY_CONTENT_DESCRIPTION = 4
	HTTP_QUERY_CONTENT_LENGTH = 5
	HTTP_QUERY_CONTENT_LANGUAGE = 6
	HTTP_QUERY_ALLOW = 7
	HTTP_QUERY_PUBLIC = 8
	HTTP_QUERY_DATE = 9
	HTTP_QUERY_EXPIRES = 10
	HTTP_QUERY_LAST_MODIFIED = 11
	HTTP_QUERY_MESSAGE_ID = 12
	HTTP_QUERY_URI = 13
	HTTP_QUERY_DERIVED_FROM = 14
	HTTP_QUERY_COST = 15
	HTTP_QUERY_LINK = 16
	HTTP_QUERY_PRAGMA = 17
	HTTP_QUERY_VERSION = 18
	HTTP_QUERY_STATUS_CODE = 19
	HTTP_QUERY_STATUS_TEXT = 20
	HTTP_QUERY_RAW_HEADERS = 21
	HTTP_QUERY_RAW_HEADERS_CRLF = 22
	HTTP_QUERY_CONNECTION = 23
	HTTP_QUERY_ACCEPT = 24
	HTTP_QUERY_ACCEPT_CHARSET = 25
	HTTP_QUERY_ACCEPT_ENCODING = 26
	HTTP_QUERY_ACCEPT_LANGUAGE = 27
	HTTP_QUERY_AUTHORIZATION = 28
	HTTP_QUERY_CONTENT_ENCODING = 29
	HTTP_QUERY_FORWARDED = 30
	HTTP_QUERY_FROM = 31
	HTTP_QUERY_IF_MODIFIED_SINCE = 32
	HTTP_QUERY_LOCATION = 33
	HTTP_QUERY_ORIG_URI = 34
	HTTP_QUERY_REFERER = 35
	HTTP_QUERY_RETRY_AFTER = 36
	HTTP_QUERY_SERVER = 37
	HTTP_QUERY_TITLE = 38
	HTTP_QUERY_USER_AGENT = 39
	HTTP_QUERY_WWW_AUTHENTICATE = 40
	HTTP_QUERY_PROXY_AUTHENTICATE = 41
	HTTP_QUERY_ACCEPT_RANGES = 42
	HTTP_QUERY_SET_COOKIE = 43
	HTTP_QUERY_COOKIE = 44
	HTTP_QUERY_REQUEST_METHOD = 45
	HTTP_QUERY_REFRESH = 46
	HTTP_QUERY_CONTENT_DISPOSITION = 47
	HTTP_QUERY_AGE = 48
	HTTP_QUERY_CACHE_CONTROL = 49
	HTTP_QUERY_CONTENT_BASE = 50
	HTTP_QUERY_CONTENT_LOCATION = 51
	HTTP_QUERY_CONTENT_MD5 = 52
	HTTP_QUERY_CONTENT_RANGE = 53
	HTTP_QUERY_ETAG = 54
	HTTP_QUERY_HOST = 55
	HTTP_QUERY_IF_MATCH = 56
	HTTP_QUERY_IF_NONE_MATCH = 57
	HTTP_QUERY_IF_RANGE = 58
	HTTP_QUERY_IF_UNMODIFIED_SINCE = 59
	HTTP_QUERY_MAX_FORWARDS = 60
	HTTP_QUERY_PROXY_AUTHORIZATION = 61
	HTTP_QUERY_RANGE = 62
	HTTP_QUERY_TRANSFER_ENCODING = 63
	HTTP_QUERY_UPGRADE = 64
	HTTP_QUERY_VARY = 65
	HTTP_QUERY_VIA = 66
	HTTP_QUERY_WARNING = 67
	HTTP_QUERY_EXPECT = 68
	HTTP_QUERY_PROXY_CONNECTION = 69
	HTTP_QUERY_UNLESS_MODIFIED_SINCE = 70
	HTTP_QUERY_ECHO_REQUEST = 71
	HTTP_QUERY_ECHO_REPLY = 72
	HTTP_QUERY_ECHO_HEADERS = 73
	HTTP_QUERY_ECHO_HEADERS_CRLF = 74
	HTTP_QUERY_PROXY_SUPPORT = 75
	HTTP_QUERY_AUTHENTICATION_INFO = 76
	HTTP_QUERY_PASSPORT_URLS = 77
	HTTP_QUERY_PASSPORT_CONFIG = 78
	HTTP_QUERY_X_CONTENT_TYPE_OPTIONS = 79
	HTTP_QUERY_P3P = 80
	HTTP_QUERY_X_P2P_PEERDIST = 81
	HTTP_QUERY_TRANSLATE = 82
	HTTP_QUERY_X_UA_COMPATIBLE = 83
	HTTP_QUERY_DEFAULT_STYLE = 84
	HTTP_QUERY_X_FRAME_OPTIONS = 85
	HTTP_QUERY_X_XSS_PROTECTION = 86
	HTTP_QUERY_SET_COOKIE2 = 87
	HTTP_QUERY_DO_NOT_TRACK = 88
	HTTP_QUERY_KEEP_ALIVE = 89
	HTTP_QUERY_HTTP2_SETTINGS = 90
	HTTP_QUERY_STRICT_TRANSPORT_SECURITY = 91
	HTTP_QUERY_TOKEN_BINDING = 92
	HTTP_QUERY_INCLUDE_REFERER_TOKEN_BINDING_ID = 93
	HTTP_QUERY_MAX = 93
	HTTP_QUERY_CUSTOM = 65535
	HTTP_QUERY_FLAG_REQUEST_HEADERS = &H80000000
	HTTP_QUERY_FLAG_SYSTEMTIME = &H40000000
	HTTP_QUERY_FLAG_NUMBER = &H20000000
	HTTP_QUERY_FLAG_COALESCE = &H10000000
End Enum

Public Enum PARSEACTION
        PARSE_CANONICALIZE = 1                               ' &H00000001&
        PARSE_FRIENDLY = 2                                   ' &H00000002&
        PARSE_SECURITY_URL = 3                               ' &H00000003&
        PARSE_ROOTDOCUMENT = 4                               ' &H00000004&
        PARSE_DOCUMENT = 5                                   ' &H00000005&
        PARSE_ANCHOR = 6                                     ' &H00000006&
        PARSE_ENCODE = 7                                     ' &H00000007&
        PARSE_DECODE = 8                                     ' &H00000008&
        PARSE_PATH_FROM_URL = 9                              ' &H00000009&
        PARSE_URL_FROM_PATH = 10                             ' &H0000000A&
        PARSE_MIME = 11                                      ' &H0000000B&
        PARSE_SERVER = 12                                    ' &H0000000C&
        PARSE_SCHEMA = 13                                    ' &H0000000D&
        PARSE_SITE = 14                                      ' &H0000000E&
        PARSE_DOMAIN = 15                                    ' &H0000000F&
        PARSE_LOCATION = 16                                  ' &H00000010&
        PARSE_SECURITY_DOMAIN = 17                           ' &H00000011&
        PARSE_ESCAPE = 18                                    ' &H00000012&
        PARSE_UNESCAPE = 19                                  ' &H00000013&
    End Enum

Public Enum QUERYOPTION
        QUERY_EXPIRATION_DATE = 1                            ' &H00000001&
        QUERY_TIME_OF_LAST_CHANGE = 2                        ' &H00000002&
        QUERY_CONTENT_ENCODING = 3                           ' &H00000003&
        QUERY_CONTENT_TYPE = 4                               ' &H00000004&
        QUERY_REFRESH = 5                                    ' &H00000005&
        QUERY_RECOMBINE = 6                                  ' &H00000006&
        QUERY_CAN_NAVIGATE = 7                               ' &H00000007&
        QUERY_USES_NETWORK = 8                               ' &H00000008&
        QUERY_IS_CACHED = 9                                  ' &H00000009&
        QUERY_IS_INSTALLEDENTRY = 10                         ' &H0000000A&
        QUERY_IS_CACHED_OR_MAPPED = 11                       ' &H0000000B&
        QUERY_USES_CACHE = 12                                ' &H0000000C&
        QUERY_IS_SECURE = 13                                 ' &H0000000D&
        QUERY_IS_SAFE = 14                                   ' &H0000000E&
    End Enum
    
    
Public Const FMFD_DEFAULT = &H00000000
Public Const FMFD_URLASFILENAME = &H00000001
Public Const URLMON_OPTION_USERAGENT = &H10000001
Public Const URLMON_OPTION_USERAGENT_REFRESH = &H10000002
Public Const URLMON_OPTION_URL_ENCODING = &H10000004


Public Const sCLSID_InternetZoneManager = "new: {7b8a2d95-0ac9-11d1-896c-00c04Fb6bfc4}"
Public Const sCLSID_InternetSecurityManager = "new: {7b8a2d94-0ac9-11d1-896c-00c04fb6bfc4}"
Public Const sCLSID_PersistentZoneIdentifier = "new: {0968E258-16C7-4DBA-AA86-462DD61E31A3}"
Public Const sCLSID_UrlHistory = "new: {3C374A40-BAE4-11CF-BF7D-00AA006946EE}"

Public Type CSPLATFORM
    dwPlatformId As Long                                 ' offset &H0000
    dwVersionHi As Long                                  ' offset &H0004
    dwVersionLo As Long                                  ' offset &H0008
    dwProcessorArch As Long                              ' offset &H000C
End Type                                                 ' LenB() = &H0010, Len() = &H0010, UDT Alignment = &H0004

Public Type QUERYCONTEXT
    dwContext As Long                                    ' offset &H0000
    Platform As CSPLATFORM                        ' offset &H0004
    Locale As Long                                       ' offset &H0014
    dwVersionHi As Long                                  ' offset &H0018
    dwVersionLo As Long                                  ' offset &H001C
End Type                                                 ' LenB() = &H0020, Len() = &H0020, UDT Alignment = &H0004

Public Enum TYSPEC
    TYSPEC_CLSID = 0                                     ' &H00000000&
    TYSPEC_FILEEXT = 1                                   ' &H00000001&
    TYSPEC_MIMETYPE = 2                                  ' &H00000002&
    TYSPEC_FILENAME = 3                                  ' &H00000003&
    TYSPEC_PROGID = 4                                    ' &H00000004&
    TYSPEC_PACKAGENAME = 5                               ' &H00000005&
    TYSPEC_OBJECTID = 6                                  ' &H00000006&
End Enum

Public Type uCLSSPEC
    TYSPEC As TYSPEC                              ' offset &H0000
    data(0 To 31) As Byte                                ' offset &H0004
End Type                                                 ' LenB() = &H0024, Len() = &H0024, UDT Alignment = &H0004

Public Enum FIEF
    FIEF_FLAG_FORCE_JITUI = 1                            ' &H00000001&
    FIEF_FLAG_PEEK = 2                                   ' &H00000002&
    FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK = 4           ' &H00000004&
End Enum

Public Enum PSUACTION
        PSU_DEFAULT = 1                                      ' &H00000001&
        PSU_SECURITY_URL_ONLY = 2                            ' &H00000002&
    End Enum
    
Public Enum HLSR
	HLSR_HOME=0
	HLSR_SEARCHPAGE=1
	HLSR_HISTORYFOLDER=2
End Enum

Public Enum HLSHORTCUTF
	HLSHORTCUTF_DEFAULT = &H00000000
	HLSHORTCUTF_DONTACTUALLYCREATE = &H00000001
	HLSHORTCUTF_USEFILENAMEFROMFRIENDLYNAME = &H00000002
	HLSHORTCUTF_USEUNIQUEFILENAME = &H00000004
	HLSHORTCUTF_MAYUSEEXISTINGSHORTCUT = &H00000008
End Enum

Public Enum HLTRANSLATEF
	HLTRANSLATEF_DEFAULT = &H00000000
	HLTRANSLATEF_DONTAPPLYDEFAULTPREFIX = &H00000001
End Enum

Public Enum HLNF
	HLNF_INTERNALJUMP = &H00000001
	HLNF_OPENINNEWWINDOW = &H00000002
	HLNF_NAVIGATINGBACK = &H00000004
	HLNF_NAVIGATINGFORWARD = &H00000008
	HLNF_NAVIGATINGTOSTACKITEM = &H00000010
	HLNF_CREATENOHISTORY = &H00000020
End Enum

Public Enum HLINKGETREF
	HLINKGETREF_DEFAULT=0
	HLINKGETREF_ABSOLUTE=1
	HLINKGETREF_RELATIVE=2
End Enum

Public Enum HLFNAMEF
	HLFNAMEF_DEFAULT = &H00000000
	HLFNAMEF_TRYCACHE = &H00000001
	HLFNAMEF_TRYPRETTYTARGET = &H00000002
	HLFNAMEF_TRYFULLTARGET = &H00000004
	HLFNAMEF_TRYWIN95SHORTCUT = &H00000008
End Enum

Public Enum HLINKMISC
	HLINKMISC_RELATIVE = &H00000001
End Enum

Public Enum HLINKSETF
	HLINKSETF_TARGET = &H00000001
	HLINKSETF_LOCATION = &H00000002
End Enum

Public Enum HLINKWHICHMK
	HLINKWHICHMK_CONTAINER=1
	HLINKWHICHMK_BASE= 2
End Enum

Public Type HLITEM
	uHLID As LONG
	pwzFriendlyName As LongPtr
End Type

Public Enum HLTB
	HLTB_DOCKEDLEFT=0
	HLTB_DOCKEDTOP=1
	HLTB_DOCKEDRIGHT=2
	HLTB_DOCKEDBOTTOM=3
	HLTB_FLOATING=4
End Enum

Public Type HLTBINFO
	uDockType As HLTB
	rcTbPos As RECT
End Type

Public Enum HLBWIF
	HLBWIF_HASFRAMEWNDINFO = &H00000001
	HLBWIF_HASDOCWNDINFO = &H00000002
	HLBWIF_FRAMEWNDMAXIMIZED = &H00000004
	HLBWIF_DOCWNDMAXIMIZED = &H00000008
	HLBWIF_HASWEBTOOLBARINFO = &H00000010
	HLBWIF_WEBTOOLBARHIDDEN = &H00000020
End Enum

Public Type HLBWINFO
	cbSize As LONG
	grfHLBWIF As HLBWIF
	rcFramePos As RECT
	rcDocPos As RECT
	hltbinfo As HLTBINFO
End Type

Public Enum HLID
	HLID_INVALID = &H0
	HLID_PREVIOUS = &HFFFFFFFF
	HLID_NEXT = &HFFFFFFFE
	HLID_CURRENT = &HFFFFFFFD
	HLID_STACKBOTTOM = &HFFFFFFFC
	HLID_STACKTOP = &HFFFFFFFB
End Enum

Public Enum HLQF
	HLQF_ISVALID = &H00000001
	HLQF_ISCURRENT = &H00000002
End Enum




Public DeclareWide PtrSafe Function CreateURLMoniker Lib "URLMON.DLL" (ByVal pMkCtx As IMoniker, ByVal szURL As String, ppmk As IMoniker) as Long
Public DeclareWide PtrSafe Function CreateURLMonikerEx Lib "URLMON.DLL" (ByVal pMkCtx As IMoniker, ByVal szURL As String, ByRef ppmk As IMoniker, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function GetClassURL Lib "URLMON.DLL" (ByVal szURL As String, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function  CreateAsyncBindCtx Lib "URLMON.DLL" (ByVal reserved As Long, ByVal pBSCb As IBindStatusCallback, ByVal pEFetc As IEnumFormatETC, ppbc As IBindCtx) as long
Public Declare PtrSafe Function CreateAsyncBindCtxEx Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal dwOptions As Long, ByVal pBSCb As IBindStatusCallback, ByVal pEnum As IEnumFormatETC, ByRef ppBC As IBindCtx, ByVal reserved As Long) as Long
Public DeclareWide PtrSafe Function MkParseDisplayNameEx Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal szDisplayName As String,   pchEaten As Long, ppmk As IMoniker) As Long
Public Declare PtrSafe Function  RegisterBindStatusCallback Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal pBSCb As IBindStatusCallback, ByRef ppBSCBPrev As IBindStatusCallback, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function  RevokeBindStatusCallback Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal pBSCb As IBindStatusCallback) as Long
Public DeclareWide PtrSafe Function  GetClassFileOrMime Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal szFileName As String, ByRef pBuffer As Any, ByVal cbSize As Long, ByVal szMime As String, ByVal dwReserved As Long, ByRef pclsid As UUID) As Long
Public DeclareWide PtrSafe Function IsValidURL Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal szURL As String, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function  CoGetClassObjectFromURL Lib "URLMON.DLL" (ByRef rCLASSID As UUID, ByVal szCODE As String, ByVal dwFileVersionMS As Long, ByVal dwFileVersionLS As Long, ByVal szTYPE As String, ByVal pBindCtx As IBindCtx, ByVal dwClsContext As Long, ByRef pvReserved As Any, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function FaultInIEFeature Lib "URLMON.DLL" (ByVal hwnd As LongPtr, ByRef pClassSpec As uCLSSPEC, ByRef pQuery As QUERYCONTEXT, ByVal dwFlags As FIEF) As Long
Public Declare PtrSafe Function GetComponentIDFromCLSSPEC Lib "URLMON.DLL" (ByRef pClassSpec As uCLSSPEC) As Long
Public Declare PtrSafe Function IsAsyncMoniker Lib "URLMON.DLL" (ByVal pmk As IMoniker) as Long
Public DeclareWide PtrSafe Function CreateURLBinding Lib "URLMON.DLL" (ByVal lpszUrl As String, ByVal pbc As IBindCtx, ppBdg As IBinding) As Long
Public Declare PtrSafe Function RegisterMediaTypes Lib "URLMON.DLL" (ByVal ctypes As Long, ByVal rgszTypes As String, ByRef rgcfTypes As Integer) As Long
Public Declare PtrSafe Function FindMediaType Lib "URLMON.DLL" (ByVal rgszTypes As String, rgcfTypes As Integer) As Long
Public Declare PtrSafe Function CreateFormatEnumerator Lib "URLMON.DLL" (ByVal cfmtetc As Long, ByRef rgfmtetc As FORMATETC, ppenumfmtetc As IEnumFormatETC) As Long
Public Declare PtrSafe Function RegisterFormatEnumerator Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal pEFetc As IEnumFormatETC, ByVal reserved As Long) as Long
Public Declare PtrSafe Function RevokeFormatEnumerator Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal pEFetc As IEnumFormatETC) As Long
Public Declare PtrSafe Function RegisterMediaTypeClass Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal ctypes As Long, ByVal rgszTypes As String, ByRef rgclsID As UUID, ByVal reserved As Long) as Long
Public Declare PtrSafe Function FindMediaTypeClass Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal szTYPE As String, ByRef pclsid As UUID, ByVal reserved As Long) as Long
Public Declare PtrSafe Function UrlMkSetSessionOption Lib "URLMON.DLL" (ByVal dwOption As Long, ByRef pBuffer As Any, ByVal dwBufferLength As Long, ByVal dwReserved As Long) as Long
Public Declare PtrSafe Function UrlMkGetSessionOption Lib "URLMON.DLL" (ByVal dwOption As Long, ByRef pBuffer As Any, ByVal dwBufferLength As Long, ByRef pdwBufferLength As Long, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function FindMimeFromData Lib "URLMON.DLL" (ByVal pbc As IBindCtx, ByVal pwzUrl As String, ByRef pBuffer As Any, ByVal cbSize As Long, ByVal pwzMimeProposed As String, ByVal dwMimeFlags As Long, ByRef ppwzMimeOut As LongPtr, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function ObtainUserAgentString Lib "URLMON.DLL" (ByVal dwOption As Long, ByVal pszUAOut As String, ByRef cbSize As Long) As Long
Public DeclareWide PtrSafe Function HlinkSimpleNavigateToString Lib "URLMON.DLL" (ByVal szTarget As String, ByVal szLocation As String, ByVal szTargetFrameName As String, ByVal pUnk As stdole.IUnknown, ByVal pbc As IBindCtx, ByVal pbsc As IBindStatusCallback, ByVal grfHLNF As Long, ByVal dwReserved As Long) as Long
Public DeclareWide PtrSafe Function HlinkSimpleNavigateToMoniker Lib "URLMON.DLL" (ByVal pmkTarget As IMoniker, ByVal szLocation As String, ByVal szTargetFrameName As String, ByVal pUnk As stdole.IUnknown, ByVal pbc As IBindCtx, ByVal pbsc As IBindStatusCallback, ByVal grfHLNF As Long, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function URLOpenStream Lib "URLMON.DLL" Alias "URLOpenStreamA" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByVal dw As Long, ByVal pCallback As IBindStatusCallback) As Long
Public DeclareWide PtrSafe Function URLOpenStreamW Lib "URLMON.DLL" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByVal dw As Long, ByVal pCallback As IBindStatusCallback) As Long
Public Declare PtrSafe Function URLOpenPullStream Lib "URLMON.DLL" Alias "URLOpenPullStreamA" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByVal dwReserved As Long, ByVal pCallback As IBindStatusCallback) As Long
Public DeclareWide PtrSafe Function URLOpenPullStreamW Lib "URLMON.DLL" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByVal dwReserved As Long, ByVal pCallback As IBindStatusCallback) As Long
Public Declare PtrSafe Function URLDownloadToCacheFile Lib "URLMON.DLL" Alias "URLDownloadToCacheFileA" (ByVal lpUnkcaller As stdole.IUnknown, ByVal szURL As String, ByVal szFileName As String, ByVal dwBufLength As Long, ByVal dwReserved As Long, ByVal pbsc As IBindStatusCallback) As Long
Public DeclareWide PtrSafe Function URLDownloadToCacheFileW Lib "URLMON.DLL" (ByVal lpUnkcaller As stdole.IUnknown, ByVal szURL As String, ByVal szFileName As Long, ByVal dwBufLength As Long, ByVal dwReserved As Long, ByVal pbsc As IBindStatusCallback) As Long
Public Declare PtrSafe Function URLOpenBlockingStream Lib "URLMON.DLL" Alias "URLOpenBlockingStreamA" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByRef Strm As IStream, ByVal dwReserved As Long, ByVal lpfnCB As IBindStatusCallback) As Long
Public DeclareWide PtrSafe Function URLOpenBlockingStreamW Lib "URLMON.DLL" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByRef Strm As IStream, ByVal dwReserved As Long, ByVal lpfnCB As IBindStatusCallback) As Long
Public Declare PtrSafe Function URLDownloadToFile Lib "URLMON.DLL" Alias "URLDownloadToFileA" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByVal szFile As String, ByVal dwReserved As Long, ByVal lpfnCB As IBindStatusCallback) As Long
Public DeclareWide PtrSafe Function URLDownloadToFileW Lib "URLMON.DLL" (ByVal pCaller As stdole.IUnknown, ByVal szURL As String, ByVal szFile As String, ByVal dwReserved As Long, ByVal lpfnCB As IBindStatusCallback) As Long
Public Declare PtrSafe Function HlinkGoBack Lib "URLMON.DLL" (ByVal pUnk As stdole.IUnknown) As Long
Public Declare PtrSafe Function HlinkGoForward Lib "URLMON.DLL" (ByVal pUnk As stdole.IUnknown) as Long
Public DeclareWide PtrSafe Function HlinkNavigateString Lib "URLMON.DLL" (ByVal pUnk As stdole.IUnknown, ByVal szTarget As String) as Long
Public DeclareWide PtrSafe Function HlinkNavigateMoniker Lib "URLMON.DLL" (ByVal pUnk As stdole.IUnknown, ByVal pmkTarget As IMoniker) as Long
Public DeclareWide PtrSafe Function CoInternetParseUrl Lib "URLMON.DLL" (ByVal pwzUrl As String, ByVal PARSEACTION As PARSEACTION, ByVal dwFlags As Long, ByVal pszResult As String, ByVal cchResult As Long, ByRef pcchResult As Long, ByVal dwReserved As Long) as Long
Public DeclareWide PtrSafe Function CoInternetCombineUrl Lib "URLMON.DLL" (ByVal pwzBaseUrl As String, ByVal pwzRelativeUrl As String, ByVal dwCombineFlags As Long, ByVal pszResult As String, ByVal cchResult As Long, ByRef pcchResult As Long, ByVal dwReserved As Long) as Long
Public DeclareWide PtrSafe Function CoInternetCompareUrl Lib "URLMON.DLL" (ByVal pwzUrl1 As String, ByVal pwzUrl2 As String, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function CoInternetGetProtocolFlags Lib "URLMON.DLL" (ByVal pwzUrl As String, ByRef pdwFlags As Long, ByVal dwReserved As Long) as Long
Public DeclareWide PtrSafe Function CoInternetQueryInfo Lib "URLMON.DLL" (ByVal pwzUrl As String, ByVal QueryOptions As QUERYOPTION, ByVal dwQueryFlags As Long, ByRef pvBuffer As Any, ByVal cbBuffer As Long, ByRef pcbBuffer As Long, ByVal dwReserved As Long) as Long
Public DeclareWide PtrSafe Function CoInternetGetSession Lib "URLMON.DLL" (ByVal dwSessionMode As Long, ByRef ppIInternetSession As IInternetSession, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function CoInternetGetSecurityUrl Lib "URLMON.DLL" (ByVal pwzUrl As String, ByRef ppwzSecUrl As Long, ByVal PSUACTION As PSUACTION, ByVal dwReserved As Long) as Long
Public DeclareWide PtrSafe Function CopyStgMedium Lib "URLMON.DLL" (ByRef pcstgmedSrc As STGMEDIUM, ByRef pstgmedDest As STGMEDIUM) as Long
Public DeclareWide PtrSafe Function CopyBindInfo Lib "URLMON.DLL" (ByRef pcbiSrc As BINDINFO, ByRef pbiDest As BINDINFO) as Long
Public Declare PtrSafe Sub ReleaseBindInfo Lib "URLMON.DLL" (ByRef pbindinfo As BINDINFO)
Public DeclareWide PtrSafe Function CoInternetCreateSecurityManager Lib "URLMON.DLL" (ByVal pSP As IServiceProvider, ByRef ppSM As IInternetSecurityManager, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function CoInternetCreateZoneManager Lib "URLMON.DLL" (ByVal pSP As IServiceProvider, ByRef ppZM As IInternetZoneManager, ByVal dwReserved As Long) As Long


Public DeclareWide PtrSafe Function HlinkCreateFromMoniker Lib "HLINK.DLL" (ByVal pimkTrgt As IMoniker, ByVal pwzLocation As String, ByVal pwzFriendlyName As String, ByVal pihlSite As IHlinkSite, ByVal dwSiteData As Long, ByVal piunkOuter As IUnknown, ByRef riid As UUID, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function HlinkCreateFromString Lib "HLINK.DLL" (ByVal pwzTarget As String, ByVal pwzLocation As String, ByVal pwzFriendlyName As String, ByVal pihlSite As IHlinkSite, ByVal dwSiteData As Long, ByVal piunkOuter As IUnknown, ByRef riid As UUID, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function HlinkCreateFromData Lib "HLINK.DLL" (ByVal piDataObj As IDataObject, ByVal pihlSite As IHlinkSite, ByVal dwSiteData As Long, ByVal piunkOuter As IUnknown, ByRef riid As UUID, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function HlinkQueryCreateFromData Lib "HLINK.DLL" (ByVal piDataObj As IDataObject) As Long
Public Declare PtrSafe Function HlinkClone Lib "HLINK.DLL" (ByVal pihl As IHlink, ByRef riid As UUID, ByVal pihlsiteForClone As IHlinkSite, ByVal dwSiteData As Long, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function HlinkCreateBrowseContext Lib "HLINK.DLL" (ByVal piunkOuter As IUnknown, ByRef riid As UUID, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function HlinkNavigateToStringReference Lib "HLINK.DLL" (ByVal pwzTarget As String, ByVal pwzLocation As String, ByVal pihlSite As IHlinkSite, ByVal dwSiteData As Long, ByVal pihlframe As IHlinkFrame, ByVal grfHLNF As HLNF, ByVal pibc As IBindCtx, ByVal pibsc As IBindStatusCallback, ByVal pihlbc As IHlinkBrowseContext) As Long
Public Declare PtrSafe Function HlinkNavigate Lib "HLINK.DLL" (ByVal pihl As IHlink, ByVal pihlframe As IHlinkFrame, ByVal grfHLNF As HLNF, ByVal pbc As IBindCtx, ByVal pibsc As IBindStatusCallback, ByVal pihlbc As IHlinkBrowseContext) As Long
Public Declare PtrSafe Function HlinkOnNavigate Lib "HLINK.DLL" (ByVal pihlframe As IHlinkFrame, ByVal pihlbc As IHlinkBrowseContext, ByVal grfHLNF As HLNF, ByVal pimkTarget As IMoniker, ByVal pwzLocation As String, ByVal pwzFriendlyName As String, puHLID As HLID) As Long
Public Declare PtrSafe Function HlinkUpdateStackItem Lib "HLINK.DLL" (ByVal pihlframe As IHlinkFrame, ByVal pihlbc As IHlinkBrowseContext, ByVal uHLID As HLID, ByVal pimkTrgt As IMoniker, ByVal pwzLocation As String, ByVal pwzFriendlyName As String) As Long
Public Declare PtrSafe Function HlinkOnRenameDocument Lib "HLINK.DLL" (ByVal dwReserved As Long, ByVal pihlbc As IHlinkBrowseContext, ByVal pimkOld As IMoniker, ByVal pimkNew As IMoniker) As Long
Public Declare PtrSafe Function HlinkResolveMonikerForData Lib "HLINK.DLL" (ByVal pimkReference As IMoniker, ByVal reserved As Long, ByVal pibc As IBindCtx, ByVal cfmtetc As Long, ByRef rgfmtetc As FORMATETC, ByVal pibsc As IBindStatusCallback, ByVal pimkBase As IMoniker) As Long
Public DeclareWide PtrSafe Function HlinkResolveStringForData Lib "HLINK.DLL" (ByVal pwzReference As String, ByVal reserved As Long, ByVal pibc As IBindCtx, ByVal cfmtetc As Long, ByRef rgfmtetc As FORMATETC, ByVal pibsc As IBindStatusCallback, ByVal pimkBase As IMoniker) As Long
Public DeclareWide PtrSafe Function HlinkParseDisplayName Lib "HLINK.DLL" (ByVal pibc As IBindCtx, ByVal pwzDisplayName As String, ByVal fNoForceAbs As Long, ByRef pcchEaten As Long, ppmk As IMoniker) As Long
Public DeclareWide PtrSafe Function HlinkCreateExtensionServices Lib "HLINK.DLL" (ByVal pwzAdditionalHeaders As String, ByVal phwnd As Long, ByVal pszUsername As String, ByVal pszPassword As String, ByVal piunkOuter As IUnknown, ByRef riid As UUID, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function HlinkPreprocessMoniker Lib "HLINK.DLL" (ByVal pibc As IBindCtx, ByVal pimkIn As IMoniker, ppmk As IMoniker) As Long
Public Declare PtrSafe Function OleSaveToStreamEx Lib "HLINK.DLL" (ByVal piunk As IUnknown, ByVal pistm As IStream, ByVal fClearDirty As Long) As Long
Public DeclareWide PtrSafe Function HlinkSetSpecialReference Lib "HLINK.DLL" (ByVal uReference As HLSR, ByVal pwzReference As String) As Long
Public Declare PtrSafe Function HlinkGetSpecialReference Lib "HLINK.DLL" (ByVal uReference As HLSR, ppwzReference As LongPtr) As Long
Public DeclareWide PtrSafe Function HlinkCreateShortcut Lib "HLINK.DLL" (ByVal grfHLSHORTCUTF As HLSHORTCUTF, ByVal pihl As IHlink, ByVal pwzDir As String, ByVal pwzFileName As String, ByRef ppwzShortcutFile As String, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function HlinkCreateShortcutFromMoniker Lib "HLINK.DLL" (ByVal grfHLSHORTCUTF As HLSHORTCUTF, ByVal pimkTarget As IMoniker, ByVal pwzLocation As String, ByVal pwzDir As String, ByVal pwzFileName As String, ByRef ppwzShortcutFile As LongPtr, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function HlinkCreateShortcutFromString Lib "HLINK.DLL" (ByVal grfHLSHORTCUTF As HLSHORTCUTF, ByVal pwzTarget As String, ByVal pwzLocation As String, ByVal pwzDir As String, ByVal pwzFileName As String, ByRef ppwzShortcutFile As LongPtr, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function HlinkResolveShortcut Lib "HLINK.DLL" (ByVal pwzShortcutFileName As String, ByVal pihlSite As IHlinkSite, ByVal dwSiteData As Long, ByVal piunkOuter As IUnknown, ByRef riid As UUID, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function HlinkResolveShortcutToMoniker Lib "HLINK.DLL" (ByVal pwzShortcutFileName As String, ByRef ppimkTarget As IMoniker, ByRef ppwzLocation As LongPtr) As Long
Public DeclareWide PtrSafe Function HlinkResolveShortcutToString Lib "HLINK.DLL" (ByVal pwzShortcutFileName As String, ByRef ppwzTarget As Long, ByRef ppwzLocation As LongPtr) As Long
Public DeclareWide PtrSafe Function HlinkIsShortcut Lib "HLINK.DLL" (ByVal pwzFileName As String) As Long
Public DeclareWide PtrSafe Function HlinkGetValueFromParams Lib "HLINK.DLL" (ByVal pwzParams As String, ByVal pwzName As String, ByRef ppwzValue As LongPtr) As Long
Public DeclareWide PtrSafe Function HlinkTranslateURL Lib "HLINK.DLL" (ByVal pwzUrl As String, ByVal grfFlags As Long, ppwzTranslatedURL As LongPtr) As Long

End Module